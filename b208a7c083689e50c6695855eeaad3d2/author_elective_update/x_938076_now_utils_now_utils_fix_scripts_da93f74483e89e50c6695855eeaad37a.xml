<?xml version="1.0" encoding="UTF-8"?><record_update table="x_938076_now_utils_now_utils_fix_scripts">
    <x_938076_now_utils_now_utils_fix_scripts action="DELETE">
        <before>false</before>
        <description>// take today's date
var checkdate = new GlideDateTime('2022-08-03 17:30:00'); //in UTC
checkdate.addSeconds(28800); // in KL time
gs.print("checkdate: " + checkdate);

var days = 0;


// create your threshold timestamp to check
var endtime = "10:00:00";
var enddate = new GlideDateTime('2022-08-03 17:30:00');
enddate.addSeconds(28800); // in KL time

//gs.print('enddate getdate: ' + enddate.getDate());
//gs.print('enddate dispvalinternal: ' + enddate.getDisplayValueInternal());
//gs.print('enddate displayval: ' + enddate.getValue());
//enddate.addDays(2); // change date to simulate when ticket is submitted
gs.print("enddate: " + enddate);
var checkend = enddate.getDate() + " " + endtime;
gs.print("checkend: " + checkend); // today's date at 10am

// convert today 10am to gdt object
var checkcompare = new GlideDateTime(checkend);
gs.print("checkcompare: " + checkcompare);


gs.print("&gt;&gt; Exception Payment: Checking date time:" + checkdate);
var diff = gs.dateDiff(checkdate, checkcompare, true); // checkdate - current time in KL; checkcompare - current date at 10am
gs.print("current ticket raised time that is checkdate shd be here:" + checkdate); // shd give current ticket raised time
gs.print("shd give 10 am that is checkcompare shd be here:" + checkend); // shd give 10 am
gs.print("diff: " + diff);

var breachTime;
var slaDate = new GlideDate(); // start with today's date
gs.print("sladate : " + slaDate);
var nextDay = new GlideDate(); // for handling tomorrow's date
nextDay.addDays(1); // store tomorrow

// check if today is a working day
var isTodayWorking = checkSchedule(slaDate.getDisplayValue() + " 09:30:00");
var isnextDayWorking;

if (isTodayWorking) {
    if (diff &gt;= 1 &amp;&amp; diff &lt;= 36000) {
        //breachTime = slaDate.getDisplayValue() + "09:30:00";
        //calculator.calcRelativeDueDate(//calculator.startDateTime, days, "17:30:00");
        gs.print('&gt;&gt; Exception Payment: Before 10am so resolve on same day by 5:30PM');
    } else if (diff &gt;= -17999 &amp;&amp; diff &lt;= 0) {
        //slaDate.addDays(1);
        //breachTime = slaDate.getDisplayValue() + "04:00:00";
        days++;
        //calculator.calcRelativeDueDate(//calculator.startDateTime, days, "12:00:00");
        gs.print('&gt;&gt; Exception Payment: 10am - 3pm so resolve next day by 12:00PM');
    } else if (diff &gt;= -50399 &amp;&amp; diff &lt;= -18000) {
        days++;
        //calculator.calcRelativeDueDate(//calculator.startDateTime, days, "17:30:00");
        //slaDate.addDays(1);
        //breachTime = slaDate.getDisplayValue() +  "09:30:00";
        gs.print('&gt;&gt; Exception Payment: After 3pm so resolve next day by 5:30PM');
    }
} else {
    // check if tomorrow is working or not
    isnextDayWorking = checkSchedule(nextDay.getDisplayValue() + " 17:30:00");
    while (!isnextDayWorking) {
        nextDay.addDays(1); // till we find the next working day, keep adding 1
        isnextDayWorking = checkSchedule(nextDay.getDisplayValue() + " 09:30:00");
    }
    breachTime = nextDay.getDisplayValue() + " 09:30:00";
    gs.print('&gt;&gt; Exception Payment: Submitted on a non working day, set resolve next working day by 5:30PM');
}

//gs.print("&gt;&gt; Exception Payment: breachTime: " + breachTime);


function checkSchedule(datecheck) {
    gs.print("datecheck: " + datecheck);
    var glide = new GlideRecord('cmn_schedule');
    glide.addQuery('name', 'Malaysia Working Hours except Holidays');
    glide.query();
    if (glide.next()) {
        var sched = new GlideSchedule(glide.sys_id);
        var date = new GlideDateTime();
        date.setDisplayValue(datecheck);
        if (sched.isInSchedule(date)) {
            gs.print("IN schedule: " + date);
            return true;
        } else {
            gs.print("OUT of schedule: " + date);
            return false;
        }
    }
}</description>
        <name>Time Based Script</name>
        <record_for_rollback>true</record_for_rollback>
        <script/>
        <sys_class_name>x_938076_now_utils_now_utils_fix_scripts</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-05 14:54:31</sys_created_on>
        <sys_id>da93f74483e89e50c6695855eeaad37a</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Time Based Script</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_fix_scripts_da93f74483e89e50c6695855eeaad37a</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-05 14:54:31</sys_updated_on>
        <unloadable>false</unloadable>
    </x_938076_now_utils_now_utils_fix_scripts>
    <sys_update_version action="INSERT_OR_UPDATE">
        <action>DELETE</action>
        <application display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</application>
        <file_path/>
        <instance_id>021f1cce1b56f510e84d2f8dee4bcb4a</instance_id>
        <instance_name>dev205033</instance_name>
        <name>x_938076_now_utils_now_utils_fix_scripts_da93f74483e89e50c6695855eeaad37a</name>
        <payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="x_938076_now_utils_now_utils_fix_scripts"><x_938076_now_utils_now_utils_fix_scripts action="INSERT_OR_UPDATE"><before>false</before><description>// take today's date
var checkdate = new GlideDateTime('2022-08-03 17:30:00'); //in UTC
checkdate.addSeconds(28800); // in KL time
gs.print("checkdate: " + checkdate);

var days = 0;


// create your threshold timestamp to check
var endtime = "10:00:00";
var enddate = new GlideDateTime('2022-08-03 17:30:00');
enddate.addSeconds(28800); // in KL time

//gs.print('enddate getdate: ' + enddate.getDate());
//gs.print('enddate dispvalinternal: ' + enddate.getDisplayValueInternal());
//gs.print('enddate displayval: ' + enddate.getValue());
//enddate.addDays(2); // change date to simulate when ticket is submitted
gs.print("enddate: " + enddate);
var checkend = enddate.getDate() + " " + endtime;
gs.print("checkend: " + checkend); // today's date at 10am

// convert today 10am to gdt object
var checkcompare = new GlideDateTime(checkend);
gs.print("checkcompare: " + checkcompare);


gs.print("&gt;&gt; Exception Payment: Checking date time:" + checkdate);
var diff = gs.dateDiff(checkdate, checkcompare, true); // checkdate - current time in KL; checkcompare - current date at 10am
gs.print("current ticket raised time that is checkdate shd be here:" + checkdate); // shd give current ticket raised time
gs.print("shd give 10 am that is checkcompare shd be here:" + checkend); // shd give 10 am
gs.print("diff: " + diff);

var breachTime;
var slaDate = new GlideDate(); // start with today's date
gs.print("sladate : " + slaDate);
var nextDay = new GlideDate(); // for handling tomorrow's date
nextDay.addDays(1); // store tomorrow

// check if today is a working day
var isTodayWorking = checkSchedule(slaDate.getDisplayValue() + " 09:30:00");
var isnextDayWorking;

if (isTodayWorking) {
    if (diff &gt;= 1 &amp;&amp; diff &lt;= 36000) {
        //breachTime = slaDate.getDisplayValue() + "09:30:00";
        //calculator.calcRelativeDueDate(//calculator.startDateTime, days, "17:30:00");
        gs.print('&gt;&gt; Exception Payment: Before 10am so resolve on same day by 5:30PM');
    } else if (diff &gt;= -17999 &amp;&amp; diff &lt;= 0) {
        //slaDate.addDays(1);
        //breachTime = slaDate.getDisplayValue() + "04:00:00";
        days++;
        //calculator.calcRelativeDueDate(//calculator.startDateTime, days, "12:00:00");
        gs.print('&gt;&gt; Exception Payment: 10am - 3pm so resolve next day by 12:00PM');
    } else if (diff &gt;= -50399 &amp;&amp; diff &lt;= -18000) {
        days++;
        //calculator.calcRelativeDueDate(//calculator.startDateTime, days, "17:30:00");
        //slaDate.addDays(1);
        //breachTime = slaDate.getDisplayValue() +  "09:30:00";
        gs.print('&gt;&gt; Exception Payment: After 3pm so resolve next day by 5:30PM');
    }
} else {
    // check if tomorrow is working or not
    isnextDayWorking = checkSchedule(nextDay.getDisplayValue() + " 17:30:00");
    while (!isnextDayWorking) {
        nextDay.addDays(1); // till we find the next working day, keep adding 1
        isnextDayWorking = checkSchedule(nextDay.getDisplayValue() + " 09:30:00");
    }
    breachTime = nextDay.getDisplayValue() + " 09:30:00";
    gs.print('&gt;&gt; Exception Payment: Submitted on a non working day, set resolve next working day by 5:30PM');
}

//gs.print("&gt;&gt; Exception Payment: breachTime: " + breachTime);


function checkSchedule(datecheck) {
    gs.print("datecheck: " + datecheck);
    var glide = new GlideRecord('cmn_schedule');
    glide.addQuery('name', 'Malaysia Working Hours except Holidays');
    glide.query();
    if (glide.next()) {
        var sched = new GlideSchedule(glide.sys_id);
        var date = new GlideDateTime();
        date.setDisplayValue(datecheck);
        if (sched.isInSchedule(date)) {
            gs.print("IN schedule: " + date);
            return true;
        } else {
            gs.print("OUT of schedule: " + date);
            return false;
        }
    }
}</description><name>Time Based Script</name><record_for_rollback>true</record_for_rollback><script/><sys_class_name>x_938076_now_utils_now_utils_fix_scripts</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2024-09-05 14:54:31</sys_created_on><sys_id>da93f74483e89e50c6695855eeaad37a</sys_id><sys_mod_count>0</sys_mod_count><sys_name>Time Based Script</sys_name><sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package><sys_policy/><sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope><sys_update_name>x_938076_now_utils_now_utils_fix_scripts_da93f74483e89e50c6695855eeaad37a</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2024-09-05 14:54:31</sys_updated_on><unloadable>false</unloadable></x_938076_now_utils_now_utils_fix_scripts></record_update>]]></payload>
        <payload_hash>-1055304557</payload_hash>
        <record_name>Time Based Script</record_name>
        <reverted_from/>
        <source>6399a38483689e50c6695855eeaad3a0</source>
        <source_table>sys_update_set</source_table>
        <state>previous</state>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-05 14:54:31</sys_created_on>
        <sys_id>5a93f74483e89e50c6695855eeaad37c</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_recorded_at>191c2ae0a400000001</sys_recorded_at>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-05 14:54:31</sys_updated_on>
        <type>Now Utils Fix Scripts</type>
        <update_guid>1e93f7447de89e504380a63c1b0bfd7b</update_guid>
        <update_guid_history>1e93f7447de89e504380a63c1b0bfd7b:-1055304557</update_guid_history>
    </sys_update_version>
    <sys_metadata_delete action="INSERT_OR_UPDATE">
        <sys_audit_delete display_value="Time Based Script">8fb5370c83e89e50c6695855eeaad3cd</sys_audit_delete>
        <sys_class_name>sys_metadata_delete</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-05 15:03:52</sys_created_on>
        <sys_db_object display_value="" name="x_938076_now_utils_now_utils_fix_scripts">x_938076_now_utils_now_utils_fix_scripts</sys_db_object>
        <sys_id>6b9b6c8a8af842f0bd88b66f76e0d040</sys_id>
        <sys_metadata>da93f74483e89e50c6695855eeaad37a</sys_metadata>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Time Based Script</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_parent/>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_scope_delete display_value="">07d863aeac9d4afc8fef3dc3b97bfa10</sys_scope_delete>
        <sys_update_name>x_938076_now_utils_now_utils_fix_scripts_da93f74483e89e50c6695855eeaad37a</sys_update_name>
        <sys_update_version display_value="x_938076_now_utils_now_utils_fix_scripts_da93f74483e89e50c6695855eeaad37a">5a93f74483e89e50c6695855eeaad37c</sys_update_version>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-05 15:03:52</sys_updated_on>
    </sys_metadata_delete>
</record_update>
