<?xml version="1.0" encoding="UTF-8"?><record_update table="x_938076_now_utils_now_utils_fix_scripts">
    <x_938076_now_utils_now_utils_fix_scripts action="DELETE">
        <before>false</before>
        <description>//Working code
/*If user is GSC

Manager = My groups + Associated markets groups
Checker = My groups
Maker = My groups

If user is Onshore

Manager = My groups + Associated markets groups + group location != GSC
Checker = My groups 
Maker = My groups
*/


var logUser = '75f79e131bb64610ff37eb14b24bcb2f'; //change to gs.getUserID();
var gscUser = false; // GSC or Onshore user flag
var grpType = []; // fetching owning business group the logged in user is part of
var grpLocation = []; //fetching group location Onshor or GSC
var arrayUtil = new global.ArrayUtil(); //calling Arrayutil to filter duplicate array elements for optimization
var allowedGrps = [];
//var grpLocArr = ['Onshore', 'GSC'];

//Logged in User Group Types and Group Location
var myGroups = new GlideRecord('sys_user_grmember');
myGroups.addEncodedQuery('user.sys_id=' + logUser);
myGroups.query();
while (myGroups.next()) {
    grpType.push(myGroups.group.type.getDisplayValue());
    grpLocation.push(myGroups.group.u_group_location);
}
//Logged in User Group Types and Group Location

//Unique User Group Types and Group Location
var uniqGrpType = grpType.toString().split(","); //converting the type array to string
uniqGrpType = arrayUtil.unique(uniqGrpType); // Unique Groups Types
var uniqgrpLocation = grpLocation.toString().split(","); //converting the location array to string
uniqgrpLocation = arrayUtil.unique(uniqgrpLocation); //unique group locations
//Unique User Group Types and Group Location

gs.info("Group Types  " + uniqGrpType.toString());
gs.info("Group Location " + uniqgrpLocation.toString());
//gs.info("Group Types field " +      typeof(uniqGrpType));
//gs.info("Group Location field  " + typeof(uniqgrpLocation));

if ((uniqgrpLocation.indexOf('GSC') &gt; -1) &amp;&amp; gs.getUser().getUserByID(logUser).hasRole('x_hsb11_mss_custod.custody_manager')) { //GSC Manager
    gs.info('User is a GSC Manager');
} else if ((uniqgrpLocation.indexOf('Onshore') &gt; -1) &amp;&amp; gs.getUser().getUserByID(logUser).hasRole('x_hsb11_mss_custod.custody_manager')) { //Onshore Manager
    gs.info('User is a Onshore Manager');
} else if((gs.getUser().getUserByID(logUser).hasRole("x_hsb11_mss_custod.custody_checker")) || (gs.getUser().getUserByID(logUser).hasRole("x_hsb11_mss_custod.custody_maker"))){
    gs.info('User is a Maker or Checker');
}


//working code</description>
        <name>Check Onshore or GSC user</name>
        <record_for_rollback>true</record_for_rollback>
        <script><![CDATA[/*If user is GSC

Manager = My groups + ]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_fix_scripts</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-05 15:07:56</sys_created_on>
        <sys_id>fea6738c83e89e50c6695855eeaad34a</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Check Onshore or GSC user</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_fix_scripts_fea6738c83e89e50c6695855eeaad34a</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-05 15:07:56</sys_updated_on>
        <unloadable>false</unloadable>
    </x_938076_now_utils_now_utils_fix_scripts>
    <sys_update_version action="INSERT_OR_UPDATE">
        <action>DELETE</action>
        <application display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</application>
        <file_path/>
        <instance_id>021f1cce1b56f510e84d2f8dee4bcb4a</instance_id>
        <instance_name>dev205033</instance_name>
        <name>x_938076_now_utils_now_utils_fix_scripts_fea6738c83e89e50c6695855eeaad34a</name>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="x_938076_now_utils_now_utils_fix_scripts"&gt;&lt;x_938076_now_utils_now_utils_fix_scripts action="INSERT_OR_UPDATE"&gt;&lt;before&gt;false&lt;/before&gt;&lt;description&gt;//Working code
/*If user is GSC

Manager = My groups + Associated markets groups
Checker = My groups
Maker = My groups

If user is Onshore

Manager = My groups + Associated markets groups + group location != GSC
Checker = My groups 
Maker = My groups
*/


var logUser = '75f79e131bb64610ff37eb14b24bcb2f'; //change to gs.getUserID();
var gscUser = false; // GSC or Onshore user flag
var grpType = []; // fetching owning business group the logged in user is part of
var grpLocation = []; //fetching group location Onshor or GSC
var arrayUtil = new global.ArrayUtil(); //calling Arrayutil to filter duplicate array elements for optimization
var allowedGrps = [];
//var grpLocArr = ['Onshore', 'GSC'];

//Logged in User Group Types and Group Location
var myGroups = new GlideRecord('sys_user_grmember');
myGroups.addEncodedQuery('user.sys_id=' + logUser);
myGroups.query();
while (myGroups.next()) {
    grpType.push(myGroups.group.type.getDisplayValue());
    grpLocation.push(myGroups.group.u_group_location);
}
//Logged in User Group Types and Group Location

//Unique User Group Types and Group Location
var uniqGrpType = grpType.toString().split(","); //converting the type array to string
uniqGrpType = arrayUtil.unique(uniqGrpType); // Unique Groups Types
var uniqgrpLocation = grpLocation.toString().split(","); //converting the location array to string
uniqgrpLocation = arrayUtil.unique(uniqgrpLocation); //unique group locations
//Unique User Group Types and Group Location

gs.info("Group Types  " + uniqGrpType.toString());
gs.info("Group Location " + uniqgrpLocation.toString());
//gs.info("Group Types field " +      typeof(uniqGrpType));
//gs.info("Group Location field  " + typeof(uniqgrpLocation));

if ((uniqgrpLocation.indexOf('GSC') &amp;gt; -1) &amp;amp;&amp;amp; gs.getUser().getUserByID(logUser).hasRole('x_hsb11_mss_custod.custody_manager')) { //GSC Manager
    gs.info('User is a GSC Manager');
} else if ((uniqgrpLocation.indexOf('Onshore') &amp;gt; -1) &amp;amp;&amp;amp; gs.getUser().getUserByID(logUser).hasRole('x_hsb11_mss_custod.custody_manager')) { //Onshore Manager
    gs.info('User is a Onshore Manager');
} else if((gs.getUser().getUserByID(logUser).hasRole("x_hsb11_mss_custod.custody_checker")) || (gs.getUser().getUserByID(logUser).hasRole("x_hsb11_mss_custod.custody_maker"))){
    gs.info('User is a Maker or Checker');
}


//working code&lt;/description&gt;&lt;name&gt;Check Onshore or GSC user&lt;/name&gt;&lt;record_for_rollback&gt;true&lt;/record_for_rollback&gt;&lt;script&gt;&lt;![CDATA[/*If user is GSC

Manager = My groups + ]]&gt;&lt;/script&gt;&lt;sys_class_name&gt;x_938076_now_utils_now_utils_fix_scripts&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2024-09-05 15:07:56&lt;/sys_created_on&gt;&lt;sys_id&gt;fea6738c83e89e50c6695855eeaad34a&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_name&gt;Check Onshore or GSC user&lt;/sys_name&gt;&lt;sys_package display_value="Now Utils" source="x_938076_now_utils"&gt;b208a7c083689e50c6695855eeaad3d2&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="Now Utils"&gt;b208a7c083689e50c6695855eeaad3d2&lt;/sys_scope&gt;&lt;sys_update_name&gt;x_938076_now_utils_now_utils_fix_scripts_fea6738c83e89e50c6695855eeaad34a&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2024-09-05 15:07:56&lt;/sys_updated_on&gt;&lt;unloadable&gt;false&lt;/unloadable&gt;&lt;/x_938076_now_utils_now_utils_fix_scripts&gt;&lt;/record_update&gt;</payload>
        <payload_hash>1531270821</payload_hash>
        <record_name>Check Onshore or GSC user</record_name>
        <reverted_from/>
        <source>6399a38483689e50c6695855eeaad3a0</source>
        <source_table>sys_update_set</source_table>
        <state>previous</state>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-05 15:07:56</sys_created_on>
        <sys_id>7ea6738c83e89e50c6695855eeaad34c</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_recorded_at>191c2ba54470000001</sys_recorded_at>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-05 15:07:56</sys_updated_on>
        <type>Now Utils Fix Scripts</type>
        <update_guid>32a6738c82e89e50bb6180fc6dac2c4c</update_guid>
        <update_guid_history>32a6738c82e89e50bb6180fc6dac2c4c:1531270821</update_guid_history>
    </sys_update_version>
    <sys_metadata_delete action="INSERT_OR_UPDATE">
        <sys_audit_delete display_value="Check Onshore or GSC user">f0673b80832c9e50c6695855eeaad3a0</sys_audit_delete>
        <sys_class_name>sys_metadata_delete</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-05 15:11:04</sys_created_on>
        <sys_db_object display_value="" name="x_938076_now_utils_now_utils_fix_scripts">x_938076_now_utils_now_utils_fix_scripts</sys_db_object>
        <sys_id>18768d175e33444c836eea745f6df804</sys_id>
        <sys_metadata>fea6738c83e89e50c6695855eeaad34a</sys_metadata>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Check Onshore or GSC user</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_parent/>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_scope_delete display_value="">07d863aeac9d4afc8fef3dc3b97bfa10</sys_scope_delete>
        <sys_update_name>x_938076_now_utils_now_utils_fix_scripts_fea6738c83e89e50c6695855eeaad34a</sys_update_name>
        <sys_update_version display_value="x_938076_now_utils_now_utils_fix_scripts_fea6738c83e89e50c6695855eeaad34a">7ea6738c83e89e50c6695855eeaad34c</sys_update_version>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-05 15:11:04</sys_updated_on>
    </sys_metadata_delete>
</record_update>
