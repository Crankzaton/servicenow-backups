<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>ac27370521f55110f8771d5e8c02690d</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;sn_customerservice.CSMRelatedPartyUtilSNC&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;true&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;CSMRelatedPartyUtilSNC&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var CSMRelatedPartyUtilSNC = Class.create();
    CSMRelatedPartyUtilSNC.prototype = {
    initialize: function() {
    },

    /*
    * Function which restricts the Tables  which will be shown in the configuration 
    */ 
    process: function() {
        var result = [];
        result.push("customer_account");
        result.push("csm_consumer");
        result.push("customer_contact");
        result.push("sys_user");
        if(this.isServiceOrganizationPluginActive())
            result.push(global.CSMBaseConstants.SERVICE_ORGANIZATION_TABLE);
        return result;
    },

    /*
    * Function which gets the List of all the Party Types associated with the particular Case Record
    */
    getPartyType: function(current){
        var result = "applies_to=" + current.case_record.sys_class_name;
        
        var restrictedEntity = [];
        var partyGr  = new GlideRecord(global.CSMBaseConstants.RELATED_PARTY_CONFIG_TABLE);
        partyGr.addEncodedQuery(result);
        partyGr.query();
        while(partyGr.next()){
            if(!gs.nil(partyGr.getValue('entity_type'))){
                if(!gs.hasRightsTo("record/" + partyGr.getValue('entity_type') + "/read", null)){
                    restrictedEntity.push(partyGr.getValue('entity_type'));
                }
            }
        }
        
        for (var item in restrictedEntity){
            result+="^entity_type!=" + restrictedEntity[item];
        }
        result+="^ORentity_type=NULL";
        
        return result;
    },

    /*
    * Function which queries all the Party types associated with the Record.
    */
    getAllPartyTypeData: function(current, tableName){
        var partyTypeConfig = {};
        
        var partyGr = new GlideRecord(global.CSMBaseConstants.RELATED_PARTY_CONFIG_TABLE);
        partyGr.addEncodedQuery("applies_to=" + (tableName || current.case_record.sys_class_name));
        partyGr.query();
        while(partyGr.next()){
            partyTypeConfig[partyGr.sys_id] = partyGr.getValue("entity_type");
        }
        return partyTypeConfig;
    },

    /*
    * Function which sets the reference qualifier on the Related Party reference field based on the Related Party Configuration table.
    */
    getReferenceQualifier: function(partyConfig){
        var entityType = partyConfig.reference_condition+'';
        if(!gs.nil(current) &amp;&amp; !gs.nil(current.case_record) &amp;&amp; partyConfig.entity_type == 'customer_contact'){
            if(current.case_record.sys_class_name == global.CSMBaseConstants.CASE_TABLE &amp;&amp; !gs.nil(current.case_record.account)){
                entityType = entityType + "^" + new global.CSManagementUtils().getPartnerAndCustomerContacts(current.case_record.account);
            }
        }
        return entityType;
    },

    /* 
    * Function to get the Calculated name based on the individual Reference Fiedls
    */
    getCalculatedName: function(current){
        var calculatedName  = "";
        if(current.account)
            calculatedName = current.account.name;  
        if(current.consumer)
            calculatedName = current.consumer.name;
        if(current.user)
            calculatedName = current.user.name;
        
        return calculatedName;
    },
    getResponsibilityRefQual: function(current){
        var refqual = "";
        if(current &amp;&amp; current.entity_type)
            refqual="type=NULL^ORtype="+current.entity_type;	
        return refqual;
    },

    /*
    * returns true if service organization plugin is active.
    */
    isServiceOrganizationPluginActive: function() {
        return GlidePluginManager.isActive(global.CSMBaseConstants.SERVICE_ORGANIZATION_PLUGIN);
    },
    type: 'CSMRelatedPartyUtilSNC'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;maint&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2022-09-06 12:19:59&lt;/sys_created_on&gt;
        &lt;sys_id&gt;ac27370521f55110f8771d5e8c02690d&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;6&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;CSMRelatedPartyUtilSNC&lt;/sys_name&gt;
        &lt;sys_package display_value="Customer Service" source="sn_customerservice"&gt;51d811fad7223100b7490ee60e61034f&lt;/sys_package&gt;
        &lt;sys_policy&gt;read&lt;/sys_policy&gt;
        &lt;sys_scope display_value="Customer Service"&gt;51d811fad7223100b7490ee60e61034f&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_ac27370521f55110f8771d5e8c02690d&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2023-12-07 22:31:11&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 09:17:45</sys_created_on>
        <sys_id>01ff349d83341210c6695855eeaad3c5</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>CSMRelatedPartyUtilSNC</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_01ff349d83341210c6695855eeaad3c5</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 09:17:45</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
