<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Reject before-Q for out-of-scope tables</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
 
 if (shouldAbort())
  abortIt();
 
 function shouldAbort() {
  //you can do what you want with tables in your scope
  if (gs.isTableInScope(current.getValue('collection')))
   return false;
  
  //you can't add a before-query rule to out-of-scope tables
  if (current.isNewRecord()) {
   return true;
  } else {
   //you can't make an existing rule before-query on an out-of-scope table, and we only get here when query is true (1)
   if (current.getValue('action_query') != previous.getValue('action_query'))
    return true;
   
   //you can't change the table for an existing out-of-scope-table business rule, either
   if (current.collection.changes() || current.getValue('collection') != previous.getValue('collection'))
    return true;
   
  }
  
  //it's fine. existing before-query rule, not changing the table.
  return false;
 }
 
 //Let the user know we rejected their record
 function abortIt() {
  current.setAbortAction(true);
  gs.addErrorMessage(gs.getMessage("Business rules that modify queries cannot be created for out-of-scope tables"));
 }
})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:47:27</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>9a4ba45183701210c6695855eeaad374</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Reject before-Q for out-of-scope tables</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_9a4ba45183701210c6695855eeaad374</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:47:27</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=9a4ba45183701210c6695855eeaad374"/>
</record_update>
