<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>343a312e4365611089418f2c8ab8f288</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;public&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.ScheduleDateTimeUtil&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;ScheduleDateTimeUtil&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var ScheduleDateTimeUtil = Class.create();
ScheduleDateTimeUtil.prototype = {
    initialize: function() {
        this.UTC_TZ_INDICATOR = 'Z';
		this.UTC_ID = 'Etc/UTC';
    },
    type: 'ScheduleDateTimeUtil',

    /* return type : String */
    convertGlideDateTimetoScheduleDateTimeForTZ: function( /*GlideDateTime in UTC*/ gdt, /*String*/ timeZone) {
        var scheduleDateTime = new GlideScheduleDateTime(gdt.getNumericValue(), timeZone);
        var internalValue = scheduleDateTime.getValueInternal();
        return internalValue;
    },

    /*when TimeZone is floating
     *or TimeZone is not in consideration
     *return type : String
     */
    convertGlideDateTimetoScheduleDateTime: function( /*GlideDateTime*/ glideDateTime) {
        var scheduleDateTime = new GlideScheduleDateTime(glideDateTime);
        var internalValue = scheduleDateTime.getValueInternal();
        if (internalValue.endsWith(this.UTC_TZ_INDICATOR)) {
            return internalValue.slice(0, -1);
        }
        return internalValue;
    },

    /* scheduleDateTime : ScheduleDateTime String(as stored in DB), eg : 20230301T190000Z
     *timeZone : timeZone of the schedule
     *return type : String 
	 *return value : datetime in the schedule's timezone in user format
     */
    convertScheduleDateTimeForTZ: function( /*String*/ scheduleDateTime, /*String*/ timeZone) {
        var sdt = new GlideScheduleDateTime();
        sdt.setValue(scheduleDateTime);
		if(gs.nil(timeZone) &amp;&amp; scheduleDateTime.endsWith(this.UTC_TZ_INDICATOR)){ // case where schedule is type floating but entry date contains 'Z'
			return sdt.convertTimeZone(this.UTC_ID, gs.getSession().getTimeZoneName());
		}
        sdt.setTimeZone(timeZone);
        return sdt.convertTimeZone(gs.getSession().getTimeZoneName(), timeZone);
    }
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2023-03-16 04:58:43&lt;/sys_created_on&gt;
        &lt;sys_id&gt;343a312e4365611089418f2c8ab8f288&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;21&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;ScheduleDateTimeUtil&lt;/sys_name&gt;
        &lt;sys_package display_value="Advanced Schedules Support" source="com.glide.schedules"&gt;fe467ca03cb1311068bcf327dfe37f72&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_343a312e4365611089418f2c8ab8f288&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2024-02-04 17:23:45&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:35:40</sys_created_on>
        <sys_id>3056b89983f01210c6695855eeaad3d4</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>ScheduleDateTimeUtil</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_3056b89983f01210c6695855eeaad3d4</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:35:40</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
