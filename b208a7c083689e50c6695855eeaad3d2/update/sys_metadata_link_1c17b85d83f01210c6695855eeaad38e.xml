<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>76fec17dc0e1d5d0f877e9d0ea777a12</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;sn_oe_sfs.IARIssueNotAssignedDiagnostic&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;Contains functions that assist with diagnosing IAR issues where a task is not being assigned to a bot user&lt;/description&gt;
        &lt;name&gt;IARIssueNotAssignedDiagnostic&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var IARIssueNotAssignedDiagnostic = Class.create();
IARIssueNotAssignedDiagnostic.prototype = {
    initialize: function() {},

    type: 'IARIssueNotAssignedDiagnostic'
};

/**
 * @param the number of a task
 * @returns {sys_id, config_table_name}, or null if task is not found
 */
IARIssueNotAssignedDiagnostic.findTask = function(task_number) {
    var grTask = new GlideRecord("task");
    grTask.addQuery("number", vaInputs.task_number);
    grTask.query();
    if (grTask.getRowCount() == 1) {
        grTask.next();
        var result = {};
        result.sys_id = grTask.sys_id;
        result.config_table_name = grTask.sys_class_name;
        return result;
    } else {
        return null;
    }
};

/**
 * @param the table name of an IAR configuration, i.e. sn_hr_core_case_payroll
 * @returns sys_id of config, or null if config is not found
 */
IARIssueNotAssignedDiagnostic.findConfig = function(config_table_name) {
    var grConfig = new GlideRecord("sys_cs_auto_resolution_configuration");
    grConfig.addQuery("target_table_name", config_table_name);
    grConfig.query();
    if (grConfig.getRowCount() == 1) {
        grConfig.next();
        return grConfig.sys_id;
    }
    return null;
};

/**
 * @param the sys_id of an IAR configuration
 * @returns the sys_id of the business rule associated with the IAR configuration, or null if there is none
 */
IARIssueNotAssignedDiagnostic.checkBrExists = function(config_sys_id) {
    var grConfig = new GlideRecord("sys_cs_auto_resolution_configuration");
    grConfig.get(config_sys_id);
    if (!gs.nil(grConfig.business_rule)) {
        return grConfig.business_rule;
    }
    return null;
};

/**
 * @param the sys_id of a business rule
 * @returns a boolean representing whether the business rule is active
 */
IARIssueNotAssignedDiagnostic.checkBrActive = function(br_sys_id) {
    var grBusinessRule = new GlideRecord("sys_script");
    grBusinessRule.get(br_sys_id);
    return grBusinessRule.active;
};

/**
 * @param the sys_id of a business rule
 * @returns a boolean representing whether the business rule has the highest possible order
 */
IARIssueNotAssignedDiagnostic.checkBrOrderIsHighest = function(br_sys_id) {
    var grBusinessRule = new GlideRecord("sys_script");
    grBusinessRule.get(br_sys_id);
	// 2147483647 - Need to first fix this on the product side
    return grBusinessRule.order &gt;= 99999;
};

/*
 * @param the sys_id of a business rule associated with the IAR configuration
 * @param the table name of the IAR configuration, i.e. sn_hr_core_case_payroll
 * @returns a boolean representing whether the configuration has only 1 business rule associated with it
 */
IARIssueNotAssignedDiagnostic.checkConfigHasOneBr = function(br_sys_id, config_table_name) {
    var grBusinessRule = new GlideRecord("sys_script");
    grBusinessRule.get(br_sys_id);

    var grAllBusinessRules = new GlideRecord("sys_script");
    grAllBusinessRules.addQuery("name", grBusinessRule.name);
    grAllBusinessRules.addQuery("collection", config_table_name);
    grAllBusinessRules.query();
    return grAllBusinessRules.getRowCount() == 1;
};

/*
 * @param the sys_id of the task
 * @param the sys_id of the IAR configuration
 * @param the table name of the IAR configuration, i.e. sn_hr_core_case_payroll
 * @returns whether the task conditions and IAR trigger configuration match
 */
IARIssueNotAssignedDiagnostic.checkTaskAndConfigConditionsMatch = function(task_sys_id, config_sys_id, config_table_name) {
    var grConfig = new GlideRecord("sys_cs_auto_resolution_configuration");
    grConfig.get(config_sys_id);

    var grTask = new GlideRecord(config_table_name);
    grTask.get(task_sys_id);

    return GlideFilter.checkRecord(grTask, grConfig.condition);
};

/*
 * @param the sys_id of an IAR configuration
 * @returns the name of the bot user that tasks under that configuration are assigned to
 */
IARIssueNotAssignedDiagnostic.getTaskAssignedTo = function(config_sys_id) {
    var grConfig = new GlideRecord("sys_cs_auto_resolution_configuration");
    grConfig.get(config_sys_id);
    return grConfig.getDisplayValue("assign_to");
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;maint&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2022-08-26 21:46:56&lt;/sys_created_on&gt;
        &lt;sys_id&gt;76fec17dc0e1d5d0f877e9d0ea777a12&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;8&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;IARIssueNotAssignedDiagnostic&lt;/sys_name&gt;
        &lt;sys_package display_value="Omni-Experience Standard Feature Set" source="sn_oe_sfs"&gt;53b1b0e79761011018b2fa98c253afcc&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Omni-Experience Standard Feature Set"&gt;53b1b0e79761011018b2fa98c253afcc&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_76fec17dc0e1d5d0f877e9d0ea777a12&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2022-09-13 15:17:11&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:38:55</sys_created_on>
        <sys_id>1c17b85d83f01210c6695855eeaad38e</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>IARIssueNotAssignedDiagnostic</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_1c17b85d83f01210c6695855eeaad38e</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:38:55</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
