<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>false</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition>(current.parent.changes() || current.child.changes())</condition>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>PreventInvalidRelationship</name>
        <order>90</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[preventInvalidRelationship();

function preventInvalidRelationship() {
 var plannedTask = new GlideRecord("planned_task");
 plannedTask.get(current.parent);
 if (plannedTask != null) {  
        var ptm = new SNC.ProjectTaskManager();
        ptm.load(plannedTask);
        var result = ptm.checkRelationship(current.parent, current.child);
  PPMDebug.log(gs.getMessage("PreventInvalidRelationship: {0} result={1}", [current.parent, result])); 
  if (result != "1") 
   current.setAbortAction(true);
  var msgArray = new Array();
  msgArray.push(current.parent.getDisplayValue());
  msgArray.push(current.child.getDisplayValue());
        if (result == "2")  //duplicate
        gs.addErrorMessage(gs.getMessage('The relationship between {0} & {1} cannot be created as it is a duplicate',  msgArray));
        else if (result == "3")  //recursive
        gs.addErrorMessage(gs.getMessage('The relationship between {0} & {1} cannot be created as it creates a recursive relationship ',  msgArray));
        else if (result == "7")  //itself
        gs.addErrorMessage(gs.getMessage('The relationship between {0} & {1} cannot be created as it creates a itself relationship ',  msgArray));
    
}
}]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:52:38</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>5e7ca45983701210c6695855eeaad3d9</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>PreventInvalidRelationship</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_5e7ca45983701210c6695855eeaad3d9</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:52:38</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=5e7ca45983701210c6695855eeaad3d9"/>
</record_update>
