<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>0c3ae46077502300f03e270bba106114</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;public&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.VaRecordCardOutput&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;VaRecordCardOutput&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var VaRecordCardOutput = Class.create();
var FIELDS_LIMIT = 250;

VaRecordCardOutput.prototype = {

    initialize: function(columnNameLabels) {
        this.columnNameLabels = columnNameLabels;
    },

    build: function(refVar, tableName, userLanguage) {
        userLanguage = this._languageCheck(userLanguage);
        return this._buildCardData(refVar, tableName, userLanguage);
    },
    _languageCheck: function(userLanguage) {
        if (gs.nil(userLanguage)) {
            try {
                userLanguage = vaContext.getRequesterLang();
            } catch (e) {
                gs.log("vaContext is not defined, defaulting to system language");
                userLanguage = gs.getSession().getLanguage();
            }
        }
        return userLanguage;
    },
    _buildCardData: function(refVar, tableName, userLanguage) {
        var jsonStr = "{}";
        var sysId = refVar.sys_id.toString();

        if (sysId) {
            if (!refVar.isValidRecord()) {
                refVar = new GlideRecordSecure(tableName);
                refVar.get(sysId);
            }
            var display_name = refVar.getClassDisplayValue();
            var display_id = refVar.getDisplayValue();
            jsonStr = this._generateJson(tableName, display_name, display_id, refVar, sysId, userLanguage);
        } else {
            return gs.getMessage("Can't find a valid record");
        }

        var outMsg = new sn_cs.SinglePartOutMsg();
        outMsg.setCardPart('Card', jsonStr);
        return outMsg;
    },

    _generateJson: function(tableName, display_name, display_id, refVar, sysId, userLanguage) {
        var jsonObj = {};
        jsonObj['table_name'] = tableName;
        jsonObj['title'] = gs.getMessageLang(display_name, userLanguage);
        jsonObj['subtitle'] = display_id;
        jsonObj['sys_id'] = "" + sysId;
        var fields = [];
        for (var key in this.columnNameLabels) {
            var fieldEntry = {};
            var label = key;
            var rec = refVar.getElement(label);
            //column could be null if user does not have proper permissions, so skip the column if that is the case
            if (rec == null) {
                continue;
            }
            value = rec.getLabelLang(userLanguage);


            if (refVar[label].getDisplayValue() != '') {
                var displayValue = gs.getMessageLang(refVar[label].getDisplayValue(), userLanguage);

                if (displayValue.length &gt; FIELDS_LIMIT) {
                    displayValue = displayValue.substring(0, FIELDS_LIMIT);
                    displayValue = displayValue + '...';
                }
                fieldEntry['fieldLabel'] = value;
                fieldEntry['fieldValue'] = displayValue;
                fields.push(fieldEntry);
            }
        }
        jsonObj['fields'] = fields;
        return JSON.stringify(jsonObj);
    },

    type: 'VaRecordCardOutput'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2018-08-29 21:13:20&lt;/sys_created_on&gt;
        &lt;sys_id&gt;0c3ae46077502300f03e270bba106114&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;157&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;VaRecordCardOutput&lt;/sys_name&gt;
        &lt;sys_package display_value="Glide Conversation Server" source="com.glide.cs"&gt;ad7df0203c75311068bcf327dfe37f75&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_0c3ae46077502300f03e270bba106114&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2023-04-25 21:49:09&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:09:53</sys_created_on>
        <sys_id>3660789583b01210c6695855eeaad33b</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>VaRecordCardOutput</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_3660789583b01210c6695855eeaad33b</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:09:53</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
