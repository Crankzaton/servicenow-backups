<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>true</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition>!gs.nil(current.profile)</condition>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Update profile state</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[// Set related search profile to DRAFT when a rule is added, edited or deleted
if (shouldChangeState() && current.state != "NEW") {
    current.state = "DRAFT";
    setProfileToDraft();
} else if (current.state == "NEW") {
    setProfileToDraft();
}


function setProfileToDraft() {

    var profileGR = new GlideRecord('ais_search_profile');
    if (profileGR.get(current.profile)) {

        var end = new GlideDate();
        end.setValue(current.getValue("end_date"));
        var now = new GlideDate();
        if (end < now) {
            var previousState = current.getValue("state");
            current.state = 'EXPIRED';
            // New rules with expired end date should not change profile state
            if (previousState == "NEW")
                return;
        }

        profileGR.state = 'DRAFT';
        profileGR.update();
    }
}

function shouldChangeState() {
    return (current.state != "NEW" && (current.active.changes() ||
        current.locale.changes() ||
        current.start_date.changes() ||
        current.end_date.changes() ||
        current.condition_table.changes() ||
        current.no_triggers.changes() ||
        current.expand_synonyms.changes() ||
        current.trigger.changes() ||
        current.genius_only.changes() ||                                                           
        current.marked_for_deletion.changes()));
}]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:50:56</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>d51ce89583701210c6695855eeaad3e7</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Update profile state</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_d51ce89583701210c6695855eeaad3e7</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:50:56</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=d51ce89583701210c6695855eeaad3e7"/>
</record_update>
