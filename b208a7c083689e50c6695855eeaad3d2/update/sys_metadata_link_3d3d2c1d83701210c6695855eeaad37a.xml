<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>048b6c9183701210c6695855eeaad334</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules"&gt;
    &lt;x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE"&gt;
        &lt;abort_action&gt;false&lt;/abort_action&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;action_delete&gt;false&lt;/action_delete&gt;
        &lt;action_insert&gt;true&lt;/action_insert&gt;
        &lt;action_query&gt;false&lt;/action_query&gt;
        &lt;action_update&gt;true&lt;/action_update&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;add_message&gt;false&lt;/add_message&gt;
        &lt;advanced&gt;true&lt;/advanced&gt;
        &lt;change_fields&gt;false&lt;/change_fields&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;collection/&gt;
        &lt;condition/&gt;
        &lt;description/&gt;
        &lt;execute_function&gt;false&lt;/execute_function&gt;
        &lt;filter_condition/&gt;
        &lt;is_rest&gt;false&lt;/is_rest&gt;
        &lt;message/&gt;
        &lt;name&gt;Table Field Validation&lt;/name&gt;
        &lt;order&gt;50&lt;/order&gt;
        &lt;priority&gt;100&lt;/priority&gt;
        &lt;rest_method/&gt;
        &lt;rest_method_text/&gt;
        &lt;rest_service/&gt;
        &lt;rest_service_text/&gt;
        &lt;rest_variables/&gt;
        &lt;role_conditions/&gt;
        &lt;script&gt;&lt;![CDATA[// Prevent duplicates and convert name
 if (current.operation() == 'insert') {
   // Prevent nil names
             if (current.name.nil()) {
                current.setAbortAction(true);
                var errorMessage = gs.getMessage('Table name cannot be nil');
                current.name.setError(errorMessage);
                gs.addErrorMessage(errorMessage);
            } else if (/^[0-9]/.test(current.name)) {
    current.setAbortAction(true);
    errorMessage = gs.getMessage('Table name cannot start with numeric value');
                current.name.setError(errorMessage);
                gs.addErrorMessage(errorMessage);
   } else {
            //Logic for to make sure the table name is valid.  Starts with "u_" or the scope prefix,
   //is less than 80 characters, and is alphanumeric lowercase or underscores.
   current.name = new TableUtils().getValidTableName(current.sys_scope.toString(), current.name.toString());

   var dup = new GlideRecord('sys_db_object');
   dup.addQuery('name', current.name);
   dup.query();
   if (dup.hasNext()) {
    current.setAbortAction(true);
    current.name.setError(gs.getMessage('Table name {0} is already in use', current.name));
    gs.addErrorMessage(gs.getMessage('Table name {0} is already in use', current.name));
   }

   //make sure the super class is extensible
   if (!current.super_class.nil()) {
    var sup = new GlideRecord('sys_db_object');
    var extendable = false;
    if (sup.get(current.super_class))
     extendable = sup.is_extendable;

    if (!extendable) {
     current.setAbortAction(true);
     current.super_class.setError(gs.getMessage('{0} is not currently marked as extensible', sup.name));
     gs.addErrorMessage(gs.getMessage('{0} is not currently marked as extensible', sup.name));
    }
   }
   var prevLabel = current.label.toString();
   current.label = SNC.TableEditor.getValidDocumentationLabel(current.label, current.name);
   // Table labels are Title Case, so do that if we're auto-generating the label
   if (GlideStringUtil.nil(prevLabel))
    current.label = GlideStringUtil.toTitleCase(current.label);
            }

  } else if (current.operation() == 'update') {
   //name is enter once
   if (previous.name != current.name) {
    current.setAbortAction(true);
    current.name.setError(gs.getMessage('Cannot change the name of a table after it is created', current.name));
    gs.addErrorMessage(gs.getMessage('Cannot change the name of a table after it is created', current.name));
   }

   //super class is enter once
   if (previous.super_class != current.super_class) {
    current.setAbortAction(true);
    current.super_class.setError(gs.getMessage('Cannot change what a table extends after it is created'));
    gs.addErrorMessage(gs.getMessage('Cannot change what a table extends after it is created'));
   }

   //make sure the "notExtended" tables are not made extensible.
   if (current.is_extendable == true) {
    if (SNC.TableEditor.notExtended(previous.name)) {
     current.setAbortAction(true);
     current.is_extendable.setError(gs.getMessage('{0} is a reserved table that cannot be extended', previous.name));
     gs.addErrorMessage(gs.getMessage('{0} is a reserved table that cannot be extended', previous.name));
    }
   }
   current.label = SNC.TableEditor.getValidDocumentationLabel(current.label, current.name);
  }]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;x_938076_now_utils_now_utils_business_rules&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2024-09-21 07:48:23&lt;/sys_created_on&gt;
        &lt;sys_domain&gt;global&lt;/sys_domain&gt;
        &lt;sys_domain_path&gt;/&lt;/sys_domain_path&gt;
        &lt;sys_id&gt;048b6c9183701210c6695855eeaad334&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;Table Field Validation&lt;/sys_name&gt;
        &lt;sys_overrides/&gt;
        &lt;sys_package display_value="Now Utils" source="x_938076_now_utils"&gt;b208a7c083689e50c6695855eeaad3d2&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Now Utils"&gt;b208a7c083689e50c6695855eeaad3d2&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;x_938076_now_utils_now_utils_business_rules_048b6c9183701210c6695855eeaad334&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2024-09-21 07:48:23&lt;/sys_updated_on&gt;
        &lt;template/&gt;
        &lt;when&gt;before&lt;/when&gt;
    &lt;/x_938076_now_utils_now_utils_business_rules&gt;
    &lt;sys_translated_text action="delete_multiple" query="documentkey=048b6c9183701210c6695855eeaad334"/&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:55:52</sys_created_on>
        <sys_id>3d3d2c1d83701210c6695855eeaad37a</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Table Field Validation</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_3d3d2c1d83701210c6695855eeaad37a</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:55:52</sys_updated_on>
        <tablename>sys_script</tablename>
    </sys_metadata_link>
</record_update>
