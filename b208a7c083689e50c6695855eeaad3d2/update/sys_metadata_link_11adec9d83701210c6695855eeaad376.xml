<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>209c209983701210c6695855eeaad3cc</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules"&gt;
    &lt;x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE"&gt;
        &lt;abort_action&gt;false&lt;/abort_action&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;action_delete&gt;false&lt;/action_delete&gt;
        &lt;action_insert&gt;true&lt;/action_insert&gt;
        &lt;action_query&gt;false&lt;/action_query&gt;
        &lt;action_update&gt;true&lt;/action_update&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;add_message&gt;false&lt;/add_message&gt;
        &lt;advanced&gt;true&lt;/advanced&gt;
        &lt;change_fields&gt;false&lt;/change_fields&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;collection/&gt;
        &lt;condition&gt;current.total_cost.changes() || current.payment_schedule.changes()&lt;/condition&gt;
        &lt;description/&gt;
        &lt;execute_function&gt;false&lt;/execute_function&gt;
        &lt;filter_condition/&gt;
        &lt;is_rest&gt;false&lt;/is_rest&gt;
        &lt;message/&gt;
        &lt;name&gt;Calculate projected costs (Reports)&lt;/name&gt;
        &lt;order&gt;160&lt;/order&gt;
        &lt;priority&gt;100&lt;/priority&gt;
        &lt;rest_method/&gt;
        &lt;rest_method_text/&gt;
        &lt;rest_service/&gt;
        &lt;rest_service_text/&gt;
        &lt;rest_variables/&gt;
        &lt;role_conditions/&gt;
        &lt;script&gt;&lt;![CDATA[// set defaults
current.monthly_cost = 0;
current.yearly_cost = 0;
current.cost_per_asset = 0;

calcMonthlyYearly();
calcCostPerAsset();

// if rate card based contract, look at those values
function calcMonthlyYearly() {
 if (current.ratecard) {
  var contractRateCard = new GlideRecord('fm_contract_rate_card');
  contractRateCard.addQuery('contract', current.sys_id);
  contractRateCard.query();
  while (contractRateCard.next()) {
   addCosts(contractRateCard.amount, contractRateCard.interval);
  }
 } else
  addCosts(current.total_cost, current.payment_schedule);
}

function calcCostPerAsset() {
 var assets = new GlideRecord('clm_m2m_contract_asset');
 assets.addQuery('contract', current.sys_id);
 assets.query();
 var count = 0;
 while (assets.next())
  count++;
 var average = 0;
 if (count &gt; 0)
  average = current.total_cost / count;
 current.cost_per_unit = average;
}

function addCosts(cost, interval) {
 var currencyCode = cost.getReferenceCurrencyCode();
 cost = parseFloat(cost.getReferenceValue());
 var monthlyCost = parseFloat(current.monthly_cost.getReferenceValue());
 var yearlyCost = parseFloat(current.yearly_cost.getReferenceValue());

 var newMonthlyCost = 0;
 var newYearlyCost = 0;

 if (interval == 'daily') {
  newMonthlyCost = monthlyCost + cost * 30;
  newYearlyCost = yearlyCost + cost * 365;
 } else if (interval == 'weekly') {
  newMonthlyCost = monthlyCost + cost * 4;
  newYearlyCost = yearlyCost + cost * 52;
 } else if (interval == 'weekly2') {
  newMonthlyCost = monthlyCost + cost * 2;
  newYearlyCost = yearlyCost + cost * 26;
 } else if (interval == 'Monthly' || interval == 'monthly') {
  newMonthlyCost = monthlyCost + cost;
  newYearlyCost = yearlyCost + cost * 12;
 } else if (interval == 'monthly2') {
  newMonthlyCost = monthlyCost + cost / 2;
  newYearlyCost = yearlyCost + cost * 6;
 } else if (interval == 'Quarterly' || interval == 'quarterly') {
  newMonthlyCost = monthlyCost + cost / 3;
  newYearlyCost = yearlyCost + cost * 4;
 } else if (interval == 'semiannual') {
  newMonthlyCost = monthlyCost + cost / 6;
  newYearlyCost = yearlyCost + cost * 2;
 } else if (interval == 'Annual' || interval == 'yearly') {
  newMonthlyCost = monthlyCost + cost / 12;
  newYearlyCost = yearlyCost + cost * 1;
 }
 current.monthly_cost = currencyCode + ';' + newMonthlyCost;
 current.yearly_cost = currencyCode + ';' + newYearlyCost;
}]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;x_938076_now_utils_now_utils_business_rules&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2024-09-21 07:53:03&lt;/sys_created_on&gt;
        &lt;sys_domain&gt;global&lt;/sys_domain&gt;
        &lt;sys_domain_path&gt;/&lt;/sys_domain_path&gt;
        &lt;sys_id&gt;209c209983701210c6695855eeaad3cc&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;Calculate projected costs (Reports)&lt;/sys_name&gt;
        &lt;sys_overrides/&gt;
        &lt;sys_package display_value="Now Utils" source="x_938076_now_utils"&gt;b208a7c083689e50c6695855eeaad3d2&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Now Utils"&gt;b208a7c083689e50c6695855eeaad3d2&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;x_938076_now_utils_now_utils_business_rules_209c209983701210c6695855eeaad3cc&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2024-09-21 07:53:03&lt;/sys_updated_on&gt;
        &lt;template/&gt;
        &lt;when&gt;before&lt;/when&gt;
    &lt;/x_938076_now_utils_now_utils_business_rules&gt;
    &lt;sys_translated_text action="delete_multiple" query="documentkey=209c209983701210c6695855eeaad3cc"/&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:57:45</sys_created_on>
        <sys_id>11adec9d83701210c6695855eeaad376</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Calculate projected costs (Reports)</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_11adec9d83701210c6695855eeaad376</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:57:45</sys_updated_on>
        <tablename>sys_script</tablename>
    </sys_metadata_link>
</record_update>
