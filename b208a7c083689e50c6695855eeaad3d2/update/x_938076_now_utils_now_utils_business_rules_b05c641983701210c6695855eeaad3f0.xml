<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Alert unsecure knowledge base</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
 
 if(current.isNewRecord())
  return;
 
 var canRead = new GlideRecord('kb_uc_can_read_mtom');
 canRead.addQuery('kb_knowledge_base', current.sys_id);
 canRead.query();
 var read = canRead.next();
 
 var cannotRead = new GlideRecord('kb_uc_cannot_read_mtom');
 cannotRead.addQuery('kb_knowledge_base', current.sys_id);
 cannotRead.query();
 var blockread = cannotRead.next();
 
 
 var canWrite = new GlideRecord('kb_uc_can_contribute_mtom');
 canWrite.addQuery('kb_knowledge_base', current.sys_id);
 canWrite.query();
 var write = canWrite.next();
 
 var cannotWrite = new GlideRecord('kb_uc_cannot_contribute_mtom');
 cannotWrite.addQuery('kb_knowledge_base', current.sys_id);
 cannotWrite.query();
 var blockwrite = cannotWrite.next();
 
 var isAccessBlockedForEmptyUC = new KBCommon().isAccessBlockedWithNoUC();
 if(!read && !write) {
  if(isAccessBlockedForEmptyUC){
   gs.addInfoMessage(gs.getMessage("No user has read or contribute access to this knowledge base because values for both the Can Contribute and Can Read user criteria are not set."));
  }else{
   if(!blockread && !blockwrite) {
   gs.addInfoMessage(gs.getMessage('All users can read the articles and users with at least one role in addition to snc_internal role can contribute to the articles in this knowledge base.'));
   }
   else if(blockread && blockwrite) {
    gs.addInfoMessage(gs.getMessage('Users who are not part of the Cannot Read user criteria can read all articles in this knowledge base. Users who have at least one role in addition to snc_internal role and are not part of the Cannot Contribute user criteria can read and contribute to all articles in this knowledge base.'));
   }
   else if(!blockread && blockwrite) {
    gs.addInfoMessage(gs.getMessage('All users can read all articles in this knowledge base. Users who have at least one role in addition to snc_internal role and are not part of the Cannot Contribute user criteria can read and contribute to all articles in this knowledge base.'));
   }
   else if(blockread && !blockwrite) {
    gs.addInfoMessage(gs.getMessage('Users who are not part of the Cannot Read user criteria can read all articles in this knowledge base. Users who have at least one role in addition to snc_internal role can read and contribute to the articles in this knowledge base.'));
   }
  }
  
 }
 else if(!write) {
  if(isAccessBlockedForEmptyUC){
   gs.addInfoMessage(gs.getMessage('No user has contribute access to this knowledge base because value for the Can Contribute user criteria is not set.'));
  }else{
   if(!blockwrite) {
    gs.addInfoMessage(gs.getMessage('Users who have at least one role in addition to snc_internal role can read and contribute to the articles in this knowledge base.'));
   }
   else {
    gs.addInfoMessage(gs.getMessage('Users who have at least one role in addition to snc_internal role and are not part of the Cannot Contribute user criteria can read and contribute to all articles in this knowledge base.'));
   }
  }
 }
 else if(!read) {
  if(isAccessBlockedForEmptyUC){
   gs.addInfoMessage(gs.getMessage("Only users who match the Can Contribute user criteria but do not match the Cannot Contribute user criteria have read access to this knowledge base because value for the Can Read user criteria is not set."));
  }else{
   if(!blockread) {
    gs.addInfoMessage(gs.getMessage('All users can read all articles in this knowledge base.'));
   }
   else {
    gs.addInfoMessage(gs.getMessage('Users who are not part of the Cannot Read user criteria can read all articles in this knowledge base.'));
   }
  }
 }
})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:52:00</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>b05c641983701210c6695855eeaad3f0</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Alert unsecure knowledge base</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_b05c641983701210c6695855eeaad3f0</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:52:00</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=b05c641983701210c6695855eeaad3f0"/>
</record_update>
