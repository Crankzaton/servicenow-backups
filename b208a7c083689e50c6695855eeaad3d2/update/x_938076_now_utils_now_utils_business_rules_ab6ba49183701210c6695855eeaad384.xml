<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Verify card size</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {
    var className = current.getRecordClassName();
    switch (className) {
        case "sys_sg_item_section":
            verifyItemSectionCard(current);
            break;
        case "sys_sg_chart_section":
            verifyChartSectionCard(current);
            break;
    }
})(current, previous);

function verifyItemSectionCard(current) {
    if (current.is_custom_size)
        verifyCustomCardSize(current);
    else
        verifyStandardCardSize(current);
}

function verifyChartSectionCard(current) {
    if (current.is_custom_size)
        verifyCustomCardSizeLimits(current);
}

function verifyStandardCardSize(current) {
    if (current.custom_width != 0 || current.custom_height != 0) {
        gs.addErrorMessage(gs.getMessage('Custom size cannot be defined when not in custom mode.'));
        current.setAbortAction(true);
    }
}


function verifyCustomCardSize(current) {
    if (current.card_size) {
        gs.addErrorMessage(gs.getMessage('Card size must not be set when in custom mode.'));
        current.setAbortAction(true);
    }
    if (current.orientation == "vertical" && current.custom_width != 0) {
        gs.addErrorMessage(gs.getMessage('Vertical section must not contain custom width.'));
        current.setAbortAction(true);
    }
    verifyCustomCardSizeLimits(current);
}

function verifyCustomCardSizeLimits(current) {
    var CARD_SIZE_MIN_HEIGHT = 42;
    var CARD_SIZE_MAX_HEIGHT = 296;
    var CARD_SIZE_MIN_WIDTH = 64;
    var CARD_SIZE_MAX_WIDTH = 304;

    verifyHeightLimits(current, CARD_SIZE_MIN_HEIGHT, CARD_SIZE_MAX_HEIGHT);
    if (current.orientation == "vertical")
        return;

    vereifyWidthLimits(current, CARD_SIZE_MIN_WIDTH, CARD_SIZE_MAX_WIDTH);
}

function verifyHeightLimits(current, min, max) {
    if (current.custom_height == 0) {
        gs.addErrorMessage(gs.getMessage('Custom height value was not set.'));
        current.setAbortAction(true);
    } else if (current.custom_height < min) {
        gs.addErrorMessage(gs.getMessage('Custom height value smaller than min value ({0}).', min));
        current.setAbortAction(true);
    } else if (current.custom_height > max) {
        gs.addErrorMessage(gs.getMessage('Custom height value greater than max value ({0}).', max));
        current.setAbortAction(true);
    }
}

function vereifyWidthLimits(current, min, max) {
    if (current.custom_width == 0) {
        gs.addErrorMessage(gs.getMessage('Custom width value was not set.'));
        current.setAbortAction(true);
    } else if (current.custom_width < min) {
        gs.addErrorMessage(gs.getMessage('Custom width value smaller than min value ({0}).', min));
        current.setAbortAction(true);
    } else if (current.custom_width > max) {
        gs.addErrorMessage(gs.getMessage('Custom width value greater than max value ({0}).', max));
        current.setAbortAction(true);
    }
}]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:48:05</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>ab6ba49183701210c6695855eeaad384</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Verify card size</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_ab6ba49183701210c6695855eeaad384</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:48:05</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=ab6ba49183701210c6695855eeaad384"/>
</record_update>
