<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>a21ec0db59e32010fa9b2a95320e903b</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_fix"&gt;
    &lt;sys_script_fix action="INSERT_OR_UPDATE"&gt;
        &lt;before&gt;false&lt;/before&gt;
        &lt;description&gt;Migrate setup topics from general settings to default profile topics&lt;/description&gt;
        &lt;name&gt;VA Migrate to Custom Greetings&lt;/name&gt;
        &lt;record_for_rollback&gt;false&lt;/record_for_rollback&gt;
        &lt;script&gt;&lt;![CDATA[var generalSettingObj = {};
var predecessorGr = new GlideRecord('sys_script_fix');
predecessorGr.addQuery('sys_id', 'be909a87c7b91010fd68220eb4c2607b');
predecessorGr.query();
var alreadyRan = predecessorGr.next();

var gr;
if (!alreadyRan) {
  gr = new GlideRecord('sys_cs_general_settings');
  gr.addQuery('sys_domain', '=', 'global');
  gr.setLimit(1);
  gr.query();
  while (gr.next()) {
    var generalSetting = {
      greeting: gr.getValue('welcome_topic'),
      survey: gr.getValue('survey_topic'),
      live_agent: gr.getValue('live_agent_topic'),
      explore_help: gr.getValue('explore_help_topic'),
      error: gr.getValue('error_topic'),
      closing: gr.getValue('closing_topic'),
      fallback: gr.getValue('fallback_topic'),
      anything_else: gr.getValue('anything_else_topic')
    };
    updateContextProfileTopicForGlobal(generalSetting);
  }

  var grDomain = new GlideRecord('sys_cs_general_settings');
  grDomain.addQuery('sys_domain', '!=', 'global');
  grDomain.query();
  while (grDomain.next()) {
    var generalSettingDomain = {
      greeting: grDomain.getValue('welcome_topic'),
      survey: grDomain.getValue('survey_topic'),
      live_agent: grDomain.getValue('live_agent_topic'),
      explore_help: grDomain.getValue('explore_help_topic'),
      error: grDomain.getValue('error_topic'),
      closing: grDomain.getValue('closing_topic'),
      fallback: grDomain.getValue('fallback_topic'),
      anything_else: grDomain.getValue('anything_else_topic')
    };
    var sysDomain = grDomain.getValue('sys_domain');
    var keys = Object.keys(generalSettingDomain);
      keys.forEach(function(key, index) {
        insertContextProfileTopic(sysDomain, key, generalSettingDomain[key]);
      });
  }
}

//temporarily disable the data policy on the "active' flag
gr = new GlideRecord('sys_data_policy2');
gr.get('3757909353651010a813ddeeff7b1222');
gr.setValue('active', false);
gr.update();
//set the default sys_cs_context_profile record active flag to true
gr = new GlideRecord('sys_cs_context_profile');
gr.get('3a33973653211010a813ddeeff7b125a');
gr.setValue('active', true);
gr.update();
//reactivate the data policy on the active flag
gr = new GlideRecord('sys_data_policy2');
gr.get('3757909353651010a813ddeeff7b1222');
gr.setValue('active', true);
gr.update();

function updateContextProfileTopicForGlobal(generalSetting) {
  var grpt = new GlideRecord('sys_cs_context_profile_topic');
  grpt.addQuery('context_profile', '3a33973653211010a813ddeeff7b125a');
  grpt.query();
  while (grpt.next()) {
      var topicType = grpt.getValue('topic_type');
      var sysId = grpt.getValue('sys_id');
      generalSettingObj[topicType] = sysId;
      if (generalSetting[topicType]) {
          grpt.setValue('topic', generalSetting[topicType]);
      }
      else if (GlideStringUtil.nil(grpt.getValue('topic'))) {
          grpt.setValue('topic', 'NULL');
      }
      grpt.update();
  }
}

function insertContextProfileTopic(domain, gsKey, gsValue) {
  var grptDomain = new GlideRecord('sys_cs_context_profile_topic');
  grptDomain.initialize();
  grptDomain.topic_type = gsKey;
  grptDomain.topic = gsValue;
  grptDomain.context_profile = '3a33973653211010a813ddeeff7b125a';
  grptDomain.sys_domain = domain;
  grptDomain.sys_overrides = generalSettingObj[gsKey];
  grptDomain.insert();
}]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_fix&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2020-07-09 01:18:04&lt;/sys_created_on&gt;
        &lt;sys_id&gt;a21ec0db59e32010fa9b2a95320e903b&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;8&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;VA Migrate Setup Topics&lt;/sys_name&gt;
        &lt;sys_package display_value="Conversation General Settings" source="com.glide.cs.settings"&gt;da8db8203c75311068bcf327dfe37f62&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_fix_a21ec0db59e32010fa9b2a95320e903b&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2021-04-20 10:21:34&lt;/sys_updated_on&gt;
        &lt;unloadable&gt;false&lt;/unloadable&gt;
    &lt;/sys_script_fix&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:23:14</sys_created_on>
        <sys_id>ee7338dd83b01210c6695855eeaad387</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>VA Migrate to Custom Greetings</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_ee7338dd83b01210c6695855eeaad387</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:23:14</sys_updated_on>
        <tablename>sys_script_fix</tablename>
    </sys_metadata_link>
</record_update>
