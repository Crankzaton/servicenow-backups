<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition>current.assigned_to.nil() &amp;&amp; (current.state == 10 || current.state == 16) &amp;&amp; !current.assignment_group.nil() &amp;&amp; (new sn_sm.SMConfiguration()).isEnabled(current,'request_driven',false) &amp;&amp; (new sn_sm.SMConfiguration()).isEnabled(current, "use_sf", "false")</condition>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Request driven dispatch</name>
        <order>950</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[applyRequestDispatch(current);

function applyRequestDispatch(current){
 if (((new sn_sm.SMConfiguration()).getRequestDrivenAssignMethod(current) == 'auto')) {
  var returnValue = (new SMAutoAssignment()).autodispatch(current, null, null, null, null, null, null, null, null, null, null, null);
  if(returnValue.indexOf('info') == 0)
   gs.addInfoMessage(returnValue.substring(4));
  else if(returnValue.indexOf('error') == 0)
   gs.addErrorMessage(returnValue.substring(5));
 }
 else if ((new sn_sm.SMConfiguration()).getRequestDrivenAssignMethod(current) == 'workflow') {
  var config = new sn_sm.SMConfiguration().getConfigRecord(current);
  if (!config.isValidField('request_dispatch_workflow'))
   gs.addErrorMessage(gs.getMessage('Auto dispatch failed. Workflow dispatch is not enabled'));
  else if (config.request_dispatch_workflow.nil())
   gs.addErrorMessage(gs.getMessage('Auto dispatch failed. Dispatch workflow is not configured'));
  else if (!new Workflow().getVersion(config.getValue('request_dispatch_workflow')))
   gs.addErrorMessage(gs.getMessage('Auto dispatch failed. Invalid dispatch workflow'));
  else
   (new sn_sm.SMConfiguration()).startWorkFlow(current, 'request_dispatch_workflow');   
 }
}]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:49:50</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>d9db605583701210c6695855eeaad3dc</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Request driven dispatch</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_d9db605583701210c6695855eeaad3dc</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:49:50</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=d9db605583701210c6695855eeaad3dc"/>
</record_update>
