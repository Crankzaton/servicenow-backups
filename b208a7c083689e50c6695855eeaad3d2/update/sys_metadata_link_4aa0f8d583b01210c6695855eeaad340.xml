<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>1763fdb3c3131110547aab8f8740dda1</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;public&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.SCCatalogItemWizardCreationHelper&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;SCCatalogItemWizardCreationHelper&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var SCCatalogItemWizardCreationHelper = Class.create();

var SYS_ID = "sys_id";
var SC_CAT_ITEM = "sc_cat_item";
var IO_SET_ITEM = "io_set_item";
var VARIABLE_SET = "variable_set";
var WIZARD = "wizard";
var SC_WIZARD = "sc_wizard";
var SC_WIZARD_STEP = "sc_wizard_step";
var SC_WIZARD_SECTION = "sc_wizard_section";
var SC_WIZARD_QUESTION = "sc_wizard_question";
var WIZARD_STEP = "wizard_step";
var WIZARD_SECTION = "wizard_section";
var SC_CAT_ITEM_COMPOSITE_PRODUCER = "sc_cat_item_composite_producer";
var NAME = "name";
var PRODUCER = "producer";
var TABLE_NAME = "table_name";
var SYS_SCOPE = "sys_scope";
var SYS_POLICY = "sys_policy";
var SC_CAT_ITEM_CRP = "91edb87273221010c84e2bb43cf6a7ae";
var SC_CAT_ITEM_WIZARD = "38f351fe73221010c84e2bb43cf6a7ad";

function _copyFields(srcGR,destGR,excludedFields) {
	if (!excludedFields)
		excludedFields = {"sys_id" : true,"sys_scope" : true};

	var fieldList = new GlideRecordUtil().getFields(srcGR);
	fieldList.forEach(function (field) {
		if (!excludedFields[field])
			destGR.setValue(field, srcGR.getValue(field));
	});

	destGR.setValue(SYS_SCOPE, gs.getCurrentApplicationId());
}

function _cloneCatalogItemCRP(tableName,crpName) {
	if (!SC_CAT_ITEM.equals(GlideDBObjectManager.getAbsoluteBase(tableName))) {
		gs.info("Table should extend catalog item");
		return null;
	}

	var catItemCRP = new GlideRecord(SC_CAT_ITEM_COMPOSITE_PRODUCER);
	catItemCRP.get(SC_CAT_ITEM_CRP);
	if (!catItemCRP.isValidRecord())
		return null;

	var cloneCRP = new GlideRecord(SC_CAT_ITEM_COMPOSITE_PRODUCER);
	cloneCRP.initialize();
	_copyFields(catItemCRP,cloneCRP, {"sys_id":true,"table_name":true,"sys_policy":true,"sys_scope":true});
	cloneCRP.setValue(TABLE_NAME, tableName);
	if (JSUtil.notNil(crpName))
		cloneCRP.setValue(NAME, crpName);
	else
		cloneCRP.setValue(NAME, "Copy of " + catItemCRP.getValue(NAME));

	var newCRPID = cloneCRP.insert();
	var catItem = new sn_sc.CatItem(SC_CAT_ITEM_CRP);
	if (JSUtil.nil(catItem))
		return null;
 
	var varSets = catItem.getVariableSet();
	for (var index=0; index &lt; varSets.length; index++) {
		var setItem = new GlideRecord(IO_SET_ITEM);
		setItem.initialize();
		setItem.setValue(SC_CAT_ITEM, newCRPID);
		setItem.setValue(VARIABLE_SET,  varSets[index]);
		setItem.insert();
	}
		
	return newCRPID;
}

function _copyCatItemSteps(wizard) {
	if (wizard == null || !wizard.isValidRecord())
		return;
		
	var wizardStep = new GlideRecord(SC_WIZARD_STEP);
	wizardStep.addQuery(WIZARD, SC_CAT_ITEM_WIZARD);
	wizardStep.query();
		
	while (wizardStep.next()) {
		var currentStep = new GlideRecord(SC_WIZARD_STEP);
		currentStep.initialize();
		_copyFields(wizardStep,currentStep,{"sys_id":true,"wizard":true,"sys_policy":true,"sys_scope":true});
		currentStep.setValue(WIZARD, wizard.getUniqueValue());
		currentStep.insert();

		var wizardSection = new GlideRecord(SC_WIZARD_SECTION);
		wizardSection.addQuery(WIZARD_STEP, wizardStep.getUniqueValue());
		wizardSection.query();

		while (wizardSection.next()) {
			var cloneWizardSection = new GlideRecord(SC_WIZARD_SECTION);
			cloneWizardSection.initialize();
			_copyFields(wizardSection,cloneWizardSection,{"sys_id":true,"wizard_step":true,"sys_policy":true,"sys_scope":true});
			cloneWizardSection.setValue(WIZARD_STEP, currentStep.getUniqueValue());
			cloneWizardSection.insert();

			var wizardQuestion = new GlideRecord(SC_WIZARD_QUESTION);
			wizardQuestion.addQuery(WIZARD_SECTION,wizardSection.getUniqueValue());
			wizardQuestion.query();

			while (wizardQuestion.next()) {
				var clonedQuestion = new GlideRecord(SC_WIZARD_QUESTION);
				clonedQuestion.initialize();
				_copyFields(wizardQuestion,clonedQuestion,{"sys_id":true,"wizard_section":true,"sys_policy":true,"sys_scope":true});
				clonedQuestion.setValue(WIZARD_SECTION, cloneWizardSection.getUniqueValue());
				clonedQuestion.insert();
			}
		}
	}
}

function _cloneCatItemWizard(crpID,wizardName) {
		
	if (!GlideStringUtil.isEligibleSysID(crpID))
		return null;
		
	var crp = new GlideRecord(SC_CAT_ITEM_COMPOSITE_PRODUCER);
	crp.get(crpID);
	if (!crp.isValidRecord())
		return null;
		
	var itemWizard = new GlideRecord(SC_WIZARD);
	itemWizard.get(SC_CAT_ITEM_WIZARD);
	if (!itemWizard.isValidRecord())
		return null;

	var wizard = new GlideRecord(SC_WIZARD);
	wizard.initialize();
	_copyFields(itemWizard,wizard,{"sys_id":true,"producer":true,"sys_policy":true,"sys_scope":true});
	if (JSUtil.notNil(wizardName))
		wizard.setValue(NAME, wizardName);
	else
		wizard.setValue(NAME, "Copy of " + itemWizard.getValue(NAME));

	wizard.setValue(PRODUCER, crpID);
	wizard.insert();
		
	if (wizard.isValidRecord()) {
		_copyCatItemSteps(wizard);
		return wizard.getUniqueValue();
	}

	return null;
}

SCCatalogItemWizardCreationHelper.prototype = {
	initialize : function() {},

	generateWizardExperience: function(tableName, crpName, wizardName) {
		var crpID = _cloneCatalogItemCRP(tableName, crpName);
		if (GlideStringUtil.isEligibleSysID(crpID))
			return _cloneCatItemWizard(crpID, wizardName);

		return null;
	},
    type: 'SCCatalogItemWizardCreationHelper'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2022-11-28 05:26:18&lt;/sys_created_on&gt;
        &lt;sys_id&gt;1763fdb3c3131110547aab8f8740dda1&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;1&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;SCCatalogItemWizardCreationHelper&lt;/sys_name&gt;
        &lt;sys_package display_value="Service Catalog Wizard" source="com.glideapp.servicecatalog.wizard"&gt;137b7c243c35311068bcf327dfe37ffe&lt;/sys_package&gt;
        &lt;sys_policy&gt;protected&lt;/sys_policy&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_1763fdb3c3131110547aab8f8740dda1&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2023-01-17 09:09:09&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:10:55</sys_created_on>
        <sys_id>4aa0f8d583b01210c6695855eeaad340</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>SCCatalogItemWizardCreationHelper</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_4aa0f8d583b01210c6695855eeaad340</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:10:55</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
