<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>incident autoclose</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[// This script automatically closes incidents that are resolved
// and haven't been updated in the specified number of days.
// This number is a property in System Properties.
// To place a comment in the incident, uncomment the "gr.comments" line.

autoCloseIncidents();

function autoCloseIncidents() {
 var ps = gs.getProperty('glide.ui.autoclose.time');
 var pn = parseInt(ps);
 var queryTime = new GlideDateTime();
 queryTime.addDaysUTC(-pn);

 if (pn > 0) {
  var gr = new GlideRecord('incident');
  gr.addQuery('incident_state', IncidentState.RESOLVED);
  if (gs.getProperty('com.snc.incident.autoclose.basedon.resolved_at', 'false') === 'true') {
   gr.addQuery('resolved_at', '<', queryTime);
  }
  else {
   gr.addQuery('sys_updated_on', '<', queryTime);
  }
  if (pm.isActive('com.snc.incident.mim')) {
   var mim = gr.addNullQuery('major_incident_state');
   mim.addOrCondition('major_incident_state', '!=', new sn_major_inc_mgmt.MajorIncidentTriggerRulesSNC().MAJOR_INCIDENT_STATE.ACCEPTED);
  }
  // Exclude OT Incident and its children being affected by this script
  if (pm.isActive('com.sn_ot_inc_mgmt')) {
   gr.addEncodedQuery('sys_class_nameNOT IN' + new TableUtils('sn_ot_incident').getAllExtensions().toArray().join());
  }
  gr.query();
  while(gr.next()) {
   gr.incident_state = IncidentState.CLOSED;
   gr.state = IncidentState.CLOSED;
   //  gr.comments = 'Incident automatically closed after ' + pn + ' days in the Resolved state.';
   gr.active = false;
   gr.closed_by = gr.resolved_by;
   gr.update();
  }
 }
}]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:49:04</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>8eabacd183701210c6695855eeaad38f</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>incident autoclose</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_8eabacd183701210c6695855eeaad38f</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:49:04</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=8eabacd183701210c6695855eeaad38f"/>
</record_update>
