<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition>current.inputs != null</condition>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Cache Mugshots</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
 var componentHashes = [];
 var inputs = current.inputs;
 if (inputs.component != null) {
  if (previous != null && inputs.component == previous.inputs.component)
   return;

  // push string instead of GlideElement to componentHashes
  componentHashes.push(inputs.component.toString());
 } else if (inputs.component_values != null) {
  if (previous != null && inputs.component_values == previous.inputs.component_values)
   return;

  var terms = inputs.component_values.split('^');
  for (var i = 0; i < terms.length - 1; i++) {
   var hash = terms[i].split('=')[0];
   if (gs.nil(hash))
    continue;

   componentHashes.push(hash);
  }
 } else
  return;

 var snapshotUtil = new sn_atf.ATFSnapshot();
 var mugshotsCacheJson = snapshotUtil.getMugshotsJSONbyHash(current.test, current.order, componentHashes);
 mugshotsCacheJson = addPreviousMugshotJSON(mugshotsCacheJson);
 current.mugshots_cache_json = mugshotsCacheJson;

 /** This is necessary if the snapshot no longer exists. Copies over previous mugshot cache data to prevent it from being cleared out and lost. */
 function addPreviousMugshotJSON(newMugshotsCacheJSON) {
  var tempMugshotCacheData;
  // use previous.mugshots_cache_json for updates and current.mugshots_cache_json for inserts since previous does not exist
  if (previous.isValidRecord())
   tempMugshotCacheData = previous.mugshots_cache_json;
  else
   tempMugshotCacheData = current.mugshots_cache_json;

  if (!tempMugshotCacheData)
   return newMugshotsCacheJSON;

  newMugshotsCacheJSON = JSON.parse(newMugshotsCacheJSON);
  var previousMugshotsCacheJSON = JSON.parse(tempMugshotCacheData);
  for (var prevMugshotHash in previousMugshotsCacheJSON) {
   if (componentHashes.indexOf(prevMugshotHash) === -1)
    continue;

   if (newMugshotsCacheJSON.hasOwnProperty(prevMugshotHash))
    continue;

   newMugshotsCacheJSON[prevMugshotHash] = previousMugshotsCacheJSON[prevMugshotHash];
  }

  return JSON.stringify(newMugshotsCacheJSON);
 }
})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:52:58</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>4b8cac5983701210c6695855eeaad329</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Cache Mugshots</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_4b8cac5983701210c6695855eeaad329</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:52:58</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=4b8cac5983701210c6695855eeaad329"/>
</record_update>
