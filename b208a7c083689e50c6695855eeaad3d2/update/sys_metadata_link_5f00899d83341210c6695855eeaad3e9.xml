<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>b1f31f22ff592110d185612a453bf1d6</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;sn_entitlement.dao_groupAllocationDataM2mSubscriptionDetailDao&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;dao_groupAllocationDataM2mSubscriptionDetailDao&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var dao_groupAllocationDataM2mSubscriptionDetailDao = Class.create();
dao_groupAllocationDataM2mSubscriptionDetailDao.prototype = {
    initialize: function() {
        this._table = 'group_allocation_data_m2m_subscription_detail';
    },

    /**
     * Persists an m2m entry associating a group_allocation_data entry and a subscription_detail entry to the database
     *
     * @param {object} entry The entry object containing allocation data to persist
     * @returns {string} The sysId of the entry inserted
     */
    insertEntry: function(groupAllocationDataId, subscriptionDetailId, isAllocated) {
        const gr = new GlideRecord(this._table);
        gr.setWorkflow(false);

        gr.setValue('group_allocation_data', groupAllocationDataId);
        gr.setValue('subscription_detail', subscriptionDetailId);
        gr.setValue('is_allocated', isAllocated);
        return gr.insert();
    },

    /**
     * Marks the m2m records for a group as active false
     * 
     * @param subscriptionDetailIds A list of subscription_detail.sys_id values to filter by
     * @param groupIds An array of sys_user_group.sys_id to soft delete the m2m records for
     */
    softDeleteBySubscriptionDetailIdAndGroupId: function(subscriptionDetailIds, groupIds) {
        const gr = new GlideRecord(this._table);
        gr.addQuery('active', true);
        gr.addQuery('subscription_detail.sys_id', 'IN', subscriptionDetailIds);
        gr.addQuery('group_allocation_data.group.sys_id', 'IN', groupIds);
        gr.query();

        while (gr.next()) {
            gr.setValue('active', false);
            gr.update();
        }
    },

    type: 'dao_groupAllocationDataM2mSubscriptionDetailDao'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2023-03-04 01:15:03&lt;/sys_created_on&gt;
        &lt;sys_id&gt;b1f31f22ff592110d185612a453bf1d6&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;18&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;dao_groupAllocationDataM2mSubscriptionDetailDao&lt;/sys_name&gt;
        &lt;sys_package display_value="Licensing Engine" source="sn_entitlement"&gt;bcadabf277f311109c62f5f3cb5a992a&lt;/sys_package&gt;
        &lt;sys_policy&gt;read&lt;/sys_policy&gt;
        &lt;sys_scope display_value="Licensing Engine"&gt;bcadabf277f311109c62f5f3cb5a992a&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_b1f31f22ff592110d185612a453bf1d6&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;maint&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2023-07-20 20:23:52&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 09:18:11</sys_created_on>
        <sys_id>5f00899d83341210c6695855eeaad3e9</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>dao_groupAllocationDataM2mSubscriptionDetailDao</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_5f00899d83341210c6695855eeaad3e9</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 09:18:11</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
