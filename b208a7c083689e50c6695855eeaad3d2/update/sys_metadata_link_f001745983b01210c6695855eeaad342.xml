<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>259bba5f430d3110b4a1c083a9b8f257</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;sn_entitlement.CacheDataHandler&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;CacheDataHandler&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var CacheDataHandler = Class.create();
CacheDataHandler.prototype = {
    initialize: function() {
        this._cacheManager = new LicensingCacheManager();
    },

    prepareDataWithColumn: function(gr, columnList, cacheObject) {
        if (!global.JSUtil.nil(columnList))
            columnList.forEach(column =&gt; cacheObject[column] = gr.getValue(column));
        return cacheObject;
    },

    prepareDataWithCustomKey: function(gr, key, value, cacheObject) {
        cacheObject[key] = gr.getValue(value);
        return cacheObject;
    },

    prepareDataWithRefColumn: function(gr, refColumnList, cacheObject) {
        if (!global.JSUtil.nil(refColumnList))
            refColumnList.forEach(refColumn =&gt; cacheObject[refColumn] = String(gr.getElement(refColumn)));
        return cacheObject;
    },

    /**
     * Prepares the cache based on the instance of GlideRecord passed in the parameter.
     * @param {GlideRecord} glide record
     * @param {Object} cached object
     * @param {string} unique key of the cached map object
     * @param {String} List of columns that needs to be stored in cache
     * @param {string} List of reference columns that needs to be stored in cache
     * @return {Object} Final map that contains the cached data.
     */
    prepareCacheData: function(gr, cachedMap, mapKey, columnList, refColumnList) {
        while (gr.next()) {
            let recordObject = {};
            let recordObjectSet = new Set();
            if (cachedMap.get(gr.getValue(mapKey)) != null)
                recordObjectSet = cachedMap.get(gr.getValue(mapKey));

            recordObject = this.prepareDataWithColumn(gr, columnList, recordObject);
            recordObject = this.prepareDataWithRefColumn(gr, refColumnList, recordObject);
            recordObjectSet.add(recordObject);
            cachedMap.set(gr.getValue(mapKey), recordObjectSet);
        }
        return cachedMap;
    },

    reloadAllCache: function() {
        new SkuMetadataDAO().loadAllDataIntoCache();
        new SubscriptionEntitlementDAO().loadAllDataIntoCache();
    },

    flush: function(catalog) {
        this._cacheManager.flush(catalog);
    },

    type: 'CacheDataHandler'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2023-09-08 17:20:28&lt;/sys_created_on&gt;
        &lt;sys_id&gt;259bba5f430d3110b4a1c083a9b8f257&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;4&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;CacheDataHandler&lt;/sys_name&gt;
        &lt;sys_package display_value="Licensing Engine" source="sn_entitlement"&gt;bcadabf277f311109c62f5f3cb5a992a&lt;/sys_package&gt;
        &lt;sys_policy&gt;read&lt;/sys_policy&gt;
        &lt;sys_scope display_value="Licensing Engine"&gt;bcadabf277f311109c62f5f3cb5a992a&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_259bba5f430d3110b4a1c083a9b8f257&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2023-09-11 12:52:28&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:12:28</sys_created_on>
        <sys_id>f001745983b01210c6695855eeaad342</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>CacheDataHandler</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_f001745983b01210c6695855eeaad342</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:12:28</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
