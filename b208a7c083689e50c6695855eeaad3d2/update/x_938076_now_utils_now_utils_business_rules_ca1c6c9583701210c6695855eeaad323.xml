<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition>current.run_calc_brs != false</condition>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Set Close Data on Inactive</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[/*
* Service-now.com
* Set planned task close data when task becomes inactive
*/

setCloseValues();

function setCloseValues() {
    var stateUtil = new TaskStateUtil(current);
    var defaultCloseState = stateUtil.getDefaultCloseState();

    //if default close state then assume closed complete and set percent complete to 100
    //otherwise leave percent complete where it is
    if (current.state == defaultCloseState) {
        current.percent_complete = 100;
    }

    var today = new GlideDateTime();
    if(JSUtil.nil(current.getValue("work_start")))
        current.setValue("work_start", today.getValue());

    //set actual work end and duration
    if(JSUtil.nil(current.getValue("work_end")))
        current.setValue("work_end", today.getValue());
    if (current.top_task.schedule) {
        var schedule = new GlideSchedule(current.top_task.schedule);
        var duration = schedule.duration(current.work_start.getGlideObject(), current.work_end.getGlideObject());
        current.work_duration.getGlideObject().setNumericValue(duration.getNumericValue());
    }
    else {
  var startDate = new GlideDateTime(current.work_start);
  var endDate = new GlideDateTime(current.work_end);
  var dstEndDate = endDate;
   dstEndDate.addSeconds((endDate.getDSTOffset()-startDate.getDSTOffset())/1000);
        current.work_duration = gs.dateDiff(startDate.getDisplayValue(), dstEndDate.getDisplayValue(), false);
    }
}]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:50:59</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>ca1c6c9583701210c6695855eeaad323</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Set Close Data on Inactive</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_ca1c6c9583701210c6695855eeaad323</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:50:59</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=ca1c6c9583701210c6695855eeaad323"/>
</record_update>
