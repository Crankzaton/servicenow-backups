<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>validate</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {
    var signing_algorithm = current.signing_algorithm.toString();
    if (signing_algorithm.startsWith("rsa")) {
        var jwtAliaValidator = new SNC.JWTKeystoreAliasValidator();
        try {
            // The referred Signing keystore should be Active as well as of 'Java Key Store' or 'BC FIPS Keystore' type.
   if (!current.signing_keystore.active || !(current.signing_keystore.type == 'key_store' || current.signing_keystore.type == 'bcfks_key_store')) {
                throw "Invalid Signing Keystore. Please select an Active JKS(Java Key Store) or BCFKS(BC FIPS Keystore).";
            }

            jwtAliaValidator.validate(current);
            var gr = new GlideRecord("jwt_keystore_aliases");
            gr.initialize();
            gr.addQuery("certificate_thumbprint", current.certificate_thumbprint);
            gr.addQuery("sys_scope", current.sys_scope);
            gr.query();
            if (gr.next()) {
                if (!current.getUniqueValue().equals(gr.getUniqueValue())) {
                    throw ("Please use JWT Key record that already exists : " + gr.getValue("name"));
                }
            }
        } catch (e) {
            current.setAbortAction(true);
            // Handling both Java and Javascript Exception Messages.
            // For Java Exceptions, there will be an Exception object, hence using e.getMessage()
            // For Javascript Exceptions, there will be only string message. 
            gs.addErrorMessage(gs.getMessage(e.getMessage() === undefined ? e : e.getMessage()));
        }
    }
 
 // Validate secret key length in case of HMAC signing
 if (signing_algorithm.startsWith("hmac")) {
  var JavaString = Packages.java.lang.String;
  var shared_secret = current.signing_key_password.getDecryptedValue();
  var shared_secret_bits_length = new JavaString(shared_secret).getBytes("UTF-8").length * 16;
  if (signing_algorithm.equals("hmac_256") && shared_secret_bits_length < 256) {
   current.setAbortAction(true);
   gs.addErrorMessage(gs.getMessage("The signing key length must be at least 256 bits."));
  } else if(signing_algorithm.equals("hmac_384") && shared_secret_bits_length < 384) {
   current.setAbortAction(true);
   gs.addErrorMessage(gs.getMessage("The signing key length must be at least 384 bits..")); 
  } else if(signing_algorithm.equals("hmac_512") && shared_secret_bits_length < 512) {
   current.setAbortAction(true);
   gs.addErrorMessage(gs.getMessage("The signing key length must be at least 512 bits.")); 
  }
   }
})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:47:24</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>214b645183701210c6695855eeaad364</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>validate</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_214b645183701210c6695855eeaad364</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:47:24</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=214b645183701210c6695855eeaad364"/>
</record_update>
