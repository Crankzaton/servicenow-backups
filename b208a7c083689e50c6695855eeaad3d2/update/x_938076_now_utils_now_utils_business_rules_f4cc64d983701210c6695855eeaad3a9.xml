<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Re-assignment on agent time-off</name>
        <order>1000</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

 var agentEventsGR = global.FSMUtil.getAgentEventGR(current.schedule);
 if(agentEventsGR.getRowCount() > 0 && agentEventsGR.next()) {
  if(current.show_as == "busy"){
   var agent = agentEventsGR.getValue("user");
   var agentTZ = ((new AgentScheduleUtil()).getUserTZ(agent));
   var scheduleSpan = new GlideScheduleTimeSpan(current, agentTZ);
   var startDate = new GlideScheduleDateTime(current.getDisplayValue("start_date_time"));
   var nowSDT = new GlideScheduleDateTime(new GlideDateTime());
   if(startDate.compareTo(nowSDT) < 0)
    startDate = nowSDT;
   var endDate = new GlideScheduleDateTime(startDate);
   endDate.addDays(30);
   var spans = j2js(scheduleSpan.getSpans(startDate, endDate));
   for(var i = 0;i < spans.length; i++ ){
    var span = spans[i];
    var reassignmentAPI =  new DynamicSchedulingReassignmentProcessor();
    var excludeStartTime = span.getStart().getGlideDateTime();
    var excludeEndTime = span.getEnd().getGlideDateTime();
    var exclusions = {};
    exclusions.agents = {};
    exclusions.agents[agent] = [];
    exclusions.agents[agent].push({"startTime" : span.getStart().getGlideDateTime(), 
              "endTime": span.getEnd().getGlideDateTime()});
    var response = reassignmentAPI.process(excludeStartTime, excludeEndTime, agent, exclusions);
   }
   
  }
 }
})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:53:54</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>f4cc64d983701210c6695855eeaad3a9</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Re-assignment on agent time-off</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_f4cc64d983701210c6695855eeaad3a9</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:53:54</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=f4cc64d983701210c6695855eeaad3a9"/>
</record_update>
