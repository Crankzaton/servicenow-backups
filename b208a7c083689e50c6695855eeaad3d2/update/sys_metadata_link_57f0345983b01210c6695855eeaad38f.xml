<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>24c3b3519f30010054005f29468ba335</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;public&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.PwdAjaxEnrollmentProcessor&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;true&lt;/client_callable&gt;
        &lt;description&gt;Enrolls the user for the specified verification&lt;/description&gt;
        &lt;name&gt;PwdAjaxEnrollmentProcessor&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var PwdAjaxEnrollmentProcessor  = Class.create();

PwdAjaxEnrollmentProcessor.prototype = Object.extendsObject(PwdAjaxRequestProcessor, {

   manager : new PwdEnrollmentManager(),
	
   enroll: function() {	   
	   var map ={}; 
	   
	   // total count.
	   var total = this.getParameter("sysparm_total_count");
	   
	   for(var i = 0; i &lt; total ; i++) {
		   var name = 'sysparm_param_'+i;
		   var data = this.getParameter(name);
		   this._parseData(data,map);
	   }
	   
	   var formCnt = this.getParameter('sysparm_form_count');
	   var userId = gs.getUserID();
	   
	   for(i = 0; i &lt; formCnt ; i++) {
		   var dataFormName = 'sysparm_macro_'+i+'_data';
		   var dataEntryMap = map[dataFormName];
		   
		   var infoName = 'sysparm_macro_'+i+'_info';
		   var infoEntryMap = map[infoName];
		   var processor = infoEntryMap['enrollment_processor'];
		   var verificationId = infoEntryMap['verificationId'];
		   
		   try
		   {
			   this.manager.initializeByScriptNameAndCategory(processor, 'password_reset.extension.enrollment_form_processor');
			   
               // if we can't find the script, just notify and abort
               // Since there is no unique constraint on name on sys_script_include, we're jut going to take the first record
			   if (!this.manager.extensionScriptFound()) {
                   this._setErrorResponse(verificationId, gs.getMessage('Cannot find enrollment processor extension: {0}', processor));
                   continue;				   
			   }
				   
			   var response = this.manager.createNew(dataEntryMap, verificationId, userId);

			   //Sets the ajax response from the processor response.
			   this._setResponse(verificationId, response);
		   } catch(err) {
			   this._setErrorResponse(verificationId,err.message);
		   }
	   }//end of for.
	},
	
	/**
	 * Sets the runtime error response
	 */
	_setErrorResponse: function(verificationId, msg) {
		var response = this.newItem(verificationId);
		response.setAttribute('status', 'failure');
		response.setAttribute('message', msg);
	},
		
	/**
	 * Parsing the data.
	 */
	_parseData: function(data, map) {
		var formId = this._getFormId(data);
		var entry = map[formId];
		if(entry==undefined) {
			entry = {}; 
			map[formId]= entry;
		}
		var name = this._getElementName(data);
		var value = this._getElementValue(data);
		
		entry[name]=value;
	},
	
	/**
	 * Returns the from Id from the data. 
	 */
	_getFormId: function(data) {
		var val = data;
		var index = val.indexOf(":");
		return val.substring(0,index);
	},
	
	/**
	 * Returns the element name from the data.
	 */
	_getElementName: function(data) {
		var val = data;
		var index = val.indexOf(':');
		val = val.substring(index+1);
		index = val.indexOf("=");
		return val.substring(0,index);
	},
	
	/**
	 * Returns the element value from the data.
	 */
	_getElementValue: function(data) {
		var val = data;
		var index = val.indexOf('=');
		try
		{
			return val.substring(index+1);
		}
		catch(err)
		{
			return '';
		}
	},
	
	/**
	 * Returns the size 
	 */
	_getSize: function(obj) {
		var size = 0;
	    for (var key in obj) {
	        if (obj.hasOwnProperty(key)) size++;
	    }
	    return size;
	},
    
	/**
	 * Sets the response message.
	 */
	_setResponse:function(verificationId, response) {
	    var res = this.newItem("_" + verificationId);
		res.setAttribute('status' , response.result);
		res.setAttribute('message', response.message);
	},
	
	type:PwdAjaxEnrollmentProcessor
});]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2013-04-17 06:29:33&lt;/sys_created_on&gt;
        &lt;sys_id&gt;24c3b3519f30010054005f29468ba335&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;128&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;PwdAjaxEnrollmentProcessor&lt;/sys_name&gt;
        &lt;sys_package display_value="Password Reset" source="com.glideapp.password_reset"&gt;1399f4e43cf1311068bcf327dfe37fe4&lt;/sys_package&gt;
        &lt;sys_policy&gt;read&lt;/sys_policy&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_24c3b3519f30010054005f29468ba335&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;shravan.pai&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2017-10-21 15:39:18&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:12:22</sys_created_on>
        <sys_id>57f0345983b01210c6695855eeaad38f</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>PwdAjaxEnrollmentProcessor</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_57f0345983b01210c6695855eeaad38f</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:12:22</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
