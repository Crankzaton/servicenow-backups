<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>4a473a87c782201063e1e5e603c26029</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;public&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.FiscalCalendarUtils&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;FiscalCalendarUtils&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var FiscalCalendarUtils = Class.create();
FiscalCalendarUtils.prototype = {
    type: 'FiscalCalendarUtils'
};

/**
* @description Checks if there is any record in fiscal period table
* @returns {boolean}
**/
FiscalCalendarUtils.isAnyFiscalPeriodGenerated = function() {
    var gr = new GlideAggregate("fiscal_period");
    gr.addAggregate("COUNT");
    gr.query();
    if (gr.next()) {
        var count = gr.getAggregate("COUNT");
        if (!gs.nil(count))
            return Number(count) &gt; 0;
    }
    return false;
};

/**
* @descirpiton Returns the fiscal unit display label for the given fiscal unit value eg: quarter -&gt; Quarter
* @param {String} fiscalUnit the fiscal unit
* @returns {String}
**/
FiscalCalendarUtils.getLabelForFiscalUnitValue = function(fiscalUnit) {
    return SNC.FiscalCalendarPrefix.getLabelForFiscalUnitValue(fiscalUnit);
};

/**
* @description Returns the an array of fiscal_period sys'ids falling in between as well as including the givenn fiscal periods.
* @param {String} startDateSysId fiscal_period sysid of type fiscalUnit
* @param {String} endDateSysId fiscal_period sysid of type fiscalUnit
* @param {String} fiscalUnit
* @returns {Array&lt;String&gt;}
**/
FiscalCalendarUtils.getFiscalPeriodsInRange = function(startDateSysId, endDateSysId, fiscalUnit) {
    var fiscalHelper = new SNC.FiscalCalendar();
    return JSON.parse(fiscalHelper.getFiscalPeriodsInRange(startDateSysId, endDateSysId, fiscalUnit));
};

/**
* @description Returns the label of the fiscal calendar type configured, for normal 12 months calender returns Regular.
* @returns {String} the fiscal calendar type configured
**/
FiscalCalendarUtils.getFiscalCalendarType = function() {
    return new SNC.FiscalCalendar().getFiscalCalendarType();
};

/**
* @description Returns the Fiscal Units that are associated with the configured fiscal calendar type
* @returns {String} of {Array&lt;{ label: String, value: String }&gt;} the fiscal units supported by the configured fiscal calendar eg "[{"label":"Quarter","value":"quarter"},{"label":"Month","value":"month"}]"
**/
FiscalCalendarUtils.getFiscalUnits = function() {
    return new SNC.FiscalCalendar().getFiscalUnits();
};

/**
* @description Returns the Parent fiscal_period labels for the given leafFundingFrequency
* @param {String} leafFundingFrequency
* @returns {String} of {Array&lt;{label: String, value: String}&gt;} Parent fiscal_period labels for the given leafFundingFrequency
**/
FiscalCalendarUtils.getParentFiscalUnits = function(leafFundingFrequency) {
    return new SNC.FiscalCalendar().getParentFiscalUnits(leafFundingFrequency);
};

/**
* @description Returns the fiscal_period record with given fiscalUnit and containing the given dateTime
* @param {String} dateTime 
* @param {String} fiscalUnit
* @returns {GlideRecord} fiscal_period record.
**/
FiscalCalendarUtils.getFiscalPeriodForDate = function(dateTime, fiscalUnit) {
    return new SNC.FiscalCalendar().getFiscalPeriodForDate(dateTime, fiscalUnit);
};

/**
* @description Returns the fiscal_period record with has leaf period subjective to fiscal calendar type and containing the dateTime
* @param {GlideDateTime} dateTime
* @returns {GlideRecord} fiscal_period record.
**/
FiscalCalendarUtils.getFiscalCalendarLeafPeriodForDate = function(dateTime) {
    return new SNC.FiscalCalendar().getFiscalCalendarLeafPeriodForDate(dateTime);
};

/**
* @param {String} sys_id of fiscal period.
* @return {Number} number of weeks which are falling with in the given fiscal period.
**/
FiscalCalendarUtils.getWeeksInPeriod = function(fiscalPeriodId) {
	return new SNC.FiscalCalendar().getWeeksInPeriod(fiscalPeriodId);
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2021-02-05 10:29:00&lt;/sys_created_on&gt;
        &lt;sys_id&gt;4a473a87c782201063e1e5e603c26029&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;31&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;FiscalCalendarUtils&lt;/sys_name&gt;
        &lt;sys_package display_value="Fiscal Calendar" source="com.snc.fiscal_calendar"&gt;0a10166b47e64210cd4e1ce4316d4327&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_4a473a87c782201063e1e5e603c26029&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2021-02-18 13:13:28&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:36:44</sys_created_on>
        <sys_id>9096b8d983f01210c6695855eeaad359</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>FiscalCalendarUtils</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_9096b8d983f01210c6695855eeaad359</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:36:44</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
