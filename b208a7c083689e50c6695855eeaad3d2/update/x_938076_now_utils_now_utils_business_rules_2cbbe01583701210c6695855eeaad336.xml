<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Prevent Update With Invalid Trigger</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {
 var encodedQuery = current.trigger;
 var encodedQueryConditions = encodedQuery.toString().split("\\^");
 for (var conditionNumber = 0; conditionNumber < encodedQueryConditions.length; conditionNumber++) {
  var encodedCondition = encodedQueryConditions[conditionNumber];
  try {
   var trigger_table = 'v_ais_result_improvement_rule_condition_builder_values';
   var qs = new GlideQueryString(trigger_table, encodedCondition);
   qs.deserialize();
   var terms = qs.getTerms();
   for (var i = 0; i < terms.size(); i++) {
    var condition = terms.get(i);
    var ce = new GlideCompositeElement(condition.getField(), trigger_table);
    if (ce.getTargetED().isTimeType()) {
     current.setAbortAction(true);
     gs.addErrorMessage(gs.getMessage('AIS Rule cannot be saved because of an invalid trigger field'));
     break;
    }
   }
  } catch (e) {
   gs.addInfoMessage(gs.getMessage('There was an error validating trigger Field: {0}. Make sure that the trigger field does not contain any date/time fields', [e]));
  }

 }
 return;

})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:49:14</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>2cbbe01583701210c6695855eeaad336</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Prevent Update With Invalid Trigger</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_2cbbe01583701210c6695855eeaad336</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:49:14</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=2cbbe01583701210c6695855eeaad336"/>
</record_update>
