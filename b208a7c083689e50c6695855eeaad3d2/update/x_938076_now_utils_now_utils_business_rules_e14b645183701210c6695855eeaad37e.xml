<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>SetPolicyTypeUpdateOfUsedFlag</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {

    // If the current record is updadted to be 'USED' to 'true' then update the policy type accordingly
    if (current.used == true) {

        // If the policy is not already of post auth type. then if the the Policy Input is of User(Role, Group) Criteria , then the corresponding Policy will be of Post Auth
        if (current.policy.type != "post_auth") {
            // If the record update is any of User(Role, Group) Criteria , then the corresponding Policy will be of Post Auth.
            if (GlideDBObjectManager.get().getAllExtensions('user_based_filter_criteria').contains(current.sys_auth_filter_criteria.sys_class_name)) {
                updateAuthPolicyType("post_auth");
            }
            // If the new record insertion is of System(IP) Criteria, and No User(Role, Group) Criteria is associated to the Policy 
            // then the corresponding Policy will be of type Pre Auth.
            else if (GlideDBObjectManager.get().getAllExtensions('system_based_filter_criteria').contains(current.sys_auth_filter_criteria.sys_class_name) && current.policy.type != "pre_auth") {
                updateAuthPolicyType("pre_auth");
            }
        }


    } 
 else { // If the current record is updadted to be 'USED' to 'false' then update the policy type accordingly
        // get the count of policy inputs which are being used
        var roleCriteriaCountForPolicy = getFilterCriteriaCountAssociatedWithPolicy("sys_role_filter_criteria");
        var groupCriteriaCountForPolicy = getFilterCriteriaCountAssociatedWithPolicy("sys_group_filter_criteria");
        var genericUserCriteriaCountForPolicy = getFilterCriteriaCountAssociatedWithPolicy("sys_generic_user_filter_criteria");

        if (roleCriteriaCountForPolicy == 0 && groupCriteriaCountForPolicy == 0 && genericUserCriteriaCountForPolicy == 0) {
            var ipCriteriaCountForPolicy = getFilterCriteriaCountAssociatedWithPolicy("sys_ip_filter_criteria");
            var locationCriteriaCountForPolicy = getFilterCriteriaCountAssociatedWithPolicy("sys_location_filter_criteria");
            var genericSystemCriteriaCountForPolicy = getFilterCriteriaCountAssociatedWithPolicy("sys_generic_system_filter_criteria");

            // It was of PostAuth Type, check if it needs to be reset to 'PreAuth' or 'any' type.
            if (GlideDBObjectManager.get().getAllExtensions('user_based_filter_criteria').contains(current.sys_auth_filter_criteria.sys_class_name)) {
                if (ipCriteriaCountForPolicy > 0 || locationCriteriaCountForPolicy > 0 || genericSystemCriteriaCountForPolicy > 0) {
                    updateAuthPolicyType("pre_auth");
                } else {
                    updateAuthPolicyType("any");
                }
            }
            // It was of PreAuth Type, check if it needs to be reset to 'any' type.
            else if (GlideDBObjectManager.get().getAllExtensions('system_based_filter_criteria').contains(current.sys_auth_filter_criteria.sys_class_name)) {
                if (ipCriteriaCountForPolicy == 0 && locationCriteriaCountForPolicy == 0 && genericSystemCriteriaCountForPolicy == 0) {
                    updateAuthPolicyType("any");
                }
            }
        }
    }


    function updateAuthPolicyType(policyType) {
        var gr = new GlideRecord("sys_authentication_policy");
        if (gr.isValid()) {
            gr.get(current.policy.sys_id);
            if (gr.isValidRecord()) {
                gr.setValue("type", policyType);
                gr.update();
            }
        }
    }

    function getFilterCriteriaCountAssociatedWithPolicy(filterCritriaClassName) {
        var ga = new GlideAggregate("sys_authentication_policy_criteria_m2m");
        if (ga.isValid()) {
            ga.addAggregate("COUNT");
            ga.addQuery("policy", current.policy.sys_id);
            ga.addQuery("sys_auth_filter_criteria.sys_class_name", filterCritriaClassName);
            ga.addQuery("used", true);
            ga.query();

            var res = 0;
            if (ga.next())
                res = ga.getAggregate("COUNT");

            return res;
        }
    }

})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:47:24</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>e14b645183701210c6695855eeaad37e</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>SetPolicyTypeUpdateOfUsedFlag</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_e14b645183701210c6695855eeaad37e</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:47:24</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=e14b645183701210c6695855eeaad37e"/>
</record_update>
