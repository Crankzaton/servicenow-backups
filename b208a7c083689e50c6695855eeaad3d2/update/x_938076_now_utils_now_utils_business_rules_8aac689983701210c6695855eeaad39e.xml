<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Restrict Duplicate Keys</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
 // Add your code here
 if(current.key_filter.changes()) { /* Sort Key Filter by Column Names */
  var keyFilter = JSON.parse(current.getValue('key_filter'));

  var columnNames = Object.keys(keyFilter);
  columnNames.sort();

  var sortedKeyFilter = {};
  for(var i = 0; i < columnNames.length; i++) {
   var columnName = columnNames[i];
   sortedKeyFilter[columnName] = keyFilter[columnName];
  }

  current.setValue('key_filter', JSON.stringify(sortedKeyFilter));
 }

 var duplicateKeyGR = new GlideRecord('itfm_plan_key');
 if(current.operation() == 'update') /* exclude current key */ {
  duplicateKeyGR.addQuery('sys_id','!=',current.sys_id); 
 }
 duplicateKeyGR.addQuery('plan_definition', current.plan_definition);
 duplicateKeyGR.addQuery('key_filter', current.key_filter);
 duplicateKeyGR.query();

 if(duplicateKeyGR.next()) {
  gs.addErrorMessage(gs.getMessage('Plan Key is found to be a duplicate of {0}', '<a href = \'' + duplicateKeyGR.getLink() + '\'>' + duplicateKeyGR.getDisplayValue('name') + '</a>'));
  current.setAbortAction(true);
 }
})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:53:26</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>8aac689983701210c6695855eeaad39e</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Restrict Duplicate Keys</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_8aac689983701210c6695855eeaad39e</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:53:26</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=8aac689983701210c6695855eeaad39e"/>
</record_update>
