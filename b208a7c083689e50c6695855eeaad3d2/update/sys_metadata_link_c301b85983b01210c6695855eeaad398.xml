<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>2768c20e430121102aeb1ca57bb8f27e</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;sn_entitlement.AppFamilyInfoService&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;AppFamilyInfoService&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var AppFamilyInfoService = Class.create();
AppFamilyInfoService.prototype = {
    initialize: function() {
        this.PACKAGE_CACHE = {};
    },

    getPackageApp: function (packageId, scopeId) {
        var res = {
            'name': 'Unknown',
            'id': 'unk',
            'appSysId': null,
        };
        var key = packageId + '~' + scopeId;
        if (Object.prototype.hasOwnProperty.call(this.PACKAGE_CACHE.hasOwnProperty, key))
            return this.PACKAGE_CACHE[key];

        if (gs.nil(packageId) &amp;&amp; gs.nil(scopeId)) {
            this.PACKAGE_CACHE[key] = {
                'name': 'Global',
                'id': 'global',
                'appSysId': null,
            };
            return this.PACKAGE_CACHE[key];
        }

        var af = new GlideRecord('ua_app_family');
        if (packageId) {
            af.addQuery('app_id', '=', packageId).addOrCondition('app_id', '=', 'com.' + packageId).addOrCondition('app_id', '=', 'com.snc.' + packageId);
        }
        if (scopeId) {
            af.addQuery('scope', '=', scopeId);
        }
        af.addQuery('level', '=', 1);
        af.query();

        if (af.getRowCount() &gt; 1) {
            gs.warn('Multiple app families (' + af.getRowCount() + ') were found for the package {' + packageId + '}.');
        }

        if (af.next()) {
            var appEntSysId = null;
            var appEntitlement = new GlideRecord('license_family');
            appEntitlement.addQuery('family_id', '=', af.getValue('lineage_id'));
            appEntitlement.query();
            if (appEntitlement.next()) {
                appEntSysId = appEntitlement.getUniqueValue();
            }
            res = {
                'name': af.getValue('lineage_name'),
                'id': af.getValue('lineage_id'),
                'appSysId': appEntSysId,
            };
        }
        this.PACKAGE_CACHE[key] = res;
        return res;
    },

    type: 'AppFamilyInfoService'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2023-02-17 20:12:37&lt;/sys_created_on&gt;
        &lt;sys_id&gt;2768c20e430121102aeb1ca57bb8f27e&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;AppFamilyInfoService&lt;/sys_name&gt;
        &lt;sys_package display_value="Licensing Engine" source="sn_entitlement"&gt;bcadabf277f311109c62f5f3cb5a992a&lt;/sys_package&gt;
        &lt;sys_policy&gt;read&lt;/sys_policy&gt;
        &lt;sys_scope display_value="Licensing Engine"&gt;bcadabf277f311109c62f5f3cb5a992a&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_2768c20e430121102aeb1ca57bb8f27e&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2023-02-17 20:12:37&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:12:38</sys_created_on>
        <sys_id>c301b85983b01210c6695855eeaad398</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>AppFamilyInfoService</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_c301b85983b01210c6695855eeaad398</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:12:38</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
