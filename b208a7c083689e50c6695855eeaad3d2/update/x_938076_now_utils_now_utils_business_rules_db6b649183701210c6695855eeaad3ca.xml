<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Copy Assessment answers</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {

    var copierID = '';
    var ca = new GlideRecord('asmt_assessment_instance');
    ca.addQuery('task_id', current.task_id);
    ca.addQuery('metric_type', '0556fa9a8f12110040f82ab2f0f923f8'); //demand
    ca.query();
    if (ca.next()) {
        copierID = ca.sys_id;
  gs.log(ca);
    }

    var copyA = new GlideRecord('asmt_assessment_instance_question');
    copyA.addQuery('instance', copierID); //->current.task_id --> task_id
    copyA.query();
    while (copyA.next()) {
        var copyAA = new GlideRecord('asmt_assessment_instance_question');
        copyAA.addQuery('metric_type', '316884eb47517550020ba9f8536d43ab'); //copy of demand
        copyAA.addQuery('instance', current.sys_id);
        copyAA.query();
        while (copyAA.next()) {
            if (copyAA.metric.question == copyA.metric.question) {
                copyAA.value = copyA.value;
                //gs.log('instance + c968bb4f471d35108063b7f3846d4340' + copyA.value);
                copyAA.update();
            }
        }
    }

})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:48:04</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>db6b649183701210c6695855eeaad3ca</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Copy Assessment answers</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_db6b649183701210c6695855eeaad3ca</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:48:04</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=db6b649183701210c6695855eeaad3ca"/>
</record_update>
