<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>211976f70a0a0b9900497fe257b72cac</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.ExternalDependencyGenerator&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;ExternalDependencyGenerator&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[gs.include("PrototypeServer");

var ExternalDependencyGenerator = Class.create();

ExternalDependencyGenerator.prototype = {

   initialize : function(/* GlideRecord */ request) {
     this.request = request;
     this._lazy = false;
   },

   setRequest : function(/* GlideRecord */ request) {
     this.request = request;
   },

   setLazy : function(/* boolean */ lazy) {
     this._lazy = lazy;
   },

   generate : function() {
     var gr = new GlideRecord('sc_req_item');
     gr.addQuery('request', this.request.sys_id);
     gr.query();
     while (gr.next()) {
 
        // using workflow for this item?
        if (gr.cat_item.workflow != null &amp;&amp; !gr.cat_item.workflow.nil())
           continue;
            
        var planID = GlideappDeliveryPlan.resolvePlanID(gr);
        var plan = GlideappDeliveryPlan.get(planID);
        if (!plan)
           continue;

        var it = plan.getTokenMap().values().iterator();
        while (it.hasNext()) {
           var tt = it.next();
           this._createDependencies(tt, gr);
        }
     }
   },

   _createDependencies: function(/* TaskToken **/ tt, /* GlideRecord */ request_item) {
     if (tt.getExternalPredecessors().isEmpty())
       return;


     var actualTask = new GlideRecord('sc_task');
     actualTask.addQuery('delivery_task', tt.getId());
     actualTask.addQuery('request_item', request_item.sys_id);
     actualTask.query();
     if (!actualTask.next())
        return;

     var it = tt.getExternalPredecessors().iterator();
     while (it.hasNext()) {
       var task_id = it.next();
       var gr = new GlideRecord('sc_task');
       gr.addQuery('delivery_task', task_id);
       gr.addQuery('request_item.request', this.request.sys_id);
       gr.query();
       while (gr.next()) {
         var dep = new GlideRecord('execution_plan_local');
         dep.initialize();
         dep.predecessor = gr.sys_id;
         dep.successor = actualTask.sys_id;
         if (this._lazy)
            dep.insertLazy();
         else
            dep.insert();
       }
     }
   }
}]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;glide.maint&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2007-11-08 21:10:53&lt;/sys_created_on&gt;
        &lt;sys_id&gt;211976f70a0a0b9900497fe257b72cac&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;16&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;ExternalDependencyGenerator&lt;/sys_name&gt;
        &lt;sys_package display_value="Service Catalog Platform" source="com.glideapp.servicecatalog.platform"&gt;3607b4283cb1311068bcf327dfe37fee&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_211976f70a0a0b9900497fe257b72cac&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;glide.maint&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2008-08-15 16:29:39&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:11:58</sys_created_on>
        <sys_id>dde03c1983b01210c6695855eeaad3b5</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>ExternalDependencyGenerator</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_dde03c1983b01210c6695855eeaad3b5</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:11:58</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
