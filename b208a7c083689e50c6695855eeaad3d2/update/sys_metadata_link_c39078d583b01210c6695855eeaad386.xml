<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>15434a01871e0300b6f8578c87cb0b3e</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.DemandDraft&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;functions for setting Demand back to Draft&lt;/description&gt;
        &lt;name&gt;DemandDraft&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var DemandDraft = Class.create();

DemandDraft.prototype = {	
	initialize: function(demandRecord) {		
		this.demandRecordGr = demandRecord;
	},
	
	cancelAssessments: function(){
		var assinstgr = new GlideRecord('asmt_assessment_instance');
		assinstgr.addQuery('metric_type','0556fa9a8f12110040f82ab2f0f923f8');
		var assinstgrOr = assinstgr.addQuery('state','wip');
		assinstgrOr.addOrCondition('state','ready');
		var assquestiongr = assinstgr.addJoinQuery('asmt_assessment_instance_question','sys_id','instance');
		assquestiongr.addCondition('source_table','dmn_demand');
		assquestiongr.addCondition('source_id',this.demandRecordGr.getValue('sys_id'));
		assinstgr.query();
		while (assinstgr.next()){
			assinstgr.state = 'canceled';
			assinstgr.update();
		}
	},
	
	excludeFromAllBudgetPlans: function(){
		new PPMBudgetPlanner().excludeTaskFromAllBudgetPlans(this.demandRecordGr.getValue('sys_id'));
	},
	
	resetScores : function(){
		var demand = new GlideRecord("dmn_demand");
		demand.get(this.demandRecordGr.getValue('sys_id'));
		demand.score_cost = 5;
		demand.score_risk = 5;
		demand.score_size = 5;
		demand.score_strategic_allignment = 5;
		demand.score_value = 5;
		demand.score = 0;
		demand.visited_state = '1';
		demand.setWorkflow(false);
		demand.update();
	},
	
	moveResourcePlantoPlanning : function() {
		var resourcePlan = new GlideRecord("resource_plan");
		resourcePlan.addQuery('task',this.demandRecordGr.getValue('sys_id'));
		resourcePlan.addQuery('state','!=',1);
		resourcePlan.addQuery('actual_hours',0);		
		resourcePlan.query();
		while(resourcePlan.next()){
			resourcePlan.state = 1;
			resourcePlan.update();
		}
	},	
	
	moveToDraft: function(){
		this.cancelAssessments();
		this.excludeFromAllBudgetPlans();
		this.resetScores();
		var moveResoucePlantoPlanning = gs.getSession().getClientData('moveResoucePlantoPlanning');
		if (moveResoucePlantoPlanning == undefined || moveResoucePlantoPlanning == "true"){
			this.moveResourcePlantoPlanning();
		}
	},
	
	canResetToDraft: function(){
		if ( this.demandRecordGr.getValue('state') != 1 &amp;&amp; gs.hasRole('demand_manager')){
			var demandBudgetGr = new GlideAggregate('project_funding');
			demandBudgetGr.addAggregate('COUNT');
			demandBudgetGr.addQuery('task',this.demandRecordGr.getValue('sys_id'));
			demandBudgetGr.addQuery('planned',true);
			demandBudgetGr.query();
			if(demandBudgetGr.next()){
				if (demandBudgetGr.getAggregate('COUNT') &gt; 0)
					return false;
			}
			var fields = ['project', 'defect', 'enhancement', 'change'];
				for(var index in fields){
					var field = fields[index];
					if(this.demandRecordGr.isValidField(field)){
						if (JSUtil.notNil(this.demandRecordGr.getValue(field)))
							return false;
					}
				}
			return true;
		}
		else
			return false;
	},
	
	type: 'DemandDraft'
};

]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2017-11-06 10:50:58&lt;/sys_created_on&gt;
        &lt;sys_id&gt;15434a01871e0300b6f8578c87cb0b3e&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;55&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;DemandDraft&lt;/sys_name&gt;
        &lt;sys_package display_value="Demand Management" source="com.snc.demand_management"&gt;82005a2b47e64210cd4e1ce4316d4346&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_15434a01871e0300b6f8578c87cb0b3e&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2018-06-20 12:14:17&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:10:43</sys_created_on>
        <sys_id>c39078d583b01210c6695855eeaad386</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>DemandDraft</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_c39078d583b01210c6695855eeaad386</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:10:43</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
