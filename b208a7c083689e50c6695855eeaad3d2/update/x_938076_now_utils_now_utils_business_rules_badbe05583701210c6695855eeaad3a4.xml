<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Validate IP Range Uniqueness</name>
        <order>50</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {

    //Validate Start IP
    if (GlideStringUtil.nil(current.start_ip)) {
        gs.addErrorMessage(gs.getMessage("Empty Start IP."));
        current.setAbortAction(true);
        return false;
    }

    // for Single IP, Admins can only set Start IP.
    // Set End IP, with Start IP Value in those scenario
    if (GlideStringUtil.nil(current.end_ip)) {
        current.end_ip = current.start_ip;
    }

    // Validate Start IP and End IP version - they should be of same type either IPv4 or IPv6
    var startIp = SncIPAddress.fromString(current.start_ip);
    var endIp = SncIPAddress.fromString(current.end_ip);

    if (GlideStringUtil.nil(startIp)) {
        gs.addErrorMessage(gs.getMessage("Invalid Start IP."));
  // Reset start_ip as this is invalid
  current.start_ip = "";
        current.setAbortAction(true);
        return false;
    }

    if (GlideStringUtil.nil(endIp)) {
        gs.addErrorMessage(gs.getMessage("Invalid End IP."));
  // Reset end_ip as this is invalid
  current.end_ip = "";
        current.setAbortAction(true);
        return false;
    }

    // If both the IP is NOT of same type then, abort
    if ((startIp.isV4() && endIp.isV6()) || (startIp.isV6() && endIp.isV4())) {
        gs.addErrorMessage(gs.getMessage("Both Start IP and End IP must be either of type IPV4 or type IPV6."));
        current.setAbortAction(true);
        return false;
    }


 var ipRangeGr = new GlideRecord("sys_ip_address_range");
    ipRangeGr.addQuery("start_ip", current.start_ip);
    ipRangeGr.addQuery("end_ip", current.end_ip);
    ipRangeGr.addQuery("sys_ip_filter_criteria", current.sys_ip_filter_criteria);
    ipRangeGr.query();
    // If an IP Range already exist with this start_ip, end_ip and sys_ip_filter_criteria then abort the insert/update
    if (ipRangeGr.next()) {
        gs.addErrorMessage(gs.getMessage("Duplicate IP Range entry with Start IP and End IP '{0} - {1}' for this IP Filter. Aborting the operation.", [current.start_ip, current.end_ip]));
        current.setAbortAction(true);
    }

})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:49:56</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>badbe05583701210c6695855eeaad3a4</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Validate IP Range Uniqueness</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_badbe05583701210c6695855eeaad3a4</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:49:56</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=badbe05583701210c6695855eeaad3a4"/>
</record_update>
