<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>1f090e0e430121102aeb1ca57bb8f216</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;sn_entitlement.TableAclClassifier&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;TableAclClassifier&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var TableAclClassifier = Class.create();
TableAclClassifier.prototype = {
    TABLE_TYPE_TASK: 'te',
    TABLE_TYPE_NON_TASK: 'nt',

    ACL_NOOP: 'n',
    ACL_UNRESTRICTED: 'u',
    ACL_RESTRICTED: 'r',
    ACL_USER_RESTRICTED: 'ur',
    ACL_APPROVER_RESTRICTED: 'a',
    ACL_UNKNOWN: 'ukn',

    initialize: function(aclScopeLevels) {
        // TODO FIX cross referenced constants
        this.ACL_TASK_EXTENTION_NO_CONDITION = this.ACL_UNRESTRICTED + this.TABLE_TYPE_TASK;
        this.ACL_NON_TASK_EXTENTION_NO_CONDITION = this.ACL_UNRESTRICTED + this.TABLE_TYPE_NON_TASK;
        this.ACL_TASK_EXTENTION_WITH_CONDITION = this.ACL_RESTRICTED + this.TABLE_TYPE_TASK;
        this.ACL_NON_TASK_EXTENTION_WITH_CONDITION = this.ACL_RESTRICTED + this.TABLE_TYPE_NON_TASK;
        this.ACL_TASK_EXTENTION_WITH_APPROVER_CONDITION = this.ACL_APPROVER_RESTRICTED + this.TABLE_TYPE_TASK;
        this.ACL_TASK_EXTENTION_WITH_UNKNOWN = this.ACL_UNKNOWN + this.TABLE_TYPE_TASK;
        this.ACL_NON_TASK_EXTENTION_WITH_UNKNOWN = this.ACL_UNKNOWN + this.TABLE_TYPE_NON_TASK;
        this.ACL_TASK_EXTENTION_WITH_NOOP = this.ACL_NOOP + this.TABLE_TYPE_TASK;
        this.ACL_NON_TASK_EXTENTION_WITH_NOOP = this.ACL_NOOP + this.TABLE_TYPE_NON_TASK;
        this.ACL_NON_TASK_EXTENTION_WITH_APPROVER_CONDITION = this.ACL_APPROVER_RESTRICTED + this.TABLE_TYPE_NON_TASK;
        this.ACL_TASK_EXTENTION_WITH_USER_CONDITION = this.ACL_USER_RESTRICTED + this.TABLE_TYPE_TASK;
        this.ACL_NON_TASK_EXTENTION_WITH_USER_CONDITION = this.ACL_USER_RESTRICTED + this.TABLE_TYPE_NON_TASK;

        var tableClasses = [
            this.ACL_TASK_EXTENTION_NO_CONDITION,
            this.ACL_NON_TASK_EXTENTION_NO_CONDITION,
            this.ACL_TASK_EXTENTION_WITH_CONDITION,
            this.ACL_NON_TASK_EXTENTION_WITH_CONDITION,
            this.ACL_TASK_EXTENTION_WITH_APPROVER_CONDITION,
            this.ACL_NON_TASK_EXTENTION_WITH_APPROVER_CONDITION,
            this.ACL_TASK_EXTENTION_WITH_USER_CONDITION,
            this.ACL_NON_TASK_EXTENTION_WITH_USER_CONDITION,
            this.ACL_TASK_EXTENTION_WITH_UNKNOWN,
            this.ACL_NON_TASK_EXTENTION_WITH_UNKNOWN,
            this.ACL_TASK_EXTENTION_WITH_NOOP,
            this.ACL_NON_TASK_EXTENTION_WITH_NOOP
        ];

        this.aclsPerClass = {};
        for (var i = 0; i &lt; aclScopeLevels.length; ++i) {
            this.aclsPerClass[aclScopeLevels[i]] = {};
            for (var j = 0; j &lt; tableClasses.length; ++j) {
                this.aclsPerClass[aclScopeLevels[i]][tableClasses[j]] = this._initACLCounts();
                this.aclsPerClass[aclScopeLevels[i]].total = 0;
            }
        }
    },

    getTableType: function(tableInfo) {
        if (tableInfo.isTaskExt)
            return this.TABLE_TYPE_TASK;

        return this.TABLE_TYPE_NON_TASK;
    },

    add: function(asl, aclType, op, tableType, count) {
        this._addTo(this.aclsPerClass, asl, aclType, op, tableType, count);
    },
    
    addAll: function(aclTypes, importantOps, tableType, aclCounts) {
        this._addAllTo(this.aclsPerClass, aclTypes, importantOps, tableType, aclCounts);
    },

    getAclsPerClass: function() {
        return this.aclsPerClass;
    },

    _addTo: function(aclsPerClass, asl, aclType, op, tableType, count) {
        var tableClass = this._getTableClass(aclType, tableType);
        aclsPerClass[asl][tableClass][op] += count;
        aclsPerClass[asl][tableClass].total += count;
        aclsPerClass[asl].total += count;
    },

    _addAllTo: function(aclsPerClass, aclTypes, importantOps, tableType, aclCounts) {
        for (var a in aclTypes) {
            var aclType = aclTypes[a];
            for (var o in importantOps) {
                for (var asl in aclsPerClass) {
                    this._addTo(aclsPerClass, asl, aclType, importantOps[o], tableType, aclCounts[asl][aclType][importantOps[o]]);
                }
            }
        }
    },

    _getTableClass: function(aclType, tableType) {
        return aclType + tableType;
    },

    _initACLCounts: function () {
        return {
            'total': 0,
            'write': 0,
            'read': 0,
            'commentWrite': 0
        }; // , 'skip': {'write': 0}, 'delete': 0 // removed delete form important ops;
    },


    type: 'TableAclClassifier'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2023-02-17 20:15:16&lt;/sys_created_on&gt;
        &lt;sys_id&gt;1f090e0e430121102aeb1ca57bb8f216&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;TableAclClassifier&lt;/sys_name&gt;
        &lt;sys_package display_value="Licensing Engine" source="sn_entitlement"&gt;bcadabf277f311109c62f5f3cb5a992a&lt;/sys_package&gt;
        &lt;sys_policy&gt;read&lt;/sys_policy&gt;
        &lt;sys_scope display_value="Licensing Engine"&gt;bcadabf277f311109c62f5f3cb5a992a&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_1f090e0e430121102aeb1ca57bb8f216&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2023-02-17 20:15:16&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:11:43</sys_created_on>
        <sys_id>7dd0b81983b01210c6695855eeaad35d</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>TableAclClassifier</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_7dd0b81983b01210c6695855eeaad35d</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:11:43</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
