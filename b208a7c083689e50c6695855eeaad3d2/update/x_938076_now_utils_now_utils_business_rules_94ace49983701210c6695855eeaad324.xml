<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Configure Auto-launch order</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

 var gta, 
  ALTours,
  data = {
   autolaunchOn :[],
   autolaunchOff:[]
  };
 
 /** If auto-launch was previously enabled, it should be enabled again
 * and Tour should be at the end of the current auto-launch order
 */
 if(current.active == true  && current.autolaunch_order < 0){
   gta  = new GTAutoLaunchController();
   ALTours  = gta.getAllAutoLaunchToursforPage(current.context);
   current.autolaunch_order = ALTours.length + 1 ; 
 } else if(current.active == false && current.autolaunch_order > 0){
  //updated the auto-launch order on the related page to account for the removed tour
   gta  = new GTAutoLaunchController();
   ALTours  = gta.getAllAutoLaunchToursforPage(current.context).sort(function(a, b){return a.order - b.order;});
  for(var i = 0; i < ALTours.length; i++){
   if(current.autolaunch_order != ALTours[i].order){
    data.autolaunchOn.push(ALTours[i].id);
   } 
  }
  gta.updateToursForPage(data);
  /*Setting autolaunch order to -1,
  so we can know that tour has been autolaunch enabled before it has been made inactive. 
  */
  current.autolaunch_order  = -1;
 }


})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:53:19</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>94ace49983701210c6695855eeaad324</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Configure Auto-launch order</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_94ace49983701210c6695855eeaad324</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:53:19</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=94ace49983701210c6695855eeaad324"/>
</record_update>
