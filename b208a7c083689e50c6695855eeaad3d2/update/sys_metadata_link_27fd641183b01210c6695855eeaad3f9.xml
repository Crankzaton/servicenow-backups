<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>2f73ee51d7010200d82ba1737e6103fd</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="sys_script"&gt;
    &lt;sys_script action="INSERT_OR_UPDATE"&gt;
        &lt;abort_action&gt;false&lt;/abort_action&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;action_delete&gt;false&lt;/action_delete&gt;
        &lt;action_insert&gt;false&lt;/action_insert&gt;
        &lt;action_query&gt;false&lt;/action_query&gt;
        &lt;action_update&gt;true&lt;/action_update&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;add_message&gt;false&lt;/add_message&gt;
        &lt;advanced&gt;true&lt;/advanced&gt;
        &lt;change_fields&gt;false&lt;/change_fields&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;collection&gt;change_request&lt;/collection&gt;
        &lt;condition/&gt;
        &lt;description/&gt;
        &lt;execute_function&gt;false&lt;/execute_function&gt;
        &lt;filter_condition table="change_request"&gt;active=true^EQ&lt;item endquery="false" field="active" goto="false" newquery="false" operator="=" or="false" value="true"/&gt;
            &lt;item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/&gt;
        &lt;/filter_condition&gt;
        &lt;is_rest&gt;false&lt;/is_rest&gt;
        &lt;message/&gt;
        &lt;name&gt;Clear Conflicts&lt;/name&gt;
        &lt;order&gt;100&lt;/order&gt;
        &lt;priority&gt;100&lt;/priority&gt;
        &lt;rest_method/&gt;
        &lt;rest_method_text/&gt;
        &lt;rest_service/&gt;
        &lt;rest_service_text/&gt;
        &lt;rest_variables/&gt;
        &lt;role_conditions/&gt;
        &lt;script&gt;&lt;![CDATA[(function executeRule(current, previous /*undefined when async or display*/) {

	// Preconditions for running conflict detection satisfied so return
	if (ChangeCheckConflicts.allowConflictDetection(current, previous))
		return;
		
	// Update conflict fields for current change_request record
	current.conflict_status = 'Not Run';
	current.conflict_last_run = "";
	
	var currentChgSysId = current.getUniqueValue();
	var chgSysIds = {};
	var conflictGR = new GlideRecord("conflict");
	conflictGR.addQuery("change", currentChgSysId).addOrCondition("conflicting_change", currentChgSysId);
	conflictGR.query();
	while (conflictGR.next()) {
		var changeSysId = conflictGR.getValue("change");
		if (!gs.nil(changeSysId))
			chgSysIds[changeSysId] = null;
		var conflictChangeSysId = conflictGR.getValue("conflicting_change");
		if (!gs.nil(conflictChangeSysId))
			chgSysIds[conflictChangeSysId] = null;
		conflictGR.deleteRecord();
	}

	delete chgSysIds[currentChgSysId];

	// Update associated change_request conflict information
	for (var chgSysId in chgSysIds) {
		conflictGR = new GlideAggregate("conflict");
		conflictGR.addQuery("change", chgSysId).addOrCondition("conflicting_change", chgSysId);
		conflictGR.addAggregate("COUNT");
		conflictGR.query();
		conflictGR.next();
		if (parseInt(conflictGR.getAggregate("COUNT")) === 0) {
			var chgGR = new GlideRecord("change_request");
			if (chgGR.get(chgSysId)) {
				chgGR.conflict_status = "Not Run";
				chgGR.conflict_last_run = "";
				chgGR.update();
			}
		}
	}

})(current, typeof previous != 'undefined' ?  previous : null);]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2015-07-03 19:39:50&lt;/sys_created_on&gt;
        &lt;sys_domain&gt;global&lt;/sys_domain&gt;
        &lt;sys_domain_path/&gt;
        &lt;sys_id&gt;2f73ee51d7010200d82ba1737e6103fd&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;26&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;Clear Conflicts&lt;/sys_name&gt;
        &lt;sys_overrides/&gt;
        &lt;sys_package display_value="Change Management - Collision Detector" source="com.snc.change.collision"&gt;6349f4643cf1311068bcf327dfe37f55&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_2f73ee51d7010200d82ba1737e6103fd&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2023-09-22 17:01:53&lt;/sys_updated_on&gt;
        &lt;template/&gt;
        &lt;when&gt;before&lt;/when&gt;
    &lt;/sys_script&gt;
    &lt;sys_translated_text action="delete_multiple" query="documentkey=2f73ee51d7010200d82ba1737e6103fd"/&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:59:16</sys_created_on>
        <sys_id>27fd641183b01210c6695855eeaad3f9</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Clear Conflicts</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_27fd641183b01210c6695855eeaad3f9</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:59:16</sys_updated_on>
        <tablename>sys_script</tablename>
    </sys_metadata_link>
</record_update>
