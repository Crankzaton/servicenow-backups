<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition>current.name == 'glide.db.query.select_query_statement_size_threshold'</condition>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Validate Query Statement Size Threshold</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

 // Integer Bounds are very sensitive and any change in values should reflect on DBQueryExecutor.java.
 var lowerBound = 1024 * 1024; // 1 MB
 var higherBound = 32 * 1024 * 1024; // based on max_packet_size i.e., 32 MB
 
 if (!gs.hasRole('maint')) {
  gs.addErrorMessage(gs.getMessage("Only users with maint role can create|update|delete this property"));
  current.setAbortAction(true);
  return;
 }
 
 if (current.getValue("type") != "integer") {
  gs.addErrorMessage(gs.getMessage("Provided type value: {0} is not Integer", [GlideStringUtil.escapeHTML(current.getValue("type"))]));
  current.setAbortAction(true);
  return;
 }
  
 if (isNaN(current.value) || isNaN(parseInt(current.value))) {
  gs.addErrorMessage(gs.getMessage("Provided threshold value: {0} is not an integer", [GlideStringUtil.escapeHTML(current.value)]));
  current.setAbortAction(true);
  return;
 }
 
 if (parseInt(current.value) > parseInt(higherBound)) {
  gs.addErrorMessage(gs.getMessage("Provided threshold: {0} is above maximum threshold: {1}", [GlideStringUtil.escapeHTML(current.value), GlideStringUtil.escapeHTML(higherBound)]));
  current.setAbortAction(true);
  return;
 } else if (parseInt(current.value) < parseInt(lowerBound)) {
  gs.addErrorMessage(gs.getMessage("Provided threshold: {0} is below the minimum threshold: {1}", [GlideStringUtil.escapeHTML(current.value), lowerBound]));
  current.setAbortAction(true);
  return;
 }
 
})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:48:27</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>458bac9183701210c6695855eeaad37f</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Validate Query Statement Size Threshold</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_458bac9183701210c6695855eeaad37f</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:48:27</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=458bac9183701210c6695855eeaad37f"/>
</record_update>
