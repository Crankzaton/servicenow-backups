<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>a970ab0c24552510f8775fc2cb18d659</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;sn_entitlement.LicenseRoleTypeDAO&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;DAO class to retrieve data related to license_role_type table&lt;/description&gt;
        &lt;name&gt;LicenseRoleTypeDAO&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var LicenseRoleTypeDAO = Class.create();
LicenseRoleTypeDAO.prototype = {
    initialize: function() {},

    // returns an array of role types sys_ids that have equal or high privileges than given role type
    getRoleTypesWithEqualOrHighPrivileges: function(roleType) {
        var resultRoleTypeSysIds = [];
        var roleTypeGR = new GlideRecord(LicensingEngineDBConstants.LICENSE_ROLE_TYPE);
        roleTypeGR.addActiveQuery();
        roleTypeGR.orderByDesc(LicensingEngineDBConstants.ORDER);
        roleTypeGR.query();
        while (roleTypeGR.next()) {
            var queriedRoleType = roleTypeGR.getValue(LicensingEngineDBConstants.ID);
            var queriedRoleTypeSysId = roleTypeGR.getValue(LicensingEngineDBConstants.SYS_ID);
            if (queriedRoleType === roleType)
                resultRoleTypeSysIds.push(queriedRoleTypeSysId);

            else if (resultRoleTypeSysIds.length &gt; 0)
                resultRoleTypeSysIds.push(queriedRoleTypeSysId);
        }
        return resultRoleTypeSysIds;
    },

    type: 'LicenseRoleTypeDAO'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;maint&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2023-02-24 07:44:32&lt;/sys_created_on&gt;
        &lt;sys_id&gt;a970ab0c24552510f8775fc2cb18d659&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;LicenseRoleTypeDAO&lt;/sys_name&gt;
        &lt;sys_package display_value="Licensing Engine" source="sn_entitlement"&gt;bcadabf277f311109c62f5f3cb5a992a&lt;/sys_package&gt;
        &lt;sys_policy&gt;read&lt;/sys_policy&gt;
        &lt;sys_scope display_value="Licensing Engine"&gt;bcadabf277f311109c62f5f3cb5a992a&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_a970ab0c24552510f8775fc2cb18d659&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;maint&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2023-02-24 07:44:32&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 09:17:34</sys_created_on>
        <sys_id>92eff09d83341210c6695855eeaad355</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>LicenseRoleTypeDAO</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_92eff09d83341210c6695855eeaad355</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 09:17:34</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
