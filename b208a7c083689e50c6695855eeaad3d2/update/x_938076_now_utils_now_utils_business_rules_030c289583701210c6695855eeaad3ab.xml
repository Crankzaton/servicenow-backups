<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition>!(current.default_policy == previous.default_policy) || !(current.getValue(current.default_policy ) == previous.getValue(previous.default_policy ))</condition>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>DenyPoliciesUsingMFAFiltersInAuthContext</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {

    //Restrict policies using User Based MFA & Role Based MFA Filter in Policy Conditions to Auth Policy Context.
    var defaultPolicy = current.default_policy;
    var policyCriteria = new GlideAggregate("sys_authentication_policy_criteria_m2m");
    policyCriteria.addAggregate('COUNT');
    policyCriteria.addQuery('policy', current.getValue(defaultPolicy));
    //query element name for User Based MFA & Role Based MFA Filter
    policyCriteria.addQuery('sys_auth_filter_criteria.sys_id', 'IN', '6956fd56c7312010df1417b703c260dc,c326b116c7312010df1417b703c2601d');
    policyCriteria.addQuery('used', true);
    policyCriteria.query();

    if (policyCriteria.next() && parseInt(policyCriteria.getAggregate('COUNT')) > 0) {
        gs.addErrorMessage(gs.getMessage("Policies using User Based MFA and Role Based MFA Filters in Policy conditions cannot be added to Authentication Policy Context"));
        current.setAbortAction(true);
        return;
    }

})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:50:47</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>030c289583701210c6695855eeaad3ab</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>DenyPoliciesUsingMFAFiltersInAuthContext</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_030c289583701210c6695855eeaad3ab</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:50:47</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=030c289583701210c6695855eeaad3ab"/>
</record_update>
