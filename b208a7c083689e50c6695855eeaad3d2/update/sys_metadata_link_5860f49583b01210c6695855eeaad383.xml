<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>0a40b449a39b01100f6357fc26fcdaa3</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;sn_nb_action.ScriptingGeneratorTypeHandler&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;Handler for 'Scripting' Generator type&lt;/description&gt;
        &lt;name&gt;ScriptingGeneratorTypeHandler&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var ScriptingGeneratorTypeHandler = Class.create();
ScriptingGeneratorTypeHandler.prototype = Object.extendsObject(sn_nb_action.GeneratorTypeHandlerBase, {

    getId: function() {
        return Constants.GENERATOR_TYPE_SYS_ID.SCRIPTING;
    },

    getOutputSchema: function(param) {
        var scriptGr = param.inputs.script_include;
        if (scriptGr.isValidRecord &amp;&amp; scriptGr.isValidRecord()) {
            var scriptImplementation = NextBestActionUtil.getScriptingGeneratorForScript(scriptGr);
            if (scriptImplementation &amp;&amp; typeof scriptImplementation.getOutputSchema === "function") {
                try {
                    return scriptImplementation.getOutputSchema();
                } catch (e) {
                    var errorMessage = e.message;
                    var logger = new global.GSLog(sn_nb_action.Constants.PROP_LOG_LEVEL, 'ScriptingGeneratorTypeHandler');
                    logger.error('Error executing getOutputSchema of ' + scriptGr.getUniqueValue() + '. Error: ' + errorMessage);
                    return {
                        'status': sn_nb_action.Constants.STATUS_ERROR,
                        'errorCode': 40002,
                        'errorMessage': errorMessage
                    };
                }
            }
        }
        var errorDetails = new RAExceptionManager('INVALID_SCRIPT_INCLUDE');
        logger = new global.GSLog(sn_nb_action.Constants.PROP_LOG_LEVEL, 'ScriptingGeneratorTypeHandler');
        logger.error('Script include ' + scriptGr.getUniqueValue() + ' is invalid');
        return {
            'status': sn_nb_action.Constants.STATUS_ERROR,
            'errorCode': errorDetails.getCode(),
            'errorMessage': errorDetails.getMessage()
        };
    },

    getOutputs: function(param) {
        var scriptGr = param.inputs.script_include;
        if (scriptGr.isValidRecord &amp;&amp; scriptGr.isValidRecord()) {
            var scriptImplementation = NextBestActionUtil.getScriptingGeneratorForScript(scriptGr);
            if (scriptImplementation &amp;&amp; typeof scriptImplementation.getOutputs === "function") {
                var trimmedParam = {
                    contextRecord: param.contextRecord
                };
                try {
                    return scriptImplementation.getOutputs(trimmedParam);
                } catch (e) {
                    var errorMessage = res.error.message;
                    var logger = new global.GSLog(sn_nb_action.Constants.PROP_LOG_LEVEL, 'ScriptingGeneratorTypeHandler');
                    logger.error('Error executing getOutputs of ' + scriptGr.getUniqueValue() + '. Error: ' + errorMessage);
                    return {
                        'status': sn_nb_action.Constants.STATUS_ERROR,
                        'errorCode': 40002,
                        'errorMessage': errorMessage
                    };
                }
            }
        }
        var errorDetails = new RAExceptionManager('INVALID_SCRIPT_INCLUDE');
        logger = new global.GSLog(sn_nb_action.Constants.PROP_LOG_LEVEL, 'ScriptingGeneratorTypeHandler');
        logger.error('Script include ' + scriptGr.getUniqueValue() + ' is invalid');
        return {
            'status': sn_nb_action.Constants.STATUS_ERROR,
            'errorCode': errorDetails.getCode(),
            'errorMessage': errorDetails.getMessage()
        };
    },

    type: 'ScriptingGeneratorTypeHandler'
});]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2022-05-04 15:47:41&lt;/sys_created_on&gt;
        &lt;sys_id&gt;0a40b449a39b01100f6357fc26fcdaa3&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;4&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;ScriptingGeneratorTypeHandler&lt;/sys_name&gt;
        &lt;sys_package display_value="Recommended Actions" source="sn_nb_action"&gt;427fe83177221010d7159b71a91061e1&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Recommended Actions"&gt;427fe83177221010d7159b71a91061e1&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_0a40b449a39b01100f6357fc26fcdaa3&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2022-06-29 13:19:48&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:09:42</sys_created_on>
        <sys_id>5860f49583b01210c6695855eeaad383</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>ScriptingGeneratorTypeHandler</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_5860f49583b01210c6695855eeaad383</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:09:42</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
