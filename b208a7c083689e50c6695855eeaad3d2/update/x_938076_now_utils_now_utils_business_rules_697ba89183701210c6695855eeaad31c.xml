<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Interaction - On Closed</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {
    var chatLogger = new global.ChatLogger("", current.sys_id);
    var canSendMessages = new InteractionTypeUtil().canSendMessages(current);

    if (!current.channel_metadata_document) {
        chatLogger.log("Interaction - On Closed: channel_metadata_document field is empty");
        return;
    }

    if (!new global.UnifiedConversationUtil(current.channel_metadata_document).isInitialized()) {
        chatLogger.log("Interaction - On Closed: UDM conversation is not initialized");
        // In legacy mode, if there are no live agents available, the interaction could be closed directly
        // and no handoff will be created. The rest of logic should be skipped in that case.
        return;
    }

    var originalUser = gs.getSession().impersonate("system");
    var chatInteractionUtil = new ChatInteractionUtil();
    var requesterLanguage = chatInteractionUtil.getRequesterLanguage(current);
    //Use agent's language if requester closes the session and dynamic translation is ON
    var language = chatInteractionUtil.getDynamicTranslateLanguage(current);

    var conversation = sn_connect.Conversation.get(
        current.channel_metadata_document,
        current.channel_metadata_table);
    var loggingInfo = "";
    if (current.type == 'chat' || current.type == 'phone' || current.type == 'video') {
        if (originalUser == current.opened_for) {
            sendConversationRequesterMessage();
        } else if (originalUser == current.assigned_to) {
            sendConversationAgentMessage();
        } else {
            sendConversationSystemMessage();
        }
    } else if (current.type == 'messaging') {
        // only get the device type when its messaging since its an expensive db access
        var deviceType = conversation.getDeviceType();

        var isMweb = (deviceType.equalsIgnoreCase('mweb') || deviceType.equalsIgnoreCase('android') || deviceType.equalsIgnoreCase('ios'));
        var isSMS = deviceType.equalsIgnoreCase('sms');
        // if it is SMS, do not display any of these messages
        if (!isSMS) {
            if (originalUser == current.opened_for) {
                sendConversationRequesterMessage();
            } else if (originalUser == current.assigned_to) {
                sendConversationAgentMessage();
            } else {
                // if it is mweb, do not display the following message
                if (!isMweb) {
                    sendConversationSystemMessage();
                }
            }
        }
        // if it is an agent initiated SMS then send a closing message
        else if (current.direction == 'outbound') {
            var closingMessage = sn_cs.VASystemObject.getClosingMessage(conversation.getSysID());
            sendClosingConversationMessageSMS(closingMessage);
        }
    }
    chatLogger.log("Interaction - On Closed - Success, " + loggingInfo);
    gs.getSession().impersonate(originalUser);
    new SNC.ConnectListeners().supportSessionClosed(current.channel_metadata_document);

    function sendClosingConversationMessageSMS(msg) {
        if (canSendMessages) {
            conversation.sendMessage({
                body: gs.getMessageLang(msg, requesterLanguage),
                system: true
            });
        }
    }

    function sendConversationRequesterMessage() {
        if (canSendMessages) {
            conversation.sendMessage({
                body: gs.getMessageLang('{0} has ended the conversation.', language, [current.opened_for.getDisplayValue()]),
                visibilityType: 'agent_only',
                system: true,
                eventType: 'ChatEnded'
            });
        }
        loggingInfo = "requester " + current.opened_for.getDisplayValue() + " has ended the conversation";
    }

    function sendConversationAgentMessage() {
        if (canSendMessages) {
            var agentName = sn_connect.Conversation.getAgentName(originalUser);
            chatInteractionUtil.sendSystemMessage(conversation, '{0} has ended the conversation.', requesterLanguage, language, agentName, null, 'ChatEnded');
        }
        loggingInfo = "agent " + agentName + " has ended the conversation";
    }

    function sendConversationSystemMessage() {
        if (canSendMessages) {
            chatInteractionUtil.sendSystemMessage(conversation, 'The conversation has ended.', requesterLanguage, language, null, null, 'ChatEnded');
        }
        loggingInfo = "System has ended the conversation";
    }
})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:48:13</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>697ba89183701210c6695855eeaad31c</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Interaction - On Closed</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_697ba89183701210c6695855eeaad31c</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:48:13</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=697ba89183701210c6695855eeaad31c"/>
</record_update>
