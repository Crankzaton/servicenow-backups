<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>493d099477701110797c6909be5a995a</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_fix"&gt;
    &lt;sys_script_fix action="INSERT_OR_UPDATE"&gt;
        &lt;before&gt;false&lt;/before&gt;
        &lt;description&gt;From SP5, we have provide a property to enable the attachment encryption module picker on the UI. This has to be disabled when the previous versions are SP1/2/3/4&lt;/description&gt;
        &lt;name&gt;Attachment module picker fix script&lt;/name&gt;
        &lt;record_for_rollback&gt;false&lt;/record_for_rollback&gt;
        &lt;script&gt;&lt;![CDATA[(function () {
    gs.info(gs.getMessage('Attachment property updater: Executing the attachment property updater script'));
    if (pm.isZboot()) {
        gs.info(gs.getMessage('Attachment property updater: returning since its zboot'));
      return;
    }
   var SD_RELEASE = 'sandiego';
    var PROP_NAME = "com.glide.encryption.enable_attachment_key_ui";
    var PROP_STATE = PROP_NAME + ".state";
   // 1. Get the previous version of glide from sys_upgrade_history table
   var previousVersionAndPatch = getUpgradeFromDetails();
   if (!previousVersionAndPatch) {
        gs.info(gs.getMessage('Attachment property updater: Invalid upgrade details found: {0}', previousVersionAndPatch));
      return;
   }
   // 2. Parse and get the release, patch details of from, to versions
   var previousVersionInfo = parseBuildVersionAndPatch(previousVersionAndPatch);
   if (!isValidVersionInfo(previousVersionInfo)) {
        gs.info(gs.getMessage('Attachment property updater: Invalid previous version, patch info: {0}', previousVersionAndPatch));
      return;
   }
    // 3. Check if its a valid SD patch 5 and below
    if (!isSDPatchBelow6(previousVersionInfo)) {
        gs.info(gs.getMessage('Attachment property updater: Not a valid sandiego patch to update enable_attachment_key_ui: {0}', JSON.stringify(previousVersionInfo)));
      return;
   }
    if (gs.getProperty(PROP_STATE) == 'true') {
        gs.info(gs.getMessage('Attachment property updater: User set the property enable_attachment_key_ui to true'));
		// Delete the temp sys_property set by us
		deleteTempSysProperty(PROP_STATE);
        return;
    }
   gs.setProperty(PROP_NAME, false);
    gs.info(gs.getMessage('Attachment property updater: Updated the property enable_attachment_key_ui for the version: {0}', JSON.stringify(previousVersionInfo)));
   // Util methods
   function isValidVersionInfo(versionInfo) {
      return versionInfo &amp;&amp; versionInfo.buildVersion &amp;&amp; versionInfo.buildPatch;
   }
    function isSDPatchBelow6(previousVersionInfo) {
      return previousVersionInfo.buildVersion == SD_RELEASE &amp;&amp; previousVersionInfo.buildPatch &lt; 6;
   }
   function parseBuildVersionAndPatch(buildTag) {
      var match = new RegExp("glide-(.*?)-.*__patch(.*?)-.*", "g").exec(buildTag);
      if (!match)
         return null;
      return {
         'buildVersion': match[1],
         'buildPatch': match[2]
      };
   }
   function getUpgradeFromDetails() {
      var gr = new GlideRecord('sys_upgrade_history');
      gr.addEncodedQuery('history_type=upgrade^ORDERBYDESCupgrade_started');
      gr.setLimit(1);
      gr.query();
      if (!gr.next())
         return null;
      return gr.getValue('from_version');
   }
	function deleteTempSysProperty(propName) {
        var gr = new GlideRecord('sys_properties');
        gr.addQuery('name', propName);
        gr.query();
        if (!gr.next())
            return;
		gr.deleteRecord();
    }
})();]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_fix&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;maint&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2022-07-16 00:05:09&lt;/sys_created_on&gt;
        &lt;sys_id&gt;493d099477701110797c6909be5a995a&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;22&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;Attachment module picker fix script&lt;/sys_name&gt;
        &lt;sys_package display_value=""&gt;d6375ef01b8a21109c18a9f9bc4bcb45&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_fix_493d099477701110797c6909be5a995a&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;maint&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2022-07-20 03:48:27&lt;/sys_updated_on&gt;
        &lt;unloadable&gt;false&lt;/unloadable&gt;
    &lt;/sys_script_fix&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:20:51</sys_created_on>
        <sys_id>2be2fc5d83b01210c6695855eeaad361</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Attachment module picker fix script</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_2be2fc5d83b01210c6695855eeaad361</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:20:51</sys_updated_on>
        <tablename>sys_script_fix</tablename>
    </sys_metadata_link>
</record_update>
