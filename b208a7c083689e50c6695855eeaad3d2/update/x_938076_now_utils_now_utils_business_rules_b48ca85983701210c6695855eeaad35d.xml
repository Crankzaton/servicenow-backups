<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition>current.user.user_name == 'guest' &amp;&amp; pm.isActive('com.glide.encryption')</condition>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Prevent guest user encryption context</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
 // Property 'glide.encryption.context.allow_guest' will sunset in the N release
 // Behavior after N will be to always disallow, with no available override
 if (GlideProperties.getBoolean('glide.encryption.context.allow_guest', false))
  return;

 if (roleHasEncryptionContext())
  disallowAddRole();

 function roleHasEncryptionContext() {
  // Check the current role
  if (current.role.encryption_context)
   return true;

  // If the current role doesn't have it, check all of its contained roles
  var currentRole = ''+current.role;
  var rm = new SNC.RoleManagementAPI();
  var roleSet = rm.findAllContainedRolesForRole(currentRole); //Set<String>
  var it = roleSet.iterator();
  
  var roleChunk = [];
  var containedRole;
  while (it.hasNext()) {
   containedRole = ''+it.next();
   if (containedRole === currentRole)
    continue;  // The Set contains the original role, skip since it was already checked

   roleChunk.push(containedRole);
   if (roleChunk.length < 100)
    continue;

   if (rolesHaveEncryptionContext(roleChunk))
    return true;

   roleChunk = [];
  }

  // Handle the last chunk if necessary
  return roleChunk.length ? rolesHaveEncryptionContext(roleChunk) : false;
 }
 
 function rolesHaveEncryptionContext(roles) {
  var gr = new GlideRecord('sys_user_role');
  gr.addQuery('sys_id', 'IN', roles);
  gr.addNotNullQuery('encryption_context');
  gr.query();

  return gr.hasNext();
 }

 function disallowAddRole() {
  gs.addErrorMessage(gs.getMessage("Adding a role containing an Encryption Context to the guest user is not allowed"));
  current.setAbortAction(true);
 }

})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:52:48</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>b48ca85983701210c6695855eeaad35d</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Prevent guest user encryption context</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_b48ca85983701210c6695855eeaad35d</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:52:48</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=b48ca85983701210c6695855eeaad35d"/>
</record_update>
