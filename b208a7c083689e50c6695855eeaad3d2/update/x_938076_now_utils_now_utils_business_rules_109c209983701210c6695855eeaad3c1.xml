<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition>current.component == "2f00be66733203001923054dfff6a76c"</condition>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Validate user field and reference table</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

 var abortTransaction = false;
 if(current.attrs.primary_user && current.attrs.primary_user != "") {
  var primary_user_attr = current.attrs.primary_user;
  var primary_ref_table_attr = current.attrs.primary_reference_table;
    
  var gr = new GlideRecord(current.getValue("table"));
  var table_column_name_primary = gr.getElement(primary_user_attr).getReferenceTable();
  if(table_column_name_primary != primary_ref_table_attr) {
   gs.addErrorMessage(gs.getMessage("Primary reference table and primary user should refer to the same table"));
   abortTransaction = true;
  }
  
 }
 
 if(current.attrs.secondary_user && current.attrs.secondary_user != "") {
  var secondary_user_attr = current.attrs.secondary_user;
  var secondary_ref_table_attr = current.attrs.secondary_reference_table;
  
  var grs = new GlideRecord(current.getValue("table"));
  var table_column_name_secondary = grs.getElement(secondary_user_attr).getReferenceTable();
  if(table_column_name_secondary != secondary_ref_table_attr) {
   gs.addErrorMessage(gs.getMessage("Secondary reference table and secondary user should refer to the same table"));
   abortTransaction = true;
  }
 }
        if(abortTransaction == true) { 
  current.setAbortAction(true);
 }
})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:53:03</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>109c209983701210c6695855eeaad3c1</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Validate user field and reference table</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_109c209983701210c6695855eeaad3c1</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:53:03</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=109c209983701210c6695855eeaad3c1"/>
</record_update>
