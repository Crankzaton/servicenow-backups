<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>9491eeb453010110b569ddeeff7b1275</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;public&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;sn_sow.SOWCollabInfo&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;API for obtaining list of agents participated in collab chat&lt;/description&gt;
        &lt;name&gt;SOWCollabInfo&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var SOWCollabInfo = Class.create();
SOWCollabInfo.prototype = {

    TABLES: {
        SN_TCM_COLLAB_HOOK_MS_TEAMS_CHAT: 'sn_tcm_collab_hook_ms_teams_chat'
    },

    initialize: function() {},

    isTeamsPluginActive: function() {
        return (GlidePluginManager.isActive('com.snc.ms_teams') &amp;&amp; GlidePluginManager.isActive('com.snc.tcm_collab_hook'));
    },

    getCollaboratorsInfo: function(table, sysId) {
        if (this.isTeamsPluginActive()) {
            var collaborators = [];
            var arrayUtil = new global.ArrayUtil();
            var collabGr = new GlideRecord(this.TABLES.SN_TCM_COLLAB_HOOK_MS_TEAMS_CHAT);
            collabGr.addQuery('source_table', table);
            collabGr.addQuery('source', sysId);
            collabGr.addNotNullQuery('users');
            collabGr.query();
            while (collabGr.next()) {
                var users = collabGr.users.split(",");
                users.forEach(function(user) {
                    if (!arrayUtil.contains(collaborators, user)) {
                        collaborators.push(user);
                    }
                });

            }

            return collaborators;
        }
        else
            return [];

    },

    type: 'SOWCollabInfo'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2022-01-12 08:28:27&lt;/sys_created_on&gt;
        &lt;sys_id&gt;9491eeb453010110b569ddeeff7b1275&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;2&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;SOWCollabInfo&lt;/sys_name&gt;
        &lt;sys_package display_value="Service Operations Workspace Core" source="sn_sow"&gt;5ca1bcb3733320103e366238edf6a706&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Service Operations Workspace Core"&gt;5ca1bcb3733320103e366238edf6a706&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_9491eeb453010110b569ddeeff7b1275&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2022-01-28 09:13:36&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:45:45</sys_created_on>
        <sys_id>9ca8f85183341210c6695855eeaad37c</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>SOWCollabInfo</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_9ca8f85183341210c6695855eeaad37c</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:45:45</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
