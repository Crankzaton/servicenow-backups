<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>02a6da58c7312010df1417b703c260d1</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="sys_script"&gt;
    &lt;sys_script action="INSERT_OR_UPDATE"&gt;
        &lt;abort_action&gt;false&lt;/abort_action&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;action_delete&gt;false&lt;/action_delete&gt;
        &lt;action_insert&gt;false&lt;/action_insert&gt;
        &lt;action_query&gt;false&lt;/action_query&gt;
        &lt;action_update&gt;true&lt;/action_update&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;add_message&gt;false&lt;/add_message&gt;
        &lt;advanced&gt;true&lt;/advanced&gt;
        &lt;change_fields&gt;false&lt;/change_fields&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;collection&gt;sys_auth_policy_context&lt;/collection&gt;
        &lt;condition&gt;current.getUniqueValue() == '62c7e85773112010616ca9843cf6a78e'&lt;/condition&gt;
        &lt;description/&gt;
        &lt;execute_function&gt;false&lt;/execute_function&gt;
        &lt;filter_condition/&gt;
        &lt;is_rest&gt;false&lt;/is_rest&gt;
        &lt;message/&gt;
        &lt;name&gt;PreAuthContextPolicyTypeValidation&lt;/name&gt;
        &lt;order&gt;100&lt;/order&gt;
        &lt;priority&gt;100&lt;/priority&gt;
        &lt;rest_method/&gt;
        &lt;rest_method_text/&gt;
        &lt;rest_service/&gt;
        &lt;rest_service_text/&gt;
        &lt;rest_variables/&gt;
        &lt;role_conditions/&gt;
        &lt;script&gt;&lt;![CDATA[(function executeRule(current, previous /*null when async*/ ) {

    var defaultPolicy = current.default_policy;

    var policyId = current.allow_policy;

    if (defaultPolicy == 'deny_policy')
        policyId = current.deny_policy;

    isPolicyTypeAllowed(policyId);

    function isPolicyTypeAllowed(authPolicy) {
        var policyType = authPolicy.type;
        if (policyType == 'post_auth') {
            gs.addErrorMessage(gs.getMessage("Any policy bound to 'Pre Authentication Policy Context' doesn't allow filter criteria other than the {0}, {1} and {2}. Kindly update the policy conditions or use a different policy that uses {0} criteria, {1} and {2}.", ["IP Filter", "Trusted Mobile App Filter", "Location Based Filter"]));
            current.setAbortAction(true);
            return;
        }
    }

    /*
		Validate for the Default Policy field changes or Validate for the Policy changes only if the policy reference changes
		This handles below two use cases: 
		1) Default Policy field changes from allow to deny or vice versa in Pre-Auth Context
		2) Policy Reference change in Pre-Auth context
    */
    if (current.default_policy.changes() || (defaultPolicy == 'allow_policy' &amp;&amp; current.allow_policy.changes()) || (defaultPolicy == 'deny_policy' &amp;&amp; current.deny_policy.changes())) {
        // send the default and the corresponding policy
        try {
            var isValid = SNC.AuthPolicyIPUtil.validateDefaultPolicyOptionOrPolicyRefChange(defaultPolicy, policyId);
            // abort if session will be blocked
			if (!isValid) {
                gs.addErrorMessage(gs.getMessage("Current session may get blocked by the attached Authentication policy due to this operation. Aborting the operation."));
                current.setAbortAction(true);
				return;
            }
        } catch (ex) {
            message = "Exception while updating the Default Policy or the Policy references in Pre-Auth Context.";
            message += ex.message;
            gs.error(message);
        }
        
    }

})(current, previous);]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2021-01-15 08:49:02&lt;/sys_created_on&gt;
        &lt;sys_domain&gt;global&lt;/sys_domain&gt;
        &lt;sys_domain_path&gt;/&lt;/sys_domain_path&gt;
        &lt;sys_id&gt;02a6da58c7312010df1417b703c260d1&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;13&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;PreAuthContextPolicyTypeValidation&lt;/sys_name&gt;
        &lt;sys_overrides/&gt;
        &lt;sys_package display_value="Adaptive Authentication" source="com.snc.adaptive_authentication"&gt;ddd81f9b47220210cd4e1ce4316d43d0&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_02a6da58c7312010df1417b703c260d1&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2021-06-09 20:45:46&lt;/sys_updated_on&gt;
        &lt;template/&gt;
        &lt;when&gt;before&lt;/when&gt;
    &lt;/sys_script&gt;
    &lt;sys_translated_text action="delete_multiple" query="documentkey=02a6da58c7312010df1417b703c260d1"/&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:55:46</sys_created_on>
        <sys_id>dc3da81d83701210c6695855eeaad325</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>PreAuthContextPolicyTypeValidation</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_dc3da81d83701210c6695855eeaad325</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:55:46</sys_updated_on>
        <tablename>sys_script</tablename>
    </sys_metadata_link>
</record_update>
