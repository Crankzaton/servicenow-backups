<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>SNC Release Complete</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[gs.log("SNC Release Complete starting");

var msg = 'Release '+current.name.getDisplayValue()+' for Product ' + current.product.getDisplayValue() + ' is complete';
closeRelatedGivenRelease(current, msg);
postDSL(current);

gs.log("SNC Release Complete ending");

// Find all related problems and close them
function closeRelatedGivenRelease(me, msg) {
 var features = new GlideRecord('release_feature');
 features.addQuery('release', '=', me.sys_id);
 features.query();
 while (features.next()) {
  closeRelatedGivenFeature(features, msg);
 }
}


// Find related problems for a feature and close them
function closeRelatedGivenFeature(me, msg) {
 if (!me.rfc.isNil()) {
  var rfc = new GlideRecord('change_request');
  if (rfc.get('sys_id', me.rfc)) {
   var chgReq = new ChangeRequest(rfc);
   if (!chgReq.isClosed()) {
    var notes = rfc.close_notes.getDisplayValue();
    notes = notes + '\n' + (JSUtil.notNil(msg) ? msg : gs.getMessage("Closed"));
    rfc.close_notes =  notes;
    chgReq.close();
    rfc.update();
   }
   if (!pm.isActive('com.snc.best_practice.problem.madrid.state_model'))
    closeRelatedGivenChange(rfc, msg);
  }
 }
}

// Find related problems for a change_request and close them
function closeRelatedGivenChange(me, msg) {
 var problems = new GlideRecord('problem');
 problems.addQuery('rfc', '=', me.sys_id);
 problems.query();
 while (problems.next()) {
  problems.problem_state.setValue(4);
  var notes = problems.close_notes.getDisplayValue();
  notes = notes + '\n' + msg;
  problems.close_notes.setValue(notes);
  problems.update();
 }
}

// Post all entries in the Definitive Software Library
function postDSL(me) {
 var relatedCI = new GlideRecord('release_cis');
 relatedCI.addQuery('release', '=', me.sys_id);
 relatedCI.query();
 while (relatedCI.next()) {
  gs.print("updating using ci "+relatedCI.ci_item);
  postDSLGivenCI(relatedCI.ci_item, me.sys_id);
 }
 var features = new GlideRecord('release_feature');
 features.addQuery('release', '=', me.sys_id);
 features.query();
 while (features.next()) {
  postDSLGivenFeature(features, me.sys_id);
 }
}

function postDSLGivenFeature(me, release) {
 if (!me.rfc.isNil()) {
  var rfc = new GlideRecord('change_request');
  if (rfc.get('sys_id', me.rfc)) {
   if (!rfc.cmdb_ci.isNil()) {
    postDSLGivenCI(rfc.cmdb_ci, release);
   }
  }
 }
}



// Post all entries in the Definitive Software Library
function postDSLGivenCI(ciID, release) {
 var cmdbci = new GlideRecord('cmdb_ci');
 if (cmdbci.get('sys_id', ciID)) {
  var dsl = new GlideRecord('dsl');
  dsl.addQuery('ci', '=', cmdbci.sys_id);
  dsl.query();
  while (dsl.next()) {
   dsl.pending = release;
   dsl.pending_date = gs.now();
   dsl.update();
  }
 }
}]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:52:53</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>fd8c2c5983701210c6695855eeaad373</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>SNC Release Complete</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_fd8c2c5983701210c6695855eeaad373</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:52:53</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=fd8c2c5983701210c6695855eeaad373"/>
</record_update>
