<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>a75bea2f771101107cb28babbe5a9978</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.Device_Trust_Custom&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;Device_Trust_Custom&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[gs.include("PrototypeServer");

var Device_Trust_Custom = Class.create();
Device_Trust_Custom.prototype = Object.extend(new Device_Trust_Internal(), {
    initialize: function() {
        Device_Trust_Internal.prototype.initialize.call(this);
    },

    /*
    process: function(args) {
        try {
            if (!args || args.length == 0) {
                this.debug('Received null or empty arguments');
                return;
            }
            this.debug('Received arguments are=' + args);
            var token = args.get('token');
            var tokenFrom = args.get('token_from');
            var isRegistration = args.get('is_registration');
            var isValidToken = this.isValidToken(token, tokenFrom, isRegistration);
            if (!isValidToken)
                this.error('Token validation failed. Check the hash and timestamp fields.');

            // Log the events.
            SNC.DeviceRegistrationUtils.genrateDeviceEventFromScript(token, isRegistration, isValidToken);
            return isValidToken;
        } catch (e) {
            this.error(e.message);
        }
    },
	*/

    type: 'Device_Trust_Custom'
});]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2022-02-02 08:44:23&lt;/sys_created_on&gt;
        &lt;sys_id&gt;a75bea2f771101107cb28babbe5a9978&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;3&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;Device_Trust_Custom&lt;/sys_name&gt;
        &lt;sys_package display_value="Adaptive Authentication" source="com.snc.adaptive_authentication"&gt;ddd81f9b47220210cd4e1ce4316d43d0&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_a75bea2f771101107cb28babbe5a9978&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2022-02-28 04:46:19&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:46:45</sys_created_on>
        <sys_id>cfd8b89183341210c6695855eeaad349</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Device_Trust_Custom</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_cfd8b89183341210c6695855eeaad349</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:46:45</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
