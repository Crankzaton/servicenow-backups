<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>85e9c97553232010c440ddeeff7b12c8</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_fix"&gt;
    &lt;sys_script_fix action="INSERT_OR_UPDATE"&gt;
        &lt;before&gt;true&lt;/before&gt;
        &lt;description&gt;When com.glide.cs plugin is already installed, but the AI search fallback option for the OOB profile does not exist, 
This script creates a new  system property  - remove_oob_ai_search_fallback_option_after_upgrade.
This new property will be used to remove a new AI search fallback option installed by the upgrade.
This is for DEF0203714&lt;/description&gt;
        &lt;name&gt;Create AISearch Fallback Option Property&lt;/name&gt;
        &lt;record_for_rollback&gt;false&lt;/record_for_rollback&gt;
        &lt;script&gt;&lt;![CDATA[var LOG_ID = '[Create AISearch Fallback Option Property]';
var PROP_NAME = 'remove_oob_ai_search_fallback_option_after_upgrade';
var PLUGIN = 'com.glide.cs.topics';
var OOB_CONTEXT_PROFILE_ID = '3a33973653211010a813ddeeff7b125a';

process();

function process() {

	// check if the plugin is installed or not
	// If the plugin is not installed, nothing to worry about.
	if (!isPluginInstalled(PLUGIN)) {
		gs.info('{0}:The plugin:"{1}" is not installed. No need to proceed', [LOG_ID, PLUGIN]);
		return;
	}
	
	// if the property already exists, remove the property. this should not happen.
	if (foundProperty() &amp;&amp; removeProperty())
		gs.info('{0}:The property already existed. Removed the property:"{1}"', [LOG_ID, PROP_NAME]);
	
	//This is the case for if the fallback option value already exists, but the property value does not exist.
	//In this case, we need to keep the option value.
	if (foundAISearchFallbackOption()) {
		gs.info('{0}:Found the value for AISearch fallback option, This value for the option won\'t be removed',[LOG_ID, PROP_NAME]);
		return;
	}
	
	// 1. plugin is installed,
	// 2. The value for AI Search fallback option is not set
	// In this case, the fallback option needs to be removed after the upgrade.
	// In order to do that, a new property needs to be created. 
	// After the upgrade process, the property will be read, and used to remove the fallback option value
	if(!gs.nil(createProperty()))
		gs.info('{0}:The property-"{1}" is now created to remove AISearch fallback option after the upgrade', [LOG_ID, PROP_NAME]);
}

function isPluginInstalled(plugin) {
	// check if the plugin is installed.
	var pluginGr = new GlideRecord('sys_plugins');
	pluginGr.addActiveQuery();
	pluginGr.addQuery('source', plugin);
	pluginGr.query();

	return pluginGr.next();
}

function foundAISearchFallbackOption() {
	
	var TABLE_NAME = 'sys_cs_context_profile_topic';
	
	// if the table does not exist, return false.
	if(!gs.tableExists(TABLE_NAME))
		return false;
	
	var gr = new GlideRecord(TABLE_NAME);
	
	// the default chat OOB propfile
	gr.addQuery('context_profile', OOB_CONTEXT_PROFILE_ID);
	gr.addQuery('topic_type', 'ai_search_fallback');
	gr.addNotNullQuery('topic');
	gr.query();
	
	return gr.next();
}

function foundProperty() {
	return !gs.nil(gs.getProperty(PROP_NAME));
}

function createProperty(){
	var gr = new GlideRecord('sys_properties');
	gr.setValue('name', PROP_NAME);
	gr.setValue('value', "true");
	return gr.insert();
}

function removeProperty() {
	var gr = new GlideRecord('sys_properties');
	gr.addQuery('name', PROP_NAME);
	gr.query();
	
	if(gr.next())
		return gr.deleteRecord();
	
	return false;
}]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_fix&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2021-04-16 19:45:29&lt;/sys_created_on&gt;
        &lt;sys_id&gt;85e9c97553232010c440ddeeff7b12c8&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;45&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;Create AISearch Fallback Option Property&lt;/sys_name&gt;
        &lt;sys_package display_value="Glide Conversation Server" source="com.glide.cs"&gt;ad7df0203c75311068bcf327dfe37f75&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_fix_85e9c97553232010c440ddeeff7b12c8&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2021-04-20 17:51:21&lt;/sys_updated_on&gt;
        &lt;unloadable&gt;false&lt;/unloadable&gt;
    &lt;/sys_script_fix&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:22:26</sys_created_on>
        <sys_id>fe4330dd83b01210c6695855eeaad305</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Create AISearch Fallback Option Property</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_fe4330dd83b01210c6695855eeaad305</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:22:26</sys_updated_on>
        <tablename>sys_script_fix</tablename>
    </sys_metadata_link>
</record_update>
