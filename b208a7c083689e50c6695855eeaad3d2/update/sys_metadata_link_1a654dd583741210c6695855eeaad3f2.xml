<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>e529840977d321105679bcc8ca5a99a8</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_fix"&gt;
    &lt;sys_script_fix action="INSERT_OR_UPDATE"&gt;
        &lt;before&gt;false&lt;/before&gt;
        &lt;description&gt;Analytics Migrate User Consent Decisions&lt;/description&gt;
        &lt;name&gt;Analytics Migrate User Consent Decisions&lt;/name&gt;
        &lt;record_for_rollback&gt;true&lt;/record_for_rollback&gt;
        &lt;script&gt;&lt;![CDATA[gs.info("Analytics User Consent Decisions Migration Started");
var startTime = new GlideDateTime();
gs.info("Start Time: " + startTime);

// Query old consent records ordered by username
var sourceConsentGR = new GlideRecord('m2m_user_consent_info');
sourceConsentGR.orderBy('username');
sourceConsentGR.query();

var userConsentDecisionMap = new Packages.java.util.HashMap();
var usernameList = [];
var maxtime;
var prevUserName = null;

while (sourceConsentGR.next()) {
    var currUserName = sourceConsentGR.username.toString();

    if (currUserName !== prevUserName) {
        // Assign current values to previous record.
        maxtime = sourceConsentGR.getValue('consented_date');
        
        // Save user's first decision that is found
        var newUserDecision = {};
        newUserDecision.user_name = sourceConsentGR.username.toString();
        newUserDecision.region = sourceConsentGR.region.toString();
        newUserDecision.user_consent_decision = sourceConsentGR.getValue('user_consented_to_tracking_usage');
        newUserDecision.user_consented_date = sourceConsentGR.getValue('consented_date');
        userConsentDecisionMap.put(sourceConsentGR.username.toString(), newUserDecision);

        // Add to list of names as this is the first appearance of this username
        usernameList.push(sourceConsentGR.username.toString());
    } else {
        var currUserConsentDate = sourceConsentGR.getValue('consented_date').toString();

        // Use most recent entry available for the user
        if (new GlideDateTime(currUserConsentDate).after(new GlideDateTime(maxtime))) {
            maxtime = currUserConsentDate;

            var replaceUserDecision = {};
            replaceUserDecision.user_name = sourceConsentGR.username.toString();
            replaceUserDecision.region = sourceConsentGR.region.toString();
            replaceUserDecision.user_consent_decision = sourceConsentGR.getValue('user_consented_to_tracking_usage');
            replaceUserDecision.user_consented_date = currUserConsentDate;
            userConsentDecisionMap.put(sourceConsentGR.username.toString(), replaceUserDecision);
        }
    }

    // Assign current name for next iteration.
    prevUserName = currUserName;
}

// Skip insertion logic if there are no records to migrate
if (usernameList.length &gt; 0) {

    var sysUserGR = new GlideRecord('sys_user');
    sysUserGR.addQuery('user_name', 'IN', usernameList);
    sysUserGR.query();

    var migratedUsersCount = 0;
    var targetConsentDecisionGR = new GlideRecord('sys_analytics_user_consent_decision');
    targetConsentDecisionGR.setWorkflow(false);
    targetConsentDecisionGR.initialize();

    while (sysUserGR.next()) {
        var userConsentDecisionForInsert = userConsentDecisionMap.get(sysUserGR.user_name.toString());
        targetConsentDecisionGR.user = sysUserGR.sys_id;
        targetConsentDecisionGR.analytics_consent_policy = getPolicy(userConsentDecisionForInsert.region);
        targetConsentDecisionGR.decision = getDecision(userConsentDecisionForInsert.user_consent_decision);
        targetConsentDecisionGR.date = userConsentDecisionForInsert.user_consented_date;
        targetConsentDecisionGR.migrated_consent_date = userConsentDecisionForInsert.user_consented_date;
        targetConsentDecisionGR.insertLazy();
        migratedUsersCount++;
    }

    gs.info("Analytics User Consent Decisions Migration: If not already migrated, " + migratedUsersCount + " users would be migrated shortly in the background");
}

var endTime = new GlideDateTime();
gs.info("End Time: " + endTime);
gs.info("Time Taken: " + gs.dateDiff(startTime, endTime, true));
gs.info("Analytics User Consent Decisions Migration Ended");


function getPolicy(region) {
    if (region === "EU") {
        return "87f9b519773311105679bcc8ca5a9922"; // Explicit Opt In
    } else if (region === "US") {
        return "ef0bb519773311105679bcc8ca5a99ad"; // No Consent Required
    } else {
        return "562bf159773311105679bcc8ca5a9983"; // Notice
    }
}


function getDecision(consentNeeded) {
    return consentNeeded === "Y";
}]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_fix&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;maint&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2023-06-06 05:58:54&lt;/sys_created_on&gt;
        &lt;sys_id&gt;e529840977d321105679bcc8ca5a99a8&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;1&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;Analytics Migrate User Consent Decisions&lt;/sys_name&gt;
        &lt;sys_package display_value="User Experience Analytics" source="com.glide.appsee"&gt;2444f4a83c31311068bcf327dfe37f2c&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_fix_e529840977d321105679bcc8ca5a99a8&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;maint&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2023-06-20 05:58:54&lt;/sys_updated_on&gt;
        &lt;unloadable&gt;false&lt;/unloadable&gt;
    &lt;/sys_script_fix&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 09:41:35</sys_created_on>
        <sys_id>1a654dd583741210c6695855eeaad3f2</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Analytics Migrate User Consent Decisions</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_1a654dd583741210c6695855eeaad3f2</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 09:41:35</sys_updated_on>
        <tablename>sys_script_fix</tablename>
    </sys_metadata_link>
</record_update>
