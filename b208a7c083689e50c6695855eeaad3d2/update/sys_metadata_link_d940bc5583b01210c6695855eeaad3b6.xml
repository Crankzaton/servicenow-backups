<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>0510a08ceb5e0110da1861c59c522841</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;sn_oe_sfs.CIListRecordPropsMetadata&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;CIListRecordPropsMetadata&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var CIListRecordPropsMetadata = Class.create();
CIListRecordPropsMetadata.prototype = {
    initialize: function() {},
	EXPERIENCE_PATH: '/now/conversation/settings/', 
    SUPPORTED_CUSTOM_FIELDS: {
        /*
         * Configuration for all fields per table which are not supported OOB UIB Forms 
         * Format
         * &lt;table_name&gt;: {
         * 	&lt;[script | slushbucket]&gt;:{
         * 		'field_name': Name of the field in the table
         * 		'field_label': Field label to be displayed in the form,
         * 		'field_data_source': Default list to be populated. Not applicable for script types
         * 	}
         * }
         *
         * Example:
         * 'sys_script_include': {
         *     'script': {
         *         'field_name': 'script',
         *         'field_label': 'Script',
         *         'field_data_source': null
         *     }
         * }
         */

        'quickactions_workspace_action': {
            'slushbucket': {
                'field_name': 'apply_to_groups',
                'field_label': gs.getMessage('Apply to groups'),
                'field_data_source': (function() {
                    try {
                        return new global.QuickActionGroupSlushBucketUtility().fetchGroups();
                    } catch (e) {
                        return [];
                    }
                })(),
                'field_data': null,
                'field_dependent': 'apply_to_all_groups=false',
                'mandatory': false
            }
        },
        'sys_cs_auto_resolution_configuration': {
            'slushbucket': {
                'field_name': 'training_language',
                'field_label': gs.getMessage('Training language'),
                'field_data_source': (function() {
                    try {
                        return new global.AutoResolutionLanguageChoiceListBuilder().getSupportedLanguagesForUIB();
                    } catch (e) {
                        return [];
                    }
                })(),
                'field_data': null,
                'field_dependent': null,
                'mandatory': true
            }
        },
        'quickactions_action': {
            'slushbucket': {
                'field_name': 'apply_to_groups',
                'field_label': gs.getMessage('Apply to groups'),
                'field_data_source': (function() {
                    try {
                        return new global.QuickActionGroupSlushBucketUtility().fetchGroups();
                    } catch (e) {
                        return [];
                    }
                })(),
                'field_data': null,
                'field_dependent': 'apply_to_all_groups=false',
                'mandatory': false
            },
            'script': {
                'field_name': 'script',
                'field_label': gs.getMessage('Script'),
                'field_data_source': null,
                'field_data': null,
                'field_dependent': null,
                'mandatory': false
            }
        },
        'sys_cs_context_profile': {
            'script': {
                'field_name': 'condition_script',
                'field_label': gs.getMessage('Script'),
                'field_data_source': null,
                'field_data': null,
                'field_dependent': 'condition_mode=advanced',
                'mandatory': false
            }
        },
        'sys_cs_virtual_agent_context': {
            'script': {
                'field_name': 'value',
                'field_label': gs.getMessage('Value'),
                'field_data_source': null,
                'field_data': null,
                'field_dependent': null,
                'mandatory': false
            }
        },
        'sys_cs_survey': {
            'script': {
                'field_name': 'condition_script',
                'field_label': gs.getMessage('Script'),
                'field_data_source': null,
                'field_data': null,
                'field_dependent': 'condition_mode=advanced',
                'mandatory': false
            }
        },
        'sys_cs_context_topic': {
            'script': {
                'field_name': 'condition_script',
                'field_label': gs.getMessage('Script'),
                'field_data_source': null,
                'field_data': null,
                'field_dependent': 'condition_mode=advanced',
                'mandatory': false
            }
        }

    },
    DEFAULT_FORM: 'record',
    DEFAULT_LIST: 'list',
    CUSTOM_TAG: '-custom-',
    DEFAULT_LANDING_ROUTE: 'general',
    DEFAULT_NEW_RECORD_LABEL: gs.getMessage('New Record'),
    DEFAULT_EMPTY_RECORD_LABEL: gs.getMessage('Record'),
    CRUMBS: {
        'general': {
            page: 'general',
            label: gs.getMessage('General'),
        },
        'agent_chat': {
            page: 'agent-chat',
            label: gs.getMessage('Agent Chat'),
        },
        'virtual_agent': {
            page: 'virtual-agent',
            label: gs.getMessage('Virtual Agent'),
        },
        'sidebar': {
            page: 'side-bar',
            label: gs.getMessage('Sidebar'),
        }
    },
    TABLE_METADATA: {
        'quickactions_workspace_action': {
            entry: 'agent_chat',
            title: gs.getMessage('Quick Action Toolbar Controls'),
            heading: gs.getMessage('Quick Action Toolbar Controls'),
            subHeading: gs.getMessage('Determine what quick action shortcuts are available to live agents in the Agent Chat.'),
            list_filter: '',
            list_view: '',
            form_filter: '',
            form_view: '',
            related_list_table: '',
            custom_form: '',
            custom_list: ''
        },
        'sys_cs_context_profile': {
            entry: 'virtual_agent',
            title: gs.getMessage('Custom Greetings &amp; Setup'),
            heading: gs.getMessage('Custom Greetings &amp; Setup'),
            subHeading: gs.getMessage('Create different chat experiences for your end users based on the context in which they initiate a conversation with Virtual Agent. You can define the structure of a bot conversation (setup topics), an initial set of topics displayed to users (promoted topics) and the AI Search configurations for displaying search results in conversations.'),
			richDescription: (function() {
				var msg = '&lt;h3&gt;{0}&lt;/h3&gt;'.replace('{0}', gs.getMessage('Pick which topics to show for this situation'));
				msg += '&lt;p&gt;{1}&lt;/p&gt;'.replace('{1}', gs.getMessage('1. Identify one or more Setup topics to include. Keep in mind that the {{link_tag}} will change for those you select.'));
				
				var linkTag = '&lt;a title="default experience" href="/now/conversation/settings/record/sys_cs_context_profile/3a33973653211010a813ddeeff7b125a" target="_blank" rel="noopener"&gt;{0}&lt;/a&gt;'.replace('{0}', gs.getMessage('default experience'));

				msg = msg.replace("{{link_tag}}", linkTag);

				msg += '&lt;p&gt;{2}&lt;/p&gt;'.replace('{2}', gs.getMessage('2. Select up to six Promoted topics to present to your users when they open Virtual Agent.'));
				msg += '&lt;p&gt;{3}&lt;/p&gt;'.replace('{3}', gs.getMessage('3. Define how you want your search results to appear in Virtual Agent under Search mapping. It will be applied whenever AI Search topic block is used and in fallback searches if AI Search as Fallback is enabled.'));

				msg += '&lt;br&gt;&lt;br&gt;';
				return msg;
			})(),
            list_filter: '',
            list_view: 'simple_chat_context_profiles',
            form_filter: '',
            form_view: '',
            related_list_table: '',
            custom_form: '',
            custom_list: ''
        },
        'sys_cs_auto_resolution_simulation_configuration': {
            entry: 'virtual_agent',
            title: gs.getMessage('Simulation Configurations'),
            heading: gs.getMessage('Simulation Configurations'),
            subHeading: '',
            list_filter: '',
            list_view: '',
            form_filter: '',
            form_view: '',
            related_list_table: '',
            custom_form: '',
            custom_list: ''
        },
		'sys_cs_dynamic_translation_virtual_agent': {
            entry: 'virtual_agent',
            title: gs.getMessage('Multi-language support'),
            heading: gs.getMessage('Multi-language support'),
            subHeading: gs.getMessage('Activate languages for dynamic translations by installing the language plugin for ServiceNow supported translations or manually add an active language row in the sys_language table for other languages.'),
            list_filter: '',
            list_view: '',
            form_filter: '',
            form_view: '',
            related_list_table: '',
            custom_form: '',
            custom_list: ''
        },
        'sys_cs_virtual_agent_context': {
            entry: 'general',
            title: gs.getMessage('Context Variables'),
            heading: gs.getMessage('Context Variables'),
            subHeading: '',
            list_filter: 'live_agent_setup=f0acbc4c5f091300e6333654de7313c8',
            list_view: 'ci_admin_console',
            form_filter: '',
            form_view: '',
            related_list_table: '',
            custom_form: '',
            custom_list: ''
        },
        'sys_cs_survey': {
            entry: 'general',
            title: gs.getMessage('Pre-chat surveys'),
            heading: gs.getMessage('Pre-chat surveys'),
            subHeading: gs.getMessage('Capture and store chat-related info to determine a user’s need or to improve VA or live agent support.'),
            list_filter: 'type=prechat^EQ',
            list_view: 'ci_admin_console',
            form_filter: '',
            form_view: '',
            related_list_table: '',
            custom_form: '',
            custom_list: ''
        },
        'sys_cs_context_topic': {
            entry: 'general',
            title: gs.getMessage('Context Topic'),
            heading: gs.getMessage('Context Topic'),
            subHeading: '',
            list_filter: '',
            list_view: 'ci_admin_console',
            form_filter: '',
            form_view: '',
            related_list_table: '',
            custom_form: '',
            custom_list: ''
        },
        'sys_cs_portal_url_mapping': {
            entry: 'general',
            title: gs.getMessage('URL Navigation'),
            heading: gs.getMessage('URL Navigation'),
            subHeading: '',
            list_filter: '',
            list_view: 'ci_admin_console',
            form_filter: '',
            form_view: '',
            related_list_table: '',
            custom_form: '',
            custom_list: 'url-navigation-settings'
        },
        'sys_cs_branding_setup': {
            entry: 'general',
            title: gs.getMessage('Branding'),
            heading: gs.getMessage('Branding'),
            subHeading: '',
            list_filter: '',
            list_view: '',
            form_filter: '',
            form_view: '',
            related_list_table: '',
            custom_form: 'branding-settings',
            custom_list: ''
        },
        'va_branding_contact_menu': {
            entry: 'general',
            title: gs.getMessage('Menu Items'),
            heading: gs.getMessage('Menu Items'),
            subHeading: '',
            list_filter: '',
            list_view: '',
            form_filter: '',
            form_view: '',
            related_list_table: 'branding.sys_cs_branding_setup',
            custom_form: '',
            custom_list: ''
        },
        'sn_topic_recommend_default_setting': {
            entry: 'virtual_agent',
            title: gs.getMessage('Topic Recommendations'),
            heading: gs.getMessage('Topic Recommendations'),
            subHeading: '',
            list_filter: '',
            list_view: '',
            form_filter: '',
            form_view: '',
            related_list_table: '',
            custom_form: '',
            custom_list: ''
        },
        'sys_cs_context_profile_promotion': {
            entry: 'virtual_agent',
            title: gs.getMessage('Promoted Topics'),
            heading: gs.getMessage('Promoted Topics'),
            subHeading: '',
            list_filter: '',
            list_view: '',
            form_filter: '',
            form_view: '',
            related_list_table: 'context_profile.sys_cs_context_profile',
            custom_form: '',
            custom_list: ''
        },
        'sys_cs_context_profile_topic': {
            entry: 'virtual_agent',
            title: gs.getMessage('Setup Topics'),
            heading: gs.getMessage('Setup Topics'),
            subHeading: '',
            list_filter: '',
            list_view: '',
            form_filter: '',
            form_view: '',
            related_list_table: 'context_profile.sys_cs_context_profile',
            custom_form: '',
            custom_list: ''
        },
        'sys_cs_context_profile_search': {
            entry: 'virtual_agent',
            title: gs.getMessage('Search Profiles'),
            heading: gs.getMessage('Search Profiles'),
            subHeading: '',
            list_filter: '',
            list_view: '',
            form_filter: '',
            form_view: '',
            related_list_table: 'context_profile.sys_cs_context_profile',
            custom_form: '',
            custom_list: ''
        },
        'sys_properties_category': {
            entry: 'general',
            title: gs.getMessage('Categories'),
            heading: gs.getMessage('Categories'),
            subHeading: '',
            list_filter: '',
            list_view: '',
            form_filter: '',
            form_view: '',
            related_list_table: '',
            custom_form: '',
            custom_list: ''
        },
        'sys_properties': {
            entry: 'general',
            title: gs.getMessage('System Messages'),
            heading: gs.getMessage('System Messages'),
            subHeading: '',
            list_filter: 'sys_idDYNAMIC2ce328b2537230106d43ddeeff7b12d5',
            list_view: 'ci_admin_console',
            form_filter: '',
            form_view: '',
            related_list_table: '',
            custom_form: '',
            custom_list: ''
        },
        'sys_cs_auto_resolution_configuration': {
            entry: 'virtual_agent',
            title: gs.getMessage('Auto-Resolution Configuration'),
            heading: gs.getMessage('Auto-Resolution Configuration'),
            subHeading: '',
            list_filter: '',
            list_view: 'ci_admin_console',
            form_filter: '',
            form_view: '',
            related_list_table: '',
            custom_form: '',
            custom_list: ''
        },
        'open_nlu_driver_language': {
            entry: 'virtual_agent',
            title: gs.getMessage('Natural Language Understanding (NLU)'),
            heading: gs.getMessage(''),
            subHeading: '',
            list_filter: '',
            list_view: '',
            form_filter: '',
            form_view: '',
            related_list_table: '',
            custom_form: '',
            custom_list: 'nlu-setting'
        },
        'sys_cs_nlu_language': {
            entry: 'virtual_agent',
            title: gs.getMessage('Natural Language Understanding (NLU)'),
            heading: gs.getMessage(''),
            subHeading: '',
            list_filter: '',
            list_view: '',
            form_filter: '',
            form_view: '',
            related_list_table: '',
            custom_form: '',
            custom_list: 'nlu-setting'
        },
        'sys_cs_auto_resolution_intent_topic_map': {
            entry: 'virtual_agent',
            title: gs.getMessage('Auto-Resolution Intent Topic Map'),
            heading: gs.getMessage('Auto-Resolution Intent Topic Map'),
            subHeading: '',
            list_filter: '',
            list_view: '',
            form_filter: '',
            form_view: '',
            related_list_table: 'ar_configuration.sys_cs_auto_resolution_configuration',
            custom_form: '',
            custom_list: ''
        },
        'sys_cs_auto_resolution_configuration_language': {
            entry: 'virtual_agent',
            title: gs.getMessage('Auto-Resolution Configuration Language'),
            heading: gs.getMessage('Auto-Resolution Configuration Language'),
            subHeading: '',
            list_filter: '',
            list_view: '',
            form_filter: '',
            form_view: '',
            related_list_table: 'configuration.sys_cs_auto_resolution_configuration',
            custom_form: '',
            custom_list: ''
        },
        'sys_cs_profane_word': {
            entry: 'agent_chat',
            title: gs.getMessage('Profanity Settings'),
            heading: '',
            subHeading: '',
            list_filter: '',
            list_view: '',
            form_filter: '',
            form_view: '',
            related_list_table: '',
            custom_form: '',
            custom_list: 'profanity-settings'
        },
        'sys_sensitive_data_handling_regex': {
            entry: 'general',
            title: gs.getMessage('Sensitive Data Detection'),
            heading: '',
            subHeading: '',
            list_filter: '',
            list_view: '',
            form_filter: '',
            form_view: '',
            related_list_table: '',
            custom_form: '',
            custom_list: 'sensitive-data'
        },
        'conversation_history_filters': {
            entry: 'agent_chat',
            title: gs.getMessage('Conversation History Settings'),
            heading: gs.getMessage('Conversation History Settings'),
            subHeading: '',
            list_filter: '',
            list_view: '',
            form_filter: '',
            form_view: '',
            related_list_table: '',
            custom_form: '',
            custom_list: 'conversation-history-settings'
        },
        'sys_cs_smart_link': {
            entry: 'general',
            title: gs.getMessage('URL Navigation'),
            heading: gs.getMessage('Target Location'),
            subHeading: gs.getMessage('Smart Links Documentation'),
            list_filter: '',
            list_view: 'ci_admin_console',
            form_filter: '',
            form_view: 'ci_admin_console',
            related_list_table: '',
            custom_form: '',
            custom_list: 'url-navigation-settings'
        },
        'sys_cs_consumer_account_context': {
            entry: 'virtual_agent',
            title: gs.getMessage('Conversation Consumer Account Contexts'),
            heading: gs.getMessage('Conversation Consumer Account Contexts'),
            subHeading: '',
            list_filter: '',
            list_view: '',
            form_filter: '',
            form_view: '',
            related_list_table: '',
            custom_form: '',
            custom_list: 'multiple-active-conversation'
        },
        'sys_cs_collab_user_query': {
            entry: 'sidebar',
            title: gs.getMessage('Sidebar Member Query'),
            heading: gs.getMessage('Sidebar Member Query'),
            subHeading: '',
            list_filter: '',
            list_view: '',
            form_filter: '',
            form_view: '',
            related_list_table: '',
            custom_form: '',
            custom_list: ''
        },
    },
    SUPPORTED_TABLES: [
        'sys_cs_branding_setup', 'va_branding_contact_menu', 'sys_cs_virtual_agent_context', 'sys_cs_survey', 'sys_cs_context_topic', 'sys_cs_virtual_agent_context', 'sys_properties',
        'sys_cs_portal_url_mapping', 'sn_topic_recommend_default_setting', 'sys_cs_auto_resolution_configuration', 'sys_cs_auto_resolution_configuration_language', 'sys_cs_auto_resolution_intent_topic_map',
        'sys_cs_auto_resolution_simulation_configuration', 'sys_cs_context_profile', 'sys_cs_context_profile_topic', 'sys_cs_context_profile_promotion', 'sys_cs_context_profile_search', 'quickactions_workspace_action',
        'open_nlu_driver_language', 'sys_cs_nlu_language', 'sys_cs_profane_word', 'sys_sensitive_data_handling_regex', 'conversation_history_filters', 'sys_cs_smart_link', 'sys_cs_dynamic_translation_virtual_agent', 
		'sys_language', 'sys_cs_consumer_account_context', 'sys_cs_collab_user_query'
    ],
    SUPPORTED_TABLES_VIEW: 'ci_admin_console',
    SUPPORTED_TABLES_VIA_PROP: gs.getProperty('com.glide.cs.admin_console.supported_tables', ''),
    BLACKLIST_TAGS_FROM_SUPPORTED_TABLES: ['sys_cs_profane_word', 'sys_sensitive_data_handling_regex'],
    type: 'CIListRecordPropsMetadata'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2022-03-12 18:31:04&lt;/sys_created_on&gt;
        &lt;sys_id&gt;0510a08ceb5e0110da1861c59c522841&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;48&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;CIListRecordPropsMetadata&lt;/sys_name&gt;
        &lt;sys_package display_value="Omni-Experience Standard Feature Set" source="sn_oe_sfs"&gt;53b1b0e79761011018b2fa98c253afcc&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Omni-Experience Standard Feature Set"&gt;53b1b0e79761011018b2fa98c253afcc&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_0510a08ceb5e0110da1861c59c522841&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;maint&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2023-03-13 20:25:42&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:09:14</sys_created_on>
        <sys_id>d940bc5583b01210c6695855eeaad3b6</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>CIListRecordPropsMetadata</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_d940bc5583b01210c6695855eeaad3b6</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:09:14</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
