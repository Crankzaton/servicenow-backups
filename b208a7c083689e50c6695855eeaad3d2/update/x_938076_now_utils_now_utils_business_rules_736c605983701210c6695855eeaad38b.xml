<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>true</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Sync Property Banner Image</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[function onAfter(current, previous) {
 // delete all orphaned glide product image attachments
    var sysId = current.getValue('sys_id');
    var val = current.getValue('value');
    var imageLight = current.getValue('name') === 'glide.product.image.light';
    var imageField = imageLight ? 'banner_image_light' : 'banner_image';
    // remove extension
    var i = val.indexOf('.');
    if (i > -1)
     val = val.substring(0, i);
    var gr = new GlideRecord('sys_attachment');
    gr.addQuery('table_name', 'ENDSWITH', 'sys_properties');
    gr.addQuery('table_sys_id', sysId);
    gr.addQuery('sys_id', '!=', val);
    gr.query();
    while (gr.next()) {
     gr.deleteRecord();
    }

 // sync primary company image
 var gr = new GlideRecord('core_company');
    gr.addQuery('primary', 'true');
    gr.query();
 if (gr.next()) {
  // delete old primary core banner image if new sys property was added
  var gra = new GlideRecord('sys_attachment');
  gra.addQuery('table_sys_id', gr.sys_id);
  gra.addQuery('file_name', imageField);
  gra.query();
  if (gra.next()) {
   gra.deleteRecord();
  }

  // copy attachment to primary company
  var workflow = session.setWorkflow(false);
  var r = GlideSysAttachment.copy('sys_properties', current.sys_id, 'core_company', gr.sys_id, imageField);
  var generatedSysId = grabNewSysId(val, r);
  gr.setValue(imageField, generatedSysId);
  gr.update();
  session.setWorkflow(workflow);
 }
}

// GlideSysAttachment.copy copies all the attachments found in a record and returns an array of the copies
// with the original attachments. We must iterate over the list and grab the correct copy to use
function grabNewSysId(sourceSysId, newSysIds) {
 for (var i = 0; i < newSysIds.size(); i++) {
  var ids = String(newSysIds.get(i));
  var parts = ids.split(',');
  if (parts[0] === sourceSysId)
   return parts[1];
 }
 
 return null;
}]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:52:28</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>736c605983701210c6695855eeaad38b</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Sync Property Banner Image</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_736c605983701210c6695855eeaad38b</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:52:28</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=736c605983701210c6695855eeaad38b"/>
</record_update>
