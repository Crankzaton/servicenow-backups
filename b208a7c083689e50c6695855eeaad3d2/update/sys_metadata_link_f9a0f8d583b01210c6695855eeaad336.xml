<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>1736745753b33200d044ddeeff7b1227</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;public&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.AgileBoardEpicUtil&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;AgileBoardEpicUtil&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var AgileBoardEpicUtil = Class.create();
AgileBoardEpicUtil.prototype = {
    initialize: function() {
        this.EPIC_FILTER_SORT_FIELD = "short_description";
        this.SORT_ORDER = "ASC"; // Keep "ASC" for ascending order and "DSC" for descending order.
    },

    getSortField: function(tableName, fieldName) {
        var gr = new GlideRecord(tableName);
        if (!gr.isValidField(fieldName)) {
            this.EPIC_FILTER_SORT_FIELD = "short_description";
        }
    },

    getEpicsWithTotal: function(storyFilterId, limit, offset) {
        var epicData;
        var epics;
        var epicFilter;
        var filterQuery;
        var agFilter = new GlideRecord('backlog_definition');
        var epicIds = [];

        agFilter.get(storyFilterId);
        filterQuery = agFilter.getValue('filter');

        if (JSUtil.notNil(storyFilterId) &amp;&amp; JSUtil.notNil(filterQuery)) {
            epicFilter = new GlideAggregate('rm_story');
            epicFilter.addNotNullQuery('epic.sys_id');
			this.getSortField("rm_epic",this.EPIC_FILTER_SORT_FIELD);
            var sortField = "epic." + this.EPIC_FILTER_SORT_FIELD;
            if (this.SORT_ORDER === "ASC") {
                epicFilter.orderBy(sortField);
            } else if (this.SORT_ORDER === "DSC") {
                epicFilter.orderByDesc(sortField);
            }
            epicFilter.addEncodedQuery(filterQuery);
            epicFilter.groupBy('epic');
            epicFilter.chooseWindow(offset, limit - 1, true);
            epicFilter.query();

            while (epicFilter.next()) {
                epicIds.push(epicFilter.getValue('epic'));
            }

        } else {
            epicFilter = new GlideRecord('rm_epic');
			this.getSortField("rm_epic",this.EPIC_FILTER_SORT_FIELD);
            if (this.SORT_ORDER === "ASC") {
                epicFilter.orderBy(this.EPIC_FILTER_SORT_FIELD);
            } else if (this.SORT_ORDER === "DSC") {
                epicFilter.orderByDesc(this.EPIC_FILTER_SORT_FIELD);
            }
            epicFilter.chooseWindow(0, limit - 1, true);
            epicFilter.query();
            while (epicFilter.next()) {
                epicIds.push(epicFilter.getValue('sys_id'));
            }
        }
        epics = this.getFilterData("rm_epic", epicIds, this.EPIC_FILTER_SORT_FIELD, this.SORT_ORDER);

        return {
            epics: epics,
            total: epicFilter.getRowCount()
        };
    },

    getFilterData: function(filterTable, filterRecIds, sortField, sortOrder) {
        var filterRecData;
        var filterData = [];
        var filterRecGr = new GlideRecord(filterTable);

        filterRecGr.addQuery('sys_id', 'IN', filterRecIds.join(','));
        if (sortOrder === "ASC") {
            filterRecGr.orderBy(sortField);
        } else if (sortOrder === "DSC") {
            filterRecGr.orderByDesc(sortField);
        }
        filterRecGr.query();

        while (filterRecGr.next()) {
            filterRecData = {};

            filterRecData.sys_id = filterRecGr.getValue('sys_id');
            filterRecData.short_description = filterRecGr.getValue('short_description');
            filterRecData.totalStoryCount = filterRecGr.getValue('total_story_count');
            filterRecData.completedStoryPoints = filterRecGr.getValue('completed_count');
            filterRecData.totalStoryPoints = filterRecGr.getValue('total_estimate');
            filterRecData.percentCompleteByEstimate = filterRecGr.getValue('percent_complete_by_estimate');

            filterData.push(filterRecData);
        }

        return filterData;
    },

    type: 'AgileBoardEpicUtil'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2017-07-11 22:18:44&lt;/sys_created_on&gt;
        &lt;sys_id&gt;1736745753b33200d044ddeeff7b1227&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;110&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;AgileBoardEpicUtil&lt;/sys_name&gt;
        &lt;sys_package display_value="Agile Development 2.0" source="com.snc.sdlc.agile.2.0"&gt;7205e388477e0610cd4e1ce4316d43ce&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_1736745753b33200d044ddeeff7b1227&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2022-04-27 15:23:03&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:10:54</sys_created_on>
        <sys_id>f9a0f8d583b01210c6695855eeaad336</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>AgileBoardEpicUtil</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_f9a0f8d583b01210c6695855eeaad336</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:10:54</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
