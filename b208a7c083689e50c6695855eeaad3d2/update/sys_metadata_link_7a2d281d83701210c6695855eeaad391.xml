<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>006cf2b1d7322100bbc783e80e61034a</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="sys_script"&gt;
    &lt;sys_script action="INSERT_OR_UPDATE"&gt;
        &lt;abort_action&gt;false&lt;/abort_action&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;action_delete&gt;false&lt;/action_delete&gt;
        &lt;action_insert&gt;false&lt;/action_insert&gt;
        &lt;action_query&gt;false&lt;/action_query&gt;
        &lt;action_update&gt;false&lt;/action_update&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;add_message&gt;false&lt;/add_message&gt;
        &lt;advanced&gt;true&lt;/advanced&gt;
        &lt;change_fields&gt;false&lt;/change_fields&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;collection&gt;sm_task&lt;/collection&gt;
        &lt;condition/&gt;
        &lt;description/&gt;
        &lt;execute_function&gt;false&lt;/execute_function&gt;
        &lt;filter_condition/&gt;
        &lt;is_rest&gt;false&lt;/is_rest&gt;
        &lt;message/&gt;
        &lt;name&gt;Build scratchpad &amp;amp; display info messages&lt;/name&gt;
        &lt;order&gt;20&lt;/order&gt;
        &lt;priority&gt;100&lt;/priority&gt;
        &lt;rest_method/&gt;
        &lt;rest_method_text/&gt;
        &lt;rest_service/&gt;
        &lt;rest_service_text/&gt;
        &lt;rest_variables/&gt;
        &lt;role_conditions/&gt;
        &lt;script&gt;&lt;![CDATA[g_scratchpad._lockAsset = false;
var sf = new SMFilters();
var smConfigUtil = new sn_sm.SMConfiguration();
if(GlidePluginManager().isActive("com.snc.work_management")){
   smConfigUtil = new SMConfigUtil();
}
var p_disp = SMConstants.TASK_PENDING_DISPATCH;

g_scratchpad.qualification_property = smConfigUtil.isEnabled(current, "qualification", false);
g_scratchpad.managed_docs = smConfigUtil.isEnabled(current, "managed_docs", false);
g_scratchpad.time_card = smConfigUtil.isEnabled(current, "time_card", false);
g_scratchpad.parts = smConfigUtil.isEnabled(current, "part_requirement", false);
g_scratchpad.task_activities = smConfigUtil.isEnabled(current, "task_activities", false);
g_scratchpad.dispatchqueueOn = smConfigUtil.isEnabled(current, 'dispatch_queue', false);
g_scratchpad.schedule_required = smConfigUtil.isEnabled(current, "use_schedule", false);
g_scratchpad.track_travel = smConfigUtil.isEnabled(current, "track_travel", false);
g_scratchpad.enableSF = smConfigUtil.isEnabled(current, "use_sf", true);
g_scratchpad.assignment_filter = "";
g_scratchpad.dispatch_filter = "";
g_scratchpad.notify = GlidePluginManager.isRegistered('com.snc.notifynow');
g_scratchpad.original_assignee = current.assigned_to;
g_scratchpad.fsm_contractors_draft_state = false;

// populate scratchpad value for onsite configuration
if(GlidePluginManager.isActive("com.snc.work_management")){
	var fsmOnsiteUtil = new global.FSMOnsiteUtil();		
	g_scratchpad.enableOnsite = fsmOnsiteUtil.isOnsiteEnabled('wm_task');
}

var sc = new sn_sm.SMConfiguration();
g_scratchpad.vendor_group_type = sc.getGroupType(current, "vendor");

if (current.dispatch_group.nil()) {
    g_scratchpad.dispatch_filter = sf.filterGroups(current.sys_class_name, current.location, 'dispatch');
}
if(current.sys_class_name == "wm_task"){
	var wf = new WMFilters();
	var dispatchQueueEnabled = wf.getFieldServiceConfiguration('dispatch_queue', true);
	if((dispatchQueueEnabled == 1 &amp;&amp; current.dispatch_group != '') || (dispatchQueueEnabled == 0)){
		var PREFERRED_INTERNAL = "internal";
		var PREFERRED_EXTERNAL = "external";
		var preferredGroup = wf.getPreferredAssignmentGroup(current);
		var qualifiedGroups="";
		var helper;
		var fallbackAssignmentGroups ="";
		var assignmentGroups = wf.filterGroupsBasedOnConfiguration(current,preferredGroup);
		if (preferredGroup == "external") { 
			helper = (new sn_fsm_contractor.FSMContractorHelper());
			qualifiedGroups = helper.getQualifyingVendorGroups(current,assignmentGroups);
			if (qualifiedGroups.indexOf('sys_idIN') == 0 &amp;&amp; qualifiedGroups.length &gt; 8) {
				g_scratchpad.assignment_filter = qualifiedGroups;
                if(current.state == "1")
                    g_scratchpad.fsm_contractors_draft_state = true;
			} else {
				fallbackAssignmentGroups = wf.filterGroupsBasedOnConfiguration(current,PREFERRED_INTERNAL);
				g_scratchpad.assignment_filter = fallbackAssignmentGroups;
			}
		}
		else{
			if(assignmentGroups.indexOf('sys_idIN') == 0 &amp;&amp; assignmentGroups.length &gt; 8){ //If internal groups are found
				g_scratchpad.assignment_filter = assignmentGroups;
			}
			else{
				//If no internal found, go to fallback
				if ((GlidePluginManager.isActive('com.snc.fsm_contractor_management'))) { //FALLBACK TO EXTERNAL IF VENDOR PLUGIN IS ACTIVE
					helper = (new sn_fsm_contractor.FSMContractorHelper());
					fallbackAssignmentGroups = wf.filterGroupsBasedOnConfiguration(current, PREFERRED_EXTERNAL);
					qualifiedGroups = helper.getQualifyingVendorGroups(current,fallbackAssignmentGroups);
					g_scratchpad.assignment_filter = qualifiedGroups;
                    if(current.state == "1")
                        g_scratchpad.fsm_contractors_draft_state = true;
				}
			}
		}

		if(g_scratchpad.assignment_filter.indexOf("sys_idIN") == -1 &amp;&amp; g_scratchpad.assignment_filter.length &lt;= 8){
			g_scratchpad.assignment_filter = "sys_idIN";
		}
	}
}
else
   g_scratchpad.assignment_filter = sf.filterWorkGroupBasedOnDispatchGroup(current.dispatch_group, current.getTableName(), true, current.location);
if ((smConfigUtil).isEnabled(current, "use_sf", "false") &amp;&amp; (smConfigUtil.getDispatchMethod(current) == 'auto') &amp;&amp; (current.assigned_to.nil()) &amp;&amp; (current.state == p_disp) &amp;&amp; (!current.assignment_group.nil() || !current.dispatch_group.nil()))
	if (GlidePluginManager.isActive('com.snc.fsm_task_bundle') &amp;&amp; !current.bundle.nil())
		g_scratchpad.auto_assignment_msg = gs.getMessage('Sub tasks on a bundle cannot be auto-dispatched.');
	else
		g_scratchpad.auto_assignment_msg = gs.getMessage('Auto-dispatch failed. Change the information and save the form to run auto-dispatch again');

var dueDate = new GlideDateTime(current.parent.requested_due_by);
if (!dueDate.nil() &amp;&amp; dueDate.getNumericValue() &gt; 0) {
    var expectedStart = new GlideDateTime(current.expected_start);
    var estimatedDuration = new GlideDateTime(current.estimated_work_duration);

    if (expectedStart.getNumericValue() + estimatedDuration.getNumericValue() &gt; dueDate.getNumericValue())
        g_scratchpad.requested_due_date_msg = gs.getMessage('The task will be completed after the requested due by date');
}]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2014-08-28 18:11:59&lt;/sys_created_on&gt;
        &lt;sys_domain&gt;global&lt;/sys_domain&gt;
        &lt;sys_domain_path&gt;/&lt;/sys_domain_path&gt;
        &lt;sys_id&gt;006cf2b1d7322100bbc783e80e61034a&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;38&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;Build scratchpad &amp;amp; display info messages&lt;/sys_name&gt;
        &lt;sys_overrides/&gt;
        &lt;sys_package display_value="Service Management Core" source="com.snc.service_management.core"&gt;3e6bd6bb4722c210cd4e1ce4316d4387&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_006cf2b1d7322100bbc783e80e61034a&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2023-04-13 09:55:58&lt;/sys_updated_on&gt;
        &lt;template/&gt;
        &lt;when&gt;before_display&lt;/when&gt;
    &lt;/sys_script&gt;
    &lt;sys_translated_text action="delete_multiple" query="documentkey=006cf2b1d7322100bbc783e80e61034a"/&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:55:40</sys_created_on>
        <sys_id>7a2d281d83701210c6695855eeaad391</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Build scratchpad &amp; display info messages</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_7a2d281d83701210c6695855eeaad391</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:55:40</sys_updated_on>
        <tablename>sys_script</tablename>
    </sys_metadata_link>
</record_update>
