<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>26e3c20a936110106b543511e57ffb44</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;public&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.MapCoordinatesRefreshUtil&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;MapCoordinatesRefreshUtil&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var MapCoordinatesRefreshUtil = Class.create();
MapCoordinatesRefreshUtil.prototype = {
    initialize: function() {
        this.TABLE_LATLANG_REFRESH_CONFIG = "cmn_coordinate_refresh_config";
        var duration = parseInt(gs.getProperty("google.maps.refresh.latlong.duration", 25)) || 25;
        this.DURATION_REFRESH_LATLONG = duration &gt;= 30 ? 29 : duration;
        this.COUNT_RECORDS_PROCESSED_PER_TABLE_PER_REFRESH = parseInt(gs.getProperty("google.maps.refresh.latlong.record_count_per_table", 500)) || 500;
    },

    refreshLatLongUsingConfigTable: function() {
        var tablesMapConfigSysIDs = [];
        var tablesGr = new GlideRecord(this.TABLE_LATLANG_REFRESH_CONFIG);
        tablesGr.addActiveQuery();
        tablesGr.query();
        while (tablesGr.next()) {
            tablesMapConfigSysIDs.push(tablesGr.getValue('sys_id'));
        }
        this._callExecutorForConfig(tablesMapConfigSysIDs);
    },

    _callExecutorForConfig: function(configSysIDs) {
        configSysIDs.forEach(function(item) {
            var gr = new GlideRecord(this.TABLE_LATLANG_REFRESH_CONFIG);
            gr.get(item);
            if (gr.isValidRecord()) {
                this.invokeLatLongRefreshForTable(gr);
            }
        }, this);
    },

    invokeLatLongRefreshForTable: function(configGr) {
	var table = configGr.getValue('data_table'),
	lastUpdatedFieldName = configGr.getValue('coordinates_retrieved_on');
        var tableGr = new GlideRecord(table);
        var recordIds = [];
        var dateTime = (new GlideDateTime());
        dateTime.addDays(-1 * this.DURATION_REFRESH_LATLONG);
        tableGr.addEncodedQuery(lastUpdatedFieldName + "!=NULL^" + lastUpdatedFieldName + "&lt;=javascript:gs.dateGenerate('" + dateTime.getDate() + "', '" + dateTime.getDisplayValue().replace(dateTime.getDate() + " ", "") + "')");
        tableGr.setLimit(this.COUNT_RECORDS_PROCESSED_PER_TABLE_PER_REFRESH);
        tableGr.query();
        while (tableGr.next()) {
            recordIds.push(tableGr.getValue('sys_id')); //to avoid holding GlideRecords/resultSet in memory for long duration
        }
        for (var i = 0; i &lt; recordIds.length; i++) {
            this._processLatLongRefreshForRecord(recordIds[i], configGr);
        }
    },

    _processLatLongRefreshForRecord: function(targetRecordID, configGr) {
        var address = "";
        var recordGr = new GlideRecord(configGr.getValue('data_table'));
        recordGr.get(targetRecordID);
        if (!recordGr.isValidRecord()) {
            return;
        }
        try {
            address = new GlideScopedEvaluator().evaluateScript(configGr, 'script', {
                current: recordGr
            });
        } catch (e) {
            gs.log("Invalid address to fetch the LatLong using google maps for table " + configGr.getValue('data_table') + " for SysID " + targetRecordID);
            address = "";
        }
        if (!address) {
            return;
        }
        var latLang = GoogleMapsHelper.google_getLatLong(address);
        gs.sleep(200); //pausing for 200ms inorder to not exceed RateLimit
        if (latLang &amp;&amp; latLang[0] &amp;&amp; latLang[1]) {
            recordGr[configGr.latitude_field] = latLang[0];
            recordGr[configGr.longitude_field] = latLang[1];
            recordGr[configGr.coordinates_retrieved_on] = new GlideDateTime().getDisplayValue();
        }
        // To make sure we dont update records and fire notifications, rules, engines. Doing a silent update 
        recordGr.setWorkflow(false);
        recordGr.setUseEngine(false);
        recordGr.autoSysFields(false);
        // end of silent update settings
        recordGr.update();
    },

    type: 'MapCoordinatesRefreshUtil'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2020-06-23 11:41:06&lt;/sys_created_on&gt;
        &lt;sys_id&gt;26e3c20a936110106b543511e57ffb44&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;21&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;MapCoordinatesRefreshUtil&lt;/sys_name&gt;
        &lt;sys_package display_value="Google Maps Plugin" source="com.glideapp.google_maps"&gt;7d0774283cb1311068bcf327dfe37f70&lt;/sys_package&gt;
        &lt;sys_policy&gt;read&lt;/sys_policy&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_26e3c20a936110106b543511e57ffb44&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2020-06-25 09:35:48&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:12:34</sys_created_on>
        <sys_id>1a01f45983b01210c6695855eeaad3cd</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>MapCoordinatesRefreshUtil</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_1a01f45983b01210c6695855eeaad3cd</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:12:34</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
