<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>true</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Sync interaction context columns</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) { 
 if (current.operation() == 'insert') {
  insertColumn(current);
 }
 else if (current.operation() == 'delete') {
  deleteColumn(current);
 }
 else if (current.name.changes()) {
  /**
   Not able to rename an existing column, so that delete the existing one and create a new one
  **/
  deleteColumn(previous);
  insertColumn(current);
 }
 
 function insertColumn(contextRecord) {
  var virtualColumnName = new sn_cs.InteractionContext().getVirtualColumnName(contextRecord.getValue('script_variable'));
  if (isDuplicateField(virtualColumnName))
      return;
  var dictGr = new GlideRecord('sys_dictionary');
  dictGr.setValue('name', 'v_interaction_context');
  dictGr.setValue('element', virtualColumnName);
  dictGr.setValue('max_length', 100);
  dictGr.setValue('column_label', contextRecord.getValue('name'));
  dictGr.insert();
 }
 
 function deleteColumn(contextRecord) {
  var virtualColumnName = new sn_cs.InteractionContext().getVirtualColumnName(contextRecord.getValue('script_variable'));
  var dictGr = new GlideRecord('sys_dictionary');
  dictGr.addQuery('name', 'v_interaction_context');
  dictGr.addQuery('element', virtualColumnName);
  dictGr.query();
  if (dictGr.next()) {
   dictGr.deleteRecord();
  }
 }

      function isDuplicateField(virtualColumnName) {

          var dictGr = new GlideRecord('sys_dictionary');
          dictGr.addQuery('name', 'v_interaction_context');
          dictGr.addQuery('element', virtualColumnName);
          dictGr.query();
          if (dictGr.next()) {
              return true;
          }

          return false;
      }

})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:50:28</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>a6fb209583701210c6695855eeaad343</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Sync interaction context columns</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_a6fb209583701210c6695855eeaad343</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:50:28</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=a6fb209583701210c6695855eeaad343"/>
</record_update>
