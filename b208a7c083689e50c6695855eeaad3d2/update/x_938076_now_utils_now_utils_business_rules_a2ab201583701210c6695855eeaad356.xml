<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition>!current.request.nil() &amp;&amp; current.request.approval == "approved" &amp;&amp; current.stage == "waiting_for_approval"</condition>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Items Added After Request Approved</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[/**
 * If items are added after the request is set to 'approved' ensure the stage and approval fields are set correctly
 * and that the workflow will be attached through invoking the 'Start Tasks' business rule.
 * Designed to work with the 'Add New Item' UI Action on sc_request.
 * Not designed to work if a new item is added manually. such as enabling the new button on the 'Requested Items' related list.
 */

setApprovalFields();

function setApprovalFields() {
   // We handle this differently for delivery plans vs. workflows
   if ((current.cat_item.workflow && !current.cat_item.workflow.nil()) || (current.cat_item.flow_designer_flow && !current.cat_item.flow_designer_flow.nil())) {
      current.approval = "requested";
      current.stage = "request_approved";
   } else {
      current.approval = current.request.approval;   
      current.stage = getNextStage(current);
   }
}

function getNextStage(reqItem) {
   // return the first delivery task
   var nextStage = "nothing";
   var planID = GlideappDeliveryPlan.resolvePlanID(reqItem);
   var gr = new GlideRecord("sc_cat_item_delivery_task");
   gr.addQuery("delivery_plan", planID);
   gr.orderBy("order");
   gr.query();
   if(gr.next())
      nextStage = gr.name.getDisplayValue();
   
   return nextStage;
}]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:49:07</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>a2ab201583701210c6695855eeaad356</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Items Added After Request Approved</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_a2ab201583701210c6695855eeaad356</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:49:07</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=a2ab201583701210c6695855eeaad356"/>
</record_update>
