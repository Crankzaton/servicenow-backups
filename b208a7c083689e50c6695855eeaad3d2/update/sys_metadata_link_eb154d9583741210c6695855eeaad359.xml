<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>c6ef3d2243c071103293f05ba9b8f233</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_fix"&gt;
    &lt;sys_script_fix action="INSERT_OR_UPDATE"&gt;
        &lt;before&gt;true&lt;/before&gt;
        &lt;description&gt;Creator of the dashboard was stored in par_dashboard_user_metadata table, we have a requirement to add owner user and group. This script migrates owner users from par_dashboard_user_metadata.created_by_user to par_dashboard_permission table setting owner field true.&lt;/description&gt;
        &lt;name&gt;par_dashboard_permission owner migration&lt;/name&gt;
        &lt;record_for_rollback&gt;true&lt;/record_for_rollback&gt;
        &lt;script&gt;&lt;![CDATA[gs.info('par_dashboard_permission owner migration - Update or insert owner user to par_dashboard_permission. Start');
migrateDashboardOwnerData();
gs.info('par_dashboard_permission owner migration - Update or insert owner user to par_dashboard_permission. End');

function migrateDashboardOwnerData(){
	if (pm.isZboot())
		return;

	var gr = new GlideRecord("par_dashboard_user_metadata");
	gr.query();
	while (gr.next()) {
		var ownerUserId = gr.created_by_user;
		var dashboardId = gr.dashboard;
		gs.info('Migrating par_dashboard_permission for dashboard with id'+dashboardId);
		
		updateDashboardPermissionForOwnerUser(dashboardId, ownerUserId);
	}

	gs.info('par_dashboard_permission migrateDashboardOwnerData. End');
}

function updateDashboardPermissionForOwnerUser(dashboardId, ownerUserId){
	var grDashboardPermission = new GlideRecord("par_dashboard_permission");
	grDashboardPermission.addQuery("dashboard",dashboardId);
	grDashboardPermission.addQuery("user",ownerUserId);
	grDashboardPermission.query();
	if (grDashboardPermission.next()) {
		grDashboardPermission.setValue("owner", true);
		if (grDashboardPermission.update())
			return;
		gs.log("par_dashboard_permission - failed to update owner field. Will try to insert new record");
		
	} 
	// we dont have any permission for owner user or could not update current record lets insert new one
	grDashboardPermission = new GlideRecord("par_dashboard_permission");
	grDashboardPermission.initialize();
	grDashboardPermission.setValue("dashboard",dashboardId);
	grDashboardPermission.setValue("user",ownerUserId);
	grDashboardPermission.setValue("owner", true);
	if (!grDashboardPermission.insert())
		gs.log("par_dashboard_permission - failed to insert new record to par_dashboard_permission table for dashboard with id"+dashboardId+" and user with id"+ownerUserId);

}
]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_fix&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2023-07-18 14:04:04&lt;/sys_created_on&gt;
        &lt;sys_id&gt;c6ef3d2243c071103293f05ba9b8f233&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;par_dashboard_permission owner migration&lt;/sys_name&gt;
        &lt;sys_package display_value="Glide PAR Seismic Dashboards" source="com.snc.par.dashboards"&gt;659b38643c35311068bcf327dfe37fea&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_fix_c6ef3d2243c071103293f05ba9b8f233&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2023-07-18 14:04:04&lt;/sys_updated_on&gt;
        &lt;unloadable&gt;true&lt;/unloadable&gt;
    &lt;/sys_script_fix&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 09:40:18</sys_created_on>
        <sys_id>eb154d9583741210c6695855eeaad359</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>par_dashboard_permission owner migration</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_eb154d9583741210c6695855eeaad359</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 09:40:18</sys_updated_on>
        <tablename>sys_script_fix</tablename>
    </sys_metadata_link>
</record_update>
