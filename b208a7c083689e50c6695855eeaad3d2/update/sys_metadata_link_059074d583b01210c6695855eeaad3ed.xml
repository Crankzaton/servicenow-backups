<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>13a5ed9c9fb32200598a5bb0657fcf25</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.EntityScorer&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;EntityScorer&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var EntityScorer = Class.create();
EntityScorer.prototype = {
  initialize: function() {
  },
  
  type: 'EntityScorer'
};

EntityScorer.updateMetricScore = function(taskGr) {
  gs.print("Into EntityScorer.updateMetrics -&gt; " + taskGr.getValue("sys_id") + " | " + taskGr.getValue("sys_class_name"));
  var metrics = { cost: JSUtil.nil(taskGr.getValue("cost")) ? undefined: parseFloat(taskGr.getValue("cost")),
    roi: JSUtil.nil(taskGr.getValue("roi")) ? undefined: parseFloat(taskGr.getValue("roi")),
    risk: taskGr.getValue("risk")
  };
  if(taskGr.cost.changes()) {
    var costFunc = ScoreFactory.sizeScoreFunction(taskGr.getTableName());
    var costScore = costFunc(metrics);
    taskGr.setValue("score_size", costScore);
  }
  if(taskGr.roi.changes()) {
    var roiFunc = ScoreFactory.roiScoreFunction(taskGr.getTableName());
    var valueScore = roiFunc(metrics);
    taskGr.setValue("score_value", valueScore);
  }
  if(taskGr.risk.changes()) {
    var riskFunc = ScoreFactory.riskScoreFunction(taskGr.getTableName());
    var riskScore = riskFunc(metrics);
    taskGr.setValue("score_risk", riskScore);
  }
};

EntityScorer.updateOverallScore = function(taskGr) {
  var score = 5;
  var riskScore = 5;
  var sizeScore = 5;
  // If its a demand, take a inverse score
  if(taskGr.instanceOf('dmn_demand') &amp;&amp; JSUtil.notNil(taskGr.getValue("score_risk"))) {
      riskScore = (10 - parseFloat(taskGr.getValue("score_risk")));
  } else {
      riskScore = parseFloat(taskGr.getValue("score_risk"));
  }
	
  if(taskGr.instanceOf('dmn_demand') &amp;&amp; JSUtil.notNil(taskGr.getValue("score_size"))) {
      sizeScore = (10 - parseFloat(taskGr.getValue("score_size")));
  } else {
      sizeScore = parseFloat(taskGr.getValue("score_size"));
  }
  	
  var metrics = { risk: JSUtil.nil(taskGr.getValue("score_risk"))? 5: riskScore,
    value: JSUtil.nil(taskGr.getValue("score_value"))? 5: parseFloat(taskGr.getValue("score_value")),
    size: JSUtil.nil(taskGr.getValue("score_size"))? 5: sizeScore,
  };
  var scoringFunction = ScoreFactory.overallScoreFunction (taskGr.getValue("sys_class_name"));
  score = scoringFunction(metrics);
  taskGr.setValue("score", score);
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2016-12-15 21:50:27&lt;/sys_created_on&gt;
        &lt;sys_id&gt;13a5ed9c9fb32200598a5bb0657fcf25&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;18&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;EntityScorer&lt;/sys_name&gt;
        &lt;sys_package display_value="PPM Standard" source="com.snc.financial_planning_pmo"&gt;92ef82e747e64210cd4e1ce4316d43e3&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_13a5ed9c9fb32200598a5bb0657fcf25&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2019-01-02 11:51:25&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:10:35</sys_created_on>
        <sys_id>059074d583b01210c6695855eeaad3ed</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>EntityScorer</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_059074d583b01210c6695855eeaad3ed</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:10:35</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
