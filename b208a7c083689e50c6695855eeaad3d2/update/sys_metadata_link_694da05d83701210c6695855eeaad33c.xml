<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>094122a46773130022646c706785ef13</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="sys_script"&gt;
    &lt;sys_script action="INSERT_OR_UPDATE"&gt;
        &lt;abort_action&gt;false&lt;/abort_action&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;action_delete&gt;false&lt;/action_delete&gt;
        &lt;action_insert&gt;true&lt;/action_insert&gt;
        &lt;action_query&gt;false&lt;/action_query&gt;
        &lt;action_update&gt;false&lt;/action_update&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;add_message&gt;false&lt;/add_message&gt;
        &lt;advanced&gt;true&lt;/advanced&gt;
        &lt;change_fields&gt;false&lt;/change_fields&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;collection&gt;discovery_status&lt;/collection&gt;
        &lt;condition&gt;current.discover == "Cloud Resources" &amp;amp;&amp;amp;  (current.state == "Starting" || current.state == "Active")&lt;/condition&gt;
        &lt;description&gt;This business rule is responsible for initializing all the resources counts to 0 in "discovery_cloud_results" and also update LDC count, for a respective discovery status, whenever a discovery run is of type "Cloud Resources".&lt;/description&gt;
        &lt;execute_function&gt;false&lt;/execute_function&gt;
        &lt;filter_condition/&gt;
        &lt;is_rest&gt;false&lt;/is_rest&gt;
        &lt;message/&gt;
        &lt;name&gt;Initialize Cloud Resources and LDC Count&lt;/name&gt;
        &lt;order&gt;100&lt;/order&gt;
        &lt;priority&gt;100&lt;/priority&gt;
        &lt;rest_method/&gt;
        &lt;rest_method_text/&gt;
        &lt;rest_service/&gt;
        &lt;rest_service_text/&gt;
        &lt;rest_variables/&gt;
        &lt;role_conditions/&gt;
        &lt;script&gt;&lt;![CDATA[(function executeRule(current, previous) {
	var i;
	var finalCIsList;
	var datacenterCount;
	var statusSysID = current.getUniqueValue();
	var scheduleSysID = current.getValue('dscheduler');
	var cloudResourceDiscoveryUtil = new CloudResourceDiscoveryUtil();
	var cloudResourceDiscoHandler = new CloudResourceDiscoveryCountHandler();
	
	/*
	*	When a discovery is triggered for a schedule and if it's not a vCenter one's i.e., Schedule
	*	associated to a Cloud Service Account whose datacenter type is not "cmdb_ci_vcenter_datacenter",
	*	then for such kind of discovery run, we cache the discovered data into a cache table
	*	("discoveyr_cloud_temp_results" table) and resource counts are updated by another business
	*	rule ("Update Cloud Resources Counts") that is triggered when current Cloud Resource Discovery
	*	run completes or get cancelled.
	*	
	*	If at all discovery triggered for vCenter Schedules then we don't cache result but just update
	*	the resource counts at respective sensor(s) so in order to update, first we need have an entry for
	*	that CI (e.g., "cmdb_ci_vm_instance") and its count set to 0 so that the count is updated
	*	by respective hooks added at both CAPI and Pattern levels.
	*/
	
	if (cloudResourceDiscoveryUtil.fetchDatacenterTypeFromSchedule(scheduleSysID) == 'cmdb_ci_vcenter_datacenter') {
		finalCIsList = cloudResourceDiscoHandler.fetchAllChildCIsForParentCI('cmdb_ci');
		
		// Initialize the CI counts to 0 for each CI in "Discovery Cloud Results" table
		for (i in finalCIsList)
			cloudResourceDiscoHandler.setCloudResourceCount(scheduleSysID, statusSysID, finalCIsList[i]+'', 0);
	}
	
	if (scheduleSysID) {
		datacenterCount = new DiscoveryScheduleManager().getDatacenterCountForSchedule(scheduleSysID);
		cloudResourceDiscoHandler.setCloudResourceCount(scheduleSysID, statusSysID, 'cmdb_ci_logical_datacenter', datacenterCount);
	}
})(current, previous);]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2018-08-05 09:23:24&lt;/sys_created_on&gt;
        &lt;sys_domain&gt;global&lt;/sys_domain&gt;
        &lt;sys_domain_path/&gt;
        &lt;sys_id&gt;094122a46773130022646c706785ef13&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;5&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;Initialize Cloud Resources and LDC Count&lt;/sys_name&gt;
        &lt;sys_overrides/&gt;
        &lt;sys_package display_value="Core Automation" source="com.snc.core.automation"&gt;6ca7f42c3cb1311068bcf327dfe37f6a&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_094122a46773130022646c706785ef13&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;srikanth.nelapudi&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2019-03-15 17:14:32&lt;/sys_updated_on&gt;
        &lt;template/&gt;
        &lt;when&gt;after&lt;/when&gt;
    &lt;/sys_script&gt;
    &lt;sys_translated_text action="delete_multiple" query="documentkey=094122a46773130022646c706785ef13"/&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:56:08</sys_created_on>
        <sys_id>694da05d83701210c6695855eeaad33c</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Initialize Cloud Resources and LDC Count</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_694da05d83701210c6695855eeaad33c</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:56:08</sys_updated_on>
        <tablename>sys_script</tablename>
    </sys_metadata_link>
</record_update>
