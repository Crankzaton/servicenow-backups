<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>7c5eef48c38301100f24c87af040dd0d</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;public&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.CollabChatGlobalUtils&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;CollabChatGlobalUtils&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var CollabChatGlobalUtils = Class.create();
CollabChatGlobalUtils.prototype = {
    initialize: function() {
    },

	generateSequence: function(tableName) {
		return GlideCounter.next(tableName);
    },

	getCollabChatCreatorLanguage: function(collabChatSysId) {
		var creatorLang = 'en';
		var gr = new GlideRecord('sys_cs_collab_member');
		gr.addQuery('collab_chat', collabChatSysId);
		gr.addQuery('member_type', 'creator');
		gr.query();

		if (gr.next()) {
			var creatorId = gr.member.user_document;
			try {
				var originalUser = gs.getSession().impersonate(creatorId);
				creatorLang = gs.getUser().getLanguage();
			} finally {
				gs.getSession().impersonate(originalUser);
			}
		}

		return creatorLang;
	},
	executeScheduledJob: function(glideRecord) {
		SncTriggerSynchronizer.executeNow(glideRecord);
	},
	isCollabChatEnabledInUserDomain: function(userID) {
		return sn_collab.CollabChatScriptObject.isCollabChatEnabledInUserDomain(userID);
	},
	isCollabChatEnabledInDomain: function() {
		return sn_collab.CollabChatScriptObject.isCollabChatEnabledInDomain();
	},

	getCollabChatSettingRecordsNoDomain: function() {
		var settingsGR = new GlideRecord("sys_cs_collab_settings");
		settingsGR.queryNoDomain();

		return settingsGR;
	},

	/* offset - byte number to start reading at
    limit - Maximum bytes to be used to create the temporary attachment record */
  createAttachmentFromBinaryData: function(attachmentGr, offset, limit) {
      var gsa = new GlideSysAttachmentInputStream(attachmentGr.sys_id.toString());
      var baos = new Packages.java.io.ByteArrayOutputStream();
      gsa.writeTo(baos, offset, limit);
      baos.close();
      var binaryData = baos.toByteArray();
      var fileName = 'sb_upla_temp_' + attachmentGr.file_name;
      return new GlideSysAttachment().write(attachmentGr, fileName,  'application/octet-stream', binaryData);
  },

	sanitizeHTML: function(content) {
		return SNC.GlideHTMLSanitizer.sanitize(content);
	},

	hasAdditionalCreateAccess: function(documentTable, documentId) {
		// for back compatability. If the new script include does not exist, return true.
		if (!sn_oe_sfs.SidebarAccessCheckUtils)
			return true;
		
		return new sn_oe_sfs.SidebarAccessCheckUtils().canWrite(documentTable, documentId);
	},

	// This method runs addtional access and domain check. Declarative action scripted condition has a limited length.
	// Combining those checks together to avoid hitting the lenght limitation.
	hasAccessToCreateSidebar: function(documentTable, documentId) {
		return this.isCollabChatEnabledInDomain() &amp;&amp; this.hasAdditionalCreateAccess(documentTable, documentId);
	},
  type: 'CollabChatGlobalUtils'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2022-04-19 16:13:59&lt;/sys_created_on&gt;
        &lt;sys_id&gt;7c5eef48c38301100f24c87af040dd0d&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;35&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;CollabChatGlobalUtils&lt;/sys_name&gt;
        &lt;sys_package display_value="Collaborative Chat Server" source="com.glide.cs.collab"&gt;2b29175f47220210cd4e1ce4316d4321&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_7c5eef48c38301100f24c87af040dd0d&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2023-05-10 20:18:16&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:39:16</sys_created_on>
        <sys_id>1527fc5d83f01210c6695855eeaad3c2</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>CollabChatGlobalUtils</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_1527fc5d83f01210c6695855eeaad3c2</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:39:16</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
