<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition>!global.FSMUtil.taskInBundle(current) &amp;&amp; current.scheduling_method != 'optimization' &amp;&amp; !(global.FSMUtil.taskIsBundle(current) &amp;&amp; gs.nil(current.assigned_to));</condition>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Calc Estimated Duration(Assigned To)</name>
        <order>500</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {

    try {
        var taskId = current.getUniqueValue();
        var agentId = current.assigned_to;
        var appName = 'field_service';

        if (JSUtil.nil(taskId))
            return {
                error: gs.getMessage("Task ID is not specified.")
            };

        var smConfigGr = new GlideRecord("sm_config");
        smConfigGr.get('app_name', appName);
        if (JSUtil.nil(smConfigGr))
            return {
                error: gs.getMessage("App name may not be specified correctly.")
            };

        var taskGR = new GlideRecord(smConfigGr.task_table);
        if (!taskGR.get(taskId))
            return {
                error: gs.getMessage("Task {0} is not valid.", [taskId])
            };

        var needTravelDurationUpdate = false;
        //for insertion, retain the original function logic
        //for non-insertion, if there is any update on assigned_to/assigned_crew/location, update the travel duration
        if (current.operation() == 'insert') {
            if (!gs.nil(current.assigned_to)) {
                needTravelDurationUpdate = true;
            } else {
                needTravelDurationUpdate = false;
            }
        } else if ((current.assigned_to != previous.assigned_to || current.assigned_crew != previous.assigned_crew || current.location != previous.location)) {
            needTravelDurationUpdate = true;
        }

        if (needTravelDurationUpdate) {
            var startTimeGr = new GlideDateTime();
            startTimeGr.setValue(current.getValue("expected_start"));
            var startTime = startTimeGr.getNumericValue();
            var location = current.location;
            var crewId = current.assigned_crew;
            if (!gs.nil(current.requires_crew) && current.requires_crew == true) // for a crew task, distance should be calculated for assigned crew location
                agentId = crewId;
            var distanceUtils = new global.SMGeoDistanceUtils(appName);
            var ret = distanceUtils.calculateTravelDuration(taskGR, agentId, +String(startTime), "estimated_travel_duration", [], crewId, location);
            ret.duration = distanceUtils.convertDurationNumberToString(ret.duration); //Convert the duration seconds to  "ddd hh:mm:ss" format.
            current.setValue("estimated_travel_duration", ret.duration);
            //need to update the record to DB for it to show in front end.
            taskGR.setValue("estimated_travel_duration", ret.duration);
            taskGR.update();
        }
    } catch (err) {
        gs.error(err);
    }
})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:48:35</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>8b8ba0d183701210c6695855eeaad3a6</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Calc Estimated Duration(Assigned To)</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_8b8ba0d183701210c6695855eeaad3a6</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:48:35</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=8b8ba0d183701210c6695855eeaad3a6"/>
</record_update>
