<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition>current.status.changes()</condition>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Agent status monitor</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[/**
 * Service-now.com
 *
 * Description: The business rule monitors the status of the MID server and throws events accordingly.
 */
var MID_SERVER_DOWN = 'mid_server.down';
var eventName = "mid_server." + current.status.toLowerCase().split(' ').join('_');
var agentName = '' + current.name;
gs.eventQueue(eventName, current, agentName, isDuplicate(eventName, agentName) ? '_duplicate_' : '');
if (eventName === MID_SERVER_DOWN)
    executeScheduledJobNowWithDelay(15 * 1000); // execute the scheduled job in 15 seconds from now

// execute the scheduled job "Process mid_server.down events"
function executeScheduledJobNowWithDelay(delay_ms) {
    var gr = GlideRecord("sys_trigger");
    if (gr.get('fec60f3253272010347cddeeff7b12ff') && gr.state == 0) {
      var currentMs = new GlideDateTime().getNumericValue();
      gr.next_action.setDateNumericValue(currentMs + delay_ms);
      gr.update();
    }
}

function isDuplicate(eventName, agentName) {
    if (eventName !== MID_SERVER_DOWN)
        return false;
    var gr = new GlideRecord("sysevent");
    gr.addQuery('name', eventName);
    gr.addQuery('queue', MID_SERVER_DOWN); // queue name defined by sysevent_register
    gr.addQuery('parm1', agentName);
    var qc = gr.addNullQuery('parm2');
    qc.addOrCondition('parm2', '!=', '_duplicate_');
    gr.addQuery("state", 'NOT IN', "processed,error");
    var s = new GlideDateTime();
    s.subtract(3600 * 1000 * 24 * 2); // 2 days
    gr.addQuery("sys_created_on", '>=', s);
    gr.addQuery("sys_created_on", '<=', new GlideDateTime());
    gr.setLimit(1);
    gr.query();
    return (gr.hasNext());
}]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:50:34</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>4c0ce09583701210c6695855eeaad31a</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Agent status monitor</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_4c0ce09583701210c6695855eeaad31a</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:50:34</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=4c0ce09583701210c6695855eeaad31a"/>
</record_update>
