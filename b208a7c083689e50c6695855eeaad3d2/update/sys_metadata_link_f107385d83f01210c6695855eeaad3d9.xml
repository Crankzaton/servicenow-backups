<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>747cfb87c7300110408bc8d6f2c260f8</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;sn_app_eng_studio.AESUserIntake&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;AESUserIntake&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var AESUserIntake = Class.create();
AESUserIntake.prototype = {
    initialize: function() {
    },

	/**
	 * Inserts user during user provisioning process
	 * 1. If user does not exist on dev instance, create the user with same sys_id and add user to AES group
	 * 2. If user already exists on dev instance, activate user and then add them to the AES group
	 * @param {Object} user
	 * @param {string} permissionType
	 * @returns {Object}
	 */
	userInsert: function(user, permissionType) {
		var userRecord = this.getUser(user.user_name, user.sys_id);
		var insertGroupResult;

		// Check to see if user currently exists:
		if (userRecord) {
			userRecord.setValue('active', true);
			userRecord.update();

			var userRecordSysID = userRecord.getUniqueValue();

			insertGroupResult = this.groupInsert(userRecordSysID, permissionType);

			return {
				insertUserResult: null,
				insertGroupResult: insertGroupResult,
				action: 'update', // Describes if user was added or updated
			};
		} else {
			throw new sn_ws_err.ServiceError()
			.setStatus(404)
			.setMessage(gs.getMessageLang("Requested user not found.", "en"))
			.setDetail(gs.getMessage("The user with the given user_name was not found."));
		}
	},

	/**
	 * Adds user to App Engine Studio Users Or App Engine Studio Users Limited group
	 * @param {string} userSysID
	 * @param {string} permissionType
	 * @returns {string}
	 */
	groupInsert: function(userSysID, permissionType) {
		var groupSysId = {
			full: CreatorStudioConstants.groups.AES_USER_GROUP_ID,
			limited: CreatorStudioConstants.groups.AES_USER_LIMITED_GROUP_ID,
		};

		var sysUserGR = new GlideRecord('sys_user_grmember');
		sysUserGR.addQuery('user', userSysID);
		sysUserGR.addQuery('group', groupSysId[permissionType]);
		sysUserGR.query();

		var insertResult = null;

		if(!sysUserGR.next()) {
			sysUserGR.user = userSysID;
			sysUserGR.group = groupSysId[permissionType];

			insertResult = sysUserGR.insert();

			if (!insertResult) {
				throw new sn_ws_err.ServiceError()
					.setStatus(500)
					.setMessage(gs.getMessageLang("Error adding user to App Engine Studio Users group", "en"))
					.setDetail(gs.getMessage("Error adding user to App Engine Studio Users group on developer instance: ", JSON.stringify(e)));
			}
		}

		return insertResult;
	},

	getUser: function(userName, sysId) {
		var sysUserGR = new GlideRecord('sys_user');
		// queries for user_name AND sys_id
		sysUserGR.addQuery('user_name', userName);
		var q1 = sysUserGR.addQuery('sys_id', sysId);
		sysUserGR.query();
		sysUserGR.next();

		// OR user_name
		q1.addOrCondition('user_name', userName);
		sysUserGR.query();
		sysUserGR.next();

		return sysUserGR.isValidRecord() ? sysUserGR : null;
	},

    type: 'AESUserIntake'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2022-01-07 04:42:38&lt;/sys_created_on&gt;
        &lt;sys_id&gt;747cfb87c7300110408bc8d6f2c260f8&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;13&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;AESUserIntake&lt;/sys_name&gt;
        &lt;sys_package display_value="App Engine Studio" source="sn_app_eng_studio"&gt;e046257545b47c84712b8779a9abd0cb&lt;/sys_package&gt;
        &lt;sys_policy&gt;read&lt;/sys_policy&gt;
        &lt;sys_scope display_value="App Engine Studio"&gt;e046257545b47c84712b8779a9abd0cb&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_747cfb87c7300110408bc8d6f2c260f8&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2022-12-13 20:32:19&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:38:45</sys_created_on>
        <sys_id>f107385d83f01210c6695855eeaad3d9</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>AESUserIntake</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_f107385d83f01210c6695855eeaad3d9</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:38:45</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
