<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>b2aaafc3ff520110635f056d793bf170</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;public&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.AutoResolutionTaskDataBroker&lt;/api_name&gt;
        &lt;caller_access&gt;2&lt;/caller_access&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;This contains methods to access tables that extend "task", from AutoResolution side&lt;/description&gt;
        &lt;name&gt;AutoResolutionTaskDataBroker&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var AutoResolutionTaskDataBroker = Class.create();

/**
 * NOTE: This is used to fetch GlideRecord from Flows, Subflows and Actions. The reason being, if we try to access a
 *       record from a different scope than the caller scope, we are restricted. With this, an RCA record will be
 *       created.
 * @param {string} taskTableName
 * @param {string} taskSysID
 * @return {GlideRecord} if valid record exists in the database. Null otherwise
 */
AutoResolutionTaskDataBroker.getTaskRecord = function(taskTableName, taskSysID) {
	var taskGr = new GlideRecordSecure(taskTableName);

	return taskGr.get(taskSysID) ? taskGr : null;
};

/**
 * Set all the required values in taskGr and pass it into this method
 * @param {GlideRecord} taskGr
 * @return {string} if it is a valid update. Null otherwise
 */
AutoResolutionTaskDataBroker.updateTaskRecord = function(taskGr) {
	if (gs.nil(taskGr))
		return;

	if (taskGr.canWrite()) {
		return taskGr.update();
	} else {
		var debugMessage = '[AutoResolutionTaskDataBroker] No permission to update the task record with sys_id: ' + taskGr.getValue('sys_id')
							+ ' for user: ' + gs.getUserName();
		gs.debug(debugMessage);

		return null;
	}
};

/**
 * This method is used to fetch taskGr, since only one RCA will be created for Read operation
 * @param {GlideRecord} contextGr
 * @return {GlideRecord}
 */
AutoResolutionTaskDataBroker.getTaskRecordFromContextRecord = function(contextGr) {
	if (gs.nil(contextGr))
		return;

	// We need to make sure we need to return GlideRecordSecure
	var tableName = contextGr.getElement('configuration').getRefRecord().getValue('target_table_name');
	var sysID = contextGr.getValue('task');

	return AutoResolutionTaskDataBroker.getTaskRecord(tableName, sysID);
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2022-03-22 17:00:36&lt;/sys_created_on&gt;
        &lt;sys_id&gt;b2aaafc3ff520110635f056d793bf170&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;25&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;AutoResolutionTaskDataBroker&lt;/sys_name&gt;
        &lt;sys_package display_value="Issue Auto-Resolution" source="com.glide.cs.auto_resolution"&gt;81ddf4a03c75311068bcf327dfe37fa6&lt;/sys_package&gt;
        &lt;sys_policy&gt;read&lt;/sys_policy&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_b2aaafc3ff520110635f056d793bf170&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2022-04-06 18:35:46&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 09:18:14</sys_created_on>
        <sys_id>9010c99d83341210c6695855eeaad33a</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>AutoResolutionTaskDataBroker</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_9010c99d83341210c6695855eeaad33a</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 09:18:14</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
