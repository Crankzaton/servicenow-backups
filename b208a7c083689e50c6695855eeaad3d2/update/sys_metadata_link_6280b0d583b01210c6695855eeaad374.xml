<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>11df67ee77b230109743dffecf5a99a4</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;public&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.SMConfigUtil&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;SMConfigUtil&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var SMConfigUtil = Class.create();
SMConfigUtil.prototype = {
    initialize: function() {
		this.cacheManager = new global.SMConfigCacheManager();
		this.cacheSMConfig = null;
		this.smConfigAPI = new sn_sm.SMConfiguration();
		this.wmTaskTableName = 'wm_task';
		this.wmOrderTableName = 'wm_order';

    },
	
	isEnabled: function(taskGR, fieldName, defaultValue) {
		if (taskGR &amp;&amp; fieldName &amp;&amp; ((taskGR instanceof GlideRecord) || (taskGR instanceof String)) &amp;&amp; (taskGR.sys_class_name == this.wmTaskTableName || taskGR.sys_class_name == this.wmOrderTableName)) {
			if (this.cacheSMConfig == null) {
				this.cacheSMConfig = this.cacheManager.getSMConfig(this.wmTaskTableName);
				if (this.cacheSMConfig == null) {
					return this.smConfigAPI.isEnabled(taskGR, fieldName, defaultValue);
				}
			}
			return this.cacheSMConfig[fieldName] == 'true'? true: false;
		} else {
			return this.smConfigAPI.isEnabled(taskGR, fieldName, defaultValue);
		}
	},
	
	hasRole: function(taskGR, roleStr, uid) {
		if (taskGR &amp;&amp; roleStr &amp;&amp; (taskGR.sys_class_name == this.wmTaskTableName || taskGR.sys_class_name == this.wmOrderTableName)) {
			if (this.cacheSMConfig == null) {
				this.cacheSMConfig = this.cacheManager.getSMConfig(this.wmTaskTableName);
				if (this.cacheSMConfig == null) {
					return this.smConfigAPI.hasRole(taskGR, roleStr, uid);
				}
			}
			return this.cacheManager.hasRole(this.cacheSMConfig, roleStr);
		} else {
			return this.smConfigAPI.hasRole(taskGR, roleStr, uid);
		}
	},
	
	getDispatchMethod: function(taskGR) {
		if (taskGR &amp;&amp; (taskGR.sys_class_name == this.wmTaskTableName || taskGR.sys_class_name == this.wmOrderTableName)) {
			if (this.cacheSMConfig == null) {
				this.cacheSMConfig = this.cacheManager.getSMConfig(this.wmTaskTableName);
				if (this.cacheSMConfig == null) {
					return this.smConfigAPI.getDispatchMethod(taskGR);
				}
			}
			return this.cacheSMConfig['task_dispatch_method'];
		} else {
			return this.smConfigAPI.getDispatchMethod(taskGR);
		}
	},
	
	
    type: 'SMConfigUtil'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2021-09-28 04:21:38&lt;/sys_created_on&gt;
        &lt;sys_id&gt;11df67ee77b230109743dffecf5a99a4&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;9&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;SMConfigUtil&lt;/sys_name&gt;
        &lt;sys_package display_value="Field Service Management" source="com.snc.work_management"&gt;b66bd6bb4722c210cd4e1ce4316d4387&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_11df67ee77b230109743dffecf5a99a4&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2021-09-30 21:09:15&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:10:24</sys_created_on>
        <sys_id>6280b0d583b01210c6695855eeaad374</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>SMConfigUtil</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_6280b0d583b01210c6695855eeaad374</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:10:24</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
