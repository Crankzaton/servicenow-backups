<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>1a29e48dff706110468365d7d3b8fe78</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;sn_entitlement.UnallocatedEntityRule_RuleQualifyingDataBuilder&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;UnallocatedEntityRule_RuleQualifyingDataBuilder&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var UnallocatedEntityRule_RuleQualifyingDataBuilder = Class.create();
UnallocatedEntityRule_RuleQualifyingDataBuilder.prototype = {
    initialize: function(ruleName) {
        this._qualifyingData = {
            rule: ruleName,
            data: [],
            tests: []
        };
    },

    /**
     * Retrieves the output of the qualifying data that was generated from calling the supporting functions
     * addData(key, value) and addTestResult(roleId, result)
     *
     * @returns {object} An object that identifies the rule, data used, and tests run.
     */
    getQualifyingData: function() {
        return this._qualifyingData;
    },

    /**
     * Adds data that was used during a business rule's test
     *
     * @param {string} key A unique identifier for the data that was used during the rule execution
     * @param {object} value An object that represents the data used 
     */
    addData: function(key, value) {
        this.getQualifyingData().data.push({
            [key]: value
        });
    },

    /**
     * Adds test results that occured during a business rule's execution
     *
     * @param {guid} roleId The roleId that was tested by the business rule
     * @param {bool} result The outcome of testing the roleId
     */
    addTestResult: function(roleId, result) {
        this.getQualifyingData().tests.push({
            role_id: roleId,
            result: result
        });
    },

    type: 'UnallocatedEntityRule_RuleQualifyingDataBuilder'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2023-02-02 00:28:53&lt;/sys_created_on&gt;
        &lt;sys_id&gt;1a29e48dff706110468365d7d3b8fe78&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;3&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;UnallocatedEntityRule_RuleQualifyingDataBuilder&lt;/sys_name&gt;
        &lt;sys_package display_value="Licensing Engine" source="sn_entitlement"&gt;bcadabf277f311109c62f5f3cb5a992a&lt;/sys_package&gt;
        &lt;sys_policy&gt;read&lt;/sys_policy&gt;
        &lt;sys_scope display_value="Licensing Engine"&gt;bcadabf277f311109c62f5f3cb5a992a&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_1a29e48dff706110468365d7d3b8fe78&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2023-02-06 23:29:45&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:11:08</sys_created_on>
        <sys_id>1db0701983b01210c6695855eeaad315</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>UnallocatedEntityRule_RuleQualifyingDataBuilder</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_1db0701983b01210c6695855eeaad315</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:11:08</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
