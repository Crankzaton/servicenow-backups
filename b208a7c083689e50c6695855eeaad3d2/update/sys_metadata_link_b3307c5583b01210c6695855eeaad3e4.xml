<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>040d8352c39210105553b740ad40dd5c</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.FlowDesignerArtifactsCollector&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;This script include the following functionalities:
1) count and store most popular actions for a specific date&lt;/description&gt;
        &lt;name&gt;FlowDesignerArtifactsCollector&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var FlowDesignerArtifactsCollector = Class.create();

FlowDesignerArtifactsCollector.prototype = {
	actionInstanceTable: 'sys_hub_action_instance',
	popularTable:  'sys_hub_popular_artifacts',
	artifactsType: {
		ACTION: 'ACTION',
		FLOW: 'FLOW',
		SUBFLOW: 'SUBFLOW'
	},
	fields: { // columns on popular table
		InternalName: 'internal_name',
		Type: 'type',
		CountDate: 'count_date',
		UseCount: 'use_count'
	},
	/*
	 * Initialize
	 */
    initialize: function() {},
    /* 
	 * query sys_hub_action_instance for the last number of days from today (countDays)  
     * and count the number of usage grouped by action type.  This data is stored in 
     * sys_hub_popular_artifacts
     */
    mostPopularAction: function(countDays) {
		if (typeof countDays !== 'number') return;
		
        var today = new Date();
        var groupByCol = 'action_type.internal_name';

        for (i = 0; i &lt; countDays; i++) {
            //*--- set query date
            var startDateStr = this._toUTCDate(today);
			if (startDateStr === '') continue;
			
            // set date to query: YYYY-MM-DD@javascript:gs.dateGenerate('YYYY-MM-DD','start')@javascript:gs.dateGenerate('YYYY-MM-DD','end')
            var dateQueryStr = startDateStr + "@javascript:gs.dateGenerate('" + startDateStr + "','start')@javascript:gs.dateGenerate('" + startDateStr +
                "','end')";

            //*--- set query for action instance
            var instance = new GlideRecord(this.actionInstanceTable);
            var instanceDateStr = "flow.sys_class_name=sys_hub_flow^sys_created_onON" + dateQueryStr + "^ORsys_updated_onON" + dateQueryStr;
            instance.addEncodedQuery(instanceDateStr);
            instance.groupBy(groupByCol);
            instance.query();

            //*--- aggregate data grouped by action internal name for this date
            var list = {};
            while (instance.next()) {
                var name = instance.action_type.internal_name;
                if (typeof list[name] === 'undefined')
                    list[name] = {
                        'count': 1,
                        'name': instance.action_type.name,
                        'internal_name': name
                    };
                else
                    list[name]['count']++;
            } //end while


            //*--- write to data table
            // clean up: if there is already data for this date, lets clear it up
            var collector = new GlideRecord(this.popularTable);
            var collectorDateStr = "count_dateON" + dateQueryStr;
            collector.addEncodedQuery(collectorDateStr);
            collector.query();
            if (collector.getRowCount() &gt; 0) {
				gs.info("Count Date: " + startDateStr + " removed " + collector.getRowCount() + " old records."); 
                collector.deleteMultiple();
			} else 
				gs.info("Count Date: " + startDateStr + " - no action used"); 

            var countDate = new GlideDateTime(startDateStr + " 00:00:00");
            for (var key in list) {
                var item = list[key];
                // internal_name, count_date, use_count, type
                collector.initialize();
                collector.setValue(this.fields.CountDate, countDate);
                collector.setValue(this.fields.UseCount, item['count']);
                collector.setValue(this.fields.InternalName, item['internal_name']);
				collector.setValue(this.fields.Type, this.artifactsType.ACTION);
                collector.insert();

                gs.info("inserted count date[" + countDate.getDate() + "] internal_name[" + item['name'] + "] count["  +  item['count'] + "]");
            } //end for

            today.setDate(today.getDate() - 1);
        }

    },
    // get UTC date with format YYYY-MM-DD
    _toUTCDate: function(d) {
        if (d instanceof Date) {
            var dd = d.getUTCDate();
            var mm = d.getUTCMonth() + 1;
            var yy = d.getUTCFullYear();
            return yy + "-" + (mm &lt; 10 ? "0" + mm : mm) + "-" + (dd &lt; 10 ? "0" + dd : dd);
        }

        return '';
    },
	
    type: 'FlowDesignerArtifactsCollector'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2020-07-31 18:22:42&lt;/sys_created_on&gt;
        &lt;sys_id&gt;040d8352c39210105553b740ad40dd5c&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;1&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;FlowDesignerArtifactsCollector&lt;/sys_name&gt;
        &lt;sys_package display_value="Flow Designer Designer Model" source="com.glide.hub.designer_backend.model"&gt;ffe9f8683cf1311068bcf327dfe37fdf&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_040d8352c39210105553b740ad40dd5c&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2020-07-31 18:23:34&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:09:08</sys_created_on>
        <sys_id>b3307c5583b01210c6695855eeaad3e4</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>FlowDesignerArtifactsCollector</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_b3307c5583b01210c6695855eeaad3e4</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:09:08</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
