<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>14436690a3113110f1f52780f31e61b4</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.PDProcessContextRepository&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;PDProcessContextRepository&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var PDProcessContextRepository = Class.create();
PDProcessContextRepository.prototype = {
    initialize: function() {},
	archiveProcessContexts: function(contextIds) {
        var terminalProcessContextIds = [];

        var process = new GlideRecord(PDConstants.TABLES.PD_CONTEXT);
        process.addQuery(PDConstants.FIELDS.SYS_ID, 'IN', contextIds);
        process.query();

		// Filter out non-terminal process contexts just in case
        while (process.next()) {
            if (this._isProcessTerminal(process.getValue(PDConstants.FIELDS.STATE))) {
                terminalProcessContextIds.push(process.getUniqueValue());
            }
        }

		var processContextIdsToArchive = terminalProcessContextIds.join(',');
		var activityContextIds = this._getActivityContextsForProcesses(processContextIdsToArchive);
        
		this._deleteActivityContextElementMappings(activityContextIds);
        this._deleteProcessContextLogs(processContextIdsToArchive);
	},
	_isProcessTerminal: function(state) {
		var STATE_VALUES = PDConstants.STATE_VALUES;
		return state === STATE_VALUES.COMPLETE || state === STATE_VALUES.SKIPPED || state === STATE_VALUES.CANCELLED || state === STATE_VALUES.ERROR;
	},
	_getActivityContextsForProcesses: function(processContextIds) {
		var activityContextIds = [];
        var pdActivityContext = new GlideRecord(PDConstants.TABLES.PD_ACTIVITY_CONTEXT);
        pdActivityContext.addQuery(PDConstants.FIELDS.CONTEXT, 'IN', processContextIds);
        pdActivityContext.query();

        while (pdActivityContext.next()) {
            activityContextIds.push(pdActivityContext.getUniqueValue());
        }

		return activityContextIds.join(',');
	},
	_deleteActivityContextElementMappings: function(activityContextIds) {
		var elementMappings = new GlideRecord(PDConstants.TABLES.ELEMENT_MAPPING);
        elementMappings.addQuery(PDConstants.FIELDS.ID, 'IN', activityContextIds);
        elementMappings.query();
        elementMappings.deleteMultiple();
	},
	_deleteProcessContextLogs: function(processContextIds) {
		var contextLogs = new GlideRecord(PDConstants.TABLES.PD_CONTEXT_LOG);
        contextLogs.addQuery(PDConstants.FIELDS.CONTEXT, 'IN', processContextIds);
        contextLogs.query();
        contextLogs.deleteMultiple();
	},
    type: 'PDProcessContextRepository'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2023-09-11 18:07:22&lt;/sys_created_on&gt;
        &lt;sys_id&gt;14436690a3113110f1f52780f31e61b4&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;4&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;PDProcessContextRepository&lt;/sys_name&gt;
        &lt;sys_package display_value="Process Automation Designer Core - Model" source="com.glide.pad.core.model"&gt;0ae817db47220210cd4e1ce4316d431f&lt;/sys_package&gt;
        &lt;sys_policy&gt;read&lt;/sys_policy&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_14436690a3113110f1f52780f31e61b4&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2023-09-11 21:18:10&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:10:37</sys_created_on>
        <sys_id>6d90f4d583b01210c6695855eeaad308</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>PDProcessContextRepository</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_6d90f4d583b01210c6695855eeaad308</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:10:37</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
