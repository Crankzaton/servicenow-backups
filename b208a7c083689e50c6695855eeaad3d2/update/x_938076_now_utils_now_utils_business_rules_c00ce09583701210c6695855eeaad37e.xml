<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>true</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Delete Project Time Card Exceptions Rec</name>
        <order>1125</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {

 /**
  * First checking if top_task has any time card logged for the user & week starts opn
  * If it's not < 1, Refresh the status.
  * If < 1, delete the projectTimeCard exception record.
  */

 var gr = new GlideAggregate('time_card');
 var week_starts_on = current.getValue('week_starts_on');
 var top_task = current.getValue('top_task');

 gr.addQuery('time_sheet', current.getValue('time_sheet'));
 gr.addQuery('week_starts_on', week_starts_on);
 gr.addQuery('top_task', top_task);

 var domainId = TimeCardUtil.getUserDomainId(user);
 
 if (JSUtil.notNil(domainId)) gr.addQuery('sys_domain', domainId);

 gr.addAggregate('COUNT');

 gr.query();

 if (gr.next()) {
  var count = gr.getAggregate('COUNT');
  var eg = new ProjectTimeCardExceptionGenerator();
  var user = current.getValue('user');

  if (count < 1) {
   eg.deleteExceptionRecord(user, week_starts_on, top_task, domainId);
  } else {
   eg.createOrUpdateExceptionRecord(user, week_starts_on, top_task);
  }
 }

})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:50:34</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>c00ce09583701210c6695855eeaad37e</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Delete Project Time Card Exceptions Rec</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_c00ce09583701210c6695855eeaad37e</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:50:34</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=c00ce09583701210c6695855eeaad37e"/>
</record_update>
