<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>SNC - ITIL - Close Related</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[//
// Close any tasks that are related to the current task
//
function closeRelatedTasks(me) {
 var task = new GlideRecord("task");
 task.addQuery("parent", me.sys_id);
 task.addQuery("sys_class_name", "!=", "kb_submission");
 task.addQuery("sys_class_name", "!=", "incident");
 task.query();
 while (task.next()) {
  if (task.sys_class_name == 'problem')
   closeProblem(task.sys_id, me.number);
  else if (task.sys_class_name == 'change_request')
   closeChange(task.sys_id, me.number);
  else {
   task.active.setValue(false);
   task.update();
   gs.print("Task " + task.number + ' closed based on closure of task ' + me.number);
  }
 }
 
 this.closeIncident(me);
}

function closeIncident(me) {
 var incident = new GlideRecord('incident');
 if (incident.isValidField('parent_incident'))
  incident.addQuery('parent_incident', me.sys_id);
 else if(incident.isValidField('parent'))
   incident.addQuery('parent', me.sys_id);
  else
   return;
 incident.addActiveQuery();
 incident.query();
 while (incident.next()) {
  var msg = gs.getMessage("Incident '{0}' closed based on closure of task '{1}'", [incident.number, me.number]);
  gs.print(msg);
  incident.incident_state.setValue(IncidentState.CLOSED);
  incident.active.setValue(false);
  incident.comments = msg;
  if (incident.isValidField("close_notes")) {
   var notes = incident.close_notes.getDisplayValue();
   notes = notes + '\n' + msg + '\n\n' + me.close_notes;
   incident.close_notes.setValue(notes);
  }
  if(incident.isValidField("close_code"))
   incident.close_code.setValue(me.close_code);
  incident.update();
 }
}

function closeProblem(myID, fromNumber) {
 if (pm.isActive('com.snc.best_practice.problem.madrid.state_model'))
  return;
 var problem = new GlideRecord('problem');
 if (problem.get('sys_id', myID)) {
  var msg = gs.getMessage("Problem '{0}' closed based on closure of task '{1}'", [problem.number, fromNumber]);
  problem.problem_state.setValue(4);
  var notes = problem.close_notes.getDisplayValue();
  notes = notes + '\n' + msg;
  problem.close_notes.setValue(notes);
  problem.update();
  gs.print(msg);
 }
}

function closeChange(myID, fromNumber) {
 var rfc = new GlideRecord('change_request');
 if (rfc.get('sys_id', myID)) {
  var chgReq = ChangeRequest(rfc);
  
  if (!chgReq.isClosed() && !chgReq.isCancelled()) {
   chgReq.close();
   var msg = gs.getMessage("Change '{0}' closed based on closure of task '{1}'", [rfc.number, fromNumber]);
   var notes = rfc.close_notes.getDisplayValue();
   notes = notes + '\n' + msg;
   rfc.close_notes = notes;
   rfc.update();
  }
 }
}]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:51:59</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>fc5c641983701210c6695855eeaad3a7</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>SNC - ITIL - Close Related</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_fc5c641983701210c6695855eeaad3a7</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:51:59</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=fc5c641983701210c6695855eeaad3a7"/>
</record_update>
