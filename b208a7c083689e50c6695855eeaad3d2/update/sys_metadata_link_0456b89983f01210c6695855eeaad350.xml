<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>32e9caf8b750111095b325168e11a91f</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;public&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;sn_oe_sfs.VACommonHTMLAdapter&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;VACommonHTMLAdapter&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var VACommonHTMLAdapter = Class.create();
VACommonHTMLAdapter.prototype = Object.extendsObject(VACommonAdapterBase, {
    initialize: function(adapter, inputBuilder) {
        VACommonAdapterBase.prototype.initialize.call(this, adapter, inputBuilder, this.type);
    },

    transform: function() {
        try {
            var richControl = this.inputBuilder.getRichControl();
            var payload = this.inputBuilder.getPayload();
            var links = richControl.links;

            var response = this.adapter.getResponseObject(richControl, payload);

            if (links != null &amp;&amp; links.length &gt; 0) {
                response = this.adapter.addHtmlLinkMessage(response, payload);

                for (var i = 0; i &lt; links.length; i++) {
                    var item = links[i];
                    if (item.link) {
                        var label = item.label ? item.label : item.link;
                        response = this.adapter.addLink(payload, response, item.link, label);
                    }
                }
            }

            return this.adapter.buildResponse(response, payload);
        } catch (e) {
            this.logger.error("Error in common default html outbound transformer : " + e.message);
            throw e;
        }
    },

    type: 'VACommonHTMLAdapter'
});]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2022-06-22 20:09:38&lt;/sys_created_on&gt;
        &lt;sys_id&gt;32e9caf8b750111095b325168e11a91f&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;14&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;VACommonHTMLAdapter&lt;/sys_name&gt;
        &lt;sys_package display_value="Omni-Experience Standard Feature Set" source="sn_oe_sfs"&gt;53b1b0e79761011018b2fa98c253afcc&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Omni-Experience Standard Feature Set"&gt;53b1b0e79761011018b2fa98c253afcc&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_32e9caf8b750111095b325168e11a91f&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2022-06-22 23:37:36&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:35:38</sys_created_on>
        <sys_id>0456b89983f01210c6695855eeaad350</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>VACommonHTMLAdapter</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_0456b89983f01210c6695855eeaad350</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:35:38</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
