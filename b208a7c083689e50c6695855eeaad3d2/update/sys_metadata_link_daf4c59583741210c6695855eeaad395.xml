<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>b3345aef77a01110326c80c2fa5a995c</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_fix"&gt;
    &lt;sys_script_fix action="INSERT_OR_UPDATE"&gt;
        &lt;before&gt;false&lt;/before&gt;
        &lt;description&gt;Provide a fix script to migrate the provider's respective NLU confidence property values into its open_nlu_driver record.&lt;/description&gt;
        &lt;name&gt;Load open_nlu_driver confidence columns&lt;/name&gt;
        &lt;record_for_rollback&gt;true&lt;/record_for_rollback&gt;
        &lt;script&gt;&lt;![CDATA[function updateOpenNLUDriverConfidenceThresholds() {
	var gr = new GlideRecord('sys_cs_general_settings');
	gr.query();

	if (gr.next()) {
		var providerSysId = gr.getValue('nlu_driver');
		var nluEnabled = gr.nlu_enabled.toString();
		var grOpenNluDriver = new GlideRecord('open_nlu_driver');
		grOpenNluDriver.query();

		var intentConfidenceThreshold = gs.getProperty('com.glide.cs.intent_confidence_threshold');
		var entityConfidenceThreshold = gs.getProperty('com.glide.cs.entity_confidence_threshold');
		var intentConfidenceDelta = gs.getProperty('com.glide.cs.intent_confidence_delta');

		while (grOpenNluDriver.next()) {
			if (grOpenNluDriver.getValue('sys_id') === providerSysId &amp;&amp; nluEnabled === 'true') {
				// Copy original value from sys_properties to open_nlu_driver record where sys_id = providerSysId
				grOpenNluDriver.setValue('intent_confidence_threshold', intentConfidenceThreshold);
				grOpenNluDriver.setValue('entity_confidence_threshold', entityConfidenceThreshold);
				grOpenNluDriver.setValue('intent_confidence_delta', intentConfidenceDelta);
			} else {
				if (grOpenNluDriver.getValue('name') === 'ServiceNow NLU') {
					// For ServiceNowNLU inactive, set the default value which is 0.0/0.0/0.0
					grOpenNluDriver.setValue('intent_confidence_threshold', '0.0');
					grOpenNluDriver.setValue('entity_confidence_threshold', '0.0');
					grOpenNluDriver.setValue('intent_confidence_delta', '0.0');
				} else {
					// For all other providers, set the default value which is 0.7/0.5/0.1
					grOpenNluDriver.setValue('intent_confidence_threshold', '0.7');
					grOpenNluDriver.setValue('entity_confidence_threshold', '0.5');
					grOpenNluDriver.setValue('intent_confidence_delta', '0.1');
				}
			}
			grOpenNluDriver.update();
		}
	}
}

function overrideVAIntentThreshold() {
	//Override VA intent threshold only if NLU is enabled and Servicenow NLU is the NLU provider
	var ga = new GlideAggregate("sys_cs_general_settings");
	ga.addAggregate('COUNT');
	ga.addQuery("nlu_enabled", "true");
	ga.addQuery("nlu_driver", "64c023c17300330021a044764df6a70e");
	ga.query();
	if (ga.next() &amp;&amp; ga.getAggregate('COUNT') &gt; 0) {
		if (gs.getProperty("com.glide.cs.intent_confidence_threshold") == 0.7) {
			gs.info("Overriding VA intent confidence threshold as NLU provider is Servicenow NLU");
			gs.setProperty("com.glide.cs.intent_confidence_threshold", 0);
		}
		if (gs.getProperty("com.glide.cs.intent_confidence_delta") == 0.1) {
			gs.info("Overriding VA intent confidence delta as NLU provider is Servicenow NLU");
			gs.setProperty("com.glide.cs.intent_confidence_delta", 0);
		}
	}
	return;
}

var predecessorGr = new GlideRecord('sys_script_fix');
predecessorGr.addQuery('sys_id', '13fb390feb520110f4e8dc7ab5522851');
predecessorGr.query();
var alreadyRan = predecessorGr.next();
if (!alreadyRan)
	overrideVAIntentThreshold();

updateOpenNLUDriverConfidenceThresholds();
]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_fix&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2022-07-14 17:56:41&lt;/sys_created_on&gt;
        &lt;sys_id&gt;b3345aef77a01110326c80c2fa5a995c&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;Load open_nlu_driver confidence columns&lt;/sys_name&gt;
        &lt;sys_package display_value=""&gt;afc239e293400210b31a30dcebba1086&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_fix_b3345aef77a01110326c80c2fa5a995c&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2022-07-14 17:56:41&lt;/sys_updated_on&gt;
        &lt;unloadable&gt;false&lt;/unloadable&gt;
    &lt;/sys_script_fix&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 09:39:41</sys_created_on>
        <sys_id>daf4c59583741210c6695855eeaad395</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Load open_nlu_driver confidence columns</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_daf4c59583741210c6695855eeaad395</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 09:39:41</sys_updated_on>
        <tablename>sys_script_fix</tablename>
    </sys_metadata_link>
</record_update>
