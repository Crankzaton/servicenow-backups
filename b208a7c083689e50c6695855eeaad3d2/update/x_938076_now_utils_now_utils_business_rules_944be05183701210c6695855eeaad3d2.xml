<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Data collection job information</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
 var jobName = current.name;
 if(!gs.nil(jobName))
  jobName = GlideStringUtil.escapeHTML(current.name);
 var userTz = gs.getSession().getTimeZoneName();
 var runAsTz = GlideUser.getSysTimeZone();
 if (current.run_as_tz)
  runAsTz = current.run_as_tz;

 if (current.score_operator == 'relative') {
  var startIntervalMsg = getIntervalMessage(current.score_relative_start_interval, current.score_relative_start);
  var endIntervalMsg = getIntervalMessage(current.score_relative_end_interval, current.score_relative_end);
  gs.addInfoMessage(gs.getMessage('The job {0} will collect scores starting from {1} {2} ago to {3} {4} ago as specified in the <b>Relative start</b> and <b>Relative end</b> fields. The collection time is based on the {5} timezone as defined in the <b>Run as tz</b> field.', [jobName, current.score_relative_start, startIntervalMsg, current.score_relative_end, endIntervalMsg, runAsTz]));
 } else
  gs.addInfoMessage(gs.getMessage('The job {0} will collect scores for the period {1} to {2}.', [jobName, current.score_fixed_start.getDisplayValue(), current.score_fixed_end.getDisplayValue()]));

 if (current.run_type != 'daily' && current.run_type != 'weekly' && current.run_type != 'monthly')
  return;

 if (!current.isNewRecord()) {
  var gr = new GlideRecord('sys_trigger');
  gr.addQuery('document_key',current.getValue('sys_id'));
  //ignore sys_trigger record for execute now
  gr.addQuery('trigger_type', '!=', 0);
  gr.setLimit(1);
  gr.query();
  gr.next();
  var nextExecution = gr.next_action;

  gs.addInfoMessage(gs.getMessage('The next execution of job {0} is at {1} {2} ({3} UTC).', [jobName, nextExecution.getDisplayValue(), userTz, nextExecution]));
 }

})(current, previous);

function getIntervalMessage(interval, value) {
 if (interval == 'days') {
  if (value == 1)
   return gs.getMessage('day');
  else
   return gs.getMessage('days');
 }
 if (interval == 'weeks') {
  if (value == 1)
   return gs.getMessage('week');
  else
   return gs.getMessage('weeks');
 }
 if (interval == 'months') {
  if (value == 1)
   return gs.getMessage('month');
  else
   return gs.getMessage('months');
 }
 if (interval == 'periods') {
  if (value == 1)
   return gs.getMessage('period');
  else
   return gs.getMessage('periods');
 }
}]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:47:19</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>944be05183701210c6695855eeaad3d2</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Data collection job information</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_944be05183701210c6695855eeaad3d2</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:47:19</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=944be05183701210c6695855eeaad3d2"/>
</record_update>
