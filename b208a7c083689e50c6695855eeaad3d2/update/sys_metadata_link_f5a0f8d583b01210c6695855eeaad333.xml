<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>172a7200eb201100eac006a2f206fe11</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;public&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.OnCallRotationPersonal&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;API for quickly getting on call rotation data relevant to current logged in user&lt;/description&gt;
        &lt;name&gt;OnCallRotationPersonal&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[gs.include("PrototypeServer");
var OnCallRotationPersonal = Class.create();
OnCallRotationPersonal.prototype = {
    initialize: function() {
    },
	
	onCallDuringPeriod: function(group, /*GlideDateTime*/ startTime, /*GlideDateTime*/ endTime) {
		var periodsOnCall = [];
		var items = this.getItems(group, startTime, endTime);
		for (var i = 0; i &lt; items.size(); i++) {
			var item = items.get(i);
			//Do checks here so that item is
			//rotation item
			var type = item.getDataByKey('type');
			if(type == 'rotation' || type == 'coverage') {
				periodsOnCall.push(item);
			}
		}
		return periodsOnCall;
	},
	
	getItems: function(group, start, end) {
		//Get timezone
		var timezone = gs.getSession().getTimeZoneName();
		//Get items
		var page = new GlideAJAXSchedulePage(start, end ,timezone);
		gs.include("OnCallRotationCalculator");
		var rotation = new OnCallRotationCalculator();
		rotation.setPage(page);
		//probably find all groups a user is part of
		rotation.run(group);

		return rotation.page.getItems();
	},

    type: function() {
      return 'OnCallRotationPersonal';
   }
}]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2013-10-16 15:08:17&lt;/sys_created_on&gt;
        &lt;sys_id&gt;172a7200eb201100eac006a2f206fe11&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;1&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;OnCallRotationPersonal&lt;/sys_name&gt;
        &lt;sys_package display_value="On-Call Scheduling" source="com.snc.on_call_rotation"&gt;4bca78ec3cf1311068bcf327dfe37f86&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_172a7200eb201100eac006a2f206fe11&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2016-07-05 15:19:18&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:10:54</sys_created_on>
        <sys_id>f5a0f8d583b01210c6695855eeaad333</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>OnCallRotationPersonal</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_f5a0f8d583b01210c6695855eeaad333</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:10:54</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
