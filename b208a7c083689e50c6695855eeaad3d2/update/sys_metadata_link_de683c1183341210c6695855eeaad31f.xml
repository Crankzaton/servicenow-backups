<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>860df9d0c3323010a9f5e548fa40dd99</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;sn_deploy_pipeline.DeploymentFlowUtils&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;DeploymentFlowUtils&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var DeploymentFlowUtils = Class.create();
DeploymentFlowUtils.prototype = {
	/*
     * Initialization: 
	 * Sets up pipelineEnvironmentOrderList based on the passed pipelineSysId
     * Sets up processedEnv based on the passed processed or initializes it to an empty array
	 * Identifies the list of unprocessed records
	 *
     * @param {String} pipelineSysId - sys_id of the pipeline
     * @param {String} processed - optional list of pipelineEnvironmentOrder object with the following keys : pipelineEnvironmentOrderSysId, environmentSysId, order, environmentName, instanceUrl
     */
    initialize: function(pipelineSysId, processed) {
        this.pipelineSysId = pipelineSysId;
        this.processedEnv = processed || [];
        this.pipelineEnvironmentOrderList = new sn_pipeline.PipelineEnvironmentOrderUtils().getPipelineEnvironmentOrderList(pipelineSysId);

        var maxProcessedOrder;
        var processedMap = {};

        this.processedEnv.forEach(function(pipelineEnvOrder) {
            processedMap[pipelineEnvOrder.pipelineEnvironmentOrderSysId] = pipelineEnvOrder;
			var currentOrder = parseInt(pipelineEnvOrder.order);
			
			if(typeof maxProcessedOrder === 'undefined') {
				maxProcessedOrder = currentOrder;
			} else {
				maxProcessedOrder = currentOrder &gt; maxProcessedOrder ? currentOrder : maxProcessedOrder;
			}
        });

        var processedSysIds = Object.keys(processedMap);

        this.unProcessedEnv = this.pipelineEnvironmentOrderList.filter(function(data) {
            var recordOrder = parseInt(data.order);

            var isPreviouslyProcessed = processedSysIds.indexOf(data.sys_id) &gt;= 0;
            var isOrderSameOrGreaterThanLastProcessedOrder = recordOrder &gt;= maxProcessedOrder;
			
			/*
			 	When a pipeline environment order record is previously processed, the record should be considered as unprocessed if:
				1. The record's order has been modified since last processing and the modified order is greater than or the same as the order the last time it was processed.
				
				When a pipeline environment order record is not previously processed, the record should be considered as unprocessed if any of the following scenarios evaluate to true:
				1. The record's order is greater or the same as the max processed order.
				2. nothing has been processed till now.
			*/
            if (isPreviouslyProcessed) {
                var isOrderSameAsPreviousProcessing = data.order === processedMap[data.sys_id].order;

                return !isOrderSameAsPreviousProcessing &amp;&amp; isOrderSameOrGreaterThanLastProcessedOrder;
            } else {
                return typeof maxProcessedOrder === 'undefined' || isOrderSameOrGreaterThanLastProcessedOrder;
            }
        });
	},

    getNextPipelineEnvironmentOrderRecordInfo: function() {
        var currentEnv = this.unProcessedEnv.shift();

        if (currentEnv) {
            var transformedObject = {
                pipelineEnvironmentOrderSysId: currentEnv.sys_id,
                environmentSysId: currentEnv.environment.sys_id,
                order: currentEnv.order,
                environmentName: currentEnv.environment.name,
                instanceUrl: currentEnv.environment.instance_url,
				instanceType: currentEnv.environment.instance_type,
            };

            this.processedEnv.push(transformedObject);

            return transformedObject;
        }

        return null;

    },

    getPipelineEnvironmentOrderList: function() {
        return this.pipelineEnvironmentOrderList;
    },

    getProcessedPipelineEnvironmentOrderList: function() {
        return this.processedEnv;
    },

    getUnProcessedPipelineEnvironmentOrderList: function() {
        return this.unProcessedEnv;
    },

    type: 'DeploymentFlowUtils'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2021-09-20 20:09:43&lt;/sys_created_on&gt;
        &lt;sys_id&gt;860df9d0c3323010a9f5e548fa40dd99&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;8&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;DeploymentFlowUtils&lt;/sys_name&gt;
        &lt;sys_package display_value="Deployment Pipeline" source="sn_deploy_pipeline"&gt;bb67ed7253e83010b846ddeeff7b1204&lt;/sys_package&gt;
        &lt;sys_policy&gt;read&lt;/sys_policy&gt;
        &lt;sys_scope display_value="Deployment Pipeline"&gt;bb67ed7253e83010b846ddeeff7b1204&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_860df9d0c3323010a9f5e548fa40dd99&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2023-02-13 20:32:11&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:44:47</sys_created_on>
        <sys_id>de683c1183341210c6695855eeaad31f</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>DeploymentFlowUtils</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_de683c1183341210c6695855eeaad31f</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:44:47</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
