<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Updating total budget from breakdown</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous) {
 if(current.operation() == 'insert' && current.budget <=0)
  return;
// This is to prevent rollup from cost plan breakdown to project funding in case if the BR is triggered on insert/update of the funding record.
 var isOriginatingFromFunding = (typeof origFundingId !== 'undefined') && JSUtil.notNil(origFundingId);
 if(isOriginatingFromFunding)
  return;
 
 var fundManager = new PPMFundManager();
 var entity = current.breakdown_type;
 var entityId = current.getValue(entity);
 var expenseType = current.expense_type;
 var fiscalYear = PPMFiscalPeriod.getFiscalYearForFiscalPeriod(current.fiscal_period);
 var taskRecord = current.task.getRefRecord();
 var taskType = "project";
 if (taskRecord.instanceOf('dmn_demand')) {
  taskType = "demand";
 }
 var taskCurrency = (taskType == 'demand') ? taskRecord.demand_currency : taskRecord.project_currency;
 fundManager.updateBudgetFromBreakdowns(entity, entityId, fiscalYear, expenseType, new ProjectCurrencyUtil().isMultiCurrencyEnabled(), taskType, taskCurrency);

})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:49:38</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>9ecb6c1583701210c6695855eeaad35e</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Updating total budget from breakdown</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_9ecb6c1583701210c6695855eeaad35e</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:49:38</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=9ecb6c1583701210c6695855eeaad35e"/>
</record_update>
