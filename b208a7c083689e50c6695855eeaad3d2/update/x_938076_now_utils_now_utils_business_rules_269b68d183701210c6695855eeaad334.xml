<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Set Auto-Resolution config active flag</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

 //when active flag is disabled on language configuration, check if there are any other active configurations if not disabled the active flag on corresponding configuration record

 var languageGr = new GlideRecord(AutoResolutionConstants.CONFIG_LANGUAGE_TABLE_NAME);
 if (!current.active) {
  languageGr.addQuery('configuration', current.configuration);
  languageGr.addQuery('sys_id', '!=', current.getUniqueValue());
  languageGr.addActiveQuery();
  languageGr.query();
   
  if (!languageGr.next()) {
   var configGr = new GlideRecord(AutoResolutionConstants.CONFIG_TABLE_NAME);
   configGr.get(current.configuration);
   if (configGr.active) {
    gs.addInfoMessage(gs.getMessage('Please set any language configuration record to active to enable Auto-Resolution configuration'));
    configGr.active = false;
    configGr.update();
   }  
  }
  return;
 }
 // After SD->Tokyo/Utah upgrade, ensure Agent Zero is inactive
 else if (current.capability.toString() === AutoResolutionConstants.ML_CAPBILITIES.AGENT_ZERO_WORKFLOW || current.capability.toString() === AutoResolutionConstants.ML_CAPBILITIES.LANGUAGEX) {
  languageGr.addQuery('configuration', current.configuration);
  languageGr.addQuery('capability', AutoResolutionConstants.ML_CAPBILITIES.AGENT_ZERO);
  languageGr.addActiveQuery();
  languageGr.query();
  
  if (languageGr.next()) {
   languageGr.active = false;
   languageGr.update();
  }
 }
})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:48:50</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>269b68d183701210c6695855eeaad334</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Set Auto-Resolution config active flag</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_269b68d183701210c6695855eeaad334</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:48:50</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=269b68d183701210c6695855eeaad334"/>
</record_update>
