<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition>gs.getProperty('glide.authenticate.multifactor') != 'true' &amp;&amp; gs.getProperty('glide.authenticate.auth.policy.enabled') == 'true' &amp;&amp; (current.active.changesTo(true)  || current.type.changes()) &amp;&amp; current.type != 'any'</condition>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>EnableMFAPropOnMFAPolicyActivation</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {
    // check if the current Policy is attached to the MFA context
    var currPolicySysId = current.sys_id;
    var isReferenced = isPolicyReferencedInMFAContextRecord();

 // If this policy is referenced in the MFA context, then enable MFA Pro, if not already enabled
    if (isReferenced) {
        var glideRecord = new GlideRecord("sys_properties");
  // 562c1882d713310091204187ed6103b9 - sysId of Property glide.authenticate.multifactor
        glideRecord.get("562c1882d713310091204187ed6103b9");
        if (glideRecord.isValidRecord()) {
            glideRecord.setValue("value", "true");
            glideRecord.update();
   gs.log("Property glide.authenticate.multifactor is updated to true.");
        }
    }

    // Return True if the current policy is referenced in MFA Context otherwise False
    function isPolicyReferencedInMFAContextRecord() {
        var glideRecord = new GlideRecord("sys_mfa_policy_context");
        glideRecord.get('c4895d9373512010616ca9843cf6a79f');
        if (glideRecord.isValidRecord()) {
            var defaultPolicy = glideRecord.getValue("default_policy");
            // If the current policy is actively(i.e. set as Default) referenced in MFA context record, then update the MFA Property in not already enabled
            if (glideRecord.getValue(defaultPolicy) == currPolicySysId) {
                return true;
            }
        }
        return false;
    }

})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:50:28</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>a2fb209583701210c6695855eeaad347</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>EnableMFAPropOnMFAPolicyActivation</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_a2fb209583701210c6695855eeaad347</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:50:28</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=a2fb209583701210c6695855eeaad347"/>
</record_update>
