<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition>current.state == "ready" &amp;&amp; current.queue == "input" &amp;&amp; current.topic == "KubernetesOperationProbe"</condition>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>KubernetesOperationResponder</name>
        <order>100</order>
        <priority>150</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {

    var xmlPayload = GlideXMLUtil.parse(current.payload);
    var error = xmlPayload.getDocumentElement().getAttribute('error');
    if (JSUtil.notNil(error))
        current.state = "error";
    else
        current.state = "processed";

    current.processed = new GlideDateTime();
    current.update();

    // update the deployment request record
    var deployRequestParam = GlideXMLUtil.selectSingleNode(xmlPayload.getDocumentElement(), "//parameter[@name='deployment_request_id']");
    var deploymentRequestId;
    if (JSUtil.notNil(deployRequestParam))
        deploymentRequestId = deployRequestParam.getAttribute('value');

    var gr = new GlideRecord('mid_server_deployment');
    if (gr.get(deploymentRequestId)) {
        var outputNode = GlideXMLUtil.selectSingleNode(xmlPayload.getDocumentElement(), "/results/result/output");
        var output = '';
        if (outputNode)
            output = outputNode.getTextContent();
        gr.setValue('results', output);

        var resultCode = '' + xmlPayload.getDocumentElement().getAttribute('result_code');
        switch (resultCode) {
            case "0":
                gr.setValue('state', 'complete');
                break;
            case "900":
                gr.setValue('state', 'partial_success');
                break;
            default:
                gr.setValue('state', 'failed');
                break;
        }
        gr.setValue('processed_at', current.processed);
        gr.update();
    }
})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:50:10</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>c2eba85583701210c6695855eeaad39d</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>KubernetesOperationResponder</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_c2eba85583701210c6695855eeaad39d</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:50:10</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=c2eba85583701210c6695855eeaad39d"/>
</record_update>
