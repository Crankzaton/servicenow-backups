<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>178db204b3403300f224a72256a8dc23</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="sys_script"&gt;
    &lt;sys_script action="INSERT_OR_UPDATE"&gt;
        &lt;abort_action&gt;false&lt;/abort_action&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;action_delete&gt;false&lt;/action_delete&gt;
        &lt;action_insert&gt;true&lt;/action_insert&gt;
        &lt;action_query&gt;false&lt;/action_query&gt;
        &lt;action_update&gt;true&lt;/action_update&gt;
        &lt;active&gt;false&lt;/active&gt;
        &lt;add_message&gt;false&lt;/add_message&gt;
        &lt;advanced&gt;true&lt;/advanced&gt;
        &lt;change_fields&gt;false&lt;/change_fields&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;collection&gt;spm_taxonomy_node&lt;/collection&gt;
        &lt;condition/&gt;
        &lt;description&gt;Ensure that the taxonomy layer for new node must be the immediate layer sequentially after the new node's parent layer.&lt;/description&gt;
        &lt;execute_function&gt;false&lt;/execute_function&gt;
        &lt;filter_condition table="spm_taxonomy_node"&gt;parentISNOTEMPTY^EQ&lt;item endquery="false" field="parent" goto="false" newquery="false" operator="ISNOTEMPTY" or="false" value=""/&gt;
            &lt;item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/&gt;
        &lt;/filter_condition&gt;
        &lt;is_rest&gt;false&lt;/is_rest&gt;
        &lt;message/&gt;
        &lt;name&gt;Enforce Parent being in layer above&lt;/name&gt;
        &lt;order&gt;100&lt;/order&gt;
        &lt;priority&gt;100&lt;/priority&gt;
        &lt;rest_method/&gt;
        &lt;rest_method_text/&gt;
        &lt;rest_service/&gt;
        &lt;rest_service_text/&gt;
        &lt;rest_variables/&gt;
        &lt;role_conditions/&gt;
        &lt;script&gt;&lt;![CDATA[(function executeRule(current, previous /*null when async*/) {
	//
	// explicitly handle the common error case of parent and child in same taxonomy node
	// to be able to give more helpful error messages to a user
	//
	var parentTaxonomyLayer = current.parent.spm_taxonomy_layer;
	var currentTaxonomyLayer = current.spm_taxonomy_layer;
	var currentTaxonomyLayerLabel = currentTaxonomyLayer.getLabel().toLowerCase();
	
	if (parentTaxonomyLayer &amp;&amp; currentTaxonomyLayer &amp;&amp; 
		parentTaxonomyLayer.getValue('sys_id') === currentTaxonomyLayer.getValue('sys_id')) {
		
		gs.addErrorMessage(gs.getMessage('This child node cannot exist in the same {0} as its parent node',[
			currentTaxonomyLayerLabel
		]));
		current.setAbortAction(true);
		return;
	}
	
	// 
	// Ensure that the taxonomy layer for new node must be the immediate layer 
	// sequentially after the new node's parent layer 
	//
	var parentLayerOrder = parentTaxonomyLayer.order;

	var gr = new GlideRecord('spm_taxonomy_layer_definition');
	gr.orderBy('order');
	gr.setLimit(1);
	gr.addQuery('order', '&gt;', parentLayerOrder);
	gr.addQuery('spm_service_portfolio', current.spm_service_portfolio);
	gr.query();
	
	// The first result should be the layer right after the parent's layer
	if (!gr.next()){
		gs.addErrorMessage(gs.getMessage('There is no sequential {0}',[
			currentTaxonomyLayerLabel
		]));
		current.setAbortAction(true);
		return;
	}
	
	var currentLayerId = currentTaxonomyLayer.getValue('sys_id');
	var nextLayerFromParentId = gr.getValue('sys_id');
	
	if (currentLayerId != nextLayerFromParentId){
		gs.addErrorMessage(gs.getMessage('This node\'s {0} and its\' parent node\'s {1} are not in sequence', [
			currentTaxonomyLayerLabel,
			currentTaxonomyLayerLabel
		]));
		current.setAbortAction(true);
	}
		

})(current, previous);]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2019-03-03 04:35:28&lt;/sys_created_on&gt;
        &lt;sys_domain&gt;global&lt;/sys_domain&gt;
        &lt;sys_domain_path/&gt;
        &lt;sys_id&gt;178db204b3403300f224a72256a8dc23&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;14&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;Enforce Parent being in layer above&lt;/sys_name&gt;
        &lt;sys_overrides/&gt;
        &lt;sys_package display_value="Service Portfolio Management Foundation" source="com.snc.service_portfolio"&gt;9fe738ac3cb1311068bcf327dfe37ff1&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_178db204b3403300f224a72256a8dc23&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;system&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2023-10-10 22:45:18&lt;/sys_updated_on&gt;
        &lt;template/&gt;
        &lt;when&gt;before&lt;/when&gt;
    &lt;/sys_script&gt;
    &lt;sys_translated_text action="delete_multiple" query="documentkey=178db204b3403300f224a72256a8dc23"/&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:57:03</sys_created_on>
        <sys_id>c37de09d83701210c6695855eeaad388</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Enforce Parent being in layer above</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_c37de09d83701210c6695855eeaad388</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:57:03</sys_updated_on>
        <tablename>sys_script</tablename>
    </sys_metadata_link>
</record_update>
