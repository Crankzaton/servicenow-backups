<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>0ec03c639726111016c576d917890d41</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;sn_nb_action.GroupByRecommendation&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;Implements extension point sn_nb_action.GroupingStrategy&lt;/description&gt;
        &lt;name&gt;GroupByRecommendation&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var GroupByRecommendation = Class.create();
GroupByRecommendation.prototype = {
    initialize: function(ruleContextGR) {
		if(NextBestActionUtil.isValidRecord(ruleContextGR))
			this.groups = this.getAllGroups(ruleContextGR.getUniqueValue());
    },
	getId: function(){
		return "2cd6cdab9766111016c576d917890dce"; // sys id of corresponding grouping strategy record
	},
    groupRecommendations: function(recommendationsArray) {
        var groupedRecommendations = [];

        if (gs.nil(this.groups) || Object.keys(this.groups).length &lt;= 0) {
            this.addAllToDefaultGroup(recommendationsArray);
            groupedRecommendations.push(this.defaultGroup);
            return groupedRecommendations;
        }

        for (var i in recommendationsArray) {
            if (!gs.nil(recommendationsArray[i]) &amp;&amp; (gs.nil(recommendationsArray[i].actionGroups) || recommendationsArray[i].actionGroups.length &lt;= 0)) {
                this.addToDefaultGroup(recommendationsArray[i]);
                continue;
            }
            var recommendationGroups = recommendationsArray[i].actionGroups.split(",");
            var j = 0;
            while (j &lt; recommendationGroups.length) {
                var recommendationGroup = recommendationGroups[j];
                j += 1;
                if (gs.nil(recommendationGroup) || gs.nil(this.groups[recommendationGroup])) {
                    this.addToDefaultGroup(recommendationsArray[i]);
                    continue;
                }
                if (gs.nil(this.groups[recommendationGroup].actions)) this.groups[recommendationGroup].actions = [];
                this.groups[recommendationGroup].actions.push(recommendationsArray[i]);
            }

        }
		
        for (var g in this.groups) {
            if (!this.groups.hasOwnProperty(g) ||
                gs.nil(this.groups[g].actions) ||
                this.groups[g].actions.length &lt;= 0
            ) continue;
            groupedRecommendations.push(this.groups[g]);
        }
        if (!gs.nil(this.defaultGroup) &amp;&amp; !gs.nil(this.defaultGroup.actions) &amp;&amp; this.defaultGroup.actions.length &gt; 0)
            groupedRecommendations.push(this.defaultGroup);
		
		groupedRecommendations.sort(this.sortGroupsByOrderAsc);
        return groupedRecommendations;
    },
    getAllGroups: function(ruleContext) {
        var groupsGR = new GlideRecord(sn_nb_action.Constants.TBL_CONTEXT_GROUP);
        groupsGR.addActiveQuery();
        groupsGR.addQuery("context", ruleContext);
		groupsGR.query();

        var groups = {};
        while (groupsGR.next()) {
			var isDefaultGroup = groupsGR.getValue("default");
			if('1' === isDefaultGroup){
				this.initializeDefaultGroup(groupsGR);
				continue;
			}
            var sysId = groupsGR.getUniqueValue();
            groups[sysId] = {
                name: groupsGR.name.getDisplayValue(),
				order: groupsGR.getValue("order"),
                actions: []
            };
        }
        return groups;
    },
    initializeDefaultGroup: function(defaultGroupGr) {
        this.defaultGroup = {
			name: defaultGroupGr.name.getDisplayValue(),
			order: defaultGroupGr.getValue("order"),
            actions: []
        };
    },
    addAllToDefaultGroup: function(recommendationArray) {
        if (gs.nil(recommendationArray) || recommendationArray.length &lt;= 0) return;
		if (gs.nil(this.defaultGroup)) return;
        for (var i in recommendationArray) {
            this.addToDefaultGroup(recommendationArray[i]);
        }
    },
    addToDefaultGroup: function(recommendationObject) {
        if (gs.nil(this.defaultGroup)) return;
        if (gs.nil(this.defaultGroup.actions)) this.defaultGroup.actions = [];

        this.defaultGroup.actions.push(recommendationObject);
    },
	sortGroupsByOrderAsc: function(group1, group2){
		return group1.order - group2.order;
	},

    type: 'GroupByRecommendation'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2022-10-20 23:03:03&lt;/sys_created_on&gt;
        &lt;sys_id&gt;0ec03c639726111016c576d917890d41&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;18&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;GroupByRecommendation&lt;/sys_name&gt;
        &lt;sys_package display_value="Recommended Actions" source="sn_nb_action"&gt;427fe83177221010d7159b71a91061e1&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Recommended Actions"&gt;427fe83177221010d7159b71a91061e1&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_0ec03c639726111016c576d917890d41&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2022-11-07 18:06:04&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:10:05</sys_created_on>
        <sys_id>4a707c9583b01210c6695855eeaad3c9</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>GroupByRecommendation</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_4a707c9583b01210c6695855eeaad3c9</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:10:05</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
