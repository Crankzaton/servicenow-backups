<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Prevent notification table mismatch</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
 var arrayUtil = new ArrayUtil();
 var templateFieldNamesList = arrayUtil.concat(AutoResolutionConstants.CONFIG_EMAIL_TEMPLATE_FIELD_NAMES, 
  AutoResolutionConstants.CONFIG_SMS_TEMPLATE_FIELD_NAMES);
 
 for (var i = 0; i < templateFieldNamesList.length; i += 1) {
  var fieldName = templateFieldNamesList[i];
  if (!current.isValidField(fieldName))
   continue;
  
  var templateElement = current.getElement(fieldName);
  var templateGr = templateElement.getRefRecord();
  if (gs.nil(templateGr))
   continue;

  var templateTable = templateGr.getTableName();

  var templateTargetTableFieldName;
  if (templateTable === AutoResolutionConstants.EMAIL_TEMPLATE_TABLE) {
   templateTargetTableFieldName = "collection";
  } else if (templateTable === AutoResolutionConstants.SMS_TEMPLATE_TABLE) {
   templateTargetTableFieldName = "table";
  }
  
  var configTargetTableName = current.getValue(AutoResolutionConstants.CONFIGURATION_TABLENAME_FIELD_NAME);
  var templateTargetTableName = templateGr.getValue(templateTargetTableFieldName);
  if (!gs.nil(templateTargetTableName) && templateTargetTableName !== configTargetTableName) {
   gs.addErrorMessage(
    gs.getMessage("The target table for auto resolution must match the table for the notification template specified in the {0} field.", 
    templateElement.getLabel()));
   current.setAbortAction(true);
   return;
  }
 }
 
})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:49:24</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>83bba41583701210c6695855eeaad343</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Prevent notification table mismatch</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_83bba41583701210c6695855eeaad343</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:49:24</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=83bba41583701210c6695855eeaad343"/>
</record_update>
