<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>affc03cc535201105400ddeeff7b124b</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;public&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.AISearchGlideSignalsEvent&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;The common base class for all Glide Signals Tracking Events for AI Search&lt;/description&gt;
        &lt;name&gt;AISearchGlideSignalsEvent&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var AISearchGlideSignalsEvent = Class.create();

AISearchGlideSignalsEvent.prototype = {
	
	payload: null,
	searchResultMetadata:null,
	
	initialize: function(searchResultMetadata, paramBag) {
		
		this.payload = {};
		this.searchResultMetadata = searchResultMetadata;
		
		this.setValue(global.AISearchConstants.USER_ID, paramBag[global.AISearchConstants.USER_ID]);
		this.setValue(global.AISearchConstants.SESSION_ID, paramBag[global.AISearchConstants.SESSION_ID]);
		
		this.setValue(global.AISearchConstants.APPLICATION_ID, global.AISearchConstants.APPLICATION_ID_GLOBAL);
		this.setValue(global.AISearchConstants.APPLICATION_TYPE, global.AISearchConstants.APPLICATION_TYPE_AI_SEARCH);
		
		this.setValue(global.AISearchConstants.SEARCH_PROFILE, paramBag[global.AISearchConstants.SEARCH_PROFILE]);
		this.setValue(global.AISearchConstants.SEARCH_CONTEXT_CONFIG_ID, paramBag[global.AISearchConstants.SEARCH_CONTEXT_CONFIG_ID]);
		
		this.setValue(global.AISearchConstants.QUERY_TERM, this.getQueryTerm(paramBag));
	},
	
	getQueryTerm : function(paramBag) {
		
		var searchTerm 
			= !gs.nil(this.searchResultMetadata.correctedSearchTerm) ? 
				this.searchResultMetadata.correctedSearchTerm : this.searchResultMetadata.searchTerm;
		
		// if not found, try to read it from the paramBag
		if (gs.nil(searchTerm) &amp;&amp; !gs.nil(paramBag[global.AISearchConstants.QUERY_TERM]))
			searchTerm = paramBag[global.AISearchConstants.QUERY_TERM];
		
		return searchTerm;
	},
	
	getEventType: function() {
		throw 'Need to implement';
	},
	
	getSearchResultMetadata: function() {
		return this.searchResultMetadata;
	},
	
	getPayload: function() {
		if (gs.nil(this.payload))
			this.payload = {};
		return this.payload;
	},
	
	setValue: function(name ,val) {
		this.getPayload()[name] = gs.nil(val)? '': val+'';
	},
	
	getResultSysId: function(model) {
		return global.AISearchHelper.getResourceIdFromModel(model);
	},
	
	getSourceTable: function(model) {
		return global.AISearchHelper.getResourceTableFromModel(model);
	},
	
	getAISDocId: function(srcTable, resultSysId) {
		return global.AISearchHelper.getAISDocId(srcTable, resultSysId);
	},

	getDataSourceTitle: function(srcTable) {
		return global.AISearchHelper.getDataSourceTitle(srcTable);
	},
	
	type: 'AISearchGlideSignalsEvent'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2022-03-13 06:59:58&lt;/sys_created_on&gt;
        &lt;sys_id&gt;affc03cc535201105400ddeeff7b124b&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;29&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;AISearchGlideSignalsEvent&lt;/sys_name&gt;
        &lt;sys_package display_value="Glide Conversation Server" source="com.glide.cs"&gt;ad7df0203c75311068bcf327dfe37f75&lt;/sys_package&gt;
        &lt;sys_policy&gt;read&lt;/sys_policy&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_affc03cc535201105400ddeeff7b124b&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2024-01-26 00:55:23&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 09:18:02</sys_created_on>
        <sys_id>8100c59d83341210c6695855eeaad3ba</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>AISearchGlideSignalsEvent</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_8100c59d83341210c6695855eeaad3ba</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 09:18:02</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
