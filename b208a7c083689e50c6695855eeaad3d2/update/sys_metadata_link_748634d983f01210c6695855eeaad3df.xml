<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>46016f67cb5941101b8d1f2ae8076d06</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;sn_ads_setup.SNHelpSetupAnalyticsController&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;true&lt;/client_callable&gt;
        &lt;description&gt;This script Include will capture payload for various events and will store that in gcf_external_staging table using GCFCollector API methods.&lt;/description&gt;
        &lt;name&gt;SNHelpSetupAnalyticsController&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var SNHelpSetupAnalyticsController = Class.create();

SNHelpSetupAnalyticsController.prototype = {

    CATEGORY: 'adoption_services',
    POINT: 'guided_setup',
	ACTIVE_SETUP_TYPE_EVENT: 'active_setup_type',
	SETUP_START_TASK_COMPLETION_EVENT: 'setup_start_task_completion',
	EMBEDDED_OR_STANDALONE : 'embedded_or_standalone',
	
    logData: function(category, point, event, data) {
        if (!data) {
            gs.log("SNHelpSetupAnalyticsController: Data has not been provided");
            return;
        }
        var sm = new GCFSampleMap();
        for (var prop in data) {
            sm.put(prop, data[prop]);
        }
        GCFCollector.recordUsageEvent(category, point, event, sm);

    },
	
    rangeOfTypeCount: function(guidance_id, type) {
        var recordGr = new GlideRecord("help_guidance_step");		
        recordGr.addEncodedQuery("guidance=" + guidance_id + "^type=" + type);
        recordGr.query();
        var count = recordGr.getRowCount();
        --count;
        count = count - count % 10;
        var range = (count + 1) + '-' + (count + 10);
        return range;
    },
    type: 'SNHelpSetupAnalyticsController'

};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2022-02-02 12:24:24&lt;/sys_created_on&gt;
        &lt;sys_id&gt;46016f67cb5941101b8d1f2ae8076d06&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;49&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;SNHelpSetupAnalyticsController&lt;/sys_name&gt;
        &lt;sys_package display_value="Guided Setup" source="sn_ads_setup"&gt;1cb77a801b9af01039c155f3604bcb9e&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Guided Setup"&gt;1cb77a801b9af01039c155f3604bcb9e&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_46016f67cb5941101b8d1f2ae8076d06&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2022-09-10 19:41:10&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:36:30</sys_created_on>
        <sys_id>748634d983f01210c6695855eeaad3df</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>SNHelpSetupAnalyticsController</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_748634d983f01210c6695855eeaad3df</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:36:30</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
