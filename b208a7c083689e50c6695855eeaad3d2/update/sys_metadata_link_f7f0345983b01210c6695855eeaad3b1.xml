<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>24fdd699873313002ba97f9719cb0b3b</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.QuarantineActionsProcessor&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;true&lt;/client_callable&gt;
        &lt;description&gt;Helper class to perform Delete, Download and Restore actions on Quarantined files.&lt;/description&gt;
        &lt;name&gt;QuarantineActionsProcessor&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var QuarantineActionsProcessor = Class.create();
QuarantineActionsProcessor.prototype = Object.extendsObject(AbstractAjaxProcessor, {

	restoreQuarantinedFiles: function () {
		if (!gs.hasRole('antivirus_admin'))
			return;
		var objSysIds = this.getParameter('sysparm_obj_list');
		var tblName = this.getParameter('sysparm_table_name');
		var objList = objSysIds.split(',');

		for (var i = 0; i &lt; objList.length; i++) {
			if (objList[i] == null || objList[i] == '') 
				continue;

			var gr = new GlideRecord(tblName);
			if (gr.get(objList[i])) {
				var attachmentGr = new GlideRecord('sys_attachment');
				if (attachmentGr.get(gr.sa_sys_id)) {
					attachmentGr.state = 'available';
					attachmentGr.update();
					this.logAction('restored', gr.sa_sys_id);
				}
			}
		}
	},

	deleteQuarantinedFiles: function () {
		if (!gs.hasRole('antivirus_admin'))
			return;
		var objSysIds = this.getParameter('sysparm_obj_list');
		var tblName = this.getParameter('sysparm_table_name');
		var objList = objSysIds.split(',');

		for (var i = 0; i &lt; objList.length; i++) {
			if (objList[i] == null || objList[i] == '') 
				continue;
			var gr = new GlideRecord(tblName);
			if (gr.get(objList[i])) {
				var attachmentGr = new GlideRecord('sys_attachment');
				if (attachmentGr.get(gr.sa_sys_id) &amp;&amp; attachmentGr.canDelete()) {
					this.logAction('deleted', gr.sa_sys_id);
					attachmentGr.deleteRecord();
				}
			}
		}
	},
	
	countDeletableFiles: function () {
		var objSysIds = this.getParameter('sysparm_obj_list');
		var tblName = this.getParameter('sysparm_table_name');
		var objList = objSysIds.split(',');
		var deletableFileCount = 0;

		for (var i = 0; i &lt; objList.length; i++) {
			if (objList[i] == null || objList[i] == '') 
				continue;
			var gr = new GlideRecord(tblName);
			if (gr.get(objList[i])) {
				var attachmentGr = new GlideRecord('sys_attachment');
				if (attachmentGr.get(gr.sa_sys_id) &amp;&amp; attachmentGr.canDelete())
					deletableFileCount++;
			}
		}
		return deletableFileCount;
	},
	
	getAttachmentIds: function () {
		if (!gs.hasRole('antivirus_admin'))
			return;
		
		var objSysIds = this.getParameter('sysparm_obj_list');
		var tblName = this.getParameter('sysparm_table_name');
		var objList = objSysIds.split(',');
		var attachmentSysIds = '';

		for (var i = 0; i &lt; objList.length; i++) {
			if (objList[i] == null || objList[i] == '') 
				continue;
			var gr = new GlideRecord(tblName);
			if (gr.get(objList[i])) {			
				attachmentSysIds += gr.sa_sys_id;
				attachmentSysIds += ',';
			}
		}
		return attachmentSysIds;
	},

	logAction: function (event, attachmentId) {
		var logTblName = 'antivirus_activity';
		var quarantinedRec = new GlideRecord(logTblName);
		quarantinedRec.addQuery('attachment_id', attachmentId);
		quarantinedRec.query();

		if (quarantinedRec.next()) {
			var gr = new GlideRecord(logTblName);
			gr.initialize();
			gr.event = event;
			gr.event_source = 'from_quarantine';
			gr.event_time = new GlideDateTime();
			gr.event_by = gs.getUserID();
			gr.attachment_id = quarantinedRec.attachment_id;
			gr.file_name = quarantinedRec.file_name;
			gr.virus = quarantinedRec.virus;
			gr.table_name = quarantinedRec.table_name;
			gr.detected = quarantinedRec.detected;
			gr.uploader = quarantinedRec.uploader;
			gr.table_sys_id = quarantinedRec.table_sys_id;
			gr.virus_detected = quarantinedRec.virus_detected;

			gr.insert();
		}
	},

	type: 'QuarantineActionsProcessor'
});]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2018-08-07 17:07:14&lt;/sys_created_on&gt;
        &lt;sys_id&gt;24fdd699873313002ba97f9719cb0b3b&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;73&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;QuarantineActionsProcessor&lt;/sys_name&gt;
        &lt;sys_package display_value="ServiceNow Antivirus Program" source="com.glide.snap"&gt;7cc938283cf1311068bcf327dfe37f50&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_24fdd699873313002ba97f9719cb0b3b&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2022-10-13 04:47:50&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:12:24</sys_created_on>
        <sys_id>f7f0345983b01210c6695855eeaad3b1</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>QuarantineActionsProcessor</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_f7f0345983b01210c6695855eeaad3b1</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:12:24</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
