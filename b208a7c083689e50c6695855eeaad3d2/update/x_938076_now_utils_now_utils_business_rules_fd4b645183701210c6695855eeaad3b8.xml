<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>true</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Choice Events</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[if (current.name == 'change_request' && current.element == 'phase') {
   if (current.operation() == 'insert')
      addChangePhase(current);
   else if (current.operation() == 'delete') 
      deleteChangePhase(current);
   else if (current.operation() == 'update') {
      if (current.value.changes()) {
         deleteChangePhase(previous);
         addChangePhase(current);
      }
   }
}

function addChangePhase(current) {
   var gp = new GlideRecord('sys_choice');
   gp.addQuery('name', '=', 'change_phase');
   gp.addQuery('element', '=', 'name');
   gp.addQuery('value', '=', current.value);
   gp.query();
   if (!gp.next()) {
      gp.initialize();
      gp.name='change_phase';
      gp.element='name';
      gp.value=current.value;
      gp.label=current.label;
      gp.insert();
   }
}

function deleteChangePhase(me) {
   var gc = new GlideRecord('sys_choice');
   gc.addQuery('name', '=', 'change_request');
   gc.addQuery('element', '=', 'phase');
   gc.addQuery('value', '=', me.value);
   gc.query();
   if (!gc.next()) {
      var gp = new GlideRecord('sys_choice');
      gp.addQuery('name', '=', 'change_phase');
      gp.addQuery('element', '=', 'name');
      gp.addQuery('value', '=', me.value);
      gp.query();
      if (gp.next())
         gp.deleteRecord();
   }
}]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:47:25</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>fd4b645183701210c6695855eeaad3b8</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Choice Events</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_fd4b645183701210c6695855eeaad3b8</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:47:25</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=fd4b645183701210c6695855eeaad3b8"/>
</record_update>
