<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>304865b447d071108692df37436d43b5</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;sn_udc.TaxonomyHelper&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;TaxonomyHelper&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[class TaxonomyHelper {
    static type = 'TaxonomyHelper';
    static SN_UDC_DEFAULT_TAXONOMY = "sn_udc_default_taxonomy";
    static SN_UDC_TAXONOMY_MODULE = "sn_udc_file_taxonomy_type_module";
    static SN_UDC_TAXONOMY = "sn_udc_file_taxonomy_type";
    static SN_UDC_TAXONOMY_CATEGORY = "sn_udc_file_taxonomy_category";
    static SN_UDC_DEFAULT_TAXONOMY = {
        sys_hub_flow: 'flow',
        sys_hub_action_type_definition: 'action',
        sys_pd_process_definition: 'process',
        sys_decision: 'decision-table',
        sys_flow_context: 'flow-execution',
        sys_ih_spoke: 'spoke'
    };

    static TAXONOMIES = {
        flow: {
            builderLabel: gs.getMessage('Flow'),
            icon: 'workflow-outline',
            editorUrl: '/$flow-designer.do?sysparm_nostack=true#/flow-designer/{{ASSET-ID}}',
            creatorUrl: '/now/ws-asset/create-asset/flow',
            recordLabelField: 'name',
            recordNameField: 'name',
            tableName: 'sys_hub_flow',
        },
        subflow: {
            builderLabel: gs.getMessage('Subflow'),
            icon: 'workflow-outline',
            editorUrl: '/$flow-designer.do?sysparm_nostack=true#/sub-flow-designer/{{ASSET-ID}}',
            creatorUrl: '/now/ws-asset/create-asset/subflow',
            recordLabelField: 'name',
            recordNameField: 'name',
            tableName: 'sys_hub_flow',
        },
        template: {
            builderLabel: gs.getMessage('Flow template'),
            icon: 'workflow-outline',
            editorUrl: '/$flow-designer.do?sysparm_nostack=true#/flow-template-designer/{{ASSET-ID}}',
            creatorUrl: '/now/ws-asset/create-asset/flow-template',
            recordLabelField: 'name',
            recordNameField: 'name',
            tableName: 'sys_app_template',
        },
        action: {
            builderLabel: gs.getMessage('Action'),
            icon: 'workflow-outline',
            editorUrl: '/$flow-designer.do?sysparm_nostack=true#/action-designer/{{ASSET-ID}}',
            creatorUrl: '/now/ws-asset/create-asset/action',
            recordLabelField: 'name',
            recordNameField: 'name',
            tableName: 'sys_hub_action_type_definition',
        },
        process: {
            builderLabel: gs.getMessage('Playbook'),
            icon: 'workflow-outline',
            editorUrl: '/now/process/designer/{{ASSET-ID}}',
            creatorUrl: '/now/ws-asset/create-asset/process',
            recordLabelField: 'label',
            recordNameField: 'name',
            tableName: 'sys_pd_process_definition',
        },
        "decision-table": {
            builderLabel: gs.getMessage('Decision table'),
            icon: 'workflow-outline',
            editorUrl: '/now/decisiondesigner/decisiontable-designer/{{ASSET-ID}}',
            creatorUrl: '/now/ws-asset/create-asset/decision-table',
            recordLabelField: 'label',
            recordNameField: 'name',
            tableName: 'sys_decision',
        },
        datastream: {
            builderLabel: gs.getMessage('Data stream'),
            assetIcon: 'workflow-outline',
            editorUrl: '/$flow-designer.do?sysparm_nostack=true#/action-designer/{{ASSET-ID}}',
            creatorUrl: '/now/ws-asset/create-asset/datastream',
            recordLabelField: 'name',
            recordNameField: 'name',
            tableName: 'sys_hub_action_type_definition',
        },
        "flow-execution": {
            builderLabel: gs.getMessage('Flow execution'),
            assetIcon: 'workflow-outline',
            editorUrl: '/$flow-designer.do?sysparm_nostack=true#/operations/context/{{ASSET-ID}}',
            recordLabelField: 'name',
            recordNameField: 'name',
            tableName: 'sys_flow_context'
        },
        spoke: {
            builderLabel: gs.getMessage('Spoke'),
            assetIcon: 'workflow-outline',
            editorUrl: '/$flow-designer.do?sysparm_nostack=true#/spoke-builder/{{ASSET-ID}}',
            creatorUrl: '/$flow-designer.do?sysparm_nostack=true#/spoke-builder/new',
            recordLabelField: 'name',
            recordNameField: 'name',
            tableName: 'sys_scope'
        }
    };

    static getTaxonomyFileDetails(tableName, sysId, builderId) {
        const errorMessage = gs.getMessage('Check the Sys ID, Builder ID, and Table name for any errors before trying again.');
        const invalidBuilderErrorMsg = gs.getMessage('Builder not found');
        const invalidAssetErrorMsg = gs.getMessage('Asset not found');

        if (!tableName || !sysId || !tableName.trim() || !sysId.trim()) {
            return new sn_ws_err.BadRequestError(invalidBuilderErrorMsg + ': ' + errorMessage);
        }

        let gr = new GlideRecord('sys_db_object');
        if (!gr.get('name', tableName)) {
            return new sn_ws_err.BadRequestError(invalidBuilderErrorMsg + ': ' + errorMessage);
        }

        builderId = builderId || this.SN_UDC_DEFAULT_TAXONOMY[tableName];
        const builderDetails = this.TAXONOMIES[builderId];
        if (!builderDetails) {
            return new sn_ws_err.BadRequestError(invalidBuilderErrorMsg + ': ' + errorMessage);
        }

        const assetData = this.#getAssetData(sysId, tableName, builderDetails.recordNameField, builderDetails.recordLabelField);

        if (!assetData) {
            return new sn_ws_err.BadRequestError(invalidAssetErrorMsg + ': ' + errorMessage);
        }

        let response = {
            url: sysId === "-1" ? builderDetails.creatorUrl : builderDetails.editorUrl.replace('{{ASSET-ID}}', sysId),
            title: assetData.title,
            name: assetData.name,
            sysId: sysId,
            icon: builderDetails.icon,
            builderId: builderId,
            builderLabel: builderDetails.builderLabel,
            table: builderDetails.tableName,
            scope: assetData.scope
        };
        return response;
    }

    static #getAssetData(sysId, tableName, recordNameField, recordLabelField) {
        if (sysId === "-1") {
            return {
                name: "",
                title: "",
                scope: {}
            };
        } else {
            let assetData = null;
            let gr = new GlideRecordSecure(tableName);
            if (gr.get(sysId)) {
                const name = gr.getValue(recordNameField);
                const label = gr.getValue(recordLabelField);
                assetData = {};
                assetData.name = name;
                assetData.title = label || name;
                assetData.scope = this.#getScopeDetails(gr.getValue('sys_scope'));
            }

            return assetData;
        }
    }

    static #getScopeDetails(scopeId) {
        let scope = {};
        let gr = new GlideRecord("sys_scope");
        if (gr.get(scopeId)) {
            scope.id = scopeId;
            scope.label = gr.getValue("name");
            scope.name = gr.getValue("scope");
        }
        return scope;
    }
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2023-07-25 10:03:40&lt;/sys_created_on&gt;
        &lt;sys_id&gt;304865b447d071108692df37436d43b5&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;40&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;TaxonomyHelper&lt;/sys_name&gt;
        &lt;sys_package display_value="Unified Developer Core" source="sn_udc"&gt;8a841f2bc42f457e8809ea71d35e821f&lt;/sys_package&gt;
        &lt;sys_policy&gt;read&lt;/sys_policy&gt;
        &lt;sys_scope display_value="Unified Developer Core"&gt;8a841f2bc42f457e8809ea71d35e821f&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_304865b447d071108692df37436d43b5&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2023-12-04 07:19:02&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:35:32</sys_created_on>
        <sys_id>ea46789983f01210c6695855eeaad3c4</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>TaxonomyHelper</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_ea46789983f01210c6695855eeaad3c4</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:35:32</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
