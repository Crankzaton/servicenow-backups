<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>0f1cec9583701210c6695855eeaad347</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules"&gt;
    &lt;x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE"&gt;
        &lt;abort_action&gt;false&lt;/abort_action&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;action_delete&gt;false&lt;/action_delete&gt;
        &lt;action_insert&gt;true&lt;/action_insert&gt;
        &lt;action_query&gt;false&lt;/action_query&gt;
        &lt;action_update&gt;false&lt;/action_update&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;add_message&gt;false&lt;/add_message&gt;
        &lt;advanced&gt;true&lt;/advanced&gt;
        &lt;change_fields&gt;false&lt;/change_fields&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;collection/&gt;
        &lt;condition/&gt;
        &lt;description/&gt;
        &lt;execute_function&gt;false&lt;/execute_function&gt;
        &lt;filter_condition/&gt;
        &lt;is_rest&gt;false&lt;/is_rest&gt;
        &lt;message/&gt;
        &lt;name&gt;normalize CA certificate&lt;/name&gt;
        &lt;order&gt;100&lt;/order&gt;
        &lt;priority&gt;100&lt;/priority&gt;
        &lt;rest_method/&gt;
        &lt;rest_method_text/&gt;
        &lt;rest_service/&gt;
        &lt;rest_service_text/&gt;
        &lt;rest_variables/&gt;
        &lt;role_conditions/&gt;
        &lt;script&gt;&lt;![CDATA[(function executeRule(current, previous /*null when async*/ ) {
    var abort = false;
    try {
        var validateSysUserCertificateAttach = new validateSysUserCertificateAttachment(current);
        var grCount = new GlideAggregate('sys_ca_certificate');
        grCount.addQuery('type', '=','trust_store_ca');
        grCount.addAggregate('COUNT');
        grCount.query();
        
        if (grCount.next() &amp;&amp; parseInt(grCount.getAggregate('COUNT')) &gt;= gs.getProperty('glide.authenticate.mutual.max.limit.ca.certificate', 150)) {
            gs.addErrorMessage(gs.getMessage('Reached max limit For CA Certificates: ' + grCount.getAggregate('COUNT')));
            abort = true;
        } else if (validateSysUserCertificateAttach.hasMoreThanOneAttachment()) {
            gs.addErrorMessage(gs.getMessage('Cannot upload more than one PEM certificate.'));
            abort = true;
        } else if (!validateSysUserCertificateAttach.hasAttachment() ||
            !validateSysUserCertificateAttach.validateExtensionForPem(current)) {
            gs.addErrorMessage(gs.getMessage('Please upload a certificate  with ".PEM" as file extension.'));
            abort = true;
        } else {
            var fingerPrint = SNC.AuthenticationHelper.normalizeCACertificate(current);

            if (gs.nil(fingerPrint))
                abort = true;
            else {
                var glideCACertificateUploader = new SNC.GlideCACertificateUploader();
                var status = glideCACertificateUploader.addCACertificate(current);

                if (status)
                    current.publish_status = "queued";
                else {
                    gs.addErrorMessage(gs.getMessage('Unable to upload the certificate. Please check system logs for more information.'));
                    abort = true;
                }
            }
        }

        if (!validateSysUserCertificateAttach.hasMoreThanOneAttachment())
            validateSysUserCertificateAttach.deleteAttachments(current);
    } catch (e) {
        gs.error("Error Occurred : " + e);
        abort = true;
    }

    if (abort) {
        current.setAbortAction(abort);
    }
})(current, previous);]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;x_938076_now_utils_now_utils_business_rules&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2024-09-21 07:51:03&lt;/sys_created_on&gt;
        &lt;sys_domain&gt;global&lt;/sys_domain&gt;
        &lt;sys_domain_path&gt;/&lt;/sys_domain_path&gt;
        &lt;sys_id&gt;0f1cec9583701210c6695855eeaad347&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;normalize CA certificate&lt;/sys_name&gt;
        &lt;sys_overrides/&gt;
        &lt;sys_package display_value="Now Utils" source="x_938076_now_utils"&gt;b208a7c083689e50c6695855eeaad3d2&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Now Utils"&gt;b208a7c083689e50c6695855eeaad3d2&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;x_938076_now_utils_now_utils_business_rules_0f1cec9583701210c6695855eeaad347&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2024-09-21 07:51:03&lt;/sys_updated_on&gt;
        &lt;template/&gt;
        &lt;when&gt;before&lt;/when&gt;
    &lt;/x_938076_now_utils_now_utils_business_rules&gt;
    &lt;sys_translated_text action="delete_multiple" query="documentkey=0f1cec9583701210c6695855eeaad347"/&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:56:31</sys_created_on>
        <sys_id>0f5d285d83701210c6695855eeaad354</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>normalize CA certificate</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_0f5d285d83701210c6695855eeaad354</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:56:31</sys_updated_on>
        <tablename>sys_script</tablename>
    </sys_metadata_link>
</record_update>
