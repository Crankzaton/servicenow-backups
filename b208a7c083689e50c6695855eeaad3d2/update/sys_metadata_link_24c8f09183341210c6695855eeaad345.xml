<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>a0272d3043532510e98cc996cbb8f278</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;public&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.LinuxOSNameHelper&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;Handles the formatting of Linux OS name&lt;/description&gt;
        &lt;name&gt;LinuxOSNameHelper&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[/**
 * Handles all the details of formatting Linux OS name
 * 
 */
var LinuxOSNameHelper = Class.create();

LinuxOSNameHelper.prototype = {
    initialize: function() { /* do nothing */ },

    formatLinuxOSName: function(name) {
        // do not classify this as a Linux computer if OS name is not found
        if (JSUtil.nil(name))
            return null;

        var newName = this.osCleanupName(name);
        newName = OSChoice.reconcile(newName);
        return newName;
    },

    osCleanupName: function(osName) {
        if (this._contains(osName, 'red hat'))
            return "Linux Red Hat";
        else if (this._contains(osName, 'oracle'))
            return "Linux Oracle";
        else if (this._contains(osName, 'fedora'))
            return "Linux Fedora";
        else if (this._contains(osName, 'suse'))
            return "Linux SuSE";
        else if (this._contains(osName, 'centos stream'))
            return "Linux CentOS Stream";
        else if (this._contains(osName, 'centos'))
            return "Linux CentOS";
        else if (this._contains(osName, 'ubuntu'))
            return "Linux Ubuntu";
        else if (this._contains(osName, 'debian'))
            return "Linux Debian";
        else if (this._contains(osName, 'alma'))
            return "Linux Alma";
        else if (this._contains(osName, 'amazon'))
            return "Linux Amazon";
        else if (this._contains(osName, 'alpine'))
            return "Linux Alpine";
        else if (this._contains(osName, 'acro'))
            return "Linux Acro";
        else if (this._contains(osName, 'rocky'))
            return "Linux Rocky";
        else if (this._contains(osName, 'elementary'))
            return "Linux Elementary";
        else if (this._contains(osName, 'endeavour'))
            return "Linux Endeavour";
        else if (this._contains(osName, 'scientific'))
            return "Linux Scientific";
        else if (this._contains(osName, 'manjaro'))
            return "Linux Manjaro";
        else if (this._contains(osName, 'mint'))
            return "Linux Mint";
        else if (this._contains(osName, 'arch'))
            return "Linux Arch";
        else if (this._contains(osName, 'raspberry'))
            return "Linux Raspberry Pi";
        else if (this._contains(osName, 'chrome'))
            return "Linux ChromeOS";
        else if (this._contains(osName, 'puppy'))
            return "Linux Puppy";
        else if (this._contains(osName, 'pop'))
            return "Linux Pop";
        else if (this._contains(osName, 'kali'))
            return "Linux Kali";
        else if (this._contains(osName, 'antix'))
            return "Linux AntiX";
        else if (this._contains(osName, 'garuda'))
            return "Linux Garuda";
        else if (this._contains(osName, 'easy'))
            return "Linux EasyOS";
        else if (this._contains(osName, 'lite'))
            return "Linux Lite";
        else if (this._contains(osName, 'sparky'))
            return "Linux Sparky";
        else if (this._contains(osName, 'neon'))
            return "Linux KDE Neon";
        else if (this._contains(osName, 'zorin'))
            return "Linux Zorin";
        else if (this._contains(osName, 'mx'))
            return "Linux MX";
        else
            return "GNU/Linux";
    },

    /**
     *
     * Util method to check for Substr
     *
     * Checks if the string is contained in the original/given String.
     *
     **/
    _contains: function(mainStr, subStr) {
        if (mainStr &amp;&amp; subStr)
            return mainStr.toLowerCase().includes(subStr.toLowerCase());
        return false;
    },

    type: "LinuxOSNameHelper"
}
]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;now.accf&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2023-06-05 17:22:38&lt;/sys_created_on&gt;
        &lt;sys_id&gt;a0272d3043532510e98cc996cbb8f278&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;1&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;LinuxOSNameHelper&lt;/sys_name&gt;
        &lt;sys_package display_value="Core Automation" source="com.snc.core.automation"&gt;6ca7f42c3cb1311068bcf327dfe37f6a&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_a0272d3043532510e98cc996cbb8f278&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;now.accf&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2023-06-26 17:22:38&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:46:19</sys_created_on>
        <sys_id>24c8f09183341210c6695855eeaad345</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>LinuxOSNameHelper</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_24c8f09183341210c6695855eeaad345</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:46:19</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
