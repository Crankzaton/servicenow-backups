<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>1f3f87000f752010bc89378dc4767ef8</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;sn_fsm_mobile.FSMMobileAppUtil&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;Util class which contains utility methods for Field Service Mobile feature&lt;/description&gt;
        &lt;name&gt;FSMMobileAppUtil&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[			var FSMMobileAppUtil = Class.create();
FSMMobileAppUtil.prototype = {
    initialize: function() {},

    formatGPSCoordinates: function(coordinates) {
        var lat_key = 'Latitude';
        var long_key = 'Longitude';
        var coordinatesStringValue = String(coordinates);
        coordinatesStringValue = coordinatesStringValue.replace('{', '');
        coordinatesStringValue = coordinatesStringValue.replace('}', '');
	coordinatesStringValue = coordinatesStringValue.replace(/\s/g, '');
        var result = coordinatesStringValue.split(",");
        var latitude = result[0].split("=")[0] == lat_key ? result[0].split("=")[1] : result[1].split("=")[1];
        var longitude = result[1].split("=")[0] == long_key ? result[1].split("=")[1] : result[0].split("=")[1];
        return latitude + "," + longitude;
    },

    getTimeWorkedValue: function(current) {
        var dbValue = current.time_worked ? current.time_worked.split(' ') : "";
        var val = dbValue[0] ? dbValue[0].split('-') : "";
        var days = val[2] - 1;
        var res, hrs, mins;
        if (!gs.nil(dbValue)) {
            res = dbValue[1].split(':');
            hrs = res[0] ? res[0] : "";
            if (days &gt;= 1) {
                val = days * 24;
                hrs = parseInt(hrs) + val;
            }
            mins = res[1] ? res[1] : "";
        }
        return {
            "hrs": hrs,
            "mins": mins
        };
    },

    getTodayDate: function() {
        var cdt = new GlideDateTime();
        return cdt.getValue().split(' ')[0];
    },
    
    getTodayDateTime: function() {
        var cdt = new GlideDateTime();
        return cdt.getValue();
    },

    getModelsForOfflineRef: function() {
        var gr = new GlideRecord("cmdb_model");
        gr.addEncodedQuery(new global.SMTask().partRefQual());
		gr.setLimit(1000);
        gr.query();
        var records = [];
        while (gr.next()) {
            records.push(gr.getUniqueValue());
        }
        return records;
    },

    getTasksForOfflineRef: function() {
        var gr = new GlideRecord("wm_task");
        gr.addQuery('assigned_to', gs.getUserID());
        gr.addQuery('active', true);
		gr.setLimit(1000);
        gr.query();
        var records = [];
        while (gr.next()) {
            records.push(gr.getUniqueValue());
        }
        return records;
    },
	
	getEstimatedEnd: function() {
		var end = new GlideDateTime();
		var hours = 60*60; 
		end.addSeconds(hours);
		return end.getValue();
	},

	getDropOffPreferredStockroom: function(current) {
        if (GlidePluginManager.isActive('com.snc.fsm_advanced_parts_sourcing')) {
            var grpList = [];
            var grpMemberGR = new GlideRecord('sys_user_grmember');
            grpMemberGR.addQuery('user', gs.getUserID());
            grpMemberGR.query();
            while (grpMemberGR.next()) {
                grpList.push(grpMemberGR.group.sys_id);
            }
            var prefStockroomGR = new GlideRecord('sn_fsm_pref_stockroom');
            var prefStrQuery = "";
            prefStrQuery += "active=true^";
            prefStrQuery += "type=drop_off^ORtype=both";
            prefStrQuery += "^assignment_groupIN" + grpList.join();
            prefStockroomGR.addEncodedQuery(prefStrQuery);
            prefStockroomGR.orderBy('order');
            prefStockroomGR.query();
            while (prefStockroomGR.next()) {
                if (this.prefStockroomConditionCheck(prefStockroomGR.getValue("query_condition"), current.model)) {
                    var stockroom = new GlideRecord("alm_stockroom");
                    stockroom.get(prefStockroomGR.getValue("stockroom"));
                    var json_response = {
                        'Value': stockroom.getValue('sys_id'),
                        'DisplayValue': stockroom.getValue('name')
                    };
                    return json_response;
                }
            }
        }
        return {
            'Value': '',
            'DisplayValue': 'None'
        }
    },

    prefStockroomConditionCheck: function(query, model) {
        if (gs.nil(query)) {
            return true;
        }
        var pr = new GlideRecord("cmdb_model");
        pr.addQuery("sys_id", model);
        pr.addEncodedQuery(query);
        pr.setLimit(1);
        pr.query();
        if (pr.next())
            return true;
        return false;
    },

    type: 'FSMMobileAppUtil'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2021-01-14 18:17:17&lt;/sys_created_on&gt;
        &lt;sys_id&gt;1f3f87000f752010bc89378dc4767ef8&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;21&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;FSMMobileAppUtil&lt;/sys_name&gt;
        &lt;sys_package display_value="Field Service Mobile" source="sn_fsm_mobile"&gt;5d66b0fbe770230003cd6188d2f6a976&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Field Service Mobile"&gt;5d66b0fbe770230003cd6188d2f6a976&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_1f3f87000f752010bc89378dc4767ef8&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2023-04-23 09:14:07&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:11:45</sys_created_on>
        <sys_id>1ed0b81983b01210c6695855eeaad3a2</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>FSMMobileAppUtil</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_1ed0b81983b01210c6695855eeaad3a2</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:11:45</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
