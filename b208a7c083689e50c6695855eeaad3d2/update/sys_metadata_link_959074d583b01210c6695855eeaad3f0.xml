<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>13ebc259dbfaf590402242b8139619c3</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.WFSPMCMSDemandRelatedUtils&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;This script include is for Demand Related functions&lt;/description&gt;
        &lt;name&gt;WFSPMCMSDemandRelatedUtils&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var WFSPMCMSDemandRelatedUtils = Class.create();
WFSPMCMSDemandRelatedUtils.prototype = {
    initialize: function() {},

    /*@name updateDemand
    @description forcefully update demand record when step 87 is reopened to trigger qualify flow.
    @param Demand Record
    @returns nothing*/

    updateDemand: function(dmnRec) {
        var dmnTask = new GlideRecord('dmn_demand_task');
        dmnTask.addQuery('parent', dmnRec.getValue('sys_id'));
        dmnTask.addQuery('correlation_display', 'CMS-Step 460 Review Meeting');
        dmnTask.query();
        if (dmnTask.next()) {
            dmnRec.setForceUpdate(true);
            dmnRec.update();
        }

    },


    /*@name updateProjectTask
    @description update task record with comments when more information required is selected
    @param Demand Record
    @returns nothing*/

    updatePrjTask: function(approvalGr) {

        var projTsk = new GlideRecord('pm_project_task');
        if (projTsk.get(approvalGr.sysapproval)) {
            
            projTsk.state = '7';
            projTsk.update();
        }

    },

    getFuncChgGroup: function(dmnRec) {

        var funcGrps = gs.getProperty('wf.spm.cms.func.change.group');
        var funcGrpsObj = JSON.parse(funcGrps);
        var funcSBC = funcGrpsObj["CM_CL_CMS_SBC_FUNC_GRP_CHANGE_MGMT"];
        var funcCS = funcGrpsObj["CM_CL_CMS_CREDIT_SVCS_FUNC_GRP_CHANGE_MGMT"];
        var funcDefault = funcGrpsObj["CM_CL_CMS_REG_POL_FUNC_GRP_CHANGE_MGMT"];
        var funcPC = funcGrpsObj["CM_CL_CMS_PC_FUNC_GRP_CHANGE_MGMT"];
        var array = [];
        var grpStr;

        var dmnGr = new GlideRecord('dmn_demand');
        if (dmnGr.get(dmnRec)) {
            var asmtGr = new GlideRecord('u_assessment_results');

            asmtGr.addQuery('u_demand.sys_id', dmnGr.sys_id);
            asmtGr.addNullQuery('u_parent');
            asmtGr.query();
            if (asmtGr.next()) {

                array.push(asmtGr.getValue('u_functional_business_group'));
                array.push(asmtGr.getValue('u_functional_business_sub_group'));
                array.push(asmtGr.getValue('u_functional_business_sub_group_area'));
                grpStr = array.toString();
                
                if (grpStr.indexOf('Small Business Cards') &gt; -1) {
                    return funcSBC;


                } else if (grpStr.indexOf('Credit Services') &gt; -1) {
                    return funcCS;


                } else if (grpStr.indexOf('Product Capabilities') &gt; -1) {
                    return funcPC;

                } else {
                    return funcDefault;

                }
            }
        }

    },

    getFuncChgGroupMetricResult: function(dmnRec) {

        var impGrps = "";
        var funcGrps = gs.getProperty('wf.spm.cms.func.change.group');
        var funcGrpsObj = JSON.parse(funcGrps);
        var funcSBC = funcGrpsObj["CM_CL_CMS_SBC_FUNC_GRP_CHANGE_MGMT"];
        var funcCS = funcGrpsObj["CM_CL_CMS_CREDIT_SVCS_FUNC_GRP_CHANGE_MGMT"];
        var funcDefault = funcGrpsObj["CM_CL_CMS_REG_POL_FUNC_GRP_CHANGE_MGMT"];
        var funcPC = funcGrpsObj["CM_CL_CMS_PC_FUNC_GRP_CHANGE_MGMT"];

        var impArray = ["u_functional_business_group", "u_functional_business_sub_group"];
        var mtrTypeRec = gs.getProperty('wf.spm.cms.demand.assessments');
        var metricObj = JSON.parse(mtrTypeRec);
        var mtrType = metricObj["initAssessment"];
        var asmtInsGr = new GlideRecord("asmt_assessment_instance");
        asmtInsGr.addQuery("task_id.sys_id", dmnRec);
        asmtInsGr.addQuery("metric_type", mtrType);
        asmtInsGr.addQuery("state", "complete");
        asmtInsGr.query();
        if (asmtInsGr.next()) {

            var asmtGr = new GlideRecord("asmt_metric_result");
            asmtGr.addQuery('instance', asmtInsGr.sys_id);
            asmtGr.addQuery('metric.name', 'IN', impArray);
            asmtGr.query();
            while (asmtGr.next()) {
                var answer = asmtGr.string_value;
                impGrps = impGrps + "," + answer;
            }
        }
        var grpStr = impGrps.toString();
        grpStr = grpStr.substring(1);

        if (grpStr.indexOf('Small Business Cards') &gt; -1) {
            return funcSBC;


        } else if (grpStr.indexOf('Credit Services') &gt; -1) {
            return funcCS;


        } else if (grpStr.indexOf('Product Capabilities') &gt; -1) {
            return funcPC;

        } else {
            return funcDefault;

        }

    },
  /*@name  getImpTeamForGroup
    @description finds the implementation team
    @param name of the group
    @returns implementation team*/

    getImpTeamForGroup: function(impGroup) {
		var grpStr = impGroup;
        var sbcGrps = gs.getProperty("wf.spm.cms.small.business.cards.groups");
        var csGrps = gs.getProperty("wf.spm.cms.credit.services.cards.groups");
        var pcGrps = gs.getProperty("wf.spm.cms.product.capabilities.groups");
        var funcGrps = gs.getProperty('wf.spm.cms.func.imp.team');
        var funcGrpsObj = JSON.parse(funcGrps);
        var funcSBC = funcGrpsObj["CM_CL_CMS_SBC_FUNC_GRP_IMPL_TEAM"];
        var funcCS = funcGrpsObj["CM_CL_CMS_CREDIT_SVCS_FUNC_GRP_IMPL_TEAM"];
        var funcDefault = funcGrpsObj["CM_CL_CMS_REG_POL_FUNC_GRP_IMPL_TEAM"];
        var funcPC = funcGrpsObj["CM_CL_CMS_PC_FUNC_GRP_IMPL_TEAM"];

        if (sbcGrps.indexOf(grpStr) &gt; -1) {
            return funcSBC;
        } else if (csGrps.indexOf(grpStr) &gt; -1) {
            return funcCS;
        } else if (pcGrps.indexOf(grpStr) &gt; -1) {
            return funcPC;
        } else {
            return funcDefault;
        }

    },



    type: 'WFSPMCMSDemandRelatedUtils'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;K098414&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2023-11-28 08:32:57&lt;/sys_created_on&gt;
        &lt;sys_id&gt;13ebc259dbfaf590402242b8139619c3&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;27&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;WFSPMCMSDemandRelatedUtils&lt;/sys_name&gt;
        &lt;sys_package display_value="Global" source="global"&gt;global&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_13ebc259dbfaf590402242b8139619c3&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2024-02-04 17:23:01&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:10:35</sys_created_on>
        <sys_id>959074d583b01210c6695855eeaad3f0</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>WFSPMCMSDemandRelatedUtils</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_959074d583b01210c6695855eeaad3f0</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:10:35</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
