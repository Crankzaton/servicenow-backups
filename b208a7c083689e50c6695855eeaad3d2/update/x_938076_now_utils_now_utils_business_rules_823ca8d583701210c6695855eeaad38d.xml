<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition>current.run_calc_brs != false</condition>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Set Actual Work Start Value</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[setActualWorkStartValue();

function setActualWorkStartValue() {
 var stateUtil = new PlannedTaskStateUtil(current);
 var stateBucket = stateUtil.getBucketForState(current.state);
 var defaultWorkState = stateUtil.getDefaultWorkState();
  gs.log("_setActualWorkStartValue: current.state=" + current.state + " defaultWorkState=" + defaultWorkState);
 var task = { 
    planned_start_date: current.getDisplayValue('start_date'),
    planned_end_date: current.getDisplayValue('end_date'),
    actual_start_date: current.getDisplayValue('work_start'),
    actual_end_date: current.getDisplayValue('work_end'),
    planned_duration: current.getValue('duration'),
    actual_duration: current.getValue('work_duration'),
    schedule_id: current.top_task.schedule
      };
 var ptc = new ProjectTaskActualDates(task);
 
 if (stateBucket == PlannedTaskStateUtil.WORK_IN_PROGRESS) {
  var dates = ptc.deriveWIPDates();
  current.setDisplayValue('work_start', dates.actual_start_date);  
  current.work_end = ""; //clear actual end in case of restarting/opening task
  current.work_duration="";
  gs.log("_setActualWorkStartValue:updated startDate current.state="+ current.state + " defaultWorkState=" + defaultWorkState);
 }
 else if(!stateUtil.isStateInactive(current.state)) {
  current.work_start = "";
  current.work_end = ""; //clear actual end in case of restarting/opening task
  current.work_duration="";
  current.percent_complete = 0;
 }
}]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:51:32</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>823ca8d583701210c6695855eeaad38d</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Set Actual Work Start Value</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_823ca8d583701210c6695855eeaad38d</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:51:32</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=823ca8d583701210c6695855eeaad38d"/>
</record_update>
