<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Avoid Duplicate Records</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
 if (new GlidePluginManager().isActive('com.sn_pss_core')) {     
        var isDuplicate = new sn_pss_core.ServiceContract().checkIfDuplicateSoldProductCovered(current);     
        if (isDuplicate) {     
            var errorMsg = gs.getMessage("A record already exists for the sold product/install base item.");     
            gs.addErrorMessage(errorMsg);     
            current.setAbortAction(true);     
        }     
  return;    
    }   
 var errMsg = "";
 var m2mGr = new GlideRecord(global.CSMBaseConstants.M2M_CONTRACT_SOLD_PRODUCT);
 m2mGr.addQuery("contract", current.contract);
 if(current.sold_product){
  m2mGr.addQuery("sold_product", current.sold_product);
  errMsg = gs.getMessage("A contract record already exists for this sold product.");
 }
 else if(current.install_base){
  m2mGr.addQuery("install_base", current.install_base);
  errMsg = gs.getMessage("A contract record already exists for this install base item.");
 }
 m2mGr.query();
 
 if(m2mGr.next() && (current.isNewRecord() || current.sys_id != m2mGr.sys_id)){
  gs.addErrorMessage(errMsg);
  current.setAbortAction(true);
 }
})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:48:00</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>126be09183701210c6695855eeaad38c</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Avoid Duplicate Records</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_126be09183701210c6695855eeaad38c</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:48:00</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=126be09183701210c6695855eeaad38c"/>
</record_update>
