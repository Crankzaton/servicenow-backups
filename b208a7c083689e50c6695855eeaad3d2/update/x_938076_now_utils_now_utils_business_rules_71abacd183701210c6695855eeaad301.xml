<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Check Overlap When Update Fiscal Period</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[if (current.operation() == "update") {
     var temp = new GlideScheduleDateTime();
     if (current.start_date_time != previous.start_date_time) {
         temp.setValue(current.start_date_time);
         current.fiscal_start_date_time = temp.getGlideDateTime().getValue();
     }
     if (current.end_date_time != previous.end_date_time) {
         temp.setValue(current.end_date_time);
         current.fiscal_end_date_time = temp.getGlideDateTime().getValue();
     }
 }
 if (checkOverlap(current.fiscal_start_date_time) || checkOverlap(current.fiscal_end_date_time)) {
     current.setAbortAction(true);
     gs.addErrorMessage(gs.getMessage('itfm.wb.The current inputs will result in an invalid fiscal period that overlaps with an existing fiscal period.'));
 } else {
     if (current.operation() == "update") {
         gs.addInfoMessage(gs.getMessage("itfm.wb.Record updated"));
     }
 }

 function checkOverlap(currentTime) {
     var gs = new GlideRecord('fiscal_period');
     gs.addQuery("sys_id", "!=", current.sys_id);
     gs.addQuery("fiscal_type", current.fiscal_type);
     gs.addQuery("fiscal_start_date_time", "<=", currentTime);
     gs.addQuery("fiscal_end_date_time", ">=", currentTime);
     gs.query();
     if (gs.next()) {
         return true;
     } else {
         return false;
     }
 }]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:49:03</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>71abacd183701210c6695855eeaad301</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Check Overlap When Update Fiscal Period</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_71abacd183701210c6695855eeaad301</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:49:03</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=71abacd183701210c6695855eeaad301"/>
</record_update>
