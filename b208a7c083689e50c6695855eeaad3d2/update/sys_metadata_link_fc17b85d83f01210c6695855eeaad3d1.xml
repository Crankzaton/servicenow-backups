<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>77b96a5ac7212010100f2f3bf4c26041</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;sn_mab_api.MobileAppBuilderDAO&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;MobileAppBuilderDAO&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var MobileAppBuilderDAO = Class.create();
MobileAppBuilderDAO.prototype = {

    initialize: function(table) {
        this.table = table;
        this.tableDAO = new sn_glide_ms_api.MobileAppBuilderDAO(table);
    },

    type: 'MobileAppBuilderDAO',

    getRecord: function(sysId, returnFields) {
        var grs = this.tableDAO.getRecord(sysId);
        return this.getRecordMap(grs, returnFields);
    },

    getRecordsByEncodedQuery: function(encodedQuery, returnFields, limit, offset) {
        var records = [];
        var grs = this.tableDAO.getRecordsByEncodedQuery(encodedQuery, limit, offset);
        while (grs.next())
            records.push(this.getRecordMap(grs, returnFields));

        return records;
    },

    saveRecord: function(record) {
        var grs = this.tableDAO.saveRecord(record);
        return grs.getUniqueValue();
    },

    saveAndReturnRecord: function(record, returnFields) {
        var grs = this.tableDAO.saveRecord(record);
        return this.getRecordMap(grs, returnFields);
    },

    deleteRecord: function(sysId) {
        return this.tableDAO.deleteRecord(sysId);
    },

    getRecordMap: function(grs, returnFields) {

        if (grs == null)
            new ErrorHandler().throwInternalError('Cannot build record map for null GlideRecordSecure object');
        else if (!grs.isValidRecord())
            return null;

        var values = {};

        // We have to prime sys_scope display label.  This should be removed after DEF0235065 is resolved
        grs.getDisplayValue('sys_scope');

        if (returnFields == null) {
            grs.getElements().forEach(function(element) {
                values[element.getName()] = this.getValuesForElement(grs, element.getName());
            }.bind(this));
        } else {
            returnFields.forEach(function(field) {
                var element = grs.getElement(field);

                if (element != null)
                    values[element.getName()] = this.getValuesForElement(grs, element.getName());
            }.bind(this));
        }

        return values;
    },

    getValuesForElement: function(grs, elementName) {
        if (grs.getValue(elementName) == null)
            return null;

        var element = grs.getElement(elementName);

        var elementValues = {};
        elementValues.value = grs.getValue(elementName);
        elementValues.type = element.getED().getInternalType();

        if (elementValues.type == 'reference')
            elementValues.referenceTable = element.getRefRecord().getTableName();

        if (elementValues.type == 'glide_list')
            elementValues.referenceTable = element.getED().getReference();

        if (elementValues.type == 'table_name') {
            if (gs.tableExists(elementValues.value)) {
                var tableGRS = new GlideRecordSecure(elementValues.value);
                elementValues.displayValue = tableGRS.getClassDisplayValue();
            } else {
                elementValues.displayValue = elementValues.value;
            }
        } else
            elementValues.displayValue = element.getDisplayValue();

        return elementValues;
    }
};

MobileAppBuilderDAO.isTableAccessible = function(tableName) {
    return sn_glide_ms_api.MobileAppBuilderDAO.isTableAccessible(tableName);
};
]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2021-01-09 05:04:32&lt;/sys_created_on&gt;
        &lt;sys_id&gt;77b96a5ac7212010100f2f3bf4c26041&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;21&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;MobileAppBuilderDAO&lt;/sys_name&gt;
        &lt;sys_package display_value="Mobile App Builder API" source="sn_mab_api"&gt;3c64259bc7812010100f2f3bf4c2609a&lt;/sys_package&gt;
        &lt;sys_policy&gt;read&lt;/sys_policy&gt;
        &lt;sys_scope display_value="Mobile App Builder API"&gt;3c64259bc7812010100f2f3bf4c2609a&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_77b96a5ac7212010100f2f3bf4c26041&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2021-01-11 03:13:58&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:38:58</sys_created_on>
        <sys_id>fc17b85d83f01210c6695855eeaad3d1</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>MobileAppBuilderDAO</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_fc17b85d83f01210c6695855eeaad3d1</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:38:58</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
