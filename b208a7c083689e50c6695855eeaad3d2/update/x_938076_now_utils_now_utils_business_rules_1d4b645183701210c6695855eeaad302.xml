<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>true</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Rollup Requested Hours And Cost</name>
        <order>1000</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous) { 
      var rpGR = new GlideRecord('resource_plan');
      rpGR.get(current.getValue('resource_plan'));
      if(!RMUtil.isAttributeBasedPlan(rpGR)) {
        var nextRequestedAloc = ResourcePlanQueryService.findNextRequestedAllocation(current.getValue('resource_plan'), current.getValue('start_date'));
        var prevRequestedAloc = ResourcePlanQueryService.findPrevRequestedAllocation(current.getValue('resource_plan'), current.getValue('end_date'));
        if(rpGR.getValue('state') == ResourcePlanState.PLANNING || rpGR.getValue('state') == ResourcePlanState.REQUESTED) {
          if(nextRequestedAloc.next())
            if(rpGR.start_date.getGlideObject().getNumericValue() < nextRequestedAloc.start_date.getGlideObject().getNumericValue())
              rpGR.setValue('start_date', nextRequestedAloc.getValue('start_date'));
          if(prevRequestedAloc.next())
            if(rpGR.end_date.getGlideObject().getNumericValue() > prevRequestedAloc.end_date.getGlideObject().getNumericValue())
              rpGR.setValue('end_date', prevRequestedAloc.getValue('end_date'));
        }
        rpGR.setWorkflow(false);
        rpGR.update();
        
        var resourcePlan = new ResourcePlan();
        resourcePlan.get(current.getValue('resource_plan'));
        resourcePlan.updatePlannedHoursAndCost(current.getTableName());
      }
})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:47:23</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>1d4b645183701210c6695855eeaad302</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Rollup Requested Hours And Cost</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_1d4b645183701210c6695855eeaad302</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:47:23</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=1d4b645183701210c6695855eeaad302"/>
</record_update>
