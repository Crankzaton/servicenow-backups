<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition>!((current.assigned_to.changes() || current.scheduling_method.changes() || current.expected_start.changes()) &amp;&amp; current.scheduling_method == 'optimization') &amp;&amp; !global.FSMUtil.taskNeedsCrew(current) &amp;&amp; !global.FSMUtil.taskInBundle(current)</condition>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Update travel duration on affected tasks</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
 var oldUser = previous.assigned_to+"";
 var newUser = current.assigned_to+"";
 var oldGDT = previous.expected_start.getGlideObject();
 var newGDT = current.expected_start.getGlideObject();
 var workDuration = current.estimated_work_duration.getGlideObject().getNumericValue()/1000;

 var taskId = current.sys_id+'';

 var smGeoDistanceUtils = new SMGeoDistanceUtils("field_service");
 var newNextTask = smGeoDistanceUtils.findNextTaskOnSameDay(newUser, newGDT, workDuration, taskId);
 var oldNextTask = smGeoDistanceUtils.findNextTaskOnSameDay(oldUser, oldGDT, workDuration, taskId);

 if (newNextTask && oldNextTask && newNextTask.getUniqueValue() == oldNextTask.getUniqueValue())
  return;

 if (newNextTask)
  smGeoDistanceUtils.updateTaskTravelDuration(newNextTask, newUser);

 if (oldNextTask)
  smGeoDistanceUtils.updateTaskTravelDuration(oldNextTask, oldUser);
})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:48:29</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>598bec9183701210c6695855eeaad312</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Update travel duration on affected tasks</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_598bec9183701210c6695855eeaad312</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:48:29</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=598bec9183701210c6695855eeaad312"/>
</record_update>
