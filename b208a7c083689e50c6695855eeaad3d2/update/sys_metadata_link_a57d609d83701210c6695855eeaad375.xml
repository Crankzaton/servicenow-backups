<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>163ce8d583701210c6695855eeaad323</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules"&gt;
    &lt;x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE"&gt;
        &lt;abort_action&gt;false&lt;/abort_action&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;action_delete&gt;false&lt;/action_delete&gt;
        &lt;action_insert&gt;true&lt;/action_insert&gt;
        &lt;action_query&gt;false&lt;/action_query&gt;
        &lt;action_update&gt;true&lt;/action_update&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;add_message&gt;false&lt;/add_message&gt;
        &lt;advanced&gt;true&lt;/advanced&gt;
        &lt;change_fields&gt;false&lt;/change_fields&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;collection/&gt;
        &lt;condition&gt;new StdChangeUtils().hasPropertyFieldChanged(current) || new StdChangeTaskUtils().hasPropertyFieldChanged(current)&lt;/condition&gt;
        &lt;description/&gt;
        &lt;execute_function&gt;false&lt;/execute_function&gt;
        &lt;filter_condition/&gt;
        &lt;is_rest&gt;false&lt;/is_rest&gt;
        &lt;message/&gt;
        &lt;name&gt;Check conflicts in field configurations&lt;/name&gt;
        &lt;order&gt;100&lt;/order&gt;
        &lt;priority&gt;100&lt;/priority&gt;
        &lt;rest_method/&gt;
        &lt;rest_method_text/&gt;
        &lt;rest_service/&gt;
        &lt;rest_service_text/&gt;
        &lt;rest_variables/&gt;
        &lt;role_conditions/&gt;
        &lt;script&gt;&lt;![CDATA[(function executeRule(current, previous /*undefined when async or display*/) {
 function checkIntersection(what, checkIn) {
  var common = [];
  for (var i = 0; i &lt; what.length; i++) {
   if (util.contains(checkIn, what[i])) {
    common.push(gr[what[i]].getLabel());
   }
  }
  return common;
 }
 var gr = new GlideRecord('change_request');
 gr.initialize();
 var util = new ArrayUtil();

 var mandatory = current.getValue('mandatory_fields').split(',');
 var fixed = current.getValue('restricted_fields').split(',');
 var toCopy = current.getValue('fields_to_copy').split(',');
 var defaultValues = current.getValue('default_values').split(',');
 var hasErr = false;

 var common = checkIntersection(fixed, mandatory);
 if (common.length &gt; 0) {
  if (common.length == 1) {
   common = common[0];
  } else {
   common = common.join(', ');
  }
  gs.addErrorMessage(gs.getMessage("You cannot specify the same fields ({0}) in both Mandatory and Restricted fields.", common));
  hasErr = true;
 }

 common = checkIntersection(fixed, toCopy);
 if (common.length &gt; 0) {
  if (common.length == 1) {
   common = common[0];
  } else {
   common = common.join(', ');
  }
  gs.addErrorMessage(gs.getMessage("You cannot specify the same fields ({0}) in both Restricted field and Fields to copy.", common));
  hasErr = true;
 }

 common = new StdChangeUtils().checkFieldsToCopyWithMandatory(mandatory, defaultValues, toCopy);
 if (common.length &gt; 0) {
  gs.addErrorMessage(gs.getMessage("The combination of fields listed in &lt;b&gt;Default Change values&lt;/b&gt; and &lt;b&gt;Change Fields to copy&lt;/b&gt; must include all &lt;b&gt;Mandatory Change fields&lt;/b&gt;.&lt;br/&gt;The missing fields are: {0}", common.join(", ")));
  hasErr = true;  
 }

 gr = new GlideRecord('change_task');
 gr.initialize();
 var taskMandatory = current.getValue('mandatory_task_fields').split(',');
 var taskFixed = current.getValue('restricted_task_fields').split(',');
 var taskToCopy = current.getValue('task_fields_to_copy').split(',');
 var defaultTaskValues = current.getValue('default_task_values').split(',');

 common = checkIntersection(taskFixed, taskMandatory);
 if (common.length &gt; 0) {
  if (common.length == 1) {
   common = common[0];
  } else {
   common = common.join(', ');
  }
  gs.addErrorMessage(gs.getMessage("You cannot specify the same fields ({0}) in both Mandatory Change Task fields and Restricted Change Task fields.", common));
  hasErr = true;
 }

 common = checkIntersection(taskFixed, taskToCopy);
 if (common.length &gt; 0) {
  if (common.length == 1) {
   common = common[0];
  } else {
   common = common.join(', ');
  }
  gs.addErrorMessage(gs.getMessage("You cannot specify the same fields ({0}) in both Restricted Change Task fields and Change Task Fields to copy.", common));
  hasErr = true;
 }

 common = new StdChangeTaskUtils().checkFieldsToCopyWithMandatory(taskMandatory, defaultTaskValues, taskToCopy);
 if (common.length &gt; 0) {
  gs.addErrorMessage(gs.getMessage("The combination of fields listed in &lt;b&gt;Default Change Task values&lt;/b&gt; and &lt;b&gt;Change Task Fields to copy&lt;/b&gt; must include all &lt;b&gt;Mandatory Change Task fields&lt;/b&gt;.&lt;br/&gt;The missing fields are: {0}", common.join(", ")));
  hasErr = true;  
 }
 
 if (hasErr)
  current.setAbortAction(true);

})(current, typeof previous != 'undefined' ?  previous : null);]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;x_938076_now_utils_now_utils_business_rules&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2024-09-21 07:51:33&lt;/sys_created_on&gt;
        &lt;sys_domain&gt;global&lt;/sys_domain&gt;
        &lt;sys_domain_path&gt;/&lt;/sys_domain_path&gt;
        &lt;sys_id&gt;163ce8d583701210c6695855eeaad323&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;Check conflicts in field configurations&lt;/sys_name&gt;
        &lt;sys_overrides/&gt;
        &lt;sys_package display_value="Now Utils" source="x_938076_now_utils"&gt;b208a7c083689e50c6695855eeaad3d2&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Now Utils"&gt;b208a7c083689e50c6695855eeaad3d2&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;x_938076_now_utils_now_utils_business_rules_163ce8d583701210c6695855eeaad323&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2024-09-21 07:51:33&lt;/sys_updated_on&gt;
        &lt;template/&gt;
        &lt;when&gt;before&lt;/when&gt;
    &lt;/x_938076_now_utils_now_utils_business_rules&gt;
    &lt;sys_translated_text action="delete_multiple" query="documentkey=163ce8d583701210c6695855eeaad323"/&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:56:58</sys_created_on>
        <sys_id>a57d609d83701210c6695855eeaad375</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Check conflicts in field configurations</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_a57d609d83701210c6695855eeaad375</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:56:58</sys_updated_on>
        <tablename>sys_script</tablename>
    </sys_metadata_link>
</record_update>
