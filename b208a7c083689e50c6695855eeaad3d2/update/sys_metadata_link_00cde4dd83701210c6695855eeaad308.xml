<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>257c245983701210c6695855eeaad3f2</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules"&gt;
    &lt;x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE"&gt;
        &lt;abort_action&gt;false&lt;/abort_action&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;action_delete&gt;false&lt;/action_delete&gt;
        &lt;action_insert&gt;true&lt;/action_insert&gt;
        &lt;action_query&gt;false&lt;/action_query&gt;
        &lt;action_update&gt;true&lt;/action_update&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;add_message&gt;false&lt;/add_message&gt;
        &lt;advanced&gt;true&lt;/advanced&gt;
        &lt;change_fields&gt;false&lt;/change_fields&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;collection/&gt;
        &lt;condition/&gt;
        &lt;description/&gt;
        &lt;execute_function&gt;false&lt;/execute_function&gt;
        &lt;filter_condition/&gt;
        &lt;is_rest&gt;false&lt;/is_rest&gt;
        &lt;message/&gt;
        &lt;name&gt;Prevent duplicate mutual exclusion rules&lt;/name&gt;
        &lt;order&gt;100&lt;/order&gt;
        &lt;priority&gt;100&lt;/priority&gt;
        &lt;rest_method/&gt;
        &lt;rest_method_text/&gt;
        &lt;rest_service/&gt;
        &lt;rest_service_text/&gt;
        &lt;rest_variables/&gt;
        &lt;role_conditions/&gt;
        &lt;script&gt;&lt;![CDATA[(function executeRule(current, previous /*null when async*/) {

 var test1 = current.getValue("test1");
 var test2 = current.getValue("test2");

 // Neither field should ever be completely empty
 if (GlideStringUtil.nil(test1) || GlideStringUtil.nil(test2)) {
  current.setAbortAction(true);
  gs.addErrorMessage(gs.getMessage("Mutual exclusion rules require two valid tests to be specified"));
  return;
 }

 // Users cannot make tests exclusive with themselves (ATF already does that for them)
 if (test1 === test2) {
  current.setAbortAction(true);
  gs.addErrorMessage(gs.getMessage("Test '{0}' cannot be made mutually exclusive with itself (all tests exclude themselves automatically)", [current.test1.name]));
  return;
 }

 // Check if a mutual exclusion rule for the specified tests already exists (do not include the current record in case this is an update since it would obviously exist in that case)
 // Note that the ordering for the "test1" and "test2" fields does not matter and so both possibilities must be considered in the query
 // (e.g. test1="1234" and test2="5678" is considered a duplicate of test1="5678" and test2="1234")
 var gr = new GlideRecord("sys_atf_mutual_exclusion_rule");
 gr.addQuery("sys_id", "!=", current.getUniqueValue());
 gr.addEncodedQuery("test1=" + test1 + "^test2=" + test2 +
      "^NQtest1=" + test2 + "^test2=" + test1);
 gr.query();
 if (gr.getRowCount() &gt; 0) {
  current.setAbortAction(true);
  gs.addErrorMessage(gs.getMessage("Tests '{0}' and '{1}' are already mutually exclusive", [current.test1.name, current.test2.name]));
  return;
 }

})(current, previous);]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;x_938076_now_utils_now_utils_business_rules&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2024-09-21 07:52:35&lt;/sys_created_on&gt;
        &lt;sys_domain&gt;global&lt;/sys_domain&gt;
        &lt;sys_domain_path&gt;/&lt;/sys_domain_path&gt;
        &lt;sys_id&gt;257c245983701210c6695855eeaad3f2&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;Prevent duplicate mutual exclusion rules&lt;/sys_name&gt;
        &lt;sys_overrides/&gt;
        &lt;sys_package display_value="Now Utils" source="x_938076_now_utils"&gt;b208a7c083689e50c6695855eeaad3d2&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Now Utils"&gt;b208a7c083689e50c6695855eeaad3d2&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;x_938076_now_utils_now_utils_business_rules_257c245983701210c6695855eeaad3f2&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2024-09-21 07:52:35&lt;/sys_updated_on&gt;
        &lt;template/&gt;
        &lt;when&gt;before&lt;/when&gt;
    &lt;/x_938076_now_utils_now_utils_business_rules&gt;
    &lt;sys_translated_text action="delete_multiple" query="documentkey=257c245983701210c6695855eeaad3f2"/&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:58:13</sys_created_on>
        <sys_id>00cde4dd83701210c6695855eeaad308</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Prevent duplicate mutual exclusion rules</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_00cde4dd83701210c6695855eeaad308</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:58:13</sys_updated_on>
        <tablename>sys_script</tablename>
    </sys_metadata_link>
</record_update>
