<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>26005ec687a72300cd693a0548cb0b7d</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.IMQueryService&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;Idea Common Query service used to get/handle all glide record queries&lt;/description&gt;
        &lt;name&gt;IMQueryService&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var IMQueryService = Class.create();

IMQueryService.getModuleByModuleId = function(moduleId) {
	var moduleGr = new GlideRecord(IMConstants.IM_MODULE_TABLE);
	moduleGr.addQuery('id', moduleId);
	moduleGr.addActiveQuery();
	moduleGr.query();
	return moduleGr;
};

IMQueryService.getCategoryConfigByModuleId = function(moduleSysId) {
	var categoryConfigGr = new GlideRecord(IMConstants.IM_CATEGORY_CONFIG_TABLE);
	categoryConfigGr.addQuery('module' , moduleSysId);
	categoryConfigGr.orderBy('sys_created_on');
	categoryConfigGr.query();
	return categoryConfigGr;
};

IMQueryService.getIdeaById = function(ideaTable, ideaSysId) {
	var ideaGr = new GlideRecord(ideaTable);
	if(ideaGr.isValid()) {
		ideaGr.addQuery('sys_id', ideaSysId);
		ideaGr.addNullQuery('marked_for_delete').addOrCondition('marked_for_delete', false);
		ideaGr.query();
		
		if(ideaGr.next())
			return ideaGr;
	}
	
	return ideaGr;
};

IMQueryService.getCategoriesByIdea = function(ideaSysId) {
	var ideaCategoryGr = new GlideRecord(IMConstants.IM_IDEA_M2M_TABLE);
	ideaCategoryGr.addQuery('idea', ideaSysId);
	ideaCategoryGr.query();
	return ideaCategoryGr;
};

IMQueryService.getUser = function(sysId) {
	var userGr = new GlideRecord('sys_user');
	userGr.get(sysId);
	return userGr;
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2019-02-12 09:58:00&lt;/sys_created_on&gt;
        &lt;sys_id&gt;26005ec687a72300cd693a0548cb0b7d&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;30&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;IMQueryService&lt;/sys_name&gt;
        &lt;sys_package display_value="Innovation Management" source="com.snc.innovation_management"&gt;cf2056ab47e64210cd4e1ce4316d4313&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_26005ec687a72300cd693a0548cb0b7d&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2020-04-21 17:22:39&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:12:31</sys_created_on>
        <sys_id>a901745983b01210c6695855eeaad3f7</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>IMQueryService</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_a901745983b01210c6695855eeaad3f7</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:12:31</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
