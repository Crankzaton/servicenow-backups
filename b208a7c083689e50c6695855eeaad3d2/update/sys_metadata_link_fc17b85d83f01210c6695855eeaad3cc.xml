<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>778ce310b77130104088bc16de11a9ff</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;public&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;sn_sow_inc.SOWIncidentLandingPageUtilitySNC&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;SOWIncidentLandingPageUtilitySNC&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var SOWIncidentLandingPageUtilitySNC = Class.create();
SOWIncidentLandingPageUtilitySNC.prototype = {
    initialize: function() {
        this._initializeColors();
    },

    _initializeColors: function() {
        instanceVersion = gs.getProperty("itsm_family_release_version_check", 0);
        if (instanceVersion &lt;= 24) {
            //for Vancouver and below
            this.REPORT_RANGES_COLORS = {
                "1970-01-01 00:01:00": "critical",
                "1970-01-01 01:00:00": "critical",
                "1970-01-01 08:00:00": "high",
                "1970-01-02 00:00:00": "warning",
                "1970-01-03 00:00:00": "info",
                "1970-01-08 00:00:00": "positive"
            };
            this.CHART_COLORS = {
                "incident": {
                    "state": {
                        '1': 'moderate',
                        '2': 'info',
                        '3': 'warning',
                        '6': 'positive',
                        '7': 'high',
                        '8': 'low'
                    },
                    "priority": {
                        '1': 'critical',
                        '2': 'high',
                        '3': 'info',
                        '4': 'low',
                        '5': 'positive'
                    }
                },
                "sc_task": {
                    "state": {
                        '-5': 'warning',
                        '1': 'moderate',
                        '2': 'info',
                        '3': 'positive',
                        '4': 'high',
                        '7': 'low'
                    }
                },
                "task": {
                    "sys_class_name": {
                        'incident': 'purple',
                        'sc_task': 'green-yellow'
                    }
                }
            };
        } else {
            //for Washington and above
            this.REPORT_RANGES_COLORS = {
                "1970-01-01 00:01:00": "critical",
                "1970-01-01 01:00:00": "orange",
                "1970-01-01 08:00:00": "high",
                "1970-01-02 00:00:00": "pink",
                "1970-01-03 00:00:00": "purple",
                "1970-01-08 00:00:00": "teal"
            };
            this.CHART_COLORS = {
                "incident": {
                    "state": {
                        '1': 'teal',
                        '2': 'purple',
                        '3': 'high',
                        '6': 'green-yellow',
                        '7': 'green',
                        '8': 'low'
                    },
                    "priority": {
                        '1': 'critical',
                        '2': 'high',
                        '3': 'purple',
                        '4': 'teal',
                        '5': 'green'
                    }
                },
                "sc_task": {
                    "state": {
                        '-5': 'high',
                        '1': 'moderate',
                        '2': 'teal',
                        '3': 'green',
                        '4': 'orange',
                        '7': 'low'
                    }
                },
                "task": {
                    "sys_class_name": {
                        'incident': 'purple',
                        'sc_task': 'green-yellow'
                    }
                }
            };
        }
    },
    _getSLATimeLeftLabelForIncidentSlaEvamCard: function(targetType, timeLeftDisplayValue, hasBreached, slaTimeLeftLabelValue) {
        if (targetType == "resolution")
            slaTimeLeftLabelValue["label"] = hasBreached == true ? gs.getMessage('Resolution SLA Breached') : gs.getMessage('Resolve in {0}', timeLeftDisplayValue);
        else if (targetType == "response")
            slaTimeLeftLabelValue["label"] = hasBreached == true ? gs.getMessage('Response SLA Breached') : gs.getMessage('Respond in {0}', timeLeftDisplayValue);
        else
            slaTimeLeftLabelValue["label"] = hasBreached == true ? gs.getMessage('SLA Breached') : gs.getMessage('SLA time left {0}', timeLeftDisplayValue);
        return slaTimeLeftLabelValue;
    },

    _getSLATimeLeftLabelValueForIncidentEvamCard: function(targetType, timeLeftDisplayValue, hasBreached, slaTimeLeftLabelValue) {
        if (targetType == "resolution")
            slaTimeLeftLabelValue["label"] = hasBreached == true ? gs.getMessage('Resolution SLA') : gs.getMessage('Resolve in');
        else if (targetType == "response")
            slaTimeLeftLabelValue["label"] = hasBreached == true ? gs.getMessage('Response SLA') : gs.getMessage('Respond in');
        else
            slaTimeLeftLabelValue["label"] = hasBreached == true ? gs.getMessage('SLA') : gs.getMessage('SLA time left');

        slaTimeLeftLabelValue["value"] = hasBreached == true ? gs.getMessage('Breached') : timeLeftDisplayValue;
        return slaTimeLeftLabelValue;
    },

    getSLATimeLeftLabelValueForEvamCard: function(table, targetType, timeLeftDisplayValue, hasBreached) {
        var slaTimeLeftLabelValue = {
            "label": "",
            "value": ""
        };

        if (table == "task_sla") {
            return this._getSLATimeLeftLabelForIncidentSlaEvamCard(targetType, timeLeftDisplayValue, hasBreached, slaTimeLeftLabelValue);
        } else {
            return this._getSLATimeLeftLabelValueForIncidentEvamCard(targetType, timeLeftDisplayValue, hasBreached, slaTimeLeftLabelValue);
        }
    },

    type: 'SOWIncidentLandingPageUtilitySNC'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2021-08-02 11:16:37&lt;/sys_created_on&gt;
        &lt;sys_id&gt;778ce310b77130104088bc16de11a9ff&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;35&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;SOWIncidentLandingPageUtilitySNC&lt;/sys_name&gt;
        &lt;sys_package display_value="Incident Management for Service Operations Workspace" source="sn_sow_inc"&gt;49aff4bb733320103e366238edf6a70f&lt;/sys_package&gt;
        &lt;sys_policy&gt;read&lt;/sys_policy&gt;
        &lt;sys_scope display_value="Incident Management for Service Operations Workspace"&gt;49aff4bb733320103e366238edf6a70f&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_778ce310b77130104088bc16de11a9ff&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2023-10-09 12:16:47&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:38:57</sys_created_on>
        <sys_id>fc17b85d83f01210c6695855eeaad3cc</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>SOWIncidentLandingPageUtilitySNC</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_fc17b85d83f01210c6695855eeaad3cc</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:38:57</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
