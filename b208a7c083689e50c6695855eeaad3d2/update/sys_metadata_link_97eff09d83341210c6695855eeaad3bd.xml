<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>aa6af7d6532d1110456dddeeff7b1208</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;sn_cmdb_ws.CMDBSet&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;Wraps around the conventional JS Object to provide the fundamental Set capabilities.&lt;/description&gt;
        &lt;name&gt;CMDBSet&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var CMDBSet = Class.create();

CMDBSet.prototype = {

	initialize: function() {
		this._set = {};
		this._delimit = '___';
		this._autoTypes = {
            "string": true,
            "boolean": true,
            "number": true,
            "undefined": true
        };
	}, 
	
	add: function(rawKey) {
		var sKey = this._getKey(rawKey);
		if (sKey)
			this._set[sKey] = true;
	},
	
	addAll: function(arrayInput) {
		if (Array.isArray(arrayInput)) {
			var pThis = this;
			arrayInput.forEach(function (elem) {
				pThis.add(elem);
			});
		}
		return this;
	},

	remove: function(rawKey) {
		var sKey = this._getKey(rawKey);
		if (sKey)
			delete this._set[sKey];
	},
	
	clear: function() {
		this._set = {};
	},
	
	toArray: function() {
		var pThis = this;
		return Object.keys(this._set).map(function(sKey) {
			return pThis._getRawKey(sKey);
		});
	},

	has: function(rKey) {
		return this._set.hasOwnProperty(this._getKey(rKey));
	},
	
	length: function() {
		return Object.keys(this._set).length;
	},

	forEach: function(fn /*, context */) {
		// by spec, we have to type check the fn argument
		if (typeof fn !== "function") return;

		// context argument is optional, but .forEach.length is supposed to be 1 by spec
		// so we declare it this way
		var context = arguments[1];

		//invoke the fn with the raw keys
		var rKey = null;
		for(var sKey in this._set) {
			rKey = this._getRawKey(sKey);
			fn.call(context, rKey, rKey, this);
		}
	},
	/**
	 * Types where the key is created by adding an underscore and toString() to 
	 * the first three letters of the type.
	 *
	 * The first three letters of the type create a namespace for each type, 
	 * allowing us to have distinct keys for things like 10 and "10" (num 10 and "str 10," respectively).
	 */
	_getKey: function(rawKey) {
		var type = typeof rawKey, id;
		if (this._autoTypes[type]) {
			return type.substr(0, 3) + this._delimit + rawKey;
		} else if (rawKey === null) {
			return "nul_null";
		} else {
			throw new Error("Unsupported type for key: "+JSON.stringify(rawKey, null, ' '));
		}
	},
	
	_getRawKey: function(sKey) {
		var rKey = sKey.split(this._delimit)[1];
		if (rKey == 'null' || rKey == 'undefined')
			return null;
		else
			return rKey;
	},

    type: 'CMDBSet'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2022-08-28 23:28:48&lt;/sys_created_on&gt;
        &lt;sys_id&gt;aa6af7d6532d1110456dddeeff7b1208&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;17&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;CMDBSet&lt;/sys_name&gt;
        &lt;sys_package display_value="CMDB Workspace" source="sn_cmdb_ws"&gt;c8ab76825371201032b7ddeeff7b1280&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="CMDB Workspace"&gt;c8ab76825371201032b7ddeeff7b1280&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_aa6af7d6532d1110456dddeeff7b1208&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2022-10-02 19:19:42&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 09:17:37</sys_created_on>
        <sys_id>97eff09d83341210c6695855eeaad3bd</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>CMDBSet</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_97eff09d83341210c6695855eeaad3bd</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 09:17:37</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
