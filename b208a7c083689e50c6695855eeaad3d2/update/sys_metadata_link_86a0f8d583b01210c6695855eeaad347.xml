<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>176b85de737510107419c907fbf6a7fe</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;sn_table_builder.TBTableStructureAPI&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;The table structure response needed for table builder&lt;/description&gt;
        &lt;name&gt;TBTableStructureAPI&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var TBTableStructureAPI = Class.create();
TBTableStructureAPI.prototype = {
    /**
     * options - { transactionScope }
     */
    initialize: function(sysId, perspective, options) {
        this.sysId = sysId;
        this.perspective = perspective;
        this.tbObj = new TableDBObject(sysId);
        this.table = this.tbObj.getName();
        this.options = options;
    },

    build: function() {
        var result = this._validate();

        if (!result.isValid)
            return TBUtil.error(result);

        switch (this.perspective) {
            case TBConstants.TB_PERSPECTIVES.VIEW_FIELD_ROW:
                return this._fieldRowPerspective();
            default:
                return {};
        }
    },

    _fieldRowPerspective: function() {
        this.prefManager = new PreferenceManager(TBConstants.SYS_CLASS_DICTIONARY);
        var tableMetadata = this.tbObj.tableMetadata(this.options.transactionScope);
        var columns = new TableColumns(
            TBConstants.SYS_CLASS_DICTIONARY,
            TBConstants.fieldRowListView
        ).getColumnProps();
        var pref = new PreferenceManager();
        var orderByColumn = this._getSortColumn();
        var orderByIsDescending = this._isSortOrderDescending();
        var rowCount = this._getRowCount();
        var choiceTypes = TBUtil.getChoiceTypes();

        return {
            tableMetadata: tableMetadata,
            columns: columns,
            preferenceData: {
                showWelcomeScreen: !JSON.parse(pref.getWelcomeScreenPreference()),
                showDataTabInfoPopup: !JSON.parse(pref.getDataTabInfoPopupPreference())
            },
            pageSize: rowCount,
            orderByColumn: orderByColumn,
            choiceTypes: choiceTypes,
            orderByIsDescending: orderByIsDescending,
        };
    },
    _getRowCount: function() {
        return JSON.parse(this.prefManager.getRowCount());
    },

    _getSortColumn: function() {
        var defaultColumnForSort = this._getDefaultColumnForSort(TBConstants.SYS_CLASS_DICTIONARY, TBConstants.fieldRowListView);
        return  this.prefManager.getSortColumn(defaultColumnForSort);
    },

    _isSortOrderDescending: function() {
        return this.prefManager.isOrderByDescending();
    },

    _getDefaultColumnForSort: function(table, view) {
        var columns = new ListViewManager(table, view).getListElements();
        return columns &amp;&amp; columns.length ? columns[0] : null;
    },

    _validate: function() {
        var res = Validators.validatePerspective(this.perspective);
        if (!res.isValid)
            return res;

        res = Validators.validateTbObjRecord(this.tbObj);
        if (!res.isValid)
            return res;

        res = Validators.validateTbObjAccess(this.tbObj);
        if (!res.isValid)
            return res;

        return {
            isValid: true
        };
    },

    type: 'TBTableStructureAPI'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2020-07-06 12:16:35&lt;/sys_created_on&gt;
        &lt;sys_id&gt;176b85de737510107419c907fbf6a7fe&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;38&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;TBTableStructureAPI&lt;/sys_name&gt;
        &lt;sys_package display_value="Table Builder" source="sn_table_builder"&gt;f53f19bac362fa22ca2e93692d32f18f&lt;/sys_package&gt;
        &lt;sys_policy&gt;read&lt;/sys_policy&gt;
        &lt;sys_scope display_value="Table Builder"&gt;f53f19bac362fa22ca2e93692d32f18f&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_176b85de737510107419c907fbf6a7fe&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2022-11-07 23:32:44&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:10:55</sys_created_on>
        <sys_id>86a0f8d583b01210c6695855eeaad347</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>TBTableStructureAPI</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_86a0f8d583b01210c6695855eeaad347</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:10:55</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
