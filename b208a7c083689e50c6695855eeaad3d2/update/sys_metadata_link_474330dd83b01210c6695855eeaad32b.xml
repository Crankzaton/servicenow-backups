<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>86957c6793620210b31a30dcebba1012</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_fix"&gt;
    &lt;sys_script_fix action="INSERT_OR_UPDATE"&gt;
        &lt;before&gt;false&lt;/before&gt;
        &lt;description/&gt;
        &lt;name&gt;Check time&lt;/name&gt;
        &lt;record_for_rollback&gt;true&lt;/record_for_rollback&gt;
        &lt;script&gt;&lt;![CDATA[// Function to convert a GlideDateTime object to seconds from midnight
function getSecondsFromMidnight(gdt) {
    var date = gdt.getLocalDate();
	gs.info("date " + date);
    var hours = gdt.getHourOfDayLocalTime();
	gs.info("hours " + hours);
    var minutes = gdt.getMinuteOfHour();
	gs.info("minutes " + minutes);
    var seconds = gdt.getSecond();
	gs.info("seconds " + seconds);
    return (hours * 3600 + minutes * 60 + seconds);
}
var currentTime = new GlideDateTime();
gs.info(getSecondsFromMidnight('2024-06-08 16:30:00'));

/*

// Initialize the current time or the time you want to check
var currentTime = new GlideDateTime('2024-06-08 16:30:00'); // This gets the current date and time
gs.info('Current time ' + currentTime);

// If you want to check a specific time, uncomment the following line and set the desired time
//currentTime.setValue('2024-06-08 16:30:00'); // Example specific time

// Define the start time (3 PM) and end time (5 PM) in seconds from midnight
var startSeconds = 15 * 3600; // 3 PM is 15 hours from midnight
var endSeconds = 17 * 3600;   // 5 PM is 17 hours from midnight

// Get the seconds from midnight for the current time
var currentSeconds = getSecondsFromMidnight(currentTime);
gs.info('current Seconds' + currentSeconds.toString());

// Check if the current time is within the range
if (currentSeconds &gt;= startSeconds &amp;&amp; currentSeconds &lt;= endSeconds) {
    gs.info('The given time is within 3 to 5 PM.');
} else {
    gs.info('The given time is outside the range of 3 to 5 PM.');
}
*/]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_fix&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2024-06-08 11:57:52&lt;/sys_created_on&gt;
        &lt;sys_id&gt;86957c6793620210b31a30dcebba1012&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;Check time&lt;/sys_name&gt;
        &lt;sys_package display_value="Global" source="global"&gt;global&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_fix_86957c6793620210b31a30dcebba1012&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2024-06-08 11:57:52&lt;/sys_updated_on&gt;
        &lt;unloadable&gt;false&lt;/unloadable&gt;
    &lt;/sys_script_fix&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:22:27</sys_created_on>
        <sys_id>474330dd83b01210c6695855eeaad32b</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Check time</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_474330dd83b01210c6695855eeaad32b</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:22:27</sys_updated_on>
        <tablename>sys_script_fix</tablename>
    </sys_metadata_link>
</record_update>
