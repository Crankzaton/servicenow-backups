<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>7c322126eb123010d57442d7b5522825</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_fix"&gt;
    &lt;sys_script_fix action="INSERT_OR_UPDATE"&gt;
        &lt;before&gt;false&lt;/before&gt;
        &lt;description&gt;Check if the hex color should be used in the task state color items instead of the theme colors based on any customizations.&lt;/description&gt;
        &lt;name&gt;Update FSM Task State Color To San Diego&lt;/name&gt;
        &lt;record_for_rollback&gt;false&lt;/record_for_rollback&gt;
        &lt;script&gt;&lt;![CDATA[var output = {};
output.msg = "";
output.hasCollision = false;
output.customizedRecordStrList = [];
addMsg("Start process FSM task state color upgrade fix to avoid forcing the new theme color to be used " + getCurrentTimestamp());
var USE_HEX_SYS_PROPERTY_NAME = "work.management.task_state_color.use_hex";
var STATE_COLOR_CONFIG_SYS_ID = "7202c88b53a21010ca12ddeeff7b1286";
var gcd = GlideCollisionDetector.get();

processCollisionCheck();
function processCollisionCheck() {
    if (gs.nil(gcd)) {
        addMsg("Error in initiating GlideCollisionDetector.");
        addMsg("Ended.");
        printMsg();
        return;
    }
	// check state color config record
	var stateColorConfigGr = new GlideRecord("app_cmn_state_color_config");
	if (!stateColorConfigGr.get(STATE_COLOR_CONFIG_SYS_ID) || isCustomized(stateColorConfigGr)){		
        addMsg("!Customization detected in the state color configuration record.");
		turnOnCollisionFlag();
		return;
	}
    // get the state color items	
    var stateColorItemGr = new GlideRecord("app_cmn_state_color_item");
    stateColorItemGr.addQuery("state_color_config", STATE_COLOR_CONFIG_SYS_ID);
    stateColorItemGr.query();
    // loop in all the state color items to check customizations
    while(stateColorItemGr.next()) {
        if (isCustomized(stateColorItemGr)) {	
			addMsg("!Customization detected in the state color item record: " + stateColorItemGr.sys_id);
            turnOnCollisionFlag();
            return;
        }
    }
}
updateColorStateUseHexSysProperty();

addMsg("End process FSM task state color upgrade fix to avoid forcing the new theme color to be used " + getCurrentTimestamp());
printMsg();

// utils
function turnOnCollisionFlag() {
    output.hasCollision = true;
}
function updateColorStateUseHexSysProperty() {
    if (output.hasCollision) {
        addMsg("Turn on the system property " + USE_HEX_SYS_PROPERTY_NAME);
        // toggle the system property
        if (gs.getProperty(USE_HEX_SYS_PROPERTY_NAME, "false") == "false") {
            updateSystemProperty(USE_HEX_SYS_PROPERTY_NAME, "true");
        }
    }
    
}
function isCustomized(gr) {
    var updateName = gr.sys_update_name + "";
    if (gcd.containsKey(updateName)) {
        addMsg("!Customization detected in " + updateName);
        if (output.customizedRecordStrList.indexOf(updateName) &lt; 0) {
            output.customizedRecordStrList.push(updateName);
        }
        return true;
    }
    return false;
}
function getCurrentTimestamp() {
    var d = new GlideDateTime();
    var ms = d.getNumericValue();
    return (d + '(' + ms + ')');
}
function addMsg(msg) {
    output.msg += msg + "\n";
}
function printMsg(msg) {
    gs.info("FSM Mobile upgrade fix output at " + getCurrentTimestamp() + "\n" + (msg ? msg : output.msg));
    output.msg = "";
}
function updateSystemProperty(name, value) {
    var gr = GlideRecord("sys_properties");
    gr.addActiveQuery();
    gr.addQuery('name', name);
    gr.query();
    if (gr.next()) {
        gr.value = value;
        gr.update();
    }
}]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_fix&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2021-09-02 21:46:33&lt;/sys_created_on&gt;
        &lt;sys_id&gt;7c322126eb123010d57442d7b5522825&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;22&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;Update FSM Task State Color To San Diego&lt;/sys_name&gt;
        &lt;sys_package display_value=""&gt;25371ef01b8a21109c18a9f9bc4bcb1e&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_fix_7c322126eb123010d57442d7b5522825&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2021-09-10 20:52:13&lt;/sys_updated_on&gt;
        &lt;unloadable&gt;false&lt;/unloadable&gt;
    &lt;/sys_script_fix&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:22:08</sys_created_on>
        <sys_id>5a337c9d83b01210c6695855eeaad39f</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Update FSM Task State Color To San Diego</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_5a337c9d83b01210c6695855eeaad39f</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:22:08</sys_updated_on>
        <tablename>sys_script_fix</tablename>
    </sys_metadata_link>
</record_update>
