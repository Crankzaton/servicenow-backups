<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>true</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition>!current.cmdb_ci.nil() &amp;&amp; current.begin.hasValue() &amp;&amp; gs.dateDiff(current.begin, gs.nowNoTZ(), true) &gt;= 0</condition>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Service Portal Outage Events</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
 if (current.operation() == "insert") {
  if (current.end.hasValue())
   return; // record inserted w/ start/end both populated, do nothing

  gs.addInfoMessage(gs.getMessage("Outage opened for {0}", current.cmdb_ci.getDisplayValue()));
  gs.eventQueue("outage.begin", current, current.cmdb_ci, current.cmdb_ci.getDisplayValue());
 }

 if (current.operation() == "update") {
  // we only care here if 1) end just got populated, or 2) message was updated
  if (previous.end.nil() && current.end.hasValue()) { // existing outage was closed
   gs.addInfoMessage(gs.getMessage("Outage closed for {0}", current.cmdb_ci.getDisplayValue()));
   gs.eventQueue("outage.end", current, current.cmdb_ci, current.cmdb_ci.getDisplayValue());
  } else if (current.details.changes()) {
   gs.addInfoMessage(gs.getMessage("Outage details updated for {0}", current.cmdb_ci.getDisplayValue()) + ": " + current.details.getHTMLValue());
   gs.eventQueue("outage.details", current, current.cmdb_ci, current.cmdb_ci.getDisplayValue());
  }
 }
 
 if (current.operation() == "delete") {
  gs.addInfoMessage(gs.getMessage("Outage deleted for {0}", current.cmdb_ci.getDisplayValue()));
  gs.eventQueue("outage.delete", current, current.cmdb_ci, current.cmdb_ci.getDisplayValue());
 }

 var outage = new GlideRecord("cmdb_ci_outage");
 outage.addQuery("cmdb_ci", current.cmdb_ci);
 outage.addQuery("begin", "<=", gs.nowNoTZ());
 outage.addQuery("end", ">", gs.nowNoTZ()).addOrCondition("end", "=", "NULL");
 outage.setLimit(1);
 outage.query();
 var hasCurrentOutage = outage.hasNext();

})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:53:21</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>30ace49983701210c6695855eeaad3f7</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Service Portal Outage Events</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_30ace49983701210c6695855eeaad3f7</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:53:21</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=30ace49983701210c6695855eeaad3f7"/>
</record_update>
