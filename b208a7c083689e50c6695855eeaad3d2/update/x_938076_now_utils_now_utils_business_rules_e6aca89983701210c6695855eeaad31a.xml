<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>reminder_validator</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[var task = current.task;
var field = current.field;

if (task) {
   // maybe at least we have a task
   var taskGr = new GlideRecord("task");
   taskGr.get(task.sys_id);
   var value = JSUtil.nil(taskGr.getValue(field));
   if (value) {
      gs.addErrorMessage(gs.getMessage('You asked to be notified before the task {0}, but that field is currently empty.', field));
      current.setAbortAction(true);
   } else {
     isValid = true;
   }
} else {
  // no task
      gs.addErrorMessage(gs.getMessage('You asked to be notified about a non existent or empty task. That is beyond our skills.'));
      current.setAbortAction(true);
}

if (!current.isActionAborted()) {
   // tell our parent that he has at least one child
   var temp = current.task.sys_id;
   var target = new GlideRecord('task');
   target.addQuery("sys_id", temp);
   target.query();
   if (target.next()) {
     var fields = "due_date,sla_due,activity_due,follow_up,active";
     var className ="com.glide.listener.TaskChildNotifier";
     target.attachGlideListener(className, true, true, true, fields, null);
   }
   // set ourselves up and pass in our parent as, well, our parent
  var fields = "task,subject,user,remind_me,using,field,notes";
  var className ="com.glide.listener.ReminderSynchronizer";
  current.attachGlideListener(className, true, true, true, fields, target);

}]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:53:28</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>e6aca89983701210c6695855eeaad31a</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>reminder_validator</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_e6aca89983701210c6695855eeaad31a</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:53:28</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=e6aca89983701210c6695855eeaad31a"/>
</record_update>
