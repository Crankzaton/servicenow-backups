<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>true</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Update Visited States on state change</name>
        <order>2000</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[function onBefore(current, previous) {
 //This function will be automatically called when this rule is processed.
 var states = current.getValue('visited_state')  || '';
 var state_list = states.split(",");
 var new_orderd_states = [];
 var processflow_state_order = processflowStateOrder();
 
 //Ordering the visited states based on current state
 for(i = 0 ; i < state_list.length; i++ ){
  if(processflow_state_order[state_list[i]] < processflow_state_order[current.state]){
   new_orderd_states.push(state_list[i]);
  } else {
   break;
  }
 }
 new_orderd_states.push(current.state);
 current.visited_state = new_orderd_states.toString();
}

function processflowStateOrder(){
 var processflow_state_order = {};
  var gr = new GlideRecord('sys_process_flow');
  var table = current.sys_class_name;
  gr.addEncodedQuery('table='+table+'^active=true');
  gr.orderBy('order');
  gr.query();
  while(gr.next()){
   processflow_state_order[gr.name.toString()] = gr.order.toString();
  }
  return processflow_state_order;
 }]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:52:46</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>048c685983701210c6695855eeaad3a1</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Update Visited States on state change</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_048c685983701210c6695855eeaad3a1</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:52:46</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=048c685983701210c6695855eeaad3a1"/>
</record_update>
