<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>4c4f7bd1773320108043270bba1061f6</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;public&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.CMDBDataManagerTaskApprovalHelper&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;CMDBDataManagerTaskApprovalHelper&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var CMDBDataManagerTaskApprovalHelper = Class.create();
CMDBDataManagerTaskApprovalHelper.prototype = {
    initialize: function() {},

    triggerTaskApprovalSubFlow: function(taskRecord) {
        var msg = '';
        try {
            var subflow = '509b682c536320108cabddeeff7b12af';
            var subflowGr = new GlideRecord('sys_hub_flow');
            subflowGr.addQuery('sys_id', subflow);
            subflowGr.addQuery('active', true);
            subflowGr.query();
            if (!subflowGr.next()) {
                msg = 'Invalid task: Missing approval subflow record';
                gs.error(msg);
                // Update task to error
                handleFailure(msg);
                return;
            }
            // Grab subflow
            var subflowName = subflowGr.getValue('sys_scope') + '.' + subflowGr.getValue('internal_name');
            var inputs = {};
            inputs['task'] = taskRecord;
            var DEF_TIME_OUT = 1000 * 60 * 10;
            var TIME_OUT = gs.getProperty('glide.cmdb.data.manager.approval.subflow.timeout') || DEF_TIME_OUT;
            // Trigger approval workflow
            var res = sn_fd.FlowAPI.getRunner()
                .subflow(subflowName)
                .inBackground()
                .withInputs(inputs)
                .timeout(TIME_OUT)
                .run();
        } catch (ex) {
            var message = ex.getMessage();
            gs.error(message);
            handleFailure(message);
        }

        function handleFailure(closeNotes) {
            taskRecord.setValue('state', 4); // Closed Incomplete
            taskRecord.setValue('close_notes', closeNotes);
            taskRecord.update();
            // send notification
            var grUserRoles = new GlideRecord("sys_user_has_role");
            grUserRoles.addQuery("role", "b156309e53722010af64ddeeff7b1227"); // data_manager_admin role
            grUserRoles.query();
            var userList = [];
            if (runAsUser) {
                userList.push(runAsUser);
            }
            while (grUserRoles.next()) {
                userList.push(grUserRoles.user);
            }
            if (userList.length == 0) {
                gs.warn(gs.getMessage("The CMDB Data Manager policy: {0} does not have any users to send notification emails", taskRecord.policy_id));
                return;
            }
            gs.eventQueue("cmdbdatamanager.task.failed", taskRecord, userList.toString(), taskRecord.policy_id);
        }
    },

    type: 'CMDBDataManagerTaskApprovalHelper'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2021-04-28 05:04:26&lt;/sys_created_on&gt;
        &lt;sys_id&gt;4c4f7bd1773320108043270bba1061f6&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;1&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;CMDBDataManagerTaskApprovalHelper&lt;/sys_name&gt;
        &lt;sys_package display_value="CMDB Data Manager" source="com.snc.cmdb.ci_lifecycle_manager"&gt;57bb78a43c35311068bcf327dfe37f17&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_4c4f7bd1773320108043270bba1061f6&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2023-04-19 01:21:49&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:36:49</sys_created_on>
        <sys_id>6196b8d983f01210c6695855eeaad3fa</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>CMDBDataManagerTaskApprovalHelper</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_6196b8d983f01210c6695855eeaad3fa</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:36:49</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
