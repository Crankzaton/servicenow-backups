<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Retirement definition validation</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

    var gr = new GlideRecord("cmdb_retirement_custom_definitions");
    gr.addQuery("table", current.getValue("table"));
    gr.query();

    //one record per table
    if(gr.next() && gr.getUniqueValue() != current.getUniqueValue()){
      gs.addErrorMessage(gs.getMessage("Only one definition per cmdb table is allowed."));
      current.setAbortAction(true);
    }

    //no use of "OR" conditions
    var encodedQuery = current.getValue("retirement_definition");
    
    if(encodedQuery.includes('^OR') || encodedQuery.includes('^NQ')){
      gs.addErrorMessage(gs.getMessage("The use of 'OR' conditions are not permitted when defining retirement state. Single conditions and conjoined conditions using 'AND' are allowed"));
      current.setAbortAction(true);
    }

    //check for non '=' pairs
    var encodedPairs = encodedQuery.split('^');
    for(var i = 0; i < encodedPairs.length; i++){
      if('EQ'.equals(encodedPairs[i])) //default final clause in all encoded queries
        continue;
      if (encodedPairs[i].indexOf('!=') > 0 || encodedPairs[i].indexOf('=') < 0) {
        gs.addErrorMessage(gs.getMessage("All retirement definitions must be in the form of '<field> is <value>' statements"));
        current.setAbortAction(true);
        break;
      }

      var pair = encodedPairs[i].split('=');
        if (pair.length != 2 || gs.nil(pair[0]) || gs.nil(pair[1])) {
          gs.addErrorMessage(gs.getMessage("All retirement definitions must be in the form of '<field> is <value>' statements"));
        current.setAbortAction(true);
        break;
      }
    }
  })(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:47:21</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>f04b245183701210c6695855eeaad382</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Retirement definition validation</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_f04b245183701210c6695855eeaad382</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:47:21</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=f04b245183701210c6695855eeaad382"/>
</record_update>
