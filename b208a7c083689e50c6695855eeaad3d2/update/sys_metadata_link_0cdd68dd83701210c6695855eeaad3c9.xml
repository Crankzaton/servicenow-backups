<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>280c249583701210c6695855eeaad36c</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules"&gt;
    &lt;x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE"&gt;
        &lt;abort_action&gt;false&lt;/abort_action&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;action_delete&gt;false&lt;/action_delete&gt;
        &lt;action_insert&gt;true&lt;/action_insert&gt;
        &lt;action_query&gt;false&lt;/action_query&gt;
        &lt;action_update&gt;true&lt;/action_update&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;add_message&gt;false&lt;/add_message&gt;
        &lt;advanced&gt;true&lt;/advanced&gt;
        &lt;change_fields&gt;false&lt;/change_fields&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;collection/&gt;
        &lt;condition&gt;current.run_calc_brs != false&lt;/condition&gt;
        &lt;description/&gt;
        &lt;execute_function&gt;false&lt;/execute_function&gt;
        &lt;filter_condition/&gt;
        &lt;is_rest&gt;false&lt;/is_rest&gt;
        &lt;message/&gt;
        &lt;name&gt;ProjectWorkbenchPhaseValidationAndUpdate&lt;/name&gt;
        &lt;order&gt;99&lt;/order&gt;
        &lt;priority&gt;100&lt;/priority&gt;
        &lt;rest_method/&gt;
        &lt;rest_method_text/&gt;
        &lt;rest_service/&gt;
        &lt;rest_service_text/&gt;
        &lt;rest_variables/&gt;
        &lt;role_conditions/&gt;
        &lt;script&gt;&lt;![CDATA[handleInsertUpdate();

function handleInsertUpdate() {
 
 if (current.top_task.calculation_type == "manual" &amp;&amp; !endDateValid()) 
  return false;
 
 if (current.operation() == "insert" ) {
  if (!calculationTypeValidOnInsert()) 
   return false;
  if(!parentPhaseTypeValidOnInsert())
   return false;
  if (current.top_task.calculation_type == "manual") {
   current.calculation_type = "manual";
   current.time_constraint = "start_on";
  }
 } else if (current.operation() == "update") {
  if (current.calculation_type.changes() &amp;&amp; !calculationTypeValidOnUpdate())
   return false;
  if (current.time_constraint.changes() &amp;&amp; !timeConstraintValid())
   return false;
  if(this._onlyConstraintDateChanged(current) &amp;&amp; !constraintDateValid())
   return false;
 }
}

function _onlyConstraintDateChanged(current){
   // when both are changed, its valid. 
      return current.constraint_date.changes() &amp;&amp; !current.start_date.changes() ;
}

function calculationTypeValidOnInsert() {
 var projectHasChildren = current.top_task.rollup.toString();
 if (current.top_task.calculation_type != "manual" &amp;&amp; projectHasChildren == "true" &amp;&amp; current.calculation_type == "manual") {
  current.setAbortAction(true);
  gs.addErrorMessage(gs.getMessage('Auto projects can not have manual tasks'));
  return false;
 }
 return true;
}

function calculationTypeValidOnUpdate() {
 if (current.top_task.calculation_type != "manual") {
  current.setAbortAction(true);
  gs.addErrorMessage(gs.getMessage('Auto projects can not change calculation'));
  return false;
 }
 return true;
}

function parentPhaseTypeValidOnInsert(){
 if(current.parent){
  var parentPhaseType = current.parent.phase_type;
  if(parentPhaseType == "agile" || parentPhaseType == "test"){
   current.setAbortAction(true);
   gs.addErrorMessage(gs.getMessage('Project tasks can added to only waterfall phase'));
   return false;
  }
 }
 return true;
}

function timeConstraintValid() { 
 if (current.calculation_type == "manual" &amp;&amp; (current.time_constraint == "asap" ||current.time_constraint == "snlt" || current.time_constraint == "snet")) {
  current.setAbortAction(true);
  gs.addErrorMessage(gs.getMessage('Manual task time constraint can not be updated'));
  return false;
 }
 return true;
}

function constraintDateValid() {
 if(current.calculation_type == "manual") {
  current.setAbortAction(true);
  gs.addErrorMessage(gs.getMessage('Manual task constraint date can not be updated'));
  return false;
 }
 return true;
}

function endDateValid() { 
 if (current.duration.getGlideObject().getNumericValue() == 0) //milestone
  current.end_date = current.start_date;

 var ptm = new SNC.ProjectTaskManager();
 var projectStartToTaskEnd = 
  ptm.RecalculateDurationFromEndDate(current.top_task.start_date.getDisplayValue(),
  current.end_date.getDisplayValue(), current.top_task.schedule);
 var gd = new GlideDuration(projectStartToTaskEnd);
 var daysPart = gd.getDayPart();
 var max_task_duration = Number(gs.getProperty("com.snc.project.task.max_task_duration"));
 if (daysPart &gt; max_task_duration) {
  current.setAbortAction(true);
        gs.addErrorMessage(gs.getMessage('Project duration can not be more than {0} days', max_task_duration));
  return false;
 } 
 return true;
}]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;x_938076_now_utils_now_utils_business_rules&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2024-09-21 07:50:36&lt;/sys_created_on&gt;
        &lt;sys_domain&gt;global&lt;/sys_domain&gt;
        &lt;sys_domain_path&gt;/&lt;/sys_domain_path&gt;
        &lt;sys_id&gt;280c249583701210c6695855eeaad36c&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;ProjectWorkbenchPhaseValidationAndUpdate&lt;/sys_name&gt;
        &lt;sys_overrides/&gt;
        &lt;sys_package display_value="Now Utils" source="x_938076_now_utils"&gt;b208a7c083689e50c6695855eeaad3d2&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Now Utils"&gt;b208a7c083689e50c6695855eeaad3d2&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;x_938076_now_utils_now_utils_business_rules_280c249583701210c6695855eeaad36c&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2024-09-21 07:50:36&lt;/sys_updated_on&gt;
        &lt;template/&gt;
        &lt;when&gt;before&lt;/when&gt;
    &lt;/x_938076_now_utils_now_utils_business_rules&gt;
    &lt;sys_translated_text action="delete_multiple" query="documentkey=280c249583701210c6695855eeaad36c"/&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:58:29</sys_created_on>
        <sys_id>0cdd68dd83701210c6695855eeaad3c9</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>ProjectWorkbenchPhaseValidationAndUpdate</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_0cdd68dd83701210c6695855eeaad3c9</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:58:29</sys_updated_on>
        <tablename>sys_script</tablename>
    </sys_metadata_link>
</record_update>
