<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>6e1c94ba87fa21103f0f7e2526cb0b69</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;sn_deploy_pipeline.ScanSuitePopulate&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;Populates default scan suites in the scan suite table (sn_deploy_pipeline_scan_suite) from scan suite remote table (sn_deploy_pipeline_st_scan_suite) table. &lt;/description&gt;
        &lt;name&gt;ScanSuitePopulate&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var ScanSuitePopulate = Class.create();

(function() {
    ScanSuitePopulate.missingSuiteErrorMsg = function(suiteId, type) {
        var errMsg;
        if (type === ScanSuiteConstants.INSTANCE_SCAN_SUITE) {
            errMsg = gs.getMessage("Missing Instance scan suite with id '{0}' on test instance.", [suiteId]);
        } else if (type === ScanSuiteConstants.ATF_SCAN_SUITE) {
            errMsg = gs.getMessage("Missing ATF scan suite with id '{0}' on test instance.", [suiteId]);
        }
        gs.addErrorMessage(errMsg);
    };

    ScanSuitePopulate.existingSuiteInfoMsg = function(suiteId, type) {
        var infoMsg;
        if (type === ScanSuiteConstants.INSTANCE_SCAN_SUITE) {
            infoMsg = gs.getMessage("Instance scan suite with id '{0}' exists in the table.", [suiteId]);
        } else if (type === ScanSuiteConstants.ATF_SCAN_SUITE) {
            infoMsg = gs.getMessage("ATF scan suite with id '{0}' exists in the table.", [suiteId]);
        }
        gs.addInfoMessage(infoMsg);
    };

    ScanSuitePopulate.insertSuiteInfoMsg = function(suiteId, type) {
        var infoMsg;
        if (type === ScanSuiteConstants.INSTANCE_SCAN_SUITE) {
            infoMsg = gs.getMessage("Inserted Instance scan suite with id '{0}'.", [suiteId]);
        } else if (type === ScanSuiteConstants.ATF_SCAN_SUITE) {
            infoMsg = gs.getMessage("Inserted ATF scan suite with id '{0}'.", [suiteId]);
        }
        gs.addInfoMessage(infoMsg);
    };

    ScanSuitePopulate.addScanSuite = function(suiteToRemoteSuiteLookup, suiteId, type) {
        if (!suiteToRemoteSuiteLookup[suiteId]) {
            ScanSuitePopulate.missingSuiteErrorMsg(suiteId, type);
            return;
        }

        try {
            var scanSuiteGR = new GlideRecordSecure(ScanSuiteConstants.SCAN_SUITE_TABLE);
            scanSuiteGR.setValue('suite', suiteToRemoteSuiteLookup[suiteId]);
            scanSuiteGR.setValue('error_severity', 'warning');
            scanSuiteGR.setValue('instance_type', 'test');
            scanSuiteGR.insert();
            ScanSuitePopulate.insertSuiteInfoMsg(suiteId, type);
        } catch (e) {
            gs.error("Error inserting scan suite: " + e);

            throw new sn_ws_err.ServiceError()
                .setStatus(500)
                .setMessage(gs.getMessage("Error inserting scan suite."));
        }

    };

    ScanSuitePopulate.addDefaultScanSuites = function() {
        var suiteToRemoteSuiteLookup = {};
        var existingSuiteLookup = {};
        var defaultSuiteIds = [ScanSuiteConstants.INSTANCE_SCAN_SUITE_ID, ScanSuiteConstants.ATF_SCAN_SUITE_ID];
        var defaultRemoteSuiteIds = [ScanSuiteConstants.INSTANCE_SCAN_SUITE_REMOTE_ID, ScanSuiteConstants.ATF_SCAN_SUITE_REMOTE_ID];

        var remoteScanSuiteGR = new GlideRecordSecure(ScanSuiteConstants.SCAN_SUITE_REMOTE_TABLE);
        var scanSuiteGR = new GlideRecordSecure(ScanSuiteConstants.SCAN_SUITE_TABLE);

        remoteScanSuiteGR.addQuery('suite_sys_id', 'IN', defaultSuiteIds);
        remoteScanSuiteGR.query();

        while (remoteScanSuiteGR.next()) {
            suiteToRemoteSuiteLookup[remoteScanSuiteGR.getValue('suite_sys_id')] = remoteScanSuiteGR.getValue('sys_id');
        }

        scanSuiteGR.addQuery('suite', 'IN', defaultRemoteSuiteIds);
        scanSuiteGR.query();

        while (scanSuiteGR.next()) {
            existingSuiteLookup[scanSuiteGR.suite.suite_sys_id] = true;
        }

        if (!existingSuiteLookup[ScanSuiteConstants.INSTANCE_SCAN_SUITE_ID]) {
            // Adding default instance scan suite
            ScanSuitePopulate.addScanSuite(suiteToRemoteSuiteLookup, ScanSuiteConstants.INSTANCE_SCAN_SUITE_ID, ScanSuiteConstants.INSTANCE_SCAN_SUITE);
        } else {
            ScanSuitePopulate.existingSuiteInfoMsg(ScanSuiteConstants.INSTANCE_SCAN_SUITE_ID, ScanSuiteConstants.INSTANCE_SCAN_SUITE);
        }


        if (!existingSuiteLookup[ScanSuiteConstants.ATF_SCAN_SUITE_ID]) {
            // Adding ATF scan suite
            ScanSuitePopulate.addScanSuite(suiteToRemoteSuiteLookup, ScanSuiteConstants.ATF_SCAN_SUITE_ID, ScanSuiteConstants.ATF_SCAN_SUITE);
        } else {
            ScanSuitePopulate.existingSuiteInfoMsg(ScanSuiteConstants.ATF_SCAN_SUITE_ID, ScanSuiteConstants.ATF_SCAN_SUITE);
        }
    };

    ScanSuitePopulate.prototype = {
        initialize: function() {},

        type: 'ScanSuitePopulate'
    };
})();]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2023-05-17 20:04:24&lt;/sys_created_on&gt;
        &lt;sys_id&gt;6e1c94ba87fa21103f0f7e2526cb0b69&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;5&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;ScanSuitePopulate&lt;/sys_name&gt;
        &lt;sys_package display_value="Deployment Pipeline" source="sn_deploy_pipeline"&gt;bb67ed7253e83010b846ddeeff7b1204&lt;/sys_package&gt;
        &lt;sys_policy&gt;read&lt;/sys_policy&gt;
        &lt;sys_scope display_value="Deployment Pipeline"&gt;bb67ed7253e83010b846ddeeff7b1204&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_6e1c94ba87fa21103f0f7e2526cb0b69&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2023-05-18 16:38:03&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:38:25</sys_created_on>
        <sys_id>3cf6b05d83f01210c6695855eeaad357</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>ScanSuitePopulate</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_3cf6b05d83f01210c6695855eeaad357</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:38:25</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
