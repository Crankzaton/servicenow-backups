<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>1fb6999753fe2110f646ddeeff7b129d</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_fix"&gt;
    &lt;sys_script_fix action="INSERT_OR_UPDATE"&gt;
        &lt;before&gt;false&lt;/before&gt;
        &lt;description&gt;Update values for newly added fields on existing records.&lt;/description&gt;
        &lt;name&gt;SPO Dictionary Upgrade (Aug 2023)&lt;/name&gt;
        &lt;record_for_rollback&gt;true&lt;/record_for_rollback&gt;
        &lt;script&gt;&lt;![CDATA[// Update Remaining amount field on Purchase order records.
function updateRemainingAmountOnPO() {
    var orderGr = new GlideRecord('sn_shop_purchase_order');
    var query = 'total_amountISNOTEMPTY^status!=closed_canceled';
    orderGr.addEncodedQuery(query);
    orderGr.query();
    while (orderGr.next()) {
        var totalAmount = orderGr.total_amount.amount || 0;
        var receivedAmount = !gs.nil(orderGr.received_amount) ? (orderGr.received_amount.amount || 0) : 0;
        var remainingAmount = totalAmount - receivedAmount;
        remainingAmount = orderGr.total_amount.currency + ';' + remainingAmount;
        orderGr.getElement(PurchaseOrder.REMAINING_AMOUNT).setDisplayValue(remainingAmount);
        orderGr.update();
    }
}
var dictionaryArr = [{
        'query': 'name=sn_shop_payment_method^element=shopper',
        'attribute': {
            'display': false
        }
    },
    {
        'query': 'name=sn_shop_line^element=general_ledger_account',
        'attribute': {
            'reference_qual': 'javascript: sn_fin.LedgerAccount.FetchRefQual(current);'
        }
    },
    {
        'query': 'name=sn_shop_cost_allocation^element=cost_center',
        'attribute': {
            'reference_qual': 'javascript: CostCenter.FetchRefQual(null, current);'
        }
    },
    {
        'query': 'name=sn_shop_purchase_requisition^element=cost_center',
        'attribute': {
            'reference_qual': 'javascript: CostCenter.FetchRefQual(current.legal_entity, current);'
        }
    },
    {
        'query': 'name=sn_shop_request_line^element=cost_center',
        'attribute': {
            'reference_qual': 'javascript: CostCenter.FetchRefQual(null, current);'
        }
    },
    {
        'query': 'name=sn_shop_request_line^element=capex_account^ORelement=expense_account',
        'attribute': {
            'reference_qual': 'javascript: sn_fin.LedgerAccount.FetchRefQual(current);'
        }
    }
];

function updateDictionary(obj) {
    var dictionaryGr = new GlideRecord('sys_dictionary');
    dictionaryGr.addEncodedQuery(obj.query);
    dictionaryGr.query();
    while (dictionaryGr.next())
        new global.PTGlobalAPI().updateDictionary(dictionaryGr, obj.attribute);
}

function populateCurrenciesInSupplierProduct() {
    var prodGr = new GlideRecord(SupplierProduct.TABLE);
    prodGr.addQuery(SupplierProduct.SOURCING_REQUIRED, false);
    prodGr.addQuery(SupplierProduct.CURRENCY, '');
    prodGr.query();
    while (prodGr.next()) {
        var price = PricingUtil.getPriceForProduct(prodGr);
        if (!gs.nil(price.currency)) {
            prodGr.setValue('currency', price.currency);
        } else if (!gs.nil(price.max) &amp;&amp; !gs.nil(price.max.currency)) {
            prodGr.setValue('currency', price.max.currency);
        } else if (!gs.nil(price.min) &amp;&amp; !gs.nil(price.min.currency)) {
            prodGr.setValue('currency', price.min.currency);
        } else
            prodGr.setValue('currency', '');
        prodGr.update();
    }
}
dictionaryArr.forEach(updateDictionary);
updateRemainingAmountOnPO();
populateCurrenciesInSupplierProduct();]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_fix&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2023-05-19 13:38:59&lt;/sys_created_on&gt;
        &lt;sys_id&gt;1fb6999753fe2110f646ddeeff7b129d&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;7&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;SPO Dictionary Upgrade (Aug 2023)&lt;/sys_name&gt;
        &lt;sys_package display_value=""&gt;45f917bd533323007388ddeeff7b12b6&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value=""&gt;45f917bd533323007388ddeeff7b12b6&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_fix_1fb6999753fe2110f646ddeeff7b129d&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2023-06-23 12:25:27&lt;/sys_updated_on&gt;
        &lt;unloadable&gt;false&lt;/unloadable&gt;
    &lt;/sys_script_fix&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:19:36</sys_created_on>
        <sys_id>99a2b05d83b01210c6695855eeaad3d4</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>SPO Dictionary Upgrade (Aug 2023)</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_99a2b05d83b01210c6695855eeaad3d4</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:19:36</sys_updated_on>
        <tablename>sys_script_fix</tablename>
    </sys_metadata_link>
</record_update>
