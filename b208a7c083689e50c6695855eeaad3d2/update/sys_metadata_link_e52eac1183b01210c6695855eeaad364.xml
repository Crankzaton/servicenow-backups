<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>359ce09983701210c6695855eeaad3cf</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules"&gt;
    &lt;x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE"&gt;
        &lt;abort_action&gt;false&lt;/abort_action&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;action_delete&gt;false&lt;/action_delete&gt;
        &lt;action_insert&gt;true&lt;/action_insert&gt;
        &lt;action_query&gt;false&lt;/action_query&gt;
        &lt;action_update&gt;true&lt;/action_update&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;add_message&gt;false&lt;/add_message&gt;
        &lt;advanced&gt;true&lt;/advanced&gt;
        &lt;change_fields&gt;false&lt;/change_fields&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;collection/&gt;
        &lt;condition&gt;current.isNewRecord() || current.asset_state.changes() || current.asset_substate.changes() || current.hardware_ci_status.changes() || current.hardware_ci_substatus.changes() || current.synch_direction.changes()&lt;/condition&gt;
        &lt;description/&gt;
        &lt;execute_function&gt;false&lt;/execute_function&gt;
        &lt;filter_condition/&gt;
        &lt;is_rest&gt;false&lt;/is_rest&gt;
        &lt;message/&gt;
        &lt;name&gt;Check if Asset/CI state already exists&lt;/name&gt;
        &lt;order&gt;100&lt;/order&gt;
        &lt;priority&gt;100&lt;/priority&gt;
        &lt;rest_method/&gt;
        &lt;rest_method_text/&gt;
        &lt;rest_service/&gt;
        &lt;rest_service_text/&gt;
        &lt;rest_variables/&gt;
        &lt;role_conditions/&gt;
        &lt;script&gt;&lt;![CDATA[(function executeRule(current, previous /*null when async*/) {

 /*
 The basic idea is to check if there is a record already existing with the same start point:
 if we are adding a record with direction A1 -&gt; C1
     then we need to check if there is already A1 -&gt; Cx or A1 &lt;-&gt; Cx
 if we are adding a record with direction C1 -&gt; A1
     then we need to check if there is already C1 -&gt; Ax or C1 &lt;-&gt; Ax
 if we are adding a record with direction both A1 &lt;-&gt; C1
     then we need to check if there is already A1 -&gt; Cx or A1 &lt;-&gt; Cx or C1 -&gt; Ax or C1 &lt;-&gt; Ax
  */
 if (current.getValue('synch_direction') === 'asset_to_ci') {
  if (_doesAssetExistAsStartPoint(current.asset_state, current.asset_substate)) {
   current.setAbortAction(true);
  }
 } else if (current.getValue('synch_direction') === 'ci_to_asset') {
  if (_doesCiExistAsStartPoint(current.hardware_ci_status, current.hardware_ci_substatus)) {
   current.setAbortAction(true);
  }
 } else if (current.getValue('synch_direction') === 'both') {
  if (_doesAssetExistAsStartPoint(current.asset_state, current.asset_substate) ||
      _doesCiExistAsStartPoint(current.hardware_ci_status, current.hardware_ci_substatus)) {
   current.setAbortAction(true);
  }
 } else {
  gs.addErrorMessage(gs.getMessage('Unsupported Synch direction value'));
  current.setAbortAction(true);
 }

 function _doesAssetExistAsStartPoint(state, substate) {
  var doesExist = _doesStartPointExistInField('asset_state', state, 'asset_substate', substate, 'asset_to_ci,both');
  if (doesExist) {
   gs.addErrorMessage(gs.getMessage("Either this mapping already exists or another mapping exists with a conflicting value for Asset state and substate."));
  }
  return doesExist;
 }

 function _doesCiExistAsStartPoint(status, substatus) {
  var doesExist = _doesStartPointExistInField('hardware_ci_status', status, 'hardware_ci_substatus', substatus, 'ci_to_asset,both');
  if (doesExist) {
   gs.addErrorMessage(gs.getMessage("Either this mapping already exists or another mapping exists with a conflicting value for Configuration Item status and substatus."));
  }
  return doesExist;
 }

 function _doesStartPointExistInField(stateField, state, substateField, substate, directions) {
  var gr = new GlideRecord(current.getTableName());
  gr.addQuery('synch_direction', 'IN', directions);
  gr.addQuery(stateField, state);
  gr.addQuery(substateField, substate);
  gr.query();
  return gr.hasNext();
 }

})(current, previous);]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;x_938076_now_utils_now_utils_business_rules&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2024-09-21 07:53:08&lt;/sys_created_on&gt;
        &lt;sys_domain&gt;global&lt;/sys_domain&gt;
        &lt;sys_domain_path&gt;/&lt;/sys_domain_path&gt;
        &lt;sys_id&gt;359ce09983701210c6695855eeaad3cf&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;Check if Asset/CI state already exists&lt;/sys_name&gt;
        &lt;sys_overrides/&gt;
        &lt;sys_package display_value="Now Utils" source="x_938076_now_utils"&gt;b208a7c083689e50c6695855eeaad3d2&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Now Utils"&gt;b208a7c083689e50c6695855eeaad3d2&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;x_938076_now_utils_now_utils_business_rules_359ce09983701210c6695855eeaad3cf&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2024-09-21 07:53:08&lt;/sys_updated_on&gt;
        &lt;template/&gt;
        &lt;when&gt;before&lt;/when&gt;
    &lt;/x_938076_now_utils_now_utils_business_rules&gt;
    &lt;sys_translated_text action="delete_multiple" query="documentkey=359ce09983701210c6695855eeaad3cf"/&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:59:57</sys_created_on>
        <sys_id>e52eac1183b01210c6695855eeaad364</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Check if Asset/CI state already exists</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_e52eac1183b01210c6695855eeaad364</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:59:57</sys_updated_on>
        <tablename>sys_script</tablename>
    </sys_metadata_link>
</record_update>
