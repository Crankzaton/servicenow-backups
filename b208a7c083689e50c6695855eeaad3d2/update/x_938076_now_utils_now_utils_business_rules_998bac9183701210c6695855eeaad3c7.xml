<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition>current.state == "ready" &amp;&amp; current.topic != 'HeartbeatProbe'</condition>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Restrict record creation for other mids</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[// MIDServer-A with userA and with mid_server role should be restricted to create output records
// for MIDServer-B logged in as different user.
(function executeRule(current, previous /*null when async*/) {
    var userFromSysCreatedBy = GlideUser.getUser(current.sys_created_by);
    if (userFromSysCreatedBy.hasRole('agent_admin'))
        return;

    var agentName = current.agent;
    agentName = agentName.substring("mid.server.".length, agentName.length);
    var agentRecord = new SNC.ECCAgentCache().getByName(agentName);
    if (JSUtil.nil(agentRecord) || !agentRecord.isValidRecord())
        return;

    if(!agentRecord.user_name)
        return;

    // 'current.sys_created_by' field is user_name that created the request.
    // ecc queue request was created for mid server 'current.agent'.
    if (agentRecord.user_name != current.sys_created_by && userFromSysCreatedBy.hasRole('mid_server')) {
        gs.warn('Access Denied. MID user: "' + current.sys_created_by +
            '" with MID server role, cannot create an output record with topic: "' + current.topic +
            '" for agent: "' + current.agent  +
            '" with name: "' + current.name +
            '" ; logged in as: "' + agentRecord.user_name +  '".');
        current.setAbortAction(true);
    }
})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:48:28</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>998bac9183701210c6695855eeaad3c7</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Restrict record creation for other mids</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_998bac9183701210c6695855eeaad3c7</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:48:28</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=998bac9183701210c6695855eeaad3c7"/>
</record_update>
