<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Set Primary Goal</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {

    var oldPrimaryGoalRelationship = sn_gf.WorkItemGoalRelationshipHelper.getOtherPrimaryGoalRelationshipOnWorkItem(current.getValue('goal'), current.getValue('entity_id'));
    if (oldPrimaryGoalRelationship != null) {
        oldPrimaryGoalRelationship.setValue("is_primary_goal", false);
        oldPrimaryGoalRelationship.update();
    }
    var isWorkItemPrimaryGoalUpdatedByUser = (current.getValue('goal') == current.getElement('entity_id.primary_goal').toString()) || (!gs.nil(current.getValue('planning_item_id')) && current.getValue('goal') == current.getElement('planning_item_id.primary_goal').toString());
 
    sn_gf.WorkItemGoalRelationshipHelper.updatePrimaryGoalOnWorkItem(current.getValue('goal'), current.getValue('table_name'), current.getValue('entity_id'));
    if (oldPrimaryGoalRelationship != null && !isWorkItemPrimaryGoalUpdatedByUser) {
        var goalLabel = sn_gf.GFUtil.getTableLabel(GoalFrameworkConstants.GOAL_TABLE).toLowerCase();
        gs.addInfoMessage(gs.getMessage("Primary {0} relationship with {1} already exists for the project. Saving the changes will make the existing primary {0} relationship as a non-primary relationship and will create the primary relationship with {2}", [goalLabel, GlideStringUtil.escapeHTML(oldPrimaryGoalRelationship.goal.getDisplayValue()), GlideStringUtil.escapeHTML(current.goal.getDisplayValue())]));

    }


})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:49:13</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>40bba01583701210c6695855eeaad3b4</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Set Primary Goal</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_40bba01583701210c6695855eeaad3b4</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:49:13</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=40bba01583701210c6695855eeaad3b4"/>
</record_update>
