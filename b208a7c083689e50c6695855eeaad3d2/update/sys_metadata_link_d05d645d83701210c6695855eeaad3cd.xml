<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>0c45b215c7100010ed6cdd34f2c260be</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="sys_script"&gt;
    &lt;sys_script action="INSERT_OR_UPDATE"&gt;
        &lt;abort_action&gt;false&lt;/abort_action&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;action_delete&gt;true&lt;/action_delete&gt;
        &lt;action_insert&gt;false&lt;/action_insert&gt;
        &lt;action_query&gt;false&lt;/action_query&gt;
        &lt;action_update&gt;false&lt;/action_update&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;add_message&gt;false&lt;/add_message&gt;
        &lt;advanced&gt;true&lt;/advanced&gt;
        &lt;change_fields&gt;false&lt;/change_fields&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;collection&gt;pa_m2m_dashboard_sources&lt;/collection&gt;
        &lt;condition/&gt;
        &lt;description/&gt;
        &lt;execute_function&gt;false&lt;/execute_function&gt;
        &lt;filter_condition/&gt;
        &lt;is_rest&gt;false&lt;/is_rest&gt;
        &lt;message/&gt;
        &lt;name&gt;clear preferences&lt;/name&gt;
        &lt;order&gt;100&lt;/order&gt;
        &lt;priority&gt;100&lt;/priority&gt;
        &lt;rest_method/&gt;
        &lt;rest_method_text/&gt;
        &lt;rest_service/&gt;
        &lt;rest_service_text/&gt;
        &lt;rest_variables/&gt;
        &lt;role_conditions/&gt;
        &lt;script&gt;&lt;![CDATA[(function executeRule(current, previous) {
      
      var dashboardSysId = current.getValue('dashboard');
      var deletedBreakdownSrc = current.getValue('breakdown_source');
      var nextBreakdownSrc = '';
      var userPref = gs.getUser().getPreference('com.snc.pa.ui.preferences_dashboards');
      var parsedPref = this.parsePreferences(userPref);
      var gr = new GlideRecord('pa_m2m_dashboard_sources');
      gr.addQuery('dashboard', dashboardSysId);
      gr.orderBy('order');
      gr.query();
      nextBreakdownSrc = (gr.next() &amp;&amp; parsedPref.last === dashboardSysId) ? gr.getValue('breakdown_source') : '';
      this.removeStaleData(parsedPref, dashboardSysId, deletedBreakdownSrc, nextBreakdownSrc);
      gs.getUser().savePreference('com.snc.pa.ui.preferences_dashboards', JSON.stringify(parsedPref));
      
      this.updateOtherUserPreferences(dashboardSysId, deletedBreakdownSrc, nextBreakdownSrc);
      
  })(current, previous);
  function parsePreferences(value) {
      var newValue = {};
      
      try {
          newValue = JSON.parse(value);
      } catch (err) {
          gs.warn('There is an issue with deleting user preferences when breakdown source was deleted.');
      }
      return newValue;
  }
  function removeStaleData(parsedPref, dashboardSysId, deletedBreakdownSrc, nextBreakdownSrc) {
      if (parsedPref[dashboardSysId] === deletedBreakdownSrc) {
          delete parsedPref[dashboardSysId];
          parsedPref[dashboardSysId] = nextBreakdownSrc;
      }
      
      delete parsedPref[dashboardSysId + '-' + deletedBreakdownSrc];
      delete parsedPref[dashboardSysId + '-' + deletedBreakdownSrc + '-sortorder'];
  }
  function updateOtherUserPreferences(dashboardSysId, deletedBreakdownSrc, nextBreakdownSrc) {
      var gr = new GlideRecord('sys_user_preference');
      gr.addQuery('name', 'com.snc.pa.ui.preferences_dashboards');
      gr.addQuery('value', 'CONTAINS', deletedBreakdownSrc);
      gr.query();
      
      while (gr.next()) {
          var parsedPref = this.parsePreferences(gr.getValue('value'));
          this.removeStaleData(parsedPref, dashboardSysId, deletedBreakdownSrc, nextBreakdownSrc);
          var userPrefString = JSON.stringify(parsedPref);
          gr.setValue('value', userPrefString);
          gr.update();
      }
  }]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2019-10-04 07:39:51&lt;/sys_created_on&gt;
        &lt;sys_domain&gt;global&lt;/sys_domain&gt;
        &lt;sys_domain_path/&gt;
        &lt;sys_id&gt;0c45b215c7100010ed6cdd34f2c260be&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;1&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;clear preferences&lt;/sys_name&gt;
        &lt;sys_overrides/&gt;
        &lt;sys_package display_value="Performance Analytics" source="com.snc.pa"&gt;4069fc643cf1311068bcf327dfe37fe4&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_0c45b215c7100010ed6cdd34f2c260be&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2019-10-16 05:37:09&lt;/sys_updated_on&gt;
        &lt;template/&gt;
        &lt;when&gt;after&lt;/when&gt;
    &lt;/sys_script&gt;
    &lt;sys_translated_text action="delete_multiple" query="documentkey=0c45b215c7100010ed6cdd34f2c260be"/&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:56:19</sys_created_on>
        <sys_id>d05d645d83701210c6695855eeaad3cd</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>clear preferences</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_d05d645d83701210c6695855eeaad3cd</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:56:19</sys_updated_on>
        <tablename>sys_script</tablename>
    </sys_metadata_link>
</record_update>
