<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>94d404e7db9c7914e753acf8139619b2</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;public&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.WF_IncPrbRefQual&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;true&lt;/client_callable&gt;
        &lt;description&gt;Functions that return encoded queries for various reference qualifiers used across incident and problem management.&lt;/description&gt;
        &lt;name&gt;WF_IncPrbRefQual&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var WF_IncPrbRefQual = Class.create();
WF_IncPrbRefQual.prototype = {
    initialize: function() {},

    getAssignmentGroupRefQual: function() {
        return 'active=true^nameISNOTEMPTY^name!=NULL' +
            '^type=' + gs.getProperty('x_g_wfb_inc_mgmt.group.type.assignment.group') +
            '^type=' + gs.getProperty('x_g_wfb_inc_mgmt.group.type.itil');
    },
    /**
     * Validates an assignment group against standard reference qualifier criteria.
     * Accepts the name or sys_id of the assignment group to be validated.
     * Returns the sys_id of the assignment group if it meets the reference 
     * @param {String} assignment_group - Name or sys_id of the assignment group to be validated
     */

    CheckAssignmentGroup: function(AssignmentGroup) {
        var assignment_Grp = AssignmentGroup;
        var getAssignType;
        var gr = new GlideRecord('sys_user_group');
        gr.addEncodedQuery(new global.WF_IncPrbRefQual().getAssignmentGroupRefQual());
        var id = gr.addQuery('name', assignment_Grp);
        id.addOrCondition('sys_id', assignment_Grp);
        gr.setLimit(1);
        gr.query();
        if (!gr.next()) {
            getAssignType = 0;
        } else {
            getAssignType = gr.getValue('sys_id');
        }
        return getAssignType;
    },

    type: 'WF_IncPrbRefQual'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;A648157&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2023-08-02 16:12:32&lt;/sys_created_on&gt;
        &lt;sys_id&gt;94d404e7db9c7914e753acf8139619b2&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;23&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;WF_IncPrbRefQual&lt;/sys_name&gt;
        &lt;sys_package display_value="Global" source="global"&gt;global&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_94d404e7db9c7914e753acf8139619b2&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2024-02-04 17:25:59&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:45:46</sys_created_on>
        <sys_id>24a8f85183341210c6695855eeaad3be</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>WF_IncPrbRefQual</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_24a8f85183341210c6695855eeaad3be</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:45:46</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
