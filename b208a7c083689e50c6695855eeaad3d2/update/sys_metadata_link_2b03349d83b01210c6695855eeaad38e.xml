<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>5e5939219f000200d5f9b3e2957fcf14</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_fix"&gt;
    &lt;sys_script_fix action="INSERT_OR_UPDATE"&gt;
        &lt;before&gt;false&lt;/before&gt;
        &lt;description&gt;Updates Connect conversations form the Fuji structure to the new Geneva structure.&lt;/description&gt;
        &lt;name&gt;Connect Infrastructure Update&lt;/name&gt;
        &lt;record_for_rollback&gt;false&lt;/record_for_rollback&gt;
        &lt;script&gt;&lt;![CDATA[// Peer to Peer conversion
var collaboratorPeerGR = new GlideRecord("collaborator");
collaboratorPeerGR.addNotNullQuery("peer");
collaboratorPeerGR.query();

var groupMap = {};
while(collaboratorPeerGR.next()) {
	var userPeer = collaboratorPeerGR.getValue("user") + ":" + collaboratorPeerGR.getValue("peer");
	var peerUser = collaboratorPeerGR.getValue("peer") + ":" + collaboratorPeerGR.getValue("user");

	if(groupMap.hasOwnProperty(userPeer)) {
		// The group is already created, just create the other member
		var liveGroupMemberPeerGR = new GlideRecord("live_group_member");
		liveGroupMemberPeerGR.group = groupMap[userPeer];
		liveGroupMemberPeerGR.member = collaboratorPeerGR.getValue("user");
		liveGroupMemberPeerGR.member_type = "user";
		liveGroupMemberPeerGR.state = "admin";
		liveGroupMemberPeerGR.can_email = collaboratorPeerGR.getValue("can_email");
		liveGroupMemberPeerGR.frame_order = collaboratorPeerGR.getValue("frame_order");
		liveGroupMemberPeerGR.frame_state = collaboratorPeerGR.getValue("frame_state");
		liveGroupMemberPeerGR.last_emailed = collaboratorPeerGR.getValue("last_emailed");
		liveGroupMemberPeerGR.last_viewed = collaboratorPeerGR.getValue("last_viewed");
		liveGroupMemberPeerGR.visible = collaboratorPeerGR.getValue("visible");

		liveGroupMemberPeerGR.insert();
		continue;
	}

	var liveGroupGR = new GlideRecord("live_group_profile");
	liveGroupGR.public_group = false;
	liveGroupGR.visible_group = false;
	liveGroupGR.short_description = "Peer to peer conversation";
	liveGroupGR.type = "peer";
	liveGroupGR.name = collaboratorPeerGR.getDisplayValue("user") + ", " + collaboratorPeerGR.getDisplayValue("peer");

	liveGroupGR.setWorkflow(false);
	var groupSysID = liveGroupGR.insert();

	var liveGroupMemberUserGR = new GlideRecord("live_group_member");
	liveGroupMemberUserGR.group = groupSysID;
	liveGroupMemberUserGR.member = collaboratorPeerGR.getValue("user");
	liveGroupMemberUserGR.member_type = "user";
	liveGroupMemberUserGR.state = "admin";
	liveGroupMemberUserGR.can_email = collaboratorPeerGR.getValue("can_email");
	liveGroupMemberUserGR.frame_order = collaboratorPeerGR.getValue("frame_order");
	liveGroupMemberUserGR.frame_state = collaboratorPeerGR.getValue("frame_state");
	liveGroupMemberUserGR.last_emailed = collaboratorPeerGR.getValue("last_emailed");
	liveGroupMemberUserGR.last_viewed = collaboratorPeerGR.getValue("last_viewed");
	liveGroupMemberUserGR.visible = collaboratorPeerGR.getValue("visible");

	liveGroupMemberUserGR.insert();

	var collaboratorEdgeCaseGR = new GlideRecord("collaborator");
	collaboratorEdgeCaseGR.addQuery("user", collaboratorPeerGR.getValue("peer"));
	collaboratorEdgeCaseGR.addQuery("peer", collaboratorPeerGR.getValue("user"));
	collaboratorEdgeCaseGR.query();

	if(!collaboratorEdgeCaseGR.hasNext()) {
		var liveGroupEdgeCaseGR = new GlideRecord("live_group_member");
		liveGroupEdgeCaseGR.group = groupSysID;
		liveGroupEdgeCaseGR.member = collaboratorPeerGR.getValue("peer");
		liveGroupEdgeCaseGR.member_type = "user";
		liveGroupEdgeCaseGR.state = "admin";

		liveGroupEdgeCaseGR.insert();
	}

	var liveMessageGR = new GlideRecord("live_message");
	var qc = liveMessageGR.addQuery("profile", collaboratorPeerGR.getValue("user"));
	qc.addOrCondition("profile", collaboratorPeerGR.getValue("peer"));
	var qc2 = liveMessageGR.addQuery("to_profile", collaboratorPeerGR.getValue("user"));
	qc2.addOrCondition("to_profile", collaboratorPeerGR.getValue("peer"));

	liveMessageGR.query();

	while(liveMessageGR.next()) {
		liveMessageGR.to_profile = null;
		liveMessageGR.group = groupSysID;
		liveMessageGR.update();
	}

	groupMap[peerUser] = groupSysID;
	groupMap[userPeer] = groupSysID;
}

// Group Visibility
var collaboratorGroupGR = new GlideRecord("collaborator");
collaboratorGroupGR.addNotNullQuery("group");
collaboratorGroupGR.query();

while(collaboratorGroupGR.next()) {
	var groupMemberGR = new GlideRecord("live_group_member");
	groupMemberGR.addQuery("group", collaboratorGroupGR.getValue("group"));
	groupMemberGR.addQuery("member", collaboratorGroupGR.getValue("user"));
	groupMemberGR.query();

	groupMemberGR.next();

	groupMemberGR.visible = collaboratorGroupGR.getValue("visible");
	groupMemberGR.last_viewed = collaboratorGroupGR.getValue("last_viewed");
	groupMemberGR.last_emailed = collaboratorGroupGR.getValue("last_emailed");
	groupMemberGR.can_email = collaboratorGroupGR.getValue("can_email");
	groupMemberGR.frame_order = collaboratorGroupGR.getValue("frame_order");
	groupMemberGR.frame_state = collaboratorGroupGR.getValue("frame_state");
	groupMemberGR.update();
}]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_fix&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2015-05-15 18:13:33&lt;/sys_created_on&gt;
        &lt;sys_id&gt;5e5939219f000200d5f9b3e2957fcf14&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;Connect Infrastructure Update&lt;/sys_name&gt;
        &lt;sys_package display_value="Connect" source="com.glide.connect"&gt;c6d370e43c31311068bcf327dfe37f18&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_fix_5e5939219f000200d5f9b3e2957fcf14&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2015-05-15 18:13:33&lt;/sys_updated_on&gt;
        &lt;unloadable&gt;false&lt;/unloadable&gt;
    &lt;/sys_script_fix&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:21:23</sys_created_on>
        <sys_id>2b03349d83b01210c6695855eeaad38e</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Connect Infrastructure Update</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_2b03349d83b01210c6695855eeaad38e</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:21:23</sys_updated_on>
        <tablename>sys_script_fix</tablename>
    </sys_metadata_link>
</record_update>
