<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Remove wishlist items</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
 
 function shouldRemoveWishListItem(item_id) {
  var catalog_item_m2m = new GlideRecord("sc_cat_item_catalog");
  catalog_item_m2m.addActiveQuery();
  catalog_item_m2m.addQuery("sc_cat_item", item_id);
  catalog_item_m2m.addQuery("sc_catalog.enable_wish_list", true);
  catalog_item_m2m.setLimit(1);
  catalog_item_m2m.query();
  return catalog_item_m2m.getRowCount() == 0;
 }

 //Check if there are any saved items in the wish lists. If any delete carts
 //of all the users and their corresponding cart items
 var cartName = "saved_items";
 var cartUserMap = {};//Need this for CartJS. Avoids couple queries
 var cartGr = new GlideRecordSecure("sc_cart");
 cartGr.addActiveQuery();
 cartGr.addQuery("name", cartName);
 cartGr.query();
 while (cartGr.next())
  cartUserMap[cartGr.getUniqueValue()] = cartGr.getValue("user");
 
 var cartItemGr = new GlideRecordSecure("sc_cart_item");
 var cart_id = "";
 var cartJS = "";
 cartItemGr.addActiveQuery();
 cartItemGr.addQuery("cart.name", cartName);
 cartItemGr.orderBy("cart");
 cartItemGr.query();
 while (cartItemGr.next()) {
  if (cartItemGr.getValue("cart") != cart_id) {
   cart_id = cartItemGr.getValue("cart");
   cartJS = new sn_sc.CartJS(cartName, cartUserMap[cart_id]);
  }
  if (shouldRemoveWishListItem(cartItemGr.getValue("cat_item")))
   cartJS.remove(cartItemGr.getUniqueValue());
 }
 
})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:54:06</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>bbcce8d983701210c6695855eeaad352</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Remove wishlist items</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_bbcce8d983701210c6695855eeaad352</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:54:06</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=bbcce8d983701210c6695855eeaad352"/>
</record_update>
