<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>true</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Book, Reschedule or Delete appointment</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
 
 var currentOperation = current.operation();
 
 if(currentOperation == "update" && !current.start.changes() && !current.end.changes()){
  return;
 }
 
 var catalog_id = current.catalog_item;
 if(global.JSUtil.nil(catalog_id))
  return;
 
 //Identify the table the catalog item is associated with
 var gr1 = new GlideRecord("sc_cat_item_producer");
 gr1.get(catalog_id);
 
 if(gr1.isValidRecord()){
  var taskTable = gr1.getValue("table_name");
  gs.info("FSM: cancel appointment Task table :" + taskTable);  
  //Take appointment start and end and update wm_task
  if(taskTable == "wm_order"){
   var wmOrder = new GlideRecord("wm_order");
   wmOrder.get(current.task+"");
   gs.info("FSM Book, Reschedule or Delete appointment: wmOrder found " + wmOrder.number);
   if (wmOrder.isValidRecord()) {
    // updating wm order
    if (currentOperation == "delete") {
     // updatting appointment flag on wm order
     gs.info("FSM Book, Reschedule or Delete appointment: Delete Operation wmOrder" + wmOrder.number);
     wmOrder.has_appointment = false;
     wmOrder.update();
    } else if (currentOperation == "update") {
     wmOrder.has_appointment = true;
     wmOrder.update();
    } 
    // updating all wm tasks
    var gr = new GlideRecord("wm_task");
    gr.addQuery("parent",current.task);
    gr.query();
    while(gr.next()){
     if (currentOperation == "update" || currentOperation == "insert") {
      gs.info("FSM Book, Reschedule or Delete appointment: Update/Insert Operation wmTask" + gr.number);
      gr.window_start = current.start;
      gr.window_end = current.end;
      gr.expected_start = current.start;
      gr.is_fixed_window = true;
      if (currentOperation == "update")
       gr.assigned_to = "";
      gr.has_appointment = true;
      gr.appointment = current.sys_id+"";
      // getting the config associated with the appointment
      var implConfig = new sn_apptmnt_booking.AppointmentBooking_Factory().getWrapperType(sn_apptmnt_booking.AppointmentBookingConstants.CONFIGURATION);
      var result = implConfig.getConfig(current.catalog_item+"");
      var appBookingConfig = result.data;
      var util = new sn_apptmnt_booking.AppointmentBookingUtil();
      if (appBookingConfig && appBookingConfig.active && appBookingConfig.service_config.active) {
       var configWorkDuration = null;
       var serviceconfigGR = util.getServiceConfigForCatalog(current.catalog_item);
       if(serviceconfigGR && (serviceconfigGR.enable_day_level_config == "1" || serviceconfigGR.enable_day_level_config == "true")){
        var dayConfigResult = util.getDurationsForAdvConfiguration(serviceconfigGR,current,appBookingConfig.service_config.field_mapping);
        if(dayConfigResult && dayConfigResult.workDuration)
         configWorkDuration = dayConfigResult.workDuration;         
       }
       if(gs.nil(configWorkDuration))
         configWorkDuration = appBookingConfig.service_config.work_duration; //in minutes
       
       if (configWorkDuration) {
        var configWorkDurationInMS = (configWorkDuration * 60000);
        gr.estimated_work_duration.setDateNumericValue(configWorkDurationInMS);
       }
       
       var endGdt = new GlideDateTime(current.end);
       if (serviceconfigGR && serviceconfigGR.use_slot_end_time_as == "arrive_by") {
        gr.window_end.setDateNumericValue(endGdt.getNumericValue() + configWorkDuration * 60000);
       }
      }
     } else if (currentOperation == "delete") {
      gs.info("FSM Book, Reschedule or Delete appointment: Delete Operation wmTask" + gr.number);
      // updating appointment flag on wm task
      gr.has_appointment = false;
      gr.appointment = "";
     }
     var tid = gr.update();
     if (!tid) 
      gs.addErrorMessage(gr.number+ " cannot be updated!");
    }
   }
  }
 }
})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:49:24</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>babba41583701210c6695855eeaad339</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Book, Reschedule or Delete appointment</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_babba41583701210c6695855eeaad339</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:49:24</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=babba41583701210c6695855eeaad339"/>
</record_update>
