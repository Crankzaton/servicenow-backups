<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Validate account consumer update</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {

    if (current.account != previous.account || (current.account.nil() && current.consumer != previous.consumer)) {
        var gr = new GlideRecord('sn_install_base_m2m_installed_product');
        gr.addQuery('install_base_item', current.sys_id);
        gr.query();
        if (gr.hasNext()) {
            current.setAbortAction(true);
            gs.addErrorMessage(gs.getMessage('Delete installed products before changing account or consumer'));
            return;
        }

    }

    if (current.account != previous.account || current.consumer != previous.consumer) {
        gr = new GlideRecord('sn_install_base_m2m_affected_install_base');
        gr.addQuery('install_base_item', current.sys_id);
        gr.query();
        while (gr.next()) {
            /* check if there exist any record having case.account/consumer != install_base_item.account/consumer */
            if (!gr.csm_case.account.nil() || !gr.csm_case.consumer.nil()) {
                current.setAbortAction(true);
                gs.addErrorMessage(gs.getMessage('Delete affected install base items before changing account or consumer'));
                return;
            }

        }

    }

})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:50:31</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>1bfb609583701210c6695855eeaad386</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Validate account consumer update</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_1bfb609583701210c6695855eeaad386</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:50:31</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=1bfb609583701210c6695855eeaad386"/>
</record_update>
