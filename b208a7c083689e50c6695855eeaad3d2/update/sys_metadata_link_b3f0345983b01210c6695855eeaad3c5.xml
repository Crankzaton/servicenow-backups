<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>250a3f78cb103300449b78d5634c9c08</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;public&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.GlideCryptoModule&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;GlideCryptoModule&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var GlideCryptoModule = Class.create();

GlideCryptoModule.get = function() {
	return new GlideCryptoModule(sn_kmf_ns.KMFCryptoModule.get());
};

GlideCryptoModule.getModule = function(cryptoModuleName) {
	return new GlideCryptoModule(sn_kmf_ns.KMFCryptoModule.getModule(cryptoModuleName));
};

GlideCryptoModule.getModuleFromColumn = function(tableName, fieldName) {
	return new GlideCryptoModule(sn_kmf_ns.KMFCryptoModule.getModuleFromColumn(tableName, fieldName));
};

GlideCryptoModule.prototype = {
	
    initialize: function(cryptoModule) {
		this.CRYPTO_MODULE = cryptoModule;
    },
	
	encryptData: function(data) {
		return this.CRYPTO_MODULE.encryptData(data);
	},
	
	wrapKeyFromBytes: function(data) {
		return this.CRYPTO_MODULE.wrapKeyFromBytes(data);
	},
	
	wrapKeyFromBytesForAlgorithm: function(data, algorithm) {
		return this.CRYPTO_MODULE.wrapKeyFromBytesForAlgorithm(data, algorithm);
	},
	
	wrapKeyFromSysId: function(data) {
		return this.CRYPTO_MODULE.wrapKeyFromSysId(data);
	},
	
	decryptData: function(data) {
		return this.CRYPTO_MODULE.decryptData(data);
	},
	
	unwrapKey: function(data) {
		return this.CRYPTO_MODULE.unwrapKey(data);
	},
	
	unwrapKeyForAlgorithm: function(data, algorithm) {
		return this.CRYPTO_MODULE.unwrapKeyForAlgorithm(data, algorithm);
	},
	
	generateMac: function(data) {
		return this.CRYPTO_MODULE.generateMac(data);
	},
	
	verifyMac: function(data, expectedMac) {
		return this.CRYPTO_MODULE.verifyMac(data, expectedMac);
	},
	
	asymmetricEncryptData: function(data) {
		return this.CRYPTO_MODULE.asymmetricEncryptData(data);
	},
	
	asymmetricWrapKeyFromBytes: function(data) {
		return this.CRYPTO_MODULE.asymmetricWrapKeyFromBytes(data);
	},
	
	asymmetricWrapKeyFromBytesForAlgorithm: function(data, algorithm) {
		return this.CRYPTO_MODULE.asymmetricWrapKeyFromBytesForAlgorithm(data, algorithm);
	},
	
	asymmetricWrapKeyFromSysId: function(data) {
		return this.CRYPTO_MODULE.asymmetricWrapKeyFromSysId(data);
	},
	
	asymmetricDecryptData: function(data) {
		return this.CRYPTO_MODULE.asymmetricDecryptData(data);
	},
	
	asymmetricUnwrapKey: function(data) {
		return this.CRYPTO_MODULE.asymmetricUnwrapKey(data);
	},
	
	asymmetricUnwrapKeyForAlgorithm: function(data, algorithm) {
		return this.CRYPTO_MODULE.asymmetricUnwrapKeyForAlgorithm(data, algorithm);
	},
	
	sign: function(data) {
		return this.CRYPTO_MODULE.sign(data);
	},
	
	verifySignature: function(data, signature) {
		return this.CRYPTO_MODULE.verifySignature(data, signature);
	},
	
	discard: function() {
		this.CRYPTO_MODULE.discard();
		this.CRYPTO_MODULE = null;
	},
	
    type: 'GlideCryptoModule'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2019-03-18 03:11:51&lt;/sys_created_on&gt;
        &lt;sys_id&gt;250a3f78cb103300449b78d5634c9c08&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;29&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;GlideCryptoModule&lt;/sys_name&gt;
        &lt;sys_package display_value="Key Management Framework" source="com.glide.kmf.global"&gt;ee533ca03c31311068bcf327dfe37f79&lt;/sys_package&gt;
        &lt;sys_policy&gt;protected&lt;/sys_policy&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_250a3f78cb103300449b78d5634c9c08&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2019-04-26 00:47:34&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:12:24</sys_created_on>
        <sys_id>b3f0345983b01210c6695855eeaad3c5</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>GlideCryptoModule</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_b3f0345983b01210c6695855eeaad3c5</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:12:24</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
