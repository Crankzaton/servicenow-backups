<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>1e2981ed5312030097a2ddeeff7b1244</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;public&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;sn_customerservice.CaseDao&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;Dao for use cases related to Case object.&lt;/description&gt;
        &lt;name&gt;CaseDao&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var CaseDao = Class.create();
CaseDao.prototype = {
	initialize: function() {
		this.logger = global.CSMBaseLogger.getLogger("CaseDao");
	},

	createCase : function(params){
		this.logger.debug("inside CaseDao:createCase params = " + JSON.stringify(params));
		var caseGr = global.CSMBaseAPIUtils.prepareGlideRecord(params, global.CSMBaseConstants.CASE_TABLE);
		if(!caseGr)
			return null;
		var tid = caseGr.insert();
		this.logger.info("CaseDao:createCase tid = "+tid);

		var socialProfileId;
		//Create social profile or attach existing social profile to the case.
		if(tid &amp;&amp; params.social_handle &amp;&amp; params.social_channel &amp;&amp; params.social_handle_url &amp;&amp; params.social_handle_type){

			socialProfileId = this.bindEntityToSocialProfile(params.social_handle_type, params.social_handle, params.social_handle_url, params.social_channel, caseGr);
			this.bindSocialProfileToCase(socialProfileId, caseGr.getValue("sys_id"));

			var socialLogInput = this.prepareSocialLogInput(params.social_post_url, socialProfileId, caseGr);
			var slid = this.socialUtils.createSocialLog(socialLogInput);
		}

		return {"sys_id": tid, "number": caseGr.getValue("number")};
	},

	updateCase: function(sysId, params, getCaseDetails, displayValue, selectedFields){
		var output = null;
		var caseId = this.getCaseById(sysId);
		if(caseId){
			var caseGr = global.CSMBaseAPIUtils.prepareUpdateGlideRecord(sysId, params, global.CSMBaseConstants.CASE_TABLE);
			var tid = caseGr.update();
			this.logger.info("CaseDao:updateCase tid = "+tid);

			if(tid &amp;&amp; params.social_handle &amp;&amp; params.social_channel &amp;&amp; params.social_handle_url &amp;&amp; params.social_handle_type){
				var socialProfileId = this.bindEntityToSocialProfile(params.social_handle_type, params.social_handle, params.social_handle_url, params.social_channel, caseGr);
				this.bindSocialProfileToCase(socialProfileId, caseGr.getValue("sys_id"));

				var socialLogInput = this.prepareSocialLogInput(params.social_post_url, socialProfileId, caseGr);
				var slid = this.socialUtils.createSocialLog(socialLogInput);
			}
			if(getCaseDetails.equals('true'))
				output = this.getCaseById(sysId, displayValue, selectedFields);
			else 
				output = {"sys_id": tid, "number": caseGr.getValue("number")};
		}
		return output;
	},

	getCaseById : function(id, displayValue, selectedFields){
		this.logger.info("inside CaseDao:getCaseById id = "+id);
		var caseObj = null;
		if(id){
			var caseGr = new GlideRecordSecure("sn_customerservice_case");
			if(caseGr.get(id)){
				caseObj = this.prepareCaseObject(caseGr, displayValue, null, selectedFields);
				this.logger.debug("inside CaseDao:getCaseById caseObj = "+JSON.stringify(caseObj));
			}
		}
		return caseObj;
	},

	getCaseBySearchQueryString : function(searchQueryStr, offset, limit, displayValue, referenceFields, selectedFields){
		this.logger.debug("inside CaseDao:getCaseBySearchQueryString searchQueryStr = "+searchQueryStr);

		var resultJson = {};
		var caseObjArr = [];
		var caseGr = new GlideRecordSecure(global.CSMBaseConstants.CASE_TABLE);
		if(global.CSMBaseAPIUtils.isVarNotNil(searchQueryStr))
			caseGr.addEncodedQuery(searchQueryStr);
		var firstRow = parseInt(offset);
		var lastRow = firstRow+parseInt(limit);
                var query = new sn_queryrules.QueryRuleGenerator().appendEncodedQuery(global.CSMBaseConstants.CASE_TABLE, caseGr.getEncodedQuery());
                caseGr.addEncodedQuery(query);
		caseGr.chooseWindow(firstRow, lastRow);
		caseGr.query();
		resultJson.totalRecords = global.CSMBaseAPIUtils.getRowsCount(global.CSMBaseConstants.CASE_TABLE,searchQueryStr);
		while(caseGr.next()){
			var caseObj = this.prepareCaseObject(caseGr, displayValue, referenceFields, selectedFields);
			this.logger.debug("inside CaseDao:getCaseBySearchQueryString caseObj = " + JSON.stringify(caseObj));
			caseObjArr.push(caseObj);
		}
		resultJson.cases = caseObjArr;
		return resultJson;
	},
	
	prepareCaseObject : function(caseGr, displayValue, referenceFields, selectedFields){
		var caseObj;
		caseObj= global.CSMBaseAPIUtils.getCustomJSONFromGR(caseGr,displayValue,selectedFields);
		if(referenceFields &amp;&amp; referenceFields ==  'false')
			return caseObj;
		if(caseObj.consumer){
			this.consumerHandle = new global.Consumer();
			var consumerObj = this.consumerHandle.getConsumerInfoById(caseGr.getValue("consumer"),displayValue);
			caseObj.consumer = consumerObj;			
		}
		if(caseObj.account){
			this.accountHandle = new global.Account();
			var accountObj = this.accountHandle.getAccountInfoById(caseGr.getValue("account"),displayValue);
			caseObj.account = accountObj;
		}
		if(caseObj.contact){
			this.contactHandle = new global.Contact();
			var contactObj = this.contactHandle.getContactInfoById(caseGr.getValue("contact"),displayValue);
			caseObj.contact = contactObj;			
		}
		if(caseObj.sn_app_cs_social_social_profile){
			this.socialUtils = new global.SocialUtils();
			var profileObj = this.socialUtils.getSocialProfileById(caseGr.getValue("sn_app_cs_social_social_profile"), displayValue);
			caseObj.sn_app_cs_social_social_profile = profileObj;
		}
		return caseObj;
	},

	prepareSocialLogInput: function(socialPostUrl, socialProfileId, caseGr){
		var socialLogInput = {};
		if(socialPostUrl){
			socialLogInput.social_url = socialPostUrl;
		}
		if(socialProfileId){
			socialLogInput.social_profile = socialProfileId;
		}
		socialLogInput.document = caseGr.getValue("sys_id");
		return socialLogInput;
	},

	bindSocialProfileToCase: function(socialProfileId, caseId){
		var caseGr = new GlideRecord(global.CSMBaseConstants.CASE_TABLE);
		caseGr.get(caseId);
		caseGr.setValue("sn_app_cs_social_social_profile",socialProfileId);
		var result = caseGr.update();
	},

	bindEntityToSocialProfile: function(socialHandleType, socialHandle, socialHandleUrl, socialChannel, caseGr){
		this.socialUtils = new global.SocialUtils();
		if(socialHandleType.toUpperCase()==="CONTACT")
			return this.socialUtils.bindContactToSocialProfile(caseGr.getValue("contact"), socialHandle, socialHandleUrl, socialChannel);
		if(socialHandleType.toUpperCase()==="ACCOUNT")
			return this.socialUtils.bindAccountToSocialProfile(caseGr.getValue("account"), socialHandle, socialHandleUrl, socialChannel);
		if(socialHandleType.toUpperCase()==="CONSUMER")
			return this.socialUtils.bindConsumerToSocialProfile(caseGr.getValue("consumer"), socialHandle, socialHandleUrl, socialChannel);	
	},

	getReferenceListAndChoices : function(column, start, end, query, dependent_value, ref_qual_input, id, reference_field_columns){
		return global.CSMBaseAPIUtils.getReferenceListAndChoices(global.CSMBaseConstants.CASE_TABLE,column,start,end,query, dependent_value, ref_qual_input, id, reference_field_columns);
	},
	
	getCaseActivityStream : function(id, start, end, activityType){
		return global.CSMBaseAPIUtils.getCaseActivityStream(id, start, end, activityType);
	},
	type: 'CaseDao'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2017-11-07 19:46:51&lt;/sys_created_on&gt;
        &lt;sys_id&gt;1e2981ed5312030097a2ddeeff7b1244&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;101&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;CaseDao&lt;/sys_name&gt;
        &lt;sys_package display_value="Customer Service" source="sn_customerservice"&gt;51d811fad7223100b7490ee60e61034f&lt;/sys_package&gt;
        &lt;sys_policy&gt;read&lt;/sys_policy&gt;
        &lt;sys_scope display_value="Customer Service"&gt;51d811fad7223100b7490ee60e61034f&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_1e2981ed5312030097a2ddeeff7b1244&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2023-05-06 12:01:38&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:11:37</sys_created_on>
        <sys_id>9cd0381983b01210c6695855eeaad3ca</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>CaseDao</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_9cd0381983b01210c6695855eeaad3ca</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:11:37</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
