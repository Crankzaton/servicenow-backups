<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>true</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Populate scratchpads for subscription</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[function onDisplay(current, g_scratchpad) {
   //This function will be automatically called when this rule is processed.
 g_scratchpad.subscriptionWikiLink = gs.getProperty('help.base.servicenow')+ 'CSHelp:Subscription-Usage-Application';
 g_scratchpad.subscriptionWikiTitle = gs.getMessage('More Info');
 g_scratchpad.perUserDispOnlySubMsg = gs.getMessage('This subscription does not require detailed monitoring. No action is required on your part.');
 g_scratchpad.perUserSubMsg = gs.getMessage('Your organization purchased a subscription for the number of users who should be allowed to access subscription applications and capabilities. As the usage administrator, you are required to allocate eligible users to the subscription.');
 g_scratchpad.capacitySubMsg = gs.getMessage('Your ServiceNow instance auto-allocates software or hardware resources to this subscription. No action is required on your part.');
 g_scratchpad.maxUserSubMsg = gs.getMessage('Unrestricted-user licenses are auto-allocated based on the number of active users. For more details, <a id="permalink" class="linked" style="color:#666666;" href="/api/now/v1/context_doc_url/types_of_subscriptions" target="_blank">view our documentation.</a>');
 g_scratchpad.unlimitedUserSubMsg = gs.getMessage('All active users with a valid User ID can use this subscription. No action is required on your part.');
 g_scratchpad.paIndicatorSubMsg = gs.getMessage('Performance Analytics Indicators may be created on any tables on the applications associated with this subscription. No action is required on your part.');
 g_scratchpad.viewSubscriptionHistory = gs.getMessage('Subscription History');
 g_scratchpad.viewUserSubscriptionHistory = gs.getMessage('User Subscription History');
 g_scratchpad.hasMultipleLineItems = hasMultipleLineItems();
 g_scratchpad.hasEntitlements = hasEntitlements();
 g_scratchpad.hasApplications = hasApplications();
 g_scratchpad.hasFamilies = hasFamilies();
 g_scratchpad.invalidAllocatedMsg = gs.getMessage('Allocated: Unable to determine the number of allocated resources or users.');

 var utils = new SNSubscriptionUtils();
 var allotmentType = hasPlatformLicAllotment();
 g_scratchpad.hasPlatformLicAllotment = allotmentType;

 g_scratchpad.hasITOMRatios = hasLicenseMetadata('itom_su_ratio');
 g_scratchpad.hasIHSpokes = hasLicenseMetadata('ih_spoke');
 g_scratchpad.hasIHSpokeActions = hasLicenseMetadata('sku_ih_spoke_action');
 g_scratchpad.hasIHSpokeCallerScopes = hasLicenseMetadata("ih_spoke_caller_scope");
 g_scratchpad.hasIHProtocols = hasLicenseMetadata('ih_protocol');
 g_scratchpad.hasIHFeatures = hasLicenseMetadata('ih_feature');
 g_scratchpad.hasLicPool = hasLicenseMetadata('license_pool');
 g_scratchpad.hasGenAIFeature = hasLicenseMetadata('genai_product_metadata');
 
 g_scratchpad.entitlementLevel = SNC.UsageAnalyticsScriptUtils.getEntitlementLevel();
 g_scratchpad.autoSystemEntitlementEnabled = SNC.UsageAnalyticsScriptUtils.isAutoSystemEntitlementEnabled();

 var isIhType = SNC.UsageAnalyticsScriptUtils.isLicenseIHType(current.license_id);
 if (isIhType) {
  if(g_scratchpad.hasLicPool == true) {
   var contributed = utils._getUsageAnalyticsCount(current, utils.LIC_CCU, "count");
   if(contributed > 0)
    g_scratchpad.rollingUsage = "Contributed: " + contributed;
  } else {
   var borrowed = utils._getUsageAnalyticsCount(current, utils.LIC_BCU, "count");
   if(borrowed > 0)
    g_scratchpad.rollingUsage = "Used: " + current.count + " Borrowed: " + borrowed;
  }
 }

 if (allotmentType == utils.PLAT_BUNDLE_ALLOT_TYPE)
  gs.addInfoMessage(gs.getMessage('Custom tables associated to this subscription are managed through the "Manage Your Tables" link.'));
 else if (allotmentType == utils.GRANDFATHER_ALLOT_TYPE)
  gs.addInfoMessage(gs.getMessage('Please note: Once added, tables cannot be removed from this subscription'));
 else if (allotmentType == utils.PLAT_ONLY_ALLOT_TYPE) {
  var tc = SNC.UsageAnalyticsScriptUtils.getTableCount(allotmentType, current.getUniqueValue());

  if (tc > 0) {
   var params = [current.count, tc];
   gs.addInfoMessage(gs.getMessage('{0} users may access up to {1} custom tables from given Custom Tables list', params));
  }
 }
}

function hasApplications() {
 var hasApps = false;
 var licAppGR = new GlideRecord('license_has_app');
 if (licAppGR.isValid()) {
  licAppGR.addQuery('license', current.getUniqueValue());
  licAppGR.query();
  hasApps = licAppGR.getRowCount() > 0;
 }
 return hasApps;
}

function hasFamilies() {
 var hasFams = false;
 var licFamGR = new GlideRecord('license_has_family');
 if (licFamGR.isValid()) {
  licFamGR.addQuery('license', current.getUniqueValue());
  licFamGR.query();
  hasFams = licFamGR.getRowCount() > 0;
 }
 return hasFams;
}

function hasMultipleLineItems() {
 var hasMultItems = false;
 var lineItemGR = new GlideRecord('license_details_item');
 if (lineItemGR.isValid()) {
  lineItemGR.addQuery('license_details', current.getUniqueValue());
  lineItemGR.query();
  hasMultItems = lineItemGR.getRowCount() > 1;
 }
 return hasMultItems;
}

function hasEntitlements() {
 var gr = new GlideRecord('license_has_entitlement');
 if (gr.isValid()) {
  gr.addQuery('license', current.getUniqueValue());
  gr.query();
  if ( gr.getRowCount() > 0)
   return true;
 }
 return false;
}

function hasPlatformLicAllotment() {
 var utils = new SNSubscriptionUtils();

 var allotGR = new GlideRecord(utils.LICENSE_CUST_ALLOTMENT_TBL);
 allotGR.addQuery(utils.SUBSCRIPTION, current.getUniqueValue());
 allotGR.query();

 if (allotGR.next())
  return allotGR.getValue(utils.ALLOTMENT_TYPE);

 return "-1";
}

function hasLicenseMetadata(metadataType) {
 var gr = new GlideRecord('license_metadata');
 if (gr.isValid()) {
  gr.addQuery('license', current.getUniqueValue());
  gr.addQuery('type_id', metadataType);
  gr.query();
  if ( gr.getRowCount() > 0)
   return true;
 }
 return false;
}]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:48:09</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>e07b289183701210c6695855eeaad3d7</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Populate scratchpads for subscription</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_e07b289183701210c6695855eeaad3d7</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:48:09</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=e07b289183701210c6695855eeaad3d7"/>
</record_update>
