<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>36aca89983701210c6695855eeaad393</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules"&gt;
    &lt;x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE"&gt;
        &lt;abort_action&gt;false&lt;/abort_action&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;action_delete&gt;true&lt;/action_delete&gt;
        &lt;action_insert&gt;false&lt;/action_insert&gt;
        &lt;action_query&gt;false&lt;/action_query&gt;
        &lt;action_update&gt;false&lt;/action_update&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;add_message&gt;false&lt;/add_message&gt;
        &lt;advanced&gt;true&lt;/advanced&gt;
        &lt;change_fields&gt;false&lt;/change_fields&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;collection/&gt;
        &lt;condition/&gt;
        &lt;description/&gt;
        &lt;execute_function&gt;false&lt;/execute_function&gt;
        &lt;filter_condition/&gt;
        &lt;is_rest&gt;false&lt;/is_rest&gt;
        &lt;message/&gt;
        &lt;name&gt;Cascade-delete Nodes&lt;/name&gt;
        &lt;order&gt;100&lt;/order&gt;
        &lt;priority&gt;100&lt;/priority&gt;
        &lt;rest_method/&gt;
        &lt;rest_method_text/&gt;
        &lt;rest_service/&gt;
        &lt;rest_service_text/&gt;
        &lt;rest_variables/&gt;
        &lt;role_conditions/&gt;
        &lt;script&gt;&lt;![CDATA[(function executeRule(current, previous /*null when async*/) {
 var nodes, goal_ids = [], delayed_deletes = [];
 
 // Get the Goals and Nodes
 var goals = new GlideRecord("sys_cb_goal");
 goals.addQuery("topic", current.getValue("sys_id"));
 goals.query();
 
 gs.debug("There are {0} goals for this Topic which must be deleted.", goals.getRowCount());
 
 while (goals.next())
  goal_ids.push(goals.getValue("sys_id"));
 
 if (goal_ids.length &gt; 0) {
  nodes = new GlideRecord("sys_cb_node");
  nodes.addQuery("topic_goal", "IN", goal_ids.join(","));
  nodes.query();
  
  gs.debug("There are {0} nodes for this Topic which must be deleted.", nodes.getRowCount());
  
  gs.debug("Deleting nodes.");
  while(nodes.next()) {
   var realRecord = new GlideRecord(nodes.getRecordClassName());
   realRecord.get(nodes.getValue("sys_id"));
   
   if (realRecord) {
    realRecord.setWorkflow(false);
    realRecord.deleteRecord();
    
    gs.debug("Node {0} ({1}) deleted with workflow off.", realRecord.getDisplayValue(), realRecord.getRecordClassName());
    delayed_deletes.push(cacheForDelete(realRecord));
   } else {
    gs.error("Unable to load goal node {0} ({1})", node.getValue("name"), node.getValue("sys_id"));
   }
  }
 } else {
  gs.debug("No nodes to delete because no goals were found.");
 }
 
 deleteDelayedDeletes(delayed_deletes);
 
 if (nodes) {
  nodes.query();
  gs.debug("There are {0} nodes left for this Topic after delete.", nodes.getRowCount());
 }
 
 
 function writeDelete(realRecord) {
  var type = realRecord.getRecordClassName();
  var id = realRecord.getUniqueValue();
  var name = realRecord.getDisplayValue();
  var name_field = realRecord.getDisplayName();
  
  var tempRecord = new GlideRecord(type);
  tempRecord.setValue(name_field, name);
  tempRecord.setNewGuidValue(id);
  tempRecord.setWorkflow(false);
  tempRecord.insert();
  
  tempRecord.initialize();
  tempRecord.get(id);
  tempRecord.deleteRecord();
 }
 
 function deleteDelayedDeletes(delayed_deletes) {
  gs.debug("Deleting delayed deletes {0}", global.JSON.stringify(delayed_deletes));
  for (var i=0; i&lt;delayed_deletes.length; i++) {
   var recordObj = delayed_deletes[i];
   
   var record = new GlideRecord(recordObj.type);
   record.newRecord();
   record.setValue(recordObj.name_field, recordObj.name);
   if (recordObj.hasOwnProperty("condition"))
    record.setValue("condition", recordObj.condition);
   
   record.setNewGuidValue(recordObj.sys_id);
   record.setWorkflow(false);
   record.insert();
   
   record.initialize();
   record.get(recordObj.sys_id);
   record.deleteRecord();
  }
 }
 
 function cacheForDelete(record) {
  var obj = {
   type : record.getRecordClassName(),
   sys_id : record.getUniqueValue(),
   name : record.getDisplayValue(),
   name_field : record.getDisplayName()
  };
  
  if (record.isValidField("condition"))
   obj.condition = record.getValue("condition");
  
  return obj;
 }
})(current, previous);]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;x_938076_now_utils_now_utils_business_rules&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2024-09-21 07:53:29&lt;/sys_created_on&gt;
        &lt;sys_domain&gt;global&lt;/sys_domain&gt;
        &lt;sys_domain_path&gt;/&lt;/sys_domain_path&gt;
        &lt;sys_id&gt;36aca89983701210c6695855eeaad393&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;Cascade-delete Nodes&lt;/sys_name&gt;
        &lt;sys_overrides/&gt;
        &lt;sys_package display_value="Now Utils" source="x_938076_now_utils"&gt;b208a7c083689e50c6695855eeaad3d2&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Now Utils"&gt;b208a7c083689e50c6695855eeaad3d2&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;x_938076_now_utils_now_utils_business_rules_36aca89983701210c6695855eeaad393&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2024-09-21 07:53:29&lt;/sys_updated_on&gt;
        &lt;template/&gt;
        &lt;when&gt;before&lt;/when&gt;
    &lt;/x_938076_now_utils_now_utils_business_rules&gt;
    &lt;sys_translated_text action="delete_multiple" query="documentkey=36aca89983701210c6695855eeaad393"/&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:00:12</sys_created_on>
        <sys_id>c93e245183b01210c6695855eeaad349</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Cascade-delete Nodes</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_c93e245183b01210c6695855eeaad349</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:00:12</sys_updated_on>
        <tablename>sys_script</tablename>
    </sys_metadata_link>
</record_update>
