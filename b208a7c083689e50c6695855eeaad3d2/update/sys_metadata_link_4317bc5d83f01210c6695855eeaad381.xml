<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>7a39d97a007bb410f877f4fb60521b2d</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;sn_sow_on_call.OCEscalationPathUtilSOWSNC&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;OCEscalationPathUtilSOWSNC&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var OCEscalationPathUtilSOWSNC = Class.create();

OCEscalationPathUtilSOWSNC.LOG_PROPERTY = 'com.snc.on_call_rotation.log.level';

OCEscalationPathUtilSOWSNC.prototype = {
	initialize: function () {		
		this._log = new global.GSLog(OCEscalationPathUtilSOWSNC.LOG_PROPERTY, this.type);
		global.OCEscalationPathUtil.prototype._getOnCallShiftDetails = OCEscalationPathUtilSOWSNC.methods._getOnCallShiftDetails.bind(this);
		global.OCEscalationPathUtil.prototype._getGroupDetails = OCEscalationPathUtilSOWSNC.methods._getGroupDetails.bind(this);
		this._escalationPathUtil = new global.OCEscalationPathUtil();
	},
	
	getOnCallEscalationShift: function(groupId, rotaId, gdt, escalationSetSysId, taskTable, taskSysId) {
		var response = this._escalationPathUtil.getOnCallEscalationShift(groupId, rotaId, gdt, escalationSetSysId, taskTable, taskSysId);
		var onCallRotation = new OnCallRotationSow();
		var currentRota = response.curRotaDetails;
		var request = {
			'start': currentRota.startDisplayValue,
			'end': currentRota.endDisplayValue
		};
		currentRota.formattedDateTime = {
			"default": onCallRotation._getRotaDetailsMsg(request),
			"humanized": onCallRotation._getRotaHumanizedDetailsMsg(request)
		};
		return response;
	},
	
	_buildDataModel: function(result, filter, groupId, rotaId) {
		return this._escalationPathUtil._buildDataModel(result, filter, groupId, rotaId);
	},
	
	_toJS: function(gr, requiredFields, skipACL) {
		return this._escalationPathUtil._toJS(gr, requiredFields, skipACL);
	},

	type: 'OCEscalationPathUtilSOWSNC'
};

OCEscalationPathUtilSOWSNC.methods = {
	
	_getGroupDetails: function (groupId) {
		if(global.JSUtil.nil(groupId))
			return;
		var gr = new GlideRecord('sys_user_group');
		var groupDetails;
		if(gr.get(groupId)); {
			groupDetails = this._toJS(gr, ["name", "manager"], false);
			
			var onCallRotation = new OnCallRotationSow();
			var managerDetails = onCallRotation._getUsers([groupDetails.manager.value]);
			groupDetails.manager.managerDetails = managerDetails[groupDetails.manager.value];
			return groupDetails;
		}
	},
	
	_getOnCallShiftDetails: function (groupId, rotaId, gdt, overlappingRotas) {
		var ocRotation = new global.OCRotationV2();
		var groupsData = ocRotation.getIndividualGroupData(groupId);
		var onCallRotation = new OnCallRotationSow();
		if (overlappingRotas)
			onCallRotation.simulateEscalationToAllRotas(true);
		var onCallMembersData = onCallRotation.processIndividualOCData(groupsData, gdt);
		if (!onCallMembersData || (onCallMembersData.onCallData &amp;&amp; onCallMembersData.onCallData.length == 0))
			return [];
		return this._buildDataModel(onCallMembersData, "all", groupId, rotaId);
	}
	
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;maint&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2021-11-17 05:15:35&lt;/sys_created_on&gt;
        &lt;sys_id&gt;7a39d97a007bb410f877f4fb60521b2d&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;29&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;OCEscalationPathUtilSOWSNC&lt;/sys_name&gt;
        &lt;sys_package display_value="On Call Scheduling for Service Operations Workspace" source="sn_sow_on_call"&gt;7e3c2481539260100c54ddeeff7b127b&lt;/sys_package&gt;
        &lt;sys_policy&gt;read&lt;/sys_policy&gt;
        &lt;sys_scope display_value="On Call Scheduling for Service Operations Workspace"&gt;7e3c2481539260100c54ddeeff7b127b&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_7a39d97a007bb410f877f4fb60521b2d&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2021-12-07 09:01:11&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:39:07</sys_created_on>
        <sys_id>4317bc5d83f01210c6695855eeaad381</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>OCEscalationPathUtilSOWSNC</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_4317bc5d83f01210c6695855eeaad381</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:39:07</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
