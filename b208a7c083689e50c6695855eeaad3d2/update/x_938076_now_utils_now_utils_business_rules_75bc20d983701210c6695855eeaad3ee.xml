<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition>TimeCardUtil.autoCreateTimeCard(current)</condition>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Create timecard</name>
        <order>110</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
 
 var weekStartsOn = TimeCardUtil.getStartOfCurrentWeek(gs.getUserID());
 var generateAtTopTaskLevel = false;
 if (!current.top_task.nil()) {
  var topTaskRecord = current.top_task.getRefRecord();
  generateAtTopTaskLevel = topTaskRecord.getValue('time_card_at_top_task') == '1';
 }
 
 var tc = new GlideRecord('time_card');
 tc.addQuery('user', gs.getUserID());
 var sq = tc.addQuery('task', current.getUniqueValue());
 if (generateAtTopTaskLevel)
  sq.addOrCondition('task', current.getValue('top_task'));
 tc.addQuery('week_starts_on', weekStartsOn);
 tc.query();
 if (!tc.next()) {
  //No time card found...create one
  var timeCardFactory = new TimeCardFactory();
  var taskId = current.getValue('sys_id');
  if (generateAtTopTaskLevel)
   taskId = current.getValue('top_task');
  tc = timeCardFactory.create(gs.getUserID(), taskId, weekStartsOn);
  tc.insert();
  
  gs.addInfoMessage(gs.getMessage("A time card for {0} during the week of {1} was automatically created for you", [current.getDisplayValue(), weekStartsOn.getDisplayValue()]));
  }
  
})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:53:41</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>75bc20d983701210c6695855eeaad3ee</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Create timecard</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_75bc20d983701210c6695855eeaad3ee</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:53:41</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=75bc20d983701210c6695855eeaad3ee"/>
</record_update>
