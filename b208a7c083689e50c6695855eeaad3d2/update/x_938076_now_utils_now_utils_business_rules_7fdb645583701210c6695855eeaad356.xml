<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Validate custom map attributes</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
 
 function attributeExists(current, attributeName, parentInput) {
  var attribute = new GlideRecord("sys_sg_input_attribute");
  attribute.addQuery("name", attributeName);
  attribute.addQuery("input", parentInput);
  attribute.setLimit(1);
  attribute.query();
  
  return attribute.next();
 }
 
 function abort(current, message) {
  current.setAbortAction(true);
  gs.addErrorMessage(message);
 }
 
 function recordExists(table, id) {
  var record = new GlideRecord(table);
  return record.get(id);
 }
 
 function validateCustomMapInputs(current, attributeValue) {
  try {
   var inputs = JSON.parse(attributeValue);
   if (Array.isArray(inputs)) {
    for(var index = 0; index < inputs.length; index++) {
     if (!recordExists("sys_sg_input", inputs[index].Id)) {
      abort(current, gs.getMessage("Custom map input does not exist."));
      break;
     }
    }
    return;
   }
  } catch(e) {
   gs.warn(e);
  }
  abort(current, gs.getMessage("Custom map inputs must be a JSON array."));
 }
 
 var attributeName = current.name.toString();
 var parentInput = current.input.toString();
 var attributeValue = current.value.toString();
 
 // Do not validate none custom map input attributes
 var isCustomMapInputAttribute = /^CustomMap(ConfigId|DefaultProviderId|Inputs)$/.test(attributeName);
 if (!isCustomMapInputAttribute)
  return;
 
 // Check if parent input is of type custom_map
 var isInputCustomMap = current.input.type.name.toString() === "custom_map";
 if (!isInputCustomMap)
  return;
 
 // Check if the custom map attribute already exists for the custom map input
 if (current.operation() === "insert" && attributeExists(current, attributeName, parentInput)) {
  abort(current, gs.getMessage("Custom map attribute already exists for input."));
  return;
 }
 
 // Validate attribute value based on attribute name
 if (attributeName === "CustomMapInputs")
  validateCustomMapInputs(current, attributeValue);
 else if (attributeName === "CustomMapConfigId" && !recordExists("sys_sg_custom_map_config", attributeValue))
  abort(current, gs.getMessage("Custom map config does not exist"));
 else if (attributeName === "CustomMapDefaultProviderId" && !recordExists("sys_sg_custom_map_provider", attributeValue))
  abort(current, gs.getMessage("Custom map provider does not exist"));
 
})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:50:01</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>7fdb645583701210c6695855eeaad356</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Validate custom map attributes</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_7fdb645583701210c6695855eeaad356</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:50:01</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=7fdb645583701210c6695855eeaad356"/>
</record_update>
