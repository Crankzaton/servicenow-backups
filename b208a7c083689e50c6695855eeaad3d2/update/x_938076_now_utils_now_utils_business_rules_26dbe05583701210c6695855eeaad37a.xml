<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Populate Agent Handling Time</name>
        <order>150</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {

    if (current.isActionAborted() || current.state.nil()) {
        return;
    }

    var currentTime = new GlideDateTime();
    var agentId;
    var duration;

    if (!current.state.equals("closed_complete")) {

        if (previous.assigned_to.isNil()) {
            /*First time interaction is transferred to a live agent*/
            current.assigned_at = currentTime;
            return;
        }

        agentId = previous.assigned_to;
        duration = GlideDateTime.subtract(current.assigned_at.getGlideObject(), currentTime);
        updateHandlingTime(current, agentId, duration);
        current.assigned_at = currentTime;
        return;
    }

    /* When the state of the interaction changes to closed_complete */
    agentId = current.assigned_to;
    duration = GlideDateTime.subtract(current.assigned_at.getGlideObject(), currentTime);
    updateHandlingTime(current, agentId, duration);

})(current, previous);


function updateHandlingTime(interaction, agentId, duration) {
    var handling_time = 0;

    var memberGR = new GlideRecord('sys_cs_conversation_member');
    memberGR.addEncodedQuery('conversation=' + interaction.channel_metadata_document + '^member.user_table=sys_user^member.user_document=' + agentId);
    memberGR.addActiveQuery();
    memberGR.query();

    if (memberGR.next()) {
        if (!memberGR.handling_time.nil()) {
            handling_time = new GlideDuration(memberGR.handling_time.getGlideObject().getNumericValue());
            duration = duration.add(handling_time);
        }
        memberGR.setValue("handling_time", duration);
        memberGR.update();
    }
}]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:49:56</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>26dbe05583701210c6695855eeaad37a</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Populate Agent Handling Time</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_26dbe05583701210c6695855eeaad37a</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:49:56</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=26dbe05583701210c6695855eeaad37a"/>
</record_update>
