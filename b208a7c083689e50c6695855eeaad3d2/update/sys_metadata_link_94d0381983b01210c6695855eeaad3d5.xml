<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>1e2e643a5bd200101f254d3ba881c7d9</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;public&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.VAFieldValidator&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;Validates field input values.&lt;/description&gt;
        &lt;name&gt;VAFieldValidator&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var VAFieldValidator = Class.create();
VAFieldValidator.prototype = {
	 // Borrowed from this github project:  https://gist.github.com/dperini/729294
	initialize: function() {
		this._REGEXP_URL = new RegExp(
			"^" +
			// protocol identifier (optional)
			// short syntax // still required
			"(?:(?:(?:https?|ftp):)?\\/\\/)" +
			// user:pass BasicAuth (optional)
			"(?:\\S+(?::\\S*)?@)?" +
			"(?:" +
			// IP address exclusion
			// private &amp; local networks
			"(?!(?:10|127)(?:\\.\\d{1,3}){3})" +
			"(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})" +
			"(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})" +
			// IP address dotted notation octets
			// excludes loopback network 0.0.0.0
			// excludes reserved space &gt;= 224.0.0.0
			// excludes network &amp; broadcast addresses
			// (first &amp; last IP address of each class)
			"(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])" +
			"(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}" +
			"(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))" +
			"|" +
			// host &amp; domain names, may end with dot
			// can be replaced by a shortest alternative
			// (?![-_])(?:[-\\w\\u00a1-\\uffff]{0,63}[^-_]\\.)+
			"(?:" +
			"(?:" +
			"[a-z0-9\\u00a1-\\uffff]" +
			"[a-z0-9\\u00a1-\\uffff_-]{0,62}" +
			")?" +
			"[a-z0-9\\u00a1-\\uffff]\\." +
			")+" +
			// TLD identifier name, may end with dot
			"(?:[a-z\\u00a1-\\uffff]{2,}\\.?)" +
			")" +
			// port number (optional)
			"(?::\\d{2,5})?" +
			// resource path (optional)
			"(?:[/?#]\\S*)?" +
			"$", "i"
		);
	},

	validateInternationalPhoneNumberFormat: function(value) {
		var nilCheck = this._checkForNil(value);
		if (!gs.nil(nilCheck)) {
			return nilCheck;
		}

		var preppedValue = value.toString().trim();
		//make sure value does not have any alphanumeric characters
		var result = preppedValue.match(/[a-zA-Z]/);
		if (!gs.nil(result)) {
			return false;
		}
		preppedValue = !preppedValue.startsWith("+") ? ("+" + preppedValue) : preppedValue;
		var gePN = new GlideElementPhoneNumber();
		gePN.setPhoneNumber(preppedValue, false);
		return {
			"value": value,
			"valid": gePN.isValid(),
			"territory": gePN.getTerritory(),
			"global_display_value": gePN.getGlobalDisplayValue(),
			"local_display_value": gePN.getLocalDisplayValue(),
			"local_dialing_code": gePN.getLocalDialingCode()
		};
	},

	validateEmailAddress: function(value) {
		var nilCheck = this._checkForNil(value);
		if (!gs.nil(nilCheck)) {
			return false;
		}
		var preppedValue = value.toString().trim();
		var result = preppedValue.match(/^\w+(([\.+-]\w)\w*)*@\w+(([\.-]\w)\w*)*(\.\w{2,10})$/);
		return !gs.nil(result) &amp;&amp; result.length &gt; 0;
	},

	validateURL: function(value) {
		var nilCheck = this._checkForNil(value);
		if (!gs.nil(nilCheck)) {
			return false;
		}
		var preppedValue = value.toString().trim();
		return this._REGEXP_URL.test(preppedValue);
	},

	validateIPAddress: function(value) {
		var nilCheck = this._checkForNil(value);
		if (!gs.nil(nilCheck)) {
			return false;
		}
		return !gs.nil((SncIPAddressV4.getIPAddressV4FromDDecimal(value) || SncIPAddressV6.get(value)));
	},

	_checkForNil: function(value) {
		if (gs.nil(value) || value.toString().trim().length==0) {
			return {"value": value, "valid": false};
		}
	},

	type: 'VAFieldValidator'
};
]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2020-01-15 23:45:41&lt;/sys_created_on&gt;
        &lt;sys_id&gt;1e2e643a5bd200101f254d3ba881c7d9&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;28&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;VAFieldValidator&lt;/sys_name&gt;
        &lt;sys_package display_value="Glide Conversation Server Field Validator" source="com.glide.cs.validator"&gt;818678243cb1311068bcf327dfe37f3a&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_1e2e643a5bd200101f254d3ba881c7d9&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2021-05-04 17:58:26&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:11:37</sys_created_on>
        <sys_id>94d0381983b01210c6695855eeaad3d5</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>VAFieldValidator</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_94d0381983b01210c6695855eeaad3d5</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:11:37</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
