<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>true</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description>Keeps pa_responsibility table in sync with changes to responsible_users column.</description>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>KPI Signals Responsibility Sync</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
  var usersStr = current.responsible_users;
  var sysId = current.sys_id;
  var users = usersStr.split(',');
  var rgr = new GlideRecord('pa_responsibility');
  rgr.setWorkflow(false);
  rgr.addQuery('entity', sysId);
  rgr.query();

  if (sys_action == 'delete') {
    while (rgr.next()) {
      rgr.deleteRecord();
    }
    return;
  }

  // remove items missing from the list
  while (rgr.next()) {
    var userId = rgr.getValue('user');
    var index = users.indexOf(userId);
    if (index >= 0) {
      users.splice(index, 1);
    } else {
      rgr.deleteRecord();
    }
  }
  if(JSUtil.nil(usersStr))
 return;
  // add items from the list not already persisted
  var ins = new GlideRecord('pa_responsibility');
  for (var i=0; i < users.length; i++) {
 ins.initialize();
 ins.setWorkflow(false);
    ins.setValue('user', users[i]);
    ins.setValue('entity', sysId);
    ins.setValue('table', 'pa_xmr_processes');
 ins.insert();
  }
})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:50:24</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>2dfbec5583701210c6695855eeaad30e</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>KPI Signals Responsibility Sync</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_2dfbec5583701210c6695855eeaad30e</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:50:24</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=2dfbec5583701210c6695855eeaad30e"/>
</record_update>
