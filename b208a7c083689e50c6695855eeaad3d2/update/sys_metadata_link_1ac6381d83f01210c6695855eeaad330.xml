<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>5f6c0ffb0f61201049fbcc11ff767e9c</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.SPMAutomationUtils&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;Utils for portfolio automations and traversing the various layers of the portfolio tree.&lt;/description&gt;
        &lt;name&gt;SPMAutomationUtils&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var SPMAutomationUtils = Class.create();
SPMAutomationUtils.prototype = {
    initialize: function() {
        this.spmFoundationConstants = new global.SPMFoundationConstants();
        this.spmRefUtils = new global.SPMRefUtils();
        this.totalNumOfferingsCreated = 0;
    },

    /**
     * Create one-many offerings for each service in a portfolio
     *
     * @param {string} portfolioSysId - sys_id of the spm_service_portfolio record
     * @param {string} numOfferings - number of offerings to create per service in the portfolio
     */
    createOneManyOfferingsForPortfolio: function(portfolioSysId, numOfferings) {
        gs.addInfoMessage(gs.getMessage('Service offerings are being created for all services in this portfolio with no child offerings. This may take a few minutes.'));

        var services = new GlideRecord(this.spmFoundationConstants.SERVICE_TABLE);
        services.addQuery(this.spmFoundationConstants.PORTFOLIO_TABLE, portfolioSysId);
        services.addNotNullQuery(this.spmFoundationConstants.TAXONOMY_TABLE);
        services.query();

        // Traverse each service
        while (services.next()) {
            this.createOneManyOfferings(services, numOfferings);
        }

        if (this.totalNumOfferingsCreated == 0)
            gs.addInfoMessage(gs.getMessage('All services in this portfolio already contain child offerings.'));

        return this.totalNumOfferingsCreated;
    },

    /**
     * Create one-many offerings for a service
     *
     * @param {GlideRecord} service - cmdb_ci_service that will be the parent of the created service_offering records
     * @param {string} numOfferings - number of offerings to create for the service
     */
    createOneManyOfferings: function(service, numOfferings) {
        var portfolio = service.spm_service_portfolio;
        var serviceName = service.getValue(this.spmFoundationConstants.NAME);
        var offeringsToCreate = (numOfferings === undefined) ? offeringsToCreate = portfolio.offerings_per_service : offeringsToCreate = numOfferings;
        var offeringsCreated = 0;

        var offerings = new GlideRecord(this.spmFoundationConstants.SERVICE_OFFERING_TABLE);
        offerings.addQuery(this.spmFoundationConstants.PARENT, service.sys_id);
        offerings.query();

        // Only create offerings if service does not already have child offerings
        if (!offerings.hasNext()) {
            var serviceOffering = new GlideRecord(this.spmFoundationConstants.SERVICE_OFFERING_TABLE);

            for (var i = 1; i &lt;= offeringsToCreate; i++) {
                serviceOffering.initialize();
                serviceOffering.setValue(this.spmFoundationConstants.PARENT, service.sys_id);
                serviceOffering.setValue(this.spmFoundationConstants.BUSINESS_CRITICALITY, service.busines_criticality);
                serviceOffering.setValue(this.spmFoundationConstants.OWNED_BY, service.owned_by);
                serviceOffering.setValue(this.spmFoundationConstants.DELIVERY_MANAGER, service.delivery_manager);
                serviceOffering.setValue(this.spmFoundationConstants.DELEGATE, service.service_owner_delegate);

                var offeringName;
                if (parseInt(numOfferings) === 1)
                    offeringName = gs.getMessage('{0} Offering', [serviceName]);
                else
                    offeringName = gs.getMessage('{0} Offering {1}', [serviceName, i.toString()]);

                serviceOffering.setValue(this.spmFoundationConstants.NAME, offeringName);
                serviceOffering.insert();
                offeringsCreated++;
                this.totalNumOfferingsCreated++;
            }
            if (offeringsCreated &gt; 0)
                gs.log(gs.getMessage('According to the portfolio configuration, {0} child offering(s) were created for {1}.', [offeringsCreated.toString(), serviceName]));
        }
    },
    type: 'SPMAutomationUtils'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2021-01-13 23:30:30&lt;/sys_created_on&gt;
        &lt;sys_id&gt;5f6c0ffb0f61201049fbcc11ff767e9c&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;89&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;SPMAutomationUtils&lt;/sys_name&gt;
        &lt;sys_package display_value="Service Portfolio Management Foundation" source="com.snc.service_portfolio"&gt;9fe738ac3cb1311068bcf327dfe37ff1&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_5f6c0ffb0f61201049fbcc11ff767e9c&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2021-02-18 19:19:13&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:37:41</sys_created_on>
        <sys_id>1ac6381d83f01210c6695855eeaad330</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>SPMAutomationUtils</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_1ac6381d83f01210c6695855eeaad330</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:37:41</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
