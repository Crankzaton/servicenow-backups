<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>27d1c30377f32010f853528069106171</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;public&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.LFTMSHelper&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;Helper to handle file contents specific to TMS&lt;/description&gt;
        &lt;name&gt;LFTMSHelper&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var LFTMSHelper = Class.create();
LFTMSHelper.prototype = {
    initialize: function(taskNumber) {
        this.tmsUtils = new LFTMSUtils(taskNumber);
    },

    /**
     * This method returns an array of sysIds for given task which needs to be uploaded to TMS for translation
     * 
     * @returns Array
     */
    getFileIds: function() {
        return this.tmsUtils.getFileIds();
    },

    /**
     * This method returns an array of sysIds grouped per each target language code for given task which needs to be uploaded to TMS for translation
     * 
     * @returns JSON
     */
    getFileIdsGroupedByTargetLanguage: function() {
        return this.tmsUtils.getFileIdsGroupedByTargetLanguage();
    },

    /**
     * This method returns an array of target language codes for the given requested item ids
     * 
     * @param itemIds 
     * @returns Array
     */
    getTargetLanguageCodes: function(itemIds) {
        return this.tmsUtils.getTargetLanguageCodes(itemIds);
    },

    /**
     * This method returns source language code for the given requested item id
     * 
     * @param  itemId 
     * @returns String
     */
    getSourceLanguageCode: function(itemId) {
        return this.tmsUtils.getSourceLanguageCode(itemId);
    },

    /**
     * This method returns an attachment name that can be used while attaching the content to localization task
     * 
     * @param targetLanguageCode 
     * @param tmsName 
     * @returns String
     */
    getAttachmentName: function(targetLanguageCode, tmsName) {
        return this.tmsUtils.getAttachmentName(targetLanguageCode, tmsName);
    },

    /**
     * This method returns sysId of attachment added to localization task with the given parameters
     * 
     * @param fileIds 
     * @param tmsSourceLanguageCode 
     * @param tmsTargetLanguageCode 
     * @param attachmentName 
     * @returns String 
     */
    getAttachmentSysId: function(fileIds, tmsSourceLanguageCode, tmsTargetLanguageCode, attachmentName) {
        return this.tmsUtils.getAttachmentSysId(fileIds, tmsSourceLanguageCode, tmsTargetLanguageCode, attachmentName);
    },

    /**
     * This method returns a JSON having sysId, number, artifact sysId, source &amp; target language code for the given requested item id
     * 
     * @param id 
     * @returns JSON
     */
    getFileDetails: function(id) {
        return this.tmsUtils.getFileDetails(id);
    },

    /**
     * This method returns the glide record of the current task
     * 
     * @returns Object
     */
    getTaskRecord: function() {
        return this.tmsUtils.getTaskRecord();
    },

    /**
     * This method returns number for the given requested item id
     * 
     * @param fileId 
     * @returns String
     */
    getNumber: function(fileId) {
        return this.tmsUtils.getNumber(fileId);
    },

    /**
     * This method creates an XLIFF content from the given content of document content, original, tms specific source &amp; language codes
     * 
     * @param content 
     * @param fileNumber 
     * @param tmsSourceLanguageCode 
     * @param tmsTargetLanguageCode 
     * @returns String 
     */
    createXLIFFContent: function(content, fileNumber, tmsSourceLanguageCode, tmsTargetLanguageCode) {
        return this.tmsUtils.createXLIFFContent(content, tmsSourceLanguageCode, tmsTargetLanguageCode, fileNumber);
    },

    /**
     * This method returns the project info which is returned from TMS sub-flows while requesting the translations
     * 
     * @returns JSON
     */
    getProjectInfo: function() {
        return this.tmsUtils.getProjectInfo();
    },

    /**
     * This method returns a JSON having number, table name &amp; sys id of current task
     * 
     * @returns JSON
     */
    getTaskDetails: function() {
        return this.tmsUtils.getTaskDetails();
    },

    /**
     * This method saves the given TMS specific project info into the current task
     * 
     * @param projectInfo 
     */
    saveProjectInfo: function(projectInfo) {
        this.tmsUtils.saveProjectInfo(projectInfo);
    },

    /**
     * This method can be invoked to update the state and work notes of current task and requested items once all the files are uploaded to TMS successfully
     */
    handleUploadSuccess: function() {
        this.tmsUtils.handleUploadSuccess();
    },

    /**
     * This method can be invoked to update the state and work notes of current task and requested items if an error occurs while uploading a file to TMS
     */
    handleUploadError: function() {
        this.tmsUtils.handleUploadError();
    },

    /**
     * Updates the translated contents available for the given attachment sysId of a zip file into the localization task
     * 
     * @param attachmentSysId
     * @param tmsName 
     * @returns JSON having status, error message and array of file ids saved with translated content
     */
    saveTranslatedContentsFromZip: function(attachmentSysId, tmsName) {
        return this.tmsUtils.saveTranslatedContentsFromZip(attachmentSysId, tmsName);
    },

    /**
     * This method will save the translated values into the requested item based on the given translated XLIFF content, requested item number, tms specific source &amp; target language codes
     * 
     * @param translatedXLIFF 
     * @param fileNumber 
     * @param tmsSourceLanguageCode 
     * @param tmsTargetLanguageCode 
     * @returns boolean
     */
    saveTranslatedXLIFFContent: function(translatedXLIFF, fileNumber, tmsSourceLanguageCode, tmsTargetLanguageCode) {
        return this.tmsUtils.saveTranslatedXLIFFContent(translatedXLIFF, fileNumber, tmsSourceLanguageCode, tmsTargetLanguageCode);
    },

    /**
     * This method parses and returns the file number, source and target language codes available in the given translated XLIFF content
     * @param translatedXLIFF 
     * @returns JSON
     */
    getFileDetailsFromTranslatedXLIFF: function(translatedXLIFF) {
        return this.tmsUtils.getFileDetailsFromTranslatedXLIFF(translatedXLIFF);
    },

    type: 'LFTMSHelper'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2021-05-04 05:04:32&lt;/sys_created_on&gt;
        &lt;sys_id&gt;27d1c30377f32010f853528069106171&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;10&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;LFTMSHelper&lt;/sys_name&gt;
        &lt;sys_package display_value="Localization Framework" source="com.glide.localization_framework"&gt;a4dd193447720210cd4e1ce4316d4312&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_27d1c30377f32010f853528069106171&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2021-09-30 22:04:05&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:12:41</sys_created_on>
        <sys_id>08113c5983b01210c6695855eeaad376</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>LFTMSHelper</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_08113c5983b01210c6695855eeaad376</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:12:41</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
