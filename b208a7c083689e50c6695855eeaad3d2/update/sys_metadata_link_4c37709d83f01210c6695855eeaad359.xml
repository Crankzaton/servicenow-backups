<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>81933bd4c377a1107db578f9d0013103</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;public&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;sn_deploy_pipeline.CMDBAndChangeManagementUtils&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;This contains Utils that are required for CMDB and ChangeManagement Integration into deployment pipelines.&lt;/description&gt;
        &lt;name&gt;CMDBAndChangeManagementUtils&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var CMDBAndChangeManagementUtils = Class.create();
CMDBAndChangeManagementUtils.prototype = {
    initialize: function() {},
    isCMDBPluginActive: function() {
        return GlidePluginManager.isActive('com.snc.cmdb');
    },
    isChangeManagementPluginActive: function() {
        return GlidePluginManager.isActive('com.snc.change_management');
    },
    isChangeManagementIntegrationEnabled: function() {
        var propertyName = 'sn_deploy_pipeline.change_management.enabled';
        return gs.getProperty(propertyName) == 'true';
    },
    shouldEnableChangeManagementIntegration: function() {
        return this.isCMDBPluginActive() &amp;&amp; this.isChangeManagementPluginActive() &amp;&amp; this.isChangeManagementIntegrationEnabled();
    },
    isChangeManagementIntegrationFailed: function(deploymentRequestSysId, environmentSysId) {
        var hasError = false;
        var envGr = new GlideRecord('sn_deploy_pipeline_deployment_environment_result');
        envGr.addQuery('deployment_request', deploymentRequestSysId);
        envGr.addQuery('environment', environmentSysId);
        envGr.query();

        while (envGr.next()) {
            if (envGr.getValue('has_error') === '1' &amp;&amp; envGr.getValue('error_type') === 'change_integration_fail') {
                hasError = true;
                break;
            }
        }
        return hasError;
    },
    cancelChangeRequestIfExists: function(deploymentRequestSysId) {
        var CHANGE_REQUEST_CLOSED_STATE = 3;
        var CHANGE_REQUEST_CANCELED_STATE = 4;
        var isChangeRequestCanceled = false;
        var result = {
            status: false,
            message: ''
        };

        var deploymentRequestGR = new GlideRecordSecure('sn_deploy_pipeline_deployment_request');
        var hasValidDeploymentRequest = deploymentRequestGR.get(deploymentRequestSysId);
        if (hasValidDeploymentRequest) {
            var changeRequestRecord = deploymentRequestGR.change_request.getRefRecord();

            if (changeRequestRecord.isValidRecord()) {
                if (changeRequestRecord.state != CHANGE_REQUEST_CLOSED_STATE &amp;&amp; changeRequestRecord.state != CHANGE_REQUEST_CANCELED_STATE) {
                    changeRequestRecord.state = CHANGE_REQUEST_CANCELED_STATE;
                    isChangeRequestCanceled = changeRequestRecord.update();
                    if (!isChangeRequestCanceled) {
                        result.message = gs.getMessage("Unable to cancel change request with sys_id: {0}", [changeRequestRecord.sys_id]);
                    } else {
                        result.status = true;
                    }
                }
            }
        }
        return result;
    },

    type: 'CMDBAndChangeManagementUtils'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2023-06-29 10:26:51&lt;/sys_created_on&gt;
        &lt;sys_id&gt;81933bd4c377a1107db578f9d0013103&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;18&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;CMDBAndChangeManagementUtils&lt;/sys_name&gt;
        &lt;sys_package display_value="Deployment Pipeline" source="sn_deploy_pipeline"&gt;bb67ed7253e83010b846ddeeff7b1204&lt;/sys_package&gt;
        &lt;sys_policy&gt;read&lt;/sys_policy&gt;
        &lt;sys_scope display_value="Deployment Pipeline"&gt;bb67ed7253e83010b846ddeeff7b1204&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_81933bd4c377a1107db578f9d0013103&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2023-08-17 11:23:32&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:39:27</sys_created_on>
        <sys_id>4c37709d83f01210c6695855eeaad359</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>CMDBAndChangeManagementUtils</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_4c37709d83f01210c6695855eeaad359</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:39:27</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
