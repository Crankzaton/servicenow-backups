<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Compile Workspace on insert</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
 var wcu = new WorkspaceCompilerUtils();
 var validation = wcu.runValidations(current);
 
 if (!validation.passes) {
  current.setAbortAction(validation.shouldAbort);
  gs.addInfoMessage(validation.message);
  return;
 }

 var compileData = makeWorkspaceMetadata(current);
 current.setValue('compiled_page', compileData.page);
 current.setValue('compiled_page_registry', compileData.registry);

 function makeWorkspaceMetadata(workspaceGr) {
  var canonicalPage = wcu.getCanonicalUxPage();
  if (gs.nil(canonicalPage)) {
   current.setAbortAction(true);
   gs.addInfoMessage('Required canonical sys_ux_page record was not found.');
   return;
  }
  var pageRegistryGr = createWorkspaceUxPageRegistry(canonicalPage, workspaceGr);
  var pageRegistryId = pageRegistryGr.getUniqueValue();
  var propArray = [
   { pageProp: 'ws_active_notification', type: 'boolean', description: 'Include/exclude workspace notification', workspaceField: 'notifications_enabled' },
   { pageProp: 'ws_active_search', type: 'boolean', description: 'Show/Hide search component in workspace header', workspaceField: 'search_enabled' },
   { pageProp: 'ws_active_user_pref', type: 'boolean', description: 'Exclude/include user preferences in workspace chrome.', workspaceField: 'user_preference_controls_enabled' },
   { pageProp: 'ws_navigation_mode', type: 'choicelist', description: 'Workspace level navigation mode', workspaceField: 'navigation_type' }
  ];
  
  createPageProps(pageRegistryId, workspaceGr, propArray);

  return {
   page: canonicalPage,
   registry: pageRegistryId
  };
 }

 function createWorkspaceUxPageRegistry(canonicalPage, workspaceGr) {
  var wsUxPageRegGr = new GlideRecord('sys_ux_page_registry');
  wsUxPageRegGr.newRecord();
  wsUxPageRegGr.setValue('page', canonicalPage);
  wsUxPageRegGr.setValue('title', workspaceGr.getValue('name'));
  wsUxPageRegGr.setValue('path', wcu.makeWorkspaceUxPageUrl(workspaceGr.getValue('workspace_url')));
  wsUxPageRegGr.setValue('active', workspaceGr.getValue('active'));
  wsUxPageRegGr.setValue('admin_panel', current.getUniqueValue());
  wsUxPageRegGr.setValue('admin_panel_table', 'sys_aw_master_config');
  wsUxPageRegGr.insert();
  return wsUxPageRegGr;
 }

 function createPageProps(pageRegistryId, workspaceGr, mappings) {
  var pagePropGr;
  var mapping;
  var pagePropertyValue;

  for (var i = 0; i < mappings.length; i++) {
   mapping = mappings[i];
   pagePropertyValue = workspaceGr[mapping.workspaceField];
   
   if (mapping.type === 'boolean')
    pagePropertyValue = (!!pagePropertyValue) ? 'true' : 'false';
   pagePropGr = new GlideRecord('sys_ux_page_property');
   pagePropGr.newRecord();
   pagePropGr.setValue('name', mapping.pageProp);
   pagePropGr.setValue('value', pagePropertyValue);
   pagePropGr.setValue('type', mapping.type);
   pagePropGr.setValue('page', pageRegistryId);
   pagePropGr.setValue('description', mapping.description);
   if (mapping.type === 'choicelist')
    pagePropGr.setValue('choices', pagePropertyValue);
   pagePropGr.insert();
  }
 }

})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:52:29</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>0c7c605983701210c6695855eeaad3b1</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Compile Workspace on insert</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_0c7c605983701210c6695855eeaad3b1</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:52:29</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=0c7c605983701210c6695855eeaad3b1"/>
</record_update>
