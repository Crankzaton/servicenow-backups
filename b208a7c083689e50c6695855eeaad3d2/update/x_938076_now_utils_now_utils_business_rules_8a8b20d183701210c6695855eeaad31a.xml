<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition>current.weight &gt; '0' &amp;&amp; (current.type == 'send-ready' || current.type == 'send-translation-ready')</condition>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Ignore duplicates</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[removeDuplicateEmails();

function removeDuplicateEmails() {
   var myWeight = current.weight;
   var myInstance = current.instance;
   var mySubject = current.subject;
   var myBody = current.body;
   var myRecipients = current.recipients;
   var myBlindCopied = current.blind_copied;
   var myCopied = current.copied;

   // Search for any pending email with the same recipients from the same ticket
   var duplicate = new GlideRecord('sys_email');
   duplicate.addQuery('instance', myInstance);
   duplicate.addQuery('recipients', myRecipients);
   duplicate.addQuery('blind_copied', myBlindCopied);
   duplicate.addQuery('copied', myCopied);

   var typeQuery = duplicate.addQuery('type', 'send-ready');
   typeQuery.addOrCondition('type', 'send-translation-ready');

   duplicate.addQuery('weight', '>', '0');
   // include a sys_created_on query from 1 hour before now and 1 hour after now to limit the extensions we include in the query
   var s = new GlideDateTime();
   s.subtract(3600 * 1000);
   var e = new GlideDateTime();
   e.add(3600 * 1000);
   duplicate.addQuery('sys_created_on', '>=', s);
   duplicate.addQuery('sys_created_on', '<=', e);
   duplicate.query();
   while (duplicate.next()) {
      // If greater weight or have the same subject and body...ignore this duplicate
      if (duplicate.weight < myWeight) {
   GlideSysLog.info("EMAIL." + duplicate.sys_id, "Message with sys_id " + duplicate.sys_id + " has a lower weight than message with sys_id " +
    current.sys_id + " and will be ignored.");
         duplicate.type = 'send-ignored';
         duplicate.update();
      } else if (duplicate.weight > myWeight) {
         // If lesser weight, ignore me
    GlideSysLog.info("EMAIL." + current.sys_id,"Message with sys_id " + current.sys_id + " has a lower weight than message with sys_id " +
    duplicate.sys_id + " and will be ignored.");
         current.type = 'send-ignored';
   } else if ((duplicate.subject == mySubject) && (isBodyEquals(duplicate.body, myBody))) {
   GlideSysLog.info("EMAIL." + duplicate.sys_id,"Message with sys_id " + duplicate.sys_id + " is a duplicate of message with sys_id " +
    current.sys_id + " and will be ignored.");
   duplicate.type = 'send-ignored';
         duplicate.update();
   }
   }
}

function isBodyEquals(sourceBody, targetBody){
 if(GlideStringUtil.nil(sourceBody))
  return false;

 sourceBody = removeWatermark(sourceBody).trim();
 targetBody = removeWatermark(targetBody).trim();
 return sourceBody.equals(targetBody);
}

function removeWatermark(body){
 var w = GlideEmailWatermark();
 var watermark = w.parseMessageNumber(body);
 if(GlideStringUtil.nil(watermark))
  return body;

 return body.replace('' + watermark, "");
}]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:48:32</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>8a8b20d183701210c6695855eeaad31a</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Ignore duplicates</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_8a8b20d183701210c6695855eeaad31a</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:48:32</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=8a8b20d183701210c6695855eeaad31a"/>
</record_update>
