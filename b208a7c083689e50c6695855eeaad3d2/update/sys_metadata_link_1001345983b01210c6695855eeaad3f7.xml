<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>2554df6943292110c9606eb7eab8f2ec</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;sn_fsm_mobile.FSMMobileRemoveFlowUtil&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;Util methods for remove part flow &lt;/description&gt;
        &lt;name&gt;FSMMobileRemoveFlowUtil&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var FSMMobileRemoveFlowUtil = Class.create();
FSMMobileRemoveFlowUtil.prototype = {
    initialize: function() {},

    getValueOfDropOff: function() {
        var json_response = {
            'Value': 'None',
            'DisplayValue': 'None'
        };
        return json_response;
    },

    getDefaultValueOfReplaceWith: function() {
        var json_response = {
            'Value': 'None',
            'DisplayValue': 'None'
        };
        return json_response;
    },

    getDefaultValueOfQuantity: function() {
        return '1';
    },

    getPartToRemoveDefault: function(current) {
        return current.alm_display_name + "";
    },

    getDefaultValueOfAssetStatus: function() {
		var defectiveGr = new GlideRecord("sys_choice");
		defectiveGr.addQuery("name","sm_asset_usage");
		defectiveGr.addQuery("element","removed_part_status");
		defectiveGr.addQuery("value","defective");
		defectiveGr.query();
		if(defectiveGr.next()){
			var json_response = {
				'Value': defectiveGr.getValue("sys_id"),
				'DisplayValue': 'Defective'
			};
			return json_response;
		}
		return {
			'Value': 'defective',
			'DisplayValue': 'Defective'
			};
    },

    getReplacementAssets: function(wm_task_id, removed_asset_sys_id) {
        var wm_task_gr = new GlideRecord('wm_task');
        wm_task_gr.get(wm_task_id);
        if (!wm_task_gr) {
            return;
        }

        var assetGr = new GlideRecord('alm_asset');
        assetGr.get(removed_asset_sys_id);
        var removed_asset_model = null;
        if (assetGr) {
            removed_asset_model = assetGr.model;
        }
		

        var refQual = '';
        refQual += global.FSMAssetUsageUtils.getReferenceQualifierForSwapInAsset(wm_task_id, removed_asset_sys_id);
		refQual += '^' + this._getSupportedModels();

		// add asset model present for this case
        if (removed_asset_model) {
            if (removed_asset_model.sys_class_name == "cmdb_consumable_product_model" || removed_asset_model.asset_tracking_strategy == "track_as_consumable")
                refQual += "^model.asset_tracking_strategy=track_as_consumable^ORmodel.sys_class_name=cmdb_consumable_product_model";
            else
                refQual += "^modelIN"+new global.AssetUsageFilters().getModelSubstitutes(removed_asset_model);
        }

        return refQual;
    },

    _getSupportedModels: function() {
        var asset = new GlideRecord("alm_asset");
        var or = asset.addQuery('model.sys_class_name', 'cmdb_consumable_product_model');
        or.addOrCondition('model.sys_class_name', 'cmdb_hardware_product_model');
        if (GlidePluginManager.isActive('com.sn_ent')) {
            var EAMModelClassNames = sn_ent.EnterpriseContentEAMUtils.getEAMModelClasses();
            if (!gs.nil(EAMModelClassNames) &amp;&amp; EAMModelClassNames.length &gt; 0)
                or.addOrCondition('model.sys_class_name', "IN", EAMModelClassNames);
        }
        or.addOrCondition("model.asset_tracking_strategy", 'track_as_consumable');
        return asset.getEncodedQuery();
    },


    type: 'FSMMobileRemoveFlowUtil'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2023-03-13 08:59:12&lt;/sys_created_on&gt;
        &lt;sys_id&gt;2554df6943292110c9606eb7eab8f2ec&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;113&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;FSMMobileRemoveFlowUtil&lt;/sys_name&gt;
        &lt;sys_package display_value="Field Service Mobile" source="sn_fsm_mobile"&gt;5d66b0fbe770230003cd6188d2f6a976&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Field Service Mobile"&gt;5d66b0fbe770230003cd6188d2f6a976&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_2554df6943292110c9606eb7eab8f2ec&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2023-05-25 02:42:52&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:12:26</sys_created_on>
        <sys_id>1001345983b01210c6695855eeaad3f7</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>FSMMobileRemoveFlowUtil</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_1001345983b01210c6695855eeaad3f7</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:12:26</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
