<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Validate header config</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {
    if (current.applies_to.toString() === 'specific_type' && !isValidSpecificTypeHeader(current))
        current.setAbortAction(true);

    if (current.applies_to.toString() === 'all_pages' && !isValidGlobalHeader(current))
        current.setAbortAction(true);

    if (!new SNC.HTTPHeaderUtil().isValidHeader(current.header_name, current.header_value)) {
        gs.addErrorMessage(gs.getMessage("HTTP response header: {0} or its value is not allowed", current.header_name));
        current.setAbortAction(true);
        return;
    }
})(current, previous);

function isValidSpecificTypeHeader(currentGR) {
    var gr = new GlideRecord('' + currentGR.record_type);
    if (!gr.get('' + currentGR.record_id)) {
        var errMsg = gs.getMessage("Cannot find record for Type: {0} Record ID: {1}", [currentGR.record_type, currentGR.record_id]);
        gs.addErrorMessage(errMsg);
        return false;
    }
    if (currentGR.sys_scope.toString() !== gr.sys_scope.toString()) {
        gs.addErrorMessage(gs.getMessage("Application for HTTP response header config record and the type record should be the same"));
        return false;
    }
    return true;
}

function isValidGlobalHeader(currentGR) {
    if (currentGR.sys_scope.toString() !== 'global') {
        gs.addErrorMessage(gs.getMessage("'All Pages' HTTP response header can only be configured in 'Global' application"));
        return false;
    }
    if (!gs.hasRole('security_admin')) {
        gs.addErrorMessage(gs.getMessage("'All Pages' HTTP response header can only be configured by user who has privileged access"));
        return false;
    }
    return true;
}]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:47:58</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>026be09183701210c6695855eeaad30c</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Validate header config</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_026be09183701210c6695855eeaad30c</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:47:58</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=026be09183701210c6695855eeaad30c"/>
</record_update>
