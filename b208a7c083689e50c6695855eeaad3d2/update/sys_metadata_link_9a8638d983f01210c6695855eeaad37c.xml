<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>487ebc618715b9548b27cbb7cebb358f</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;public&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.WFInsightRiskClientUtils&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;true&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;WFInsightRiskClientUtils&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var WFInsightRiskClientUtils = Class.create();
WFInsightRiskClientUtils.prototype = Object.extendsObject(global.AbstractAjaxProcessor, {

    getDateDiff: function() {

        var due_date = this.getParameter('sysparm_due_date');

        var gd = new GlideDateTime(due_date).getDate();
        //gs.info("U819886 " + gd);
        var gd1 = new GlideDateTime().getDate();
        //gs.info("U819886 " + gd1);

        var datediff = GlideDate.subtract(gd1, gd);
        //gs.info(datediff.getDayPart());


        return datediff.getDayPart();

    },

    getRiskTitlesOnRiskTheme: function(theme) {

        var answer = false;
        var gr = new GlideAggregate('sn_risk_m2m_risk_themes_risks');
        gr.addQuery('u_risk_theme', theme.sys_id);
        gr.addQuery('u_risk.u_risk_title_status', 'Active');
        gr.query();
        while (gr.next()) {
            answer = true;
        }
        return answer;
    },


    // setIndicativeValues: function(theme) {


    //     var indicativeCustomerImpact = '';
    //     var indicativeReputationImpact = '';
    //     var indicativeRegulatoryImpact = '';
    //     var indicativePLImpact = '';
    //     var indicativeLiquidityImpact = '';
    //     var indicativeInherentLikelihood = '';
    //     var indicativeInherentRisk = '';
    //     var indicativeCDE = '';
    //     var indicativeResidualRisk = '';

    //     var getRiskTitles = [];
    //     var gr = new GlideRecord('sn_risk_m2m_risk_themes_risks');
    //     gr.addQuery('u_risk_theme', theme.sys_id);
    //     gr.query();
    //     while (gr.next()) {
    //         getRiskTitles.push(gr.u_risk.number.toString());
    //     }

    //     gs.info('risk title ' + getRiskTitles);

    //     var rtlength = getRiskTitles.length;

    //     gs.info('risk title length ' + rtlength);
    //     gs.info('assessment_type=1^factor.name=Inherent Likelihood^assessment_instance_id.risk.numberIN' + getRiskTitles);

    //     var gr1 = new GlideAggregate('sn_risk_advanced_risk_assessment_instance_response');
    //     gr1.addEncodedQuery('assessment_type=1^factor.name=Inherent Likelihood^assessment_instance_id.risk.numberIN' + getRiskTitles);
    //     gr1.addAggregate('MAX', 'factor_response');
    //     gr1.query();
    //     if (gr1.next()) {
    // 		indicativeCustomerImpact = gr1.getAggregate('MAX', 'factor_response');
    //         theme.u_indicative_thematic_customer_impact = indicativeCustomerImpact;
    //     }



    // },

    getRiskChallenge: function() {
        try {

            var userID = gs.getUserID();

            //gs.info("U819886  getRiskchallenge inside");

            if (gs.hasRole('sn_risk.insight_readonly') || gs.hasRole('sn_risk.insight_risktype_irm') || gs.hasRole('sn_risk.insight_risk_id_team') || gs.hasRole('sn_risk.insight_superuser')) {


                return 'rsk_risk.profile.profile_class.name=Enterprise^ORrsk_risk.profile.profile_class.name=Legal Entity^ORrsk_risk.profile.profile_class.name=Line of Business^ORrsk_risk.profile.profile_class.name=Sub-business Unit^ORrsk_risk.profile.profile_class.name=Business Group^ORrsk_risk.profile.profile_class.name=Risk Type';

            } else if (gs.hasRole('sn_risk.insight_front_line_facilitator') || gs.hasRole('sn_risk.insight_front_line_facilitator_support') || gs.hasRole('sn_risk.insight_readonly_front_line_facilitator')) {

                var list = this.checkAccessForRiskTitles(userID);

                return 'rsk_risk.profileIN' + list;

            } else if (gs.hasRole('sn_risk.insight_business_irm')) {

                var list_business_irm = [];
                var risk_types = [];
                var ram = gs.getProperty('sn_grc.insight_risk_methodology');

                var entityList = new GlideRecord('sn_grc_m2m_users_entities');
                entityList.addQuery('u_user', userID);
                entityList.addQuery('u_app_id', "insight");
                entityList.query();

                while (entityList.next()) {

                    if (entityList.u_entity.profile_class.name == 'Risk Type') {
                        risk_types.push(entityList.getDisplayValue('u_entity'));
                    }

                    list_business_irm.push(entityList.getValue('u_entity'));

                    var level = entityList.u_entity.profile_class.category.name + '';

                    if (level === 'L2' || level === 'L3') {

                        var childEntities = new GlideRecord('sn_grc_m2m_profile_profile'); // entity relation **** sn_grc_m2m_profile_profile
                        childEntities.addEncodedQuery('downstream_profile.sn_risk_advanced_primary_risk_assessment_methodology=' + ram + '^upstream_profile=' + entityList.getValue('u_entity') + '^downstream_profile.profile_class.name!=Legal Entity');

                        childEntities.query();
                        while (childEntities.next()) {

                            list_business_irm.push(childEntities.getValue('downstream_profile'));

                            if (level === 'L2') {

                                var gChildEntities = new GlideRecord('sn_grc_m2m_profile_profile');
                                gChildEntities.addEncodedQuery('downstream_profile.sn_risk_advanced_primary_risk_assessment_methodology=' + ram + '^upstream_profile=' + childEntities.getValue('downstream_profile') + '^downstream_profile.profile_class.name!=Legal Entity');

                                gChildEntities.query();
                                while (gChildEntities.next()) {

                                    list_business_irm.push(gChildEntities.getValue('downstream_profile'));
                                }
                            }
                        }
                    }
                }

                return 'rsk_risk.profileIN' + list_business_irm + '^rsk_risk.u_risk_type.u_parent.u_nameIN' + risk_types;

            } else
                return;

        } catch (ex) {
            gs.error("SI UserEntitlementsUtils || getRiskTitles || " + ex.message);
        }

    },



    checkAccessForRiskTitles: function(userID) {
        try {
            var list = [];
            var ram = gs.getProperty('sn_grc.insight_risk_methodology');

            var entityList = new GlideRecord('sn_grc_m2m_users_entities');
            entityList.addQuery('u_user', userID);
            entityList.addQuery('u_app_id', "insight");
            entityList.query();

            while (entityList.next()) {

                list.push(entityList.getValue('u_entity'));
                var level = entityList.u_entity.profile_class.category.name + '';

                if (level === 'L2' || level === 'L3') {

                    var childEntities = new GlideRecord('sn_grc_m2m_profile_profile'); // entity relation **** sn_grc_m2m_profile_profile
                    childEntities.addEncodedQuery('downstream_profile.sn_risk_advanced_primary_risk_assessment_methodology=' + ram + '^upstream_profile=' + entityList.getValue('u_entity') + '^downstream_profile.profile_class.name!=Legal Entity');

                    childEntities.query();
                    while (childEntities.next()) {

                        list.push(childEntities.getValue('downstream_profile'));

                        if (level === 'L2') {

                            var gChildEntities = new GlideRecord('sn_grc_m2m_profile_profile');
                            gChildEntities.addEncodedQuery('downstream_profile.sn_risk_advanced_primary_risk_assessment_methodology=' + ram + '^upstream_profile=' + childEntities.getValue('downstream_profile') + '^downstream_profile.profile_class.name!=Legal Entity');

                            gChildEntities.query();
                            while (gChildEntities.next()) {

                                list.push(gChildEntities.getValue('downstream_profile'));
                            }
                        }
                    }
                }
            }
            // gs.info("Bharath :: " + JSON.stringify(list));
            return list;
        } catch (ex) {
            gs.error("SI UserEntitlementsUtils || checkWriteAccessForRiskTitles || " + ex.message);
        }

    },


    getAssessChallenge: function() {
        try {

            var userID = gs.getUserID();

            if (gs.hasRole('sn_risk.insight_readonly') || gs.hasRole('sn_risk.insight_risktype_irm') || gs.hasRole('sn_risk.insight_risk_id_team') || gs.hasRole('sn_risk.insight_superuser')) {

                return 'ram_risk_assessment.entity_1.profile_class.name=Enterprise^ORram_risk_assessment.entity_1.profile_class.name=Legal Entity^ORram_risk_assessment.entity_1.profile_class.name=Line of Business^ORram_risk_assessment.entity_1.profile_class.name=Sub-business Unit^ORram_risk_assessment.entity_1.profile_class.name=Business Group^ORram_risk_assessment.entity_1.profile_class.name=Risk Type';

            } else if (gs.hasRole('sn_risk.insight_front_line_facilitator') || gs.hasRole('sn_risk.insight_front_line_facilitator_support') || gs.hasRole('sn_risk.insight_readonly_front_line_facilitator')) {

                var list = this.checkAccessForRiskTitles(userID);

                return 'ram_risk_assessment.entity_1IN' + list;

            } else if (gs.hasRole('sn_risk.insight_business_irm')) {

                var list_business_irm = [];
                var risk_types = [];
                var ram = gs.getProperty('sn_grc.insight_risk_methodology');

                var entityList = new GlideRecord('sn_grc_m2m_users_entities');
                entityList.addQuery('u_user', userID);
                entityList.addQuery('u_app_id', "insight");
                entityList.query();

                while (entityList.next()) {

                    if (entityList.u_entity.profile_class.name == 'Risk Type') {
                        risk_types.push(entityList.getDisplayValue('u_entity'));
                    }

                    list_business_irm.push(entityList.getValue('u_entity'));

                    var level = entityList.u_entity.profile_class.category.name + '';

                    if (level === 'L2' || level === 'L3') {

                        var childEntities = new GlideRecord('sn_grc_m2m_profile_profile'); // entity relation **** sn_grc_m2m_profile_profile
                        childEntities.addEncodedQuery('downstream_profile.sn_risk_advanced_primary_risk_assessment_methodology=' + ram + '^upstream_profile=' + entityList.getValue('u_entity') + '^downstream_profile.profile_class.name!=Legal Entity');

                        childEntities.query();
                        while (childEntities.next()) {

                            list_business_irm.push(childEntities.getValue('downstream_profile'));

                            if (level === 'L2') {

                                var gChildEntities = new GlideRecord('sn_grc_m2m_profile_profile');
                                gChildEntities.addEncodedQuery('downstream_profile.sn_risk_advanced_primary_risk_assessment_methodology=' + ram + '^upstream_profile=' + childEntities.getValue('downstream_profile') + '^downstream_profile.profile_class.name!=Legal Entity');

                                gChildEntities.query();
                                while (gChildEntities.next()) {

                                    list_business_irm.push(gChildEntities.getValue('downstream_profile'));
                                }
                            }
                        }
                    }
                }

                return 'ram_risk_assessment.entity_1IN' + list_business_irm + '^ram_risk_assessment.risk.u_risk_type.u_parent.u_nameIN' + risk_types;

            } else
                return;

        } catch (ex) {
            gs.error("SI UserEntitlementsUtils || getRiskTitles || " + ex.message);
        }

    },



    type: 'WFInsightRiskClientUtils'
});]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;U819886&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2023-09-15 07:59:40&lt;/sys_created_on&gt;
        &lt;sys_id&gt;487ebc618715b9548b27cbb7cebb358f&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;29&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;WFInsightRiskClientUtils&lt;/sys_name&gt;
        &lt;sys_package display_value=""&gt;53f81621cb200200829cf865734c9c58&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value=""&gt;53f81621cb200200829cf865734c9c58&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_487ebc618715b9548b27cbb7cebb358f&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2024-02-04 17:24:10&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:36:36</sys_created_on>
        <sys_id>9a8638d983f01210c6695855eeaad37c</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>WFInsightRiskClientUtils</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_9a8638d983f01210c6695855eeaad37c</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:36:36</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
