<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>af449e25c32a2010242836046d40dda2</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;public&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.DataSeparatorGlobalUtil&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;This script include will be used to skip or force data separation logic to work.&amp;#13;
  This is mostly useful when roll up needs to be done by skipping the data separation logic. &lt;/description&gt;
        &lt;name&gt;DataSeparatorGlobalUtil&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var DataSeparatorGlobalUtil = Class.create();
  DataSeparatorGlobalUtil.isDataSeparatorPluginActive = function(){
      return GlidePluginManager.isActive('com.snc.data_separator') || GlidePluginManager.isActive('sn_ds');
  };
  DataSeparatorGlobalUtil.skipDataSeparation = function(){
      var isDataSeparationBeingSkippedForFirstTime = false;
      if(DataSeparatorGlobalUtil.isDataSeparatorPluginActive()){
          if(sn_ds.byPassDataSeparator != "true"){
              sn_ds.byPassDataSeparator = "true"; //sn_ds.byPassDataSeparator is a transaction variable (will be resetted for each request-response)
              isDataSeparationBeingSkippedForFirstTime = true;
          }
      }
      return isDataSeparationBeingSkippedForFirstTime;
  };
  DataSeparatorGlobalUtil.honourDataSeparation = function(){
      if(DataSeparatorGlobalUtil.isDataSeparatorPluginActive()){
          sn_ds.byPassDataSeparator = "false";
      }	
  };
  DataSeparatorGlobalUtil.needToSkipDataSeparation = function(){
      if(DataSeparatorGlobalUtil.isDataSeparatorPluginActive()){
          return sn_ds.byPassDataSeparator == "true";
      }
      return true;
  };
  DataSeparatorGlobalUtil.glideMultipleUpdateDataSeparationId = function(valueToSet , relatedEnityTableName, encodedQuery){
      if(!global.DataSeparatorGlobalUtil.isDataSeparatorPluginActive())
          return;
      
      var callerScope = gs.getCallerScopeName();
      if(callerScope != "sn_ds")
          return;
      
      if(sn_ds.DataSeparatorConstants.ALLOWED_RELATED_ENTITIES.indexOf(relatedEnityTableName)== -1)
          return;
      
      var glideMultipleUpdateRecord = new GlideMultipleUpdate(relatedEnityTableName)
      glideMultipleUpdateRecord.addQueryString(encodedQuery);
      for(var field in valueToSet){
          glideMultipleUpdateRecord.setValue(field,valueToSet[field]);
      }
      glideMultipleUpdateRecord.execute();
  };
  DataSeparatorGlobalUtil.updateMultipleDataSeparationId = function(valueToSet , relatedEnityTableName, encodedQuery, skipBr){
      if(!global.DataSeparatorGlobalUtil.isDataSeparatorPluginActive())
          return;
      
      var callerScope = gs.getCallerScopeName();
      if(callerScope != "sn_ds")
          return;
      
      if(sn_ds.DataSeparatorConstants.ALLOWED_RELATED_ENTITIES.indexOf(relatedEnityTableName)== -1)
          return;
      
      var glideRelEntityRecord = new GlideRecordSecure(relatedEnityTableName);
      glideRelEntityRecord.addEncodedQuery(encodedQuery);
      for(var field in valueToSet){
          glideRelEntityRecord.setValue(field,valueToSet[field]);
      }
      
      if(!gs.nil(skipBr) &amp;&amp; skipBr)
          glideRelEntityRecord.setWorkflow(false);
      
      glideRelEntityRecord.updateMultiple();
  };

  DataSeparatorGlobalUtil.disableWorkflow = function(glideRecord) {
	glideRecord.setWorkflow(false);
};
  ]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2021-02-25 12:37:45&lt;/sys_created_on&gt;
        &lt;sys_id&gt;af449e25c32a2010242836046d40dda2&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;46&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;DataSeparatorGlobalUtil&lt;/sys_name&gt;
        &lt;sys_package display_value="PPM Standard" source="com.snc.financial_planning_pmo"&gt;92ef82e747e64210cd4e1ce4316d43e3&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_af449e25c32a2010242836046d40dda2&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2023-04-20 08:46:03&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 09:17:58</sys_created_on>
        <sys_id>9800859d83341210c6695855eeaad3ed</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>DataSeparatorGlobalUtil</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_9800859d83341210c6695855eeaad3ed</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 09:17:58</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
