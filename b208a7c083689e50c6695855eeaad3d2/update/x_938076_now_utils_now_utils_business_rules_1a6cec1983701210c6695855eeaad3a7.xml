<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Restrict fields from Standard Change</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*undefined when async or display*/) {
    //If action is insert then reapply the readonly fields from the template as fields could be edited via the browser console.
    //Unable to check if the fields have changes because on the insert the changes are from the template and are valid changes.
 if (current.operation() === "insert")
  new StdChangeUtils().reapplyReadonlyTemplateFields(current);

 //If action is update then check that none of the read only fields have been edited and if they have then abort the action
 //and notify the user of the fields that cannot be edited.
 else if (current.operation() === "update") {
  var fieldNames = new StdChangeUtils().getReadOnlyFields();
  var modifiedFields = [];

  for (var i = 0; i < fieldNames.length; i++) {
   if(current[fieldNames[i]].changes())
    modifiedFields.push(current[fieldNames[i]].getLabel());
  }

  if (modifiedFields.length > 0) {
   gs.addErrorMessage(gs.getMessage("Fields {0} populated from a Standard Change Template cannot be modified.", modifiedFields.toString()));
   current.setAbortAction(true);
  }
 }
})(current, typeof previous != 'undefined' ?  previous : null);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:52:22</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>1a6cec1983701210c6695855eeaad3a7</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Restrict fields from Standard Change</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_1a6cec1983701210c6695855eeaad3a7</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:52:22</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=1a6cec1983701210c6695855eeaad3a7"/>
</record_update>
