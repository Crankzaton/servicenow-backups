<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition>current.component == "931154a48710230084aca571d5cb0bc3"</condition>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Check field is not empty</name>
        <order>99</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
 var abortTransaction = false;
 
 if(current.attrs.primary_fields == "") {
  gs.addErrorMessage(gs.getMessage("Please provide Primary fields"));
  abortTransaction = true;
 }
 
 if(current.attrs.secondary_user != "" && current.attrs.secondary_fields == "") {
  gs.addErrorMessage(gs.getMessage("Please provide Secondary fields"));
  abortTransaction = true;
 }
 
 function hasTwoLevelDotWalking(field) {
  var count = field.split(".").length;
  if (count > 2) {
   return true;
  }
  return false;
 }
 var primaryDotOK = true;
 var secondaryDotOK = true;
 if (typeof current.attrs.primary_fields != 'undefined') {
  var primaryArr = current.attrs.primary_fields.split(",");
  for (var i = 0; i < primaryArr.length; i++) {
   if (hasTwoLevelDotWalking(primaryArr[i])) {
    primaryDotOK = false;
    break;
   }
  }
 }
 if (typeof current.attrs.secondary_fields != 'undefined') {
  var secondaryArr = current.attrs.secondary_fields.split(",");
  for (var j = 0; j < secondaryArr.length; j++) {
   if (hasTwoLevelDotWalking(secondaryArr[j])) {
    secondaryDotOK = false;
    break;
   }
  }
 }
 if (!primaryDotOK || !secondaryDotOK) {
  gs.addErrorMessage(gs.getMessage("Primary fields and secondary fields support one level of dot-walking"));
  abortTransaction = true;
 }
 
 if(abortTransaction == true) {
  current.setAbortAction(true);
 }

})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:52:48</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>ac8ca85983701210c6695855eeaad346</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Check field is not empty</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_ac8ca85983701210c6695855eeaad346</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:52:48</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=ac8ca85983701210c6695855eeaad346"/>
</record_update>
