<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>1b5bec5183701210c6695855eeaad351</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules"&gt;
    &lt;x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE"&gt;
        &lt;abort_action&gt;false&lt;/abort_action&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;action_delete&gt;false&lt;/action_delete&gt;
        &lt;action_insert&gt;true&lt;/action_insert&gt;
        &lt;action_query&gt;false&lt;/action_query&gt;
        &lt;action_update&gt;true&lt;/action_update&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;add_message&gt;false&lt;/add_message&gt;
        &lt;advanced&gt;true&lt;/advanced&gt;
        &lt;change_fields&gt;false&lt;/change_fields&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;collection/&gt;
        &lt;condition/&gt;
        &lt;description/&gt;
        &lt;execute_function&gt;true&lt;/execute_function&gt;
        &lt;filter_condition/&gt;
        &lt;is_rest&gt;false&lt;/is_rest&gt;
        &lt;message/&gt;
        &lt;name&gt;Prevent prefix collisions&lt;/name&gt;
        &lt;order&gt;100&lt;/order&gt;
        &lt;priority&gt;100&lt;/priority&gt;
        &lt;rest_method/&gt;
        &lt;rest_method_text/&gt;
        &lt;rest_service/&gt;
        &lt;rest_service_text/&gt;
        &lt;rest_variables/&gt;
        &lt;role_conditions/&gt;
        &lt;script&gt;&lt;![CDATA[/**
* Prevents creating sys_number records with colliding prefix:
* - Same prefix
* - Prefix ending with a number and same alphanumerical prefix as an existing record
* - We get the alphanumerical prefix by selecting all characters up to the last non-digit one
* - On the same table family, TASK and TASK67 collide, TASK and TASK3b5 don't
*/

function onBefore(current, previous) {
 var tableBase = new TableUtils(current.category).getAbsoluteBase();
 var tableFamily = new TableUtils(tableBase).getAllExtensions();
 tableFamily = tableFamily.toArray().join(',');
 //We trim the last digits
 var stemMatcher = /^(.*\D+)\d*$/i.exec(current.prefix);
 var stem = stemMatcher ? stemMatcher[1] : '';
 var potentialCollisions = getPotentialCollisions(stem, current.sys_id, tableFamily);
 while (potentialCollisions.next()) {
  if (isCollision(stem, potentialCollisions.prefix)) {
   msg = gs.getMessage('The prefix {0} collides with the prefix of an existing record', current.prefix);
   gs.addErrorMessage(msg);
   current.setAbortAction(true);
  } 
 }
 
 //Get potential collisions for the given stem
 //i.e records with prefix that starts with the same stem, other than the current one
 function getPotentialCollisions(stem, sys_id, tableFamily) {
  var numbers = new GlideRecord('sys_number');
  numbers.addQuery('prefix', 'STARTSWITH', stem);
  numbers.addQuery('sys_id', '!=', sys_id);
  numbers.addQuery('category', 'IN', tableFamily);
  numbers.query();
  return numbers;
 }
 
 //returns true if the prefix is a collision for the given stem
 //i.e if it is the stem followed by any number
 function isCollision(stem, prefix) {
  var re = new RegExp("^" + stem + "\\d*$", "i");
  return re.test(prefix);
 }
}]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;x_938076_now_utils_now_utils_business_rules&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2024-09-21 07:47:48&lt;/sys_created_on&gt;
        &lt;sys_domain&gt;global&lt;/sys_domain&gt;
        &lt;sys_domain_path&gt;/&lt;/sys_domain_path&gt;
        &lt;sys_id&gt;1b5bec5183701210c6695855eeaad351&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;Prevent prefix collisions&lt;/sys_name&gt;
        &lt;sys_overrides/&gt;
        &lt;sys_package display_value="Now Utils" source="x_938076_now_utils"&gt;b208a7c083689e50c6695855eeaad3d2&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Now Utils"&gt;b208a7c083689e50c6695855eeaad3d2&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;x_938076_now_utils_now_utils_business_rules_1b5bec5183701210c6695855eeaad351&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2024-09-21 07:47:48&lt;/sys_updated_on&gt;
        &lt;template/&gt;
        &lt;when&gt;before&lt;/when&gt;
    &lt;/x_938076_now_utils_now_utils_business_rules&gt;
    &lt;sys_translated_text action="delete_multiple" query="documentkey=1b5bec5183701210c6695855eeaad351"/&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:57:21</sys_created_on>
        <sys_id>978d289d83701210c6695855eeaad386</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Prevent prefix collisions</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_978d289d83701210c6695855eeaad386</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:57:21</sys_updated_on>
        <tablename>sys_script</tablename>
    </sys_metadata_link>
</record_update>
