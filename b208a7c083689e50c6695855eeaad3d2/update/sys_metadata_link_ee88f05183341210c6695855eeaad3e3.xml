<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>8e5133df535c0110b846ddeeff7b122a</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;sn_app_intake.AppIntakeUtils&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;Common utilities used in App Intake plugin&lt;/description&gt;
        &lt;name&gt;AppIntakeUtils&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var AppIntakeUtils = Class.create();
AppIntakeUtils.prototype = {
    initialize: function() {
    },

	/**
	 * Checks if App Engine Studio plugin is installed on instance
	 * @param {string} appId
	 * @returns {boolean}
	 */
	isAesInstalled: function(appId) {
		return GlidePluginManager.isActive('com.snc.app-engine-studio'); // AES_PLUGIN_ID: 'com.snc.app-engine-studio',
	},
	
	/**
	 * Creates JSON object from GlideRecord Object
	 * @param {GlideRecord} gr
	 * @param {Array} [fields] if fields is not passed in, function will return all fields
	 * @returns {Object}
	 */
    getObjectFromGlideRecord: function(gr, fields) {
		if (!gr) {
			return {};
		}

		var isNonEmptyArray = Array.isArray(fields) &amp;&amp; fields.length &gt; 0;
		var resultObj = {};
		
        if (isNonEmptyArray) {
			fields.forEach(function(field) {
				resultObj[field] = gr.getValue(field);
			});
		} else {
			for (var prop in gr) {
				if (gr[prop]) {
					resultObj[prop] = gr.getValue(prop);
				}
			}
		}

		return resultObj;
    },

    type: 'AppIntakeUtils'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2021-12-14 02:08:56&lt;/sys_created_on&gt;
        &lt;sys_id&gt;8e5133df535c0110b846ddeeff7b122a&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;29&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;AppIntakeUtils&lt;/sys_name&gt;
        &lt;sys_package display_value="Application Intake" source="sn_app_intake"&gt;3d3c2505c3e22010b83971e54440dd75&lt;/sys_package&gt;
        &lt;sys_policy&gt;read&lt;/sys_policy&gt;
        &lt;sys_scope display_value="Application Intake"&gt;3d3c2505c3e22010b83971e54440dd75&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_8e5133df535c0110b846ddeeff7b122a&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2022-01-10 18:39:26&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:45:21</sys_created_on>
        <sys_id>ee88f05183341210c6695855eeaad3e3</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>AppIntakeUtils</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_ee88f05183341210c6695855eeaad3e3</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:45:21</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
