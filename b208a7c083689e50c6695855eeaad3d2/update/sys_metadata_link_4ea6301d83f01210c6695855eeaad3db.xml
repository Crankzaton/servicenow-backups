<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>53df3f2f0fe41110886e67bcfa767ec4</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;sn_appclient.AppClientGCFUtil&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;GCF utility class for App Manager&lt;/description&gt;
        &lt;name&gt;AppClientGCFUtil&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var AppClientGCFUtil = Class.create();
AppClientGCFUtil.prototype = {
    initialize: function() {
        this.GCF_CATEGORY = "app_manager";
        this.eventsThatNeedsRelease = ["installation_time", "page_load_time", "first_load"];
        this.release = gs.getProperty("glide.buildname");
    },

    recordEvent: function(instrumentationPoint, instrumentationEvent, data) {
        try{
            var sampleMap = new GCFSampleMap();
            for(var key in data)
                sampleMap.put(key, data[key]);

            sampleMap = this.addRoleIfNeeded(instrumentationPoint, instrumentationEvent, sampleMap);

            if(this.eventsThatNeedsRelease.indexOf(instrumentationEvent) &gt; -1)
                sampleMap.put("release", this.release);
            GCFCollector.recordUsageEvent(this.GCF_CATEGORY, instrumentationPoint, instrumentationEvent, sampleMap);
        } catch(e) {
            gs.debug("AppClientGCFUtil: Exception encountered while capturing analytics. Exception Info: " + JSON.stringify(e));
        }
    },

    addRoleIfNeeded: function(instrumentationPoint, instrumentationEvent, sampleMap) {
        if(instrumentationEvent != "app_install")
            return sampleMap;
        var role = "";
        if(gs.hasRole("maint"))
            role = "Maint";
        else if(gs.hasRole("admin"))
            role = "Admin";
        else if(gs.hasRole("sn_appclient.app_client_user"))
            role = "App Client User";
        sampleMap.put("installed_by", role);
        return sampleMap;
    },

    recordBatchInstallAnalytics: function(payload) {
        var productId = payload.product_id;
        var collectionData = {};
        collectionData.installation_type = "Batch Install";
        collectionData.is_search_applied = payload.isSearchApplied;
        collectionData.is_filter_applied = payload.isFilterApplied;
        this.recordEvent("install", "product_install", {"product_id": productId});
        this.captureBatchInstallAnalytics(collectionData, payload.packages);
    },

    captureBatchInstallAnalytics: function(collectionData, appsList) {
        for(var i=0;appsList &amp;&amp; i&lt;appsList.length;i++) {
            var app = appsList[i];
            if(app.requested_customization_version)
                app.is_customization_version = true;
            collectionData.app_id = app.source_app_id || app.id;
            collectionData.entity_type = app.is_plugin ? "Plugin" : "Store Application";
            collectionData.has_customization = app.is_customization_version == true;
            new AppClientGCFUtil().recordEvent("install", "app_install", collectionData);
        }
    },

    recordPageLoadAnalytics: function(payload) {
        payload.time = this.getTimeRange(payload.time);
        this.recordEvent("apps_landing", "page_load_time", payload);
    },

    getTimeRange: function(time) {
        if(time &lt; 1)
            return "0-1 secs";
        else if(time&lt;3)
            return "1-3 secs";
        else if(time&lt;5)
            return "3-5 secs";
        else if(time&lt;10)
            return "5-10 secs";
        else
            return "10+ secs";
    },

    type: 'AppClientGCFUtil'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;maint&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2022-07-14 04:03:29&lt;/sys_created_on&gt;
        &lt;sys_id&gt;53df3f2f0fe41110886e67bcfa767ec4&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;6&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;AppClientGCFUtil&lt;/sys_name&gt;
        &lt;sys_package display_value="Scoped App Client" source="sn_appclient"&gt;781f36a96fef21005be8883e6b3ee43d&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Scoped App Client"&gt;781f36a96fef21005be8883e6b3ee43d&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_53df3f2f0fe41110886e67bcfa767ec4&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;maint&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2022-07-14 04:29:43&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:37:08</sys_created_on>
        <sys_id>4ea6301d83f01210c6695855eeaad3db</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>AppClientGCFUtil</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_4ea6301d83f01210c6695855eeaad3db</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:37:08</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
