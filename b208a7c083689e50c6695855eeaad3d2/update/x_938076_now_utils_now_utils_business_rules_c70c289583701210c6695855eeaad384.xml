<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Cascade closure of Problem Tasks</name>
        <order>101</order>
        <priority>500</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[var bypassCanCreatePTaskCheck; // Adding this var to pass a flag to subsequent BR to relax its check if current BR is originator. 
(function executeRule(current, previous /*null when async*/ ) {

    // Applies only on Ptask movement to a) Open (Non-closed) state target problem b) Closed state problem. The below if kicks in only in  
    // cases of duplicate marking. - DEF0190002 
    if (!current.duplicate_of.nil() && current.resolution_code + '' === 'duplicate') {
        // check if Ptask movement is indeed specified on Problem properties else ignore 
  var problemUtil = new ProblemV2Util();
  var recordsToMove = gs.getProperty("problem.duplicate.records_to_move");
  var recordsMap = problemUtil.dotCommaToMap(recordsToMove.split(","));
       if (recordsMap.hasOwnProperty('problem_task') && recordsMap['problem_task'] + '' === 'problem') {
            bypassCanCreatePTaskCheck = true;
            var originalProblemGr = current.duplicate_of.getRefRecord();
            // Only close if Target problem is closed and property for cancelling is enabled.
            if (originalProblemGr.state + '' === ProblemState.STATES.CLOSED &&
                gs.getProperty("problem.closed.cancel_open_tasks") == "true") {
                gs.debug("Initiating moveAndCloseRecords from BR 'Cascade closure of Problem Tasks' bypassCanCreatePTaskCheck set to True");
                problemUtil.moveAndCloseRecords('problem_task', 'problem', current, originalProblemGr);
            } else {
                problemUtil.moveRecords('problem_task', 'problem', current, originalProblemGr);
            }
        } else {
   // OOTB we are shipping this as enabled
            gs.debug("Skipping movement of PTasks as Problem properties does not have Ptask movement enabled");
        }
    }

    // Retained as-is for Cases of simple closure and not duplicate marking. 
    if (gs.getProperty("problem.closed.cancel_open_tasks") == "true") {
        var PRB_TASK_CLOSED_STATE = ProblemTaskState.States.CLOSED;
        var problemTaskGr = new GlideRecord("problem_task");
        problemTaskGr.addQuery("problem", current.getUniqueValue());
        problemTaskGr.addActiveQuery();
        problemTaskGr.setValue("state", PRB_TASK_CLOSED_STATE);
        problemTaskGr.setValue("close_code", "canceled");
        problemTaskGr.setValue("close_notes", gs.getMessage("Problem Task is Canceled based on closure of {0}.", current.getDisplayValue()));
        problemTaskGr.updateMultiple();
    }
})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:50:46</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>c70c289583701210c6695855eeaad384</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Cascade closure of Problem Tasks</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_c70c289583701210c6695855eeaad384</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:50:46</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=c70c289583701210c6695855eeaad384"/>
</record_update>
