<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>1394e702872433000f83d82548cb0bf4</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.IMIdeaSearchUtils&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;IMIdeaSearchUtils&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var IMIdeaSearchUtils = Class.create();
IMIdeaSearchUtils.prototype = {
	initialize: function() {
	},
	getWidgetIdById: function(id){
		var widgetGr = new GlideRecord("sp_widget");
		var widgetId = '';
		widgetGr.addQuery("id", "idea-typeahead-search");
		widgetGr.query();
		if(widgetGr.next())
			widgetId =  widgetGr.getValue("sys_id");
		return widgetId;
	},

	getSearchResults: function(csr, searchObj) {
		var contextualSearchSourceGR = new GlideRecord("sp_search_source");
		contextualSearchSourceGR.addQuery("sys_id", "IN", csr);
		contextualSearchSourceGR.query();
		while (contextualSearchSourceGR.next())
			return this.getResults(contextualSearchSourceGR, searchObj);
	},
	
	getActiveMlSolution : function(moduleId) {
		var activeSolution = null;
		// Initially check whether the plugin is active
		if(GlidePluginManager.isActive("com.glide.platform_ml")) {
			if(gs.getProperty('com.snc.innovation_management.predictive_analyisis_for_idea', 'false') == 'false')
				return activeSolution; //Returning null if predictive analysis is disabled
			
			// Fetch the respective module's solution definition name
			var ideaModule = new GlideRecord('im_module');
			ideaModule.addQuery("id", moduleId);
			ideaModule.query();
			
			if(ideaModule.next()) {
				var solutionDefId = ideaModule.getValue("solution_def");
				var mlSolution = new GlideRecord("ml_capability_definition_similarity");
				mlSolution.addQuery("sys_id", solutionDefId);
				mlSolution.query();
				
				if(mlSolution.next()) {
					var solutionName = mlSolution.getValue("solution_name");
					activeSolution =  sn_ml.SimilaritySolutionStore.get(solutionName)
				}
			}
		}
		
		return activeSolution;
	},
	
	getResults: function(gr, searchObj) {
		var searchResults = [];
		var activeSolution;
		if (gr.is_scripted_source) {
			activeSolution = this.getActiveMlSolution(input.moduleInfo.id);
			var results = [];
			
			// ML gets triggered only if there is an active solution provided for the module
			if(activeSolution) {
				var mlSearch = new IMSimilarIdeasML(input.moduleInfo, activeSolution);
				results = mlSearch.getSimilarIdeas(input.query);
			} else {
				var evaluator = new GlideScopedEvaluator();
				results = evaluator.evaluateScript(gr, "data_fetch_script", searchObj);
			}

			if (results) {
				results.forEach(function(item) {
					if (gr.getElement("advanced_typeahead_config").getDisplayValue() == "true")
						item.templateID = "sp-typeahead-" + gr.getValue("id") + ".html";
					else {
						item.glyph = gr.getValue("typeahead_glyph");
						item.linkToPage = gr.getValue("page");
					}
					searchResults.push(item);
				});
			}

		}
		return searchResults;
	},

	type: 'IMIdeaSearchUtils'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2019-04-03 09:05:34&lt;/sys_created_on&gt;
        &lt;sys_id&gt;1394e702872433000f83d82548cb0bf4&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;23&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;IMIdeaSearchUtils&lt;/sys_name&gt;
        &lt;sys_package display_value="Innovation Management" source="com.snc.innovation_management"&gt;cf2056ab47e64210cd4e1ce4316d4313&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_1394e702872433000f83d82548cb0bf4&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2022-10-04 09:39:44&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:10:34</sys_created_on>
        <sys_id>019074d583b01210c6695855eeaad3e7</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>IMIdeaSearchUtils</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_019074d583b01210c6695855eeaad3e7</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:10:34</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
