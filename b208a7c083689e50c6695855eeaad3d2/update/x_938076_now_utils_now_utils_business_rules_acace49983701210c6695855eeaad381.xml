<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition>current.element.nil() &amp;&amp; gs.getSession().isInteractive() &amp;&amp; (current.attributes.changes() || sys_action == 'insert') &amp;&amp; !gs.nil(current.name)</condition>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Add no_text_index Attribute</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous) {
    var NO_TEXT_INDEX = 'no_text_index';
    var dbObjectManager = GlideDBObjectManager.get();
    var currentAttributes = new GlideAttributes(current.attributes);
    var parentTable = dbObjectManager.getBase(current.name);
    if (parentTable !== current.name) {
        var parentTableDescriptor = GlideTableDescriptor.get(parentTable);
        if (parentTableDescriptor != null && parentTableDescriptor.isValid()) {
            var ed = parentTableDescriptor.getED();
            if (ed != null && ed.getBooleanAttribute(NO_TEXT_INDEX)) {
                if ("true" !== currentAttributes.getAttribute(NO_TEXT_INDEX)) {
                    currentAttributes.setAttribute(NO_TEXT_INDEX, "true");
                    current.attributes = currentAttributes.serializeAttributes();
                }
            }
        }
    }

    var previousAttributes = new GlideAttributes(previous.attributes);
    var previousVal = previousAttributes.getAttribute(NO_TEXT_INDEX);
    var currentVal = currentAttributes.getAttribute(NO_TEXT_INDEX);

    if (previousVal == currentVal)
        return;

    if (!gs.nil(currentVal)) {
        var abortMessage;

        if (dbObjectManager.isSoloClass(current.name))
            abortMessage = "no_text_index attribute should Not be added to solo table. Please use text index instead.";

        else if (dbObjectManager.isBaseClass(current.name))
            abortMessage = "no_text_index attribute should Not be added to root table. Please use text index instead.";

        else if (!new GlideTSUtil().hasTextIndex(current.name))
            abortMessage = "no_text_index attribute should Not be added to a table without text index enabled.";
        if (!gs.nil(abortMessage)) {
            gs.addErrorMessage(abortMessage);
            current.setAbortAction(true);
            return;
        }
    }


    var childTableNames = dbObjectManager.getTableExtensions(current.name);
    if (childTableNames == null || childTableNames.size() == 0)
        return;

    var shouldRemoveNoTextIndexAttribute = gs.nil(currentVal) && previousVal;
    var message = (shouldRemoveNoTextIndexAttribute ? 'Removing' : 'Updating') + ' no_text_index attribute on all child tables';
    gs.addInfoMessage(message);
    gs.info(message);

    var um = new GlideUpdateManager2();
    var childTableEntries = new GlideRecord('sys_dictionary');
    childTableEntries.addQuery('name', childTableNames);
    childTableEntries.addQuery('element', '');
    childTableEntries.query();
    while (childTableEntries.next()) {
        var currentDBAttributes = new GlideAttributes(childTableEntries.attributes);
        var updatedAttributes = new GlideAttributes(childTableEntries.attributes);
        if (shouldRemoveNoTextIndexAttribute)
            updatedAttributes.removeAttribute(NO_TEXT_INDEX);
        else
            updatedAttributes.setAttribute(NO_TEXT_INDEX, currentVal);

        var currentAttributesSerialized = currentDBAttributes.serializeAttributes();
        var updatedAttributesSerialized = updatedAttributes.serializeAttributes();
        if (currentAttributesSerialized !== updatedAttributesSerialized) {
            childTableEntries.setValue("attributes", updatedAttributesSerialized);
            childTableEntries.setWorkflow(false);
            childTableEntries.updateLazy();
            um.saveRecord(childTableEntries);
        }
    }
})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:53:20</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>acace49983701210c6695855eeaad381</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Add no_text_index Attribute</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_acace49983701210c6695855eeaad381</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:53:20</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=acace49983701210c6695855eeaad381"/>
</record_update>
