<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>052b741053f8011097a3ddeeff7b129f</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;sn_decision_table.AnswerElementRepository&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;AnswerElementRepository&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var AnswerElementRepository = Class.create();

AnswerElementRepository.SYS_DECISION_MULTI_RESULT_ELEMENT = "sys_decision_multi_result_element";
AnswerElementRepository.SUCCESS = "Success";
AnswerElementRepository.FAIL = "Failure";
AnswerElementRepository.requiredAnswerElementFields = [
    "internal_type", "label", "element"
];
AnswerElementRepository.ERROR_CODES = {
    ANSWER_ELEMENT_CREATE_FAILED: 'ANSWER_ELEMENT_CREATE_FAILED',
    ANSWER_ELEMENT_UPDATE_FAILED: 'ANSWER_ELEMENT_UPDATE_FAILED',
    ANSWER_ELEMENT_DELETE_FAILED: 'ANSWER_ELEMENT_DELETE_FAILED',
};

AnswerElementRepository.prototype = {
    initialize: function() {},

    /**
     * Returns list of answer element records for a decision table
     * @param decisionTableSysId
     * @returns {GlideRecord}
     */
    getAnswerElementsOfDecisionTable: function(decisionTableSysId, delta) {
        // using GlideRecord because we already have a access check in the resolver and avoid display value issues for delegated developer
        var answerElementGr = new GlideRecord(AnswerElementRepository.SYS_DECISION_MULTI_RESULT_ELEMENT);
        var query = answerElementGr.addQuery("model", decisionTableSysId);
        if (delta &amp;&amp; delta.trim() != '')
            query.addOrCondition("model", delta);

        answerElementGr.orderBy("order");
        answerElementGr.query();

        return answerElementGr;
    },

    /**
     * Creates decision answer element with given details
     * @param decisionAnswerElement
     * @returns {Object}
     */
    createAnswerElement: function(decisionAnswerElement) {
        var validation = DecisionTableUtil.validateRequiredFieldsForDecisionArtifact(decisionAnswerElement, AnswerElementRepository.requiredAnswerElementFields);
        if (validation.status === AnswerElementRepository.FAIL) {
            return {
                status: AnswerElementRepository.FAIL,
                errorCode: AnswerElementRepository.ERROR_CODES.ANSWER_ELEMENT_CREATE_FAILED,
                errorMessage: validation.message
            };
        }

        var dt = new sn_dt.DecisionTableBuilderAPI();
        var response = dt.createAnswerElement(decisionAnswerElement);
        if (response.status === AnswerElementRepository.FAIL) {
            return {
                status: AnswerElementRepository.FAIL,
                errorCode: AnswerElementRepository.ERROR_CODES.ANSWER_ELEMENT_CREATE_FAILED,
                errorMessage: 'Creation of answer element was not successful'
            };
        }
        var answerElementGR = response.record;
        return this._getAnswerElementDetails(answerElementGR);
    },

    /**
     * Updates decision answer element with given sys_id and details
     * @param sysId
     * @param decisionAnswerElement
     * @returns {Object}
     */
    updateAnswerElement: function(sysId, decisionAnswerElement) {
        if (!sysId &amp;&amp; !sysId.trim()) {
            return {
                status: AnswerElementRepository.FAIL,
                errorCode: AnswerElementRepository.ERROR_CODES.ANSWER_ELEMENT_UPDATE_FAILED,
                errorMessage: 'Invalid sysId'
            };
        }
        var validation = DecisionTableUtil.validateRequiredFieldsForDecisionArtifact(decisionAnswerElement, AnswerElementRepository.requiredAnswerElementFields);
        if (validation.status === AnswerElementRepository.FAIL) {
            return {
                status: AnswerElementRepository.FAIL,
                errorCode: AnswerElementRepository.ERROR_CODES.ANSWER_ELEMENT_UPDATE_FAILED,
                errorMessage: validation.message
            };
        }
        var dt = new sn_dt.DecisionTableBuilderAPI();
        var response = dt.updateAnswerElement(sysId, decisionAnswerElement);
        if (response.status === AnswerElementRepository.FAIL) {
            return {
                status: AnswerElementRepository.FAIL,
                errorCode: AnswerElementRepository.ERROR_CODES.ANSWER_ELEMENT_UPDATE_FAILED,
                errorMessage: 'Update of answer element was not successful'
            };
        }
        var answerElementGR = response.record;
        return this._getAnswerElementDetails(answerElementGR);
    },

    /**
     * Deletes decision answer element with given sys_id
     * @param decisionAnswerElementSysId
     * @returns {Object}
     */
    deleteAnswerElement: function(decisionAnswerElementSysId) {
        var decisionAnswerElementGr = new GlideRecord(AnswerElementRepository.SYS_DECISION_MULTI_RESULT_ELEMENT);
        const deleteResponse = {
            sys_id: decisionAnswerElementSysId,
        };
        decisionAnswerElementGr.get(decisionAnswerElementSysId);
        if (decisionAnswerElementGr.isValidRecord() === false) {
            deleteResponse.modified_count = 0;
        }
        var dt = new sn_dt.DecisionTableBuilderAPI();
        var response = dt.deleteAnswerElement(decisionAnswerElementSysId);

        if (response.status === AnswerElementRepository.FAIL) {
            return {
                status: AnswerElementRepository.FAIL,
                errorCode: AnswerElementRepository.ERROR_CODES.ANSWER_ELEMENT_DELETE_FAILED,
                errorMessage: 'Delete of answer element was not successful'
            };
        } else {
            deleteResponse.modified_count = 1;
        }

        return deleteResponse;
    },

    _getAnswerElementDetails: function(answerElementRecord) {
        var answerElementDetails = {};

        answerElementDetails.sys_class_name = {
            value: answerElementRecord.getValue('sys_class_name')
        };
        answerElementDetails.sys_id = {
            value: answerElementRecord.getValue('sys_id')
        };
        answerElementDetails.internal_type = {
            value: answerElementRecord.getValue('internal_type'),
            display_value: answerElementRecord.internal_type.getDisplayValue()
        };
        answerElementDetails.model = {
            value: answerElementRecord.getValue('model'),
            display_value: answerElementRecord.model.getDisplayValue()
        };
        answerElementDetails.parent = {
            value: answerElementRecord.getValue('parent'),
            display_value: answerElementRecord.parent.getDisplayValue()
        };
        answerElementDetails.reference = {
            value: answerElementRecord.getValue('reference'),
            display_value: answerElementRecord.getDisplayValue('reference')
        };
        answerElementDetails.reference_qual_condition = {
            value: answerElementRecord.getValue('reference_qual_condition'),
            display_value: answerElementRecord.getDisplayValue('reference_qual_condition')
        };
        answerElementDetails.sys_scope = {
            value: answerElementRecord.getValue('sys_scope'),
            display_value: answerElementRecord.getDisplayValue('sys_scope')
        };
        answerElementDetails.comments = {
            value: answerElementRecord.getValue('comments'),
        };
        answerElementDetails.element = {
            value: answerElementRecord.getValue('element')
        };
        answerElementDetails.max_length = {
            value: answerElementRecord.getValue('max_length'),
        };
        answerElementDetails.name = {
            value: answerElementRecord.getValue('name')
        };
        answerElementDetails.label = {
            value: answerElementRecord.getValue('label'),
        };
        answerElementDetails.active = {
            value: !!(parseInt(answerElementRecord.getValue('active'), 10))
        };
        answerElementDetails.order = {
            value: answerElementRecord.getValue('order')
        };
        answerElementDetails.choice = {
            value: answerElementRecord.getValue('choice'),
            display_value: answerElementRecord.getDisplayValue('choice')
        };
        answerElementDetails.choice_table = {
            value: answerElementRecord.getValue('choice_table'),
            displayValue: answerElementRecord.getDisplayValue('choice_table')
        };
        answerElementDetails.choice_field = {
            value: answerElementRecord.getValue('choice_field'),
            displayValue: answerElementRecord.getDisplayValue('choice_field')
        };

        return answerElementDetails;
    },

    type: 'AnswerElementRepository'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2021-12-29 01:30:43&lt;/sys_created_on&gt;
        &lt;sys_id&gt;052b741053f8011097a3ddeeff7b129f&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;4&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;AnswerElementRepository&lt;/sys_name&gt;
        &lt;sys_package display_value="Decision Table Builder" source="sn_decision_table"&gt;13aa96a16bcefa78b16cc99ed9e4f1f4&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Decision Table Builder"&gt;13aa96a16bcefa78b16cc99ed9e4f1f4&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_052b741053f8011097a3ddeeff7b129f&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2023-05-03 11:27:20&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:09:14</sys_created_on>
        <sys_id>ed40bc5583b01210c6695855eeaad3cb</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>AnswerElementRepository</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_ed40bc5583b01210c6695855eeaad3cb</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:09:14</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
