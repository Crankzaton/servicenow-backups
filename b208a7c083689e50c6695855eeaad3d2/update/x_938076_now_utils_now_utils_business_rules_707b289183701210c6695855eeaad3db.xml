<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Clean up TaskToCI records</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
 
 
 var policy_id = current.policy_id;
 var taskToCiTable = '';
 if (!GlideStringUtil.nil(policy_id)) {
  taskToCiTable = current.policy_id.cmdb_policy_type.task_to_ci_table.name + '';
  var tableGr = new GlideRecord(taskToCiTable);
  if (!tableGr.isValid()) {
   gs.error('Cannot clean up task to CI records. Invalid task to CI table ' + taskToCiTable);
   taskToCiTable = '';
  }
 }

 if (!GlideStringUtil.nil(policy_id) && taskToCiTable) {
  var helper  = new CMDBDataManagerHelper();
  var policyType = '' + current.policy_id.cmdb_policy_type;
  
  if (policyType === helper.CMDB_POLICY_ARCHIVE_SYS_ID 
   || policyType === helper.CMDB_POLICY_DELETE_SYS_ID 
   || policyType === helper.CMDB_POLICY_DELETE_RELATED_ITEM_SYS_ID) {

   var getTaskToCiCount = function() {
    var grAgg = new GlideAggregate(taskToCiTable);
    grAgg.addQuery(helper.CMDB_DATA_MANAGEMENT_TASK, current.sys_id);
    grAgg.addAggregate(helper.COUNT);
    grAgg.query();

    if(grAgg.next()){
     return grAgg.getAggregate(helper.COUNT);
    }
    return 0;
   };

   var sysIdField = (policyType === helper.CMDB_POLICY_DELETE_RELATED_ITEM_SYS_ID) ? 'related_entry_ci' : 'ci';
   //setup inputs
   var fileName = 'associated_cis.txt';
   var contentType = 'text/csv';
   var content = '';
   var sysAttachUtility = new sn_cmdb.CMDBAttachmentUtil();
   var taskToCiGr = null;
   var taskToCiCount = getTaskToCiCount();
   var documentChunkSize = parseInt(gs.getProperty('glide.cmdb.data_manager.sys_attachment_size', '100000'));
   var fromWindow = 0, toWindow = documentChunkSize;
   while (fromWindow < taskToCiCount) {
    content = '';
    taskToCiGr = new GlideRecord(taskToCiTable);
    taskToCiGr.addQuery('cmdb_data_management_task', current.sys_id);
    taskToCiGr.orderBy(helper.SYS_ID);
    taskToCiGr.chooseWindow(fromWindow, toWindow);
    taskToCiGr.query();
    while(taskToCiGr.next()) {
     content = content + taskToCiGr.getValue(sysIdField) + ',';
    }
    fromWindow = toWindow;
    toWindow += documentChunkSize;
    if (fromWindow >= taskToCiCount)
     content = content.slice(0, -1); //remove `,` in the last batch
    try {
     sysAttachUtility.streamContent(content); //stream all the content before flushing
    } catch (e) {
     gs.error('Error while streaming attachment content, details: '+JSON.stringify(e));
     content = null;
     return;
    }
   }
   //create sys_attachment
   if (JSUtil.notNil(content)) {
    try {
     sysAttachUtility.flushAttachment(current, fileName, contentType);
    } catch (e) {
     gs.error('Error while creating an attachment file, details: '+JSON.stringify(e));
     return;
    }
   }
  }
 }

 // Delete all records
 if (taskToCiTable) {
  var deltaskToCiGr = new GlideRecord(taskToCiTable);
  deltaskToCiGr.addQuery('cmdb_data_management_task', current.sys_id);
  deltaskToCiGr.deleteMultiple();
 }
})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:48:09</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>707b289183701210c6695855eeaad3db</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Clean up TaskToCI records</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_707b289183701210c6695855eeaad3db</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:48:09</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=707b289183701210c6695855eeaad3db"/>
</record_update>
