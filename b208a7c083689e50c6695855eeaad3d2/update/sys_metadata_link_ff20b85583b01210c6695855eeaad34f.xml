<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>0014680e375221001a8326877e41f17b</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.ProjectWorkbenchUtil&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;Workbench utility for generic functions&lt;/description&gt;
        &lt;name&gt;ProjectWorkbenchUtil&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var monthNames = ['NUL', gs.getMessage('Jan'), gs.getMessage('Feb'), gs.getMessage('Mar'), gs.getMessage('Apr'), gs.getMessage('May'), gs.getMessage('Jun'), gs.getMessage('Jul'), gs.getMessage('Aug'), gs.getMessage('Sep'), gs.getMessage('Oct'), gs.getMessage('Nov'), gs.getMessage('Dec')];

var ProjectWorkbenchUtil = Class.create();

ProjectWorkbenchUtil.empty = function(value) {
	return JSUtil.nil(value) || value.length == 0;
};

ProjectWorkbenchUtil.getName = function(gr) {
	if ( ProjectWorkbenchUtil.empty(gr.getValue("short_description")) )
		return gr.getDisplayValue("number");
	else
		return gr.getDisplayValue("short_description");
};	

ProjectWorkbenchUtil.getStartDateToUse = function(phase) {
	var calculationType = phase.top_task.calculation_type;
	var startDateTouse = phase.start_date;
	if (calculationType != "manual" &amp;&amp; !JSUtil.nil(phase.work_start) &amp;&amp; phase.work_start != 0)
		startDateTouse = phase.work_start;
	return startDateTouse;
};

ProjectWorkbenchUtil.getEndDateToUse = function(phase) {
	var calculationType = phase.top_task.calculation_type;
	var endDateTouse = phase.end_date;
	if (calculationType != "manual" &amp;&amp; !JSUtil.nil(phase.work_end) &amp;&amp; phase.work_end != 0)
		endDateTouse = phase.work_end;
	return endDateTouse;
};

ProjectWorkbenchUtil.monthsBetweenDates = function (startTimeString, endTimeString) {
	var startMonth = ProjectWorkbenchUtil.monthDisplay(startTimeString);
	var startYear = ProjectWorkbenchUtil.yearDisplay(startTimeString);
	var endMonth = ProjectWorkbenchUtil.monthDisplay(endTimeString);
	var endYear = ProjectWorkbenchUtil.yearDisplay(endTimeString);

	var monthHash = {};
	var idx =0;
	var startCheck = parseInt('' + startYear + startMonth);
	var endCheck = parseInt('' + endYear + endMonth);
	while (startCheck &lt;= endCheck) {
		if (startMonth &gt; 12) {
			startMonth = 1;
			startYear++;
		}
		monthHash[idx] = monthNames[parseInt(startMonth, '10')];
		startMonth++;
		idx++;
		if (startMonth &lt; 10)
			startCheck = parseInt(''+ startYear + '0' + startMonth);
		else 
			startCheck = parseInt(''+ startYear + startMonth);
	}
	return monthHash;
};
	
ProjectWorkbenchUtil.monthDisplay = function (timeString) {
	var displayDt = new GlideDateTime();
	displayDt.setDisplayValue(timeString);
	var month = displayDt.getMonthLocalTime();
	if (month &lt; 10)
		month = '0' + month;
	return month;
};

	
ProjectWorkbenchUtil.yearDisplay = function (timeString) {
	var displayDt = new GlideDateTime();
	displayDt.setDisplayValue(timeString);
	var year = displayDt.getYearLocalTime();
	return year;
};

ProjectWorkbenchUtil.getTimeDisplay = function (timeMs) {
    if (!timeMs)
        return "null";
    var gdt = new GlideDateTime();
    gdt.setNumericValue(timeMs);
    return gdt.getDisplayValueInternal();
};

]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2014-08-04 05:16:19&lt;/sys_created_on&gt;
        &lt;sys_id&gt;0014680e375221001a8326877e41f17b&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;20&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;ProjectWorkbenchUtil&lt;/sys_name&gt;
        &lt;sys_package display_value="Project Workbench" source="com.snc.project_workbench"&gt;9bff8ee747e64210cd4e1ce4316d4341&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_0014680e375221001a8326877e41f17b&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2020-10-12 16:22:21&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:08:51</sys_created_on>
        <sys_id>ff20b85583b01210c6695855eeaad34f</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>ProjectWorkbenchUtil</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_ff20b85583b01210c6695855eeaad34f</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:08:51</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
