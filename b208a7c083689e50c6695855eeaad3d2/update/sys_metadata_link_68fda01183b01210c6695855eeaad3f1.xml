<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>2d9ce09983701210c6695855eeaad35d</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules"&gt;
    &lt;x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE"&gt;
        &lt;abort_action&gt;false&lt;/abort_action&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;action_delete&gt;true&lt;/action_delete&gt;
        &lt;action_insert&gt;true&lt;/action_insert&gt;
        &lt;action_query&gt;false&lt;/action_query&gt;
        &lt;action_update&gt;true&lt;/action_update&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;add_message&gt;false&lt;/add_message&gt;
        &lt;advanced&gt;true&lt;/advanced&gt;
        &lt;change_fields&gt;false&lt;/change_fields&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;collection/&gt;
        &lt;condition/&gt;
        &lt;description/&gt;
        &lt;execute_function&gt;false&lt;/execute_function&gt;
        &lt;filter_condition/&gt;
        &lt;is_rest&gt;false&lt;/is_rest&gt;
        &lt;message/&gt;
        &lt;name&gt;Update Actuals for Plan Definition(ITFM)&lt;/name&gt;
        &lt;order&gt;999&lt;/order&gt;
        &lt;priority&gt;100&lt;/priority&gt;
        &lt;rest_method/&gt;
        &lt;rest_method_text/&gt;
        &lt;rest_service/&gt;
        &lt;rest_service_text/&gt;
        &lt;rest_variables/&gt;
        &lt;role_conditions/&gt;
        &lt;script&gt;&lt;![CDATA[(function executeRule(current, previous /*null when async*/ ) {
    try {
        var amtDiff = 0;
  var api = new ITFM_Planning();
        if (current &amp;&amp; previous) {
            amtDiff = current.actual - previous.actual;
        } else {
            amtDiff = current.actual;
        }
        var colMap = {};
        //get all plan defintion which have cost plan breakdown as table
        var pd = new GlideRecord("itfm_plan_definition");
        pd.addQuery('source_table.table', 'cost_plan_breakdown');
        pd.query();
        while (pd.next()) {
            colMap = api.getPlanDefinitionTemplateColumnDataSourceFieldMappings(pd.getUniqueValue());
   
   //get respective plan item and actual item
            var pi = new GlideRecord('itfm_plan_item');
   pi.addQuery('plan.sys_class_name', 'itfm_plan');
            pi.addQuery('plan.plan_definition', pd.getUniqueValue());
            for (var x in colMap) {
    colMap[x].dotWalkedValue =  api.getDataSourceFieldMapMatchID(current, colMap[x]);
    pi.addQuery(x,colMap[x].dotWalkedValue);
   }
            pi.addQuery('account_number', current.cost_plan.resource_type.gl_account);
            pi.query();
            var piSysId, aiSysId;
            if (pi.next()) {
                    piSysId = pi.getUniqueValue();
            }
            if (!piSysId) {
                continue;
            }
   
   //get actual item
   var ai = new GlideRecord('itfm_plan_actuals');
            ai.addQuery('plan_definition', pd.getUniqueValue());
            for (var j in colMap) {
                ai.addQuery(j, colMap[j].dotWalkedValue);
            }
            ai.addQuery('account_number', current.cost_plan.resource_type.gl_account);
            ai.query();
   if (ai.next()) {
                aiSysId = ai.getUniqueValue();
             }
   else {
    ai.initialize();
                ai.setValue('plan_definition', pd.getUniqueValue());
                for (var k in colMap) {
     ai.setValue(k, colMap[k].dotWalkedValue);
    }
                ai.setValue('account_number', current.cost_plan.resource_type.gl_account);
                ai.setValue('currency', new SNC.FMCurrency().getGlobalCurrencyCode());
                aiSysId = ai.insert();
    }

            var aiBreakdownSysId;
            if (aiSysId &amp;&amp; piSysId) {

                //upsert the actual breakdown
                var aiBreakdown = new GlideRecord('itfm_ai_breakdown');
                aiBreakdown.addQuery('fiscal_period', current.getValue('fiscal_period'));
                aiBreakdown.addQuery('plan_item', aiSysId);
                aiBreakdown.query();
                if (aiBreakdown.next()) {
                    aiBreakdownSysId = aiBreakdown.getUniqueValue();
                    aiBreakdown.cost = aiBreakdown.cost + amtDiff;
                    aiBreakdown.update();
                } else {
                    aiBreakdown.initialize();
                    aiBreakdown.setValue('fiscal_period', current.getValue('fiscal_period'));
                    aiBreakdown.setValue('plan_item', aiSysId);
                    aiBreakdown.setValue('cost', current.actual);
                    aiBreakdownSysId = aiBreakdown.insert();
                }
                if (aiBreakdownSysId) {
                    //update the reference in plan item
                    var piBreakdown = new GlideRecord('itfm_pi_breakdown');
                    piBreakdown.addQuery('fiscal_period', current.getValue('fiscal_period'));
                    piBreakdown.addQuery('plan_item', piSysId);
                    piBreakdown.query();
                    if (piBreakdown.next()) {
                        piBreakdown.setValue('plan_actuals', aiBreakdownSysId);
      piBreakdown.setValue('plan_key_match',"full");
                        piBreakdown.update();
                    } else {
                        piBreakdown.initialize();
                        piBreakdown.setValue('fiscal_period', current.getValue('fiscal_period'));
                        piBreakdown.setValue('plan_item', piSysId);
                        piBreakdown.setValue('plan_actuals', aiBreakdownSysId);
      piBreakdown.setValue('plan_key_match',"full");
                        piBreakdown.insert();
                    }
                }
            }
        }
    } catch (e) {
        gs.debug("ITFM : Update of actuals from cost plan breakdown failed");
    }
})(current, previous);]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;x_938076_now_utils_now_utils_business_rules&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2024-09-21 07:53:07&lt;/sys_created_on&gt;
        &lt;sys_domain&gt;global&lt;/sys_domain&gt;
        &lt;sys_domain_path&gt;/&lt;/sys_domain_path&gt;
        &lt;sys_id&gt;2d9ce09983701210c6695855eeaad35d&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;Update Actuals for Plan Definition(ITFM)&lt;/sys_name&gt;
        &lt;sys_overrides/&gt;
        &lt;sys_package display_value="Now Utils" source="x_938076_now_utils"&gt;b208a7c083689e50c6695855eeaad3d2&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Now Utils"&gt;b208a7c083689e50c6695855eeaad3d2&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;x_938076_now_utils_now_utils_business_rules_2d9ce09983701210c6695855eeaad35d&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2024-09-21 07:53:07&lt;/sys_updated_on&gt;
        &lt;template/&gt;
        &lt;when&gt;before&lt;/when&gt;
    &lt;/x_938076_now_utils_now_utils_business_rules&gt;
    &lt;sys_translated_text action="delete_multiple" query="documentkey=2d9ce09983701210c6695855eeaad35d"/&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:59:04</sys_created_on>
        <sys_id>68fda01183b01210c6695855eeaad3f1</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Update Actuals for Plan Definition(ITFM)</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_68fda01183b01210c6695855eeaad3f1</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:59:04</sys_updated_on>
        <tablename>sys_script</tablename>
    </sys_metadata_link>
</record_update>
