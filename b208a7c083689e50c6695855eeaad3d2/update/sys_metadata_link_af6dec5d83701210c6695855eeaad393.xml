<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>13ec27bfb7533300616ceb67ee11a98a</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="sys_script"&gt;
    &lt;sys_script action="INSERT_OR_UPDATE"&gt;
        &lt;abort_action&gt;false&lt;/abort_action&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;action_delete&gt;false&lt;/action_delete&gt;
        &lt;action_insert&gt;true&lt;/action_insert&gt;
        &lt;action_query&gt;false&lt;/action_query&gt;
        &lt;action_update&gt;true&lt;/action_update&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;add_message&gt;false&lt;/add_message&gt;
        &lt;advanced&gt;true&lt;/advanced&gt;
        &lt;change_fields&gt;false&lt;/change_fields&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;collection&gt;password_policy&lt;/collection&gt;
        &lt;condition/&gt;
        &lt;description/&gt;
        &lt;execute_function&gt;false&lt;/execute_function&gt;
        &lt;filter_condition table="password_policy"&gt;password_strength!=70^EQ&lt;item display_value="Advanced" endquery="false" field="password_strength" goto="false" newquery="false" operator="!=" or="false" value="70"/&gt;
            &lt;item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/&gt;
        &lt;/filter_condition&gt;
        &lt;is_rest&gt;false&lt;/is_rest&gt;
        &lt;message/&gt;
        &lt;name&gt;ValidatePwdPolicyForNonAdvancedOption&lt;/name&gt;
        &lt;order&gt;100&lt;/order&gt;
        &lt;priority&gt;100&lt;/priority&gt;
        &lt;rest_method/&gt;
        &lt;rest_method_text/&gt;
        &lt;rest_service/&gt;
        &lt;rest_service_text/&gt;
        &lt;rest_variables/&gt;
        &lt;role_conditions/&gt;
        &lt;script&gt;&lt;![CDATA[(function executeRule(current, previous /*null when async*/ ) {
    var minimun_password_length = current.minimun_password_length;
    var maximum_password_length = current.maximum_password_length;
    var minimum_uppercase_characters = current.minimum_uppercase_characters;
    var minimum_lowercase_characters = current.minimum_lowercase_characters;
    var minimum_numeric_characters = current.minimum_numeric_characters;
    var minimum_special_characters = current.minimum_special_characters;
    var whitelisted_special_characters = current.whitelisted_special_characters;

    var policyScript;
    if (current.isValidField('password_policy_script')) {
        policyScript = current.password_policy_script;
    }
    var options = eval(policyScript);
    if (options) {
        if (options['minimun_password_length'] != undefined)
            minimun_password_length = options['minimun_password_length'];
        if (options['maximum_password_length'] != undefined)
            maximum_password_length = options['maximum_password_length'];
        if (options['minimum_uppercase_characters'] != undefined)
            minimum_uppercase_characters = options['minimum_uppercase_characters'];
        if (options['minimum_lowercase_characters'] != undefined)
            minimum_lowercase_characters = options['minimum_lowercase_characters'];
        if (options['minimum_numeric_characters'] != undefined)
            minimum_numeric_characters = options['minimum_numeric_characters'];
        if (options['minimum_special_characters'] != undefined)
            minimum_special_characters = options['minimum_special_characters'];
    }

    // valiidate script options
    if (minimun_password_length &lt; 8 || minimun_password_length &gt; 100) {
        gs.addErrorMessage(gs.getMessage("Minimum password length should be in range of: [{0}, {1}]", [8, 100]));
		current.setAbortAction(true);
        return;
    }
    if (maximum_password_length &lt; 8 || maximum_password_length &gt; 100) {
        gs.addErrorMessage(gs.getMessage("Maximum password length should be in range of: [{0}, {1}]", [8, 100]));
		current.setAbortAction(true);
        return;
    }
	
	if(maximum_password_length - minimun_password_length &lt; 5){
		gs.addErrorMessage(gs.getMessage("Difference between minimum and maximum password length must be 5 or more", [8, 100]));
		current.setAbortAction(true);
        return;
	}
	
    if (minimum_uppercase_characters &lt; 0 || minimum_uppercase_characters &gt; 10) {
        gs.addErrorMessage(gs.getMessage("Minimum uppercase character(s) should be in range of: [{0}, {1}]", [0, 10]));
		current.setAbortAction(true);
        return;
    }
    if (minimum_lowercase_characters &lt; 0 || minimum_lowercase_characters &gt; 10) {
        gs.addErrorMessage(gs.getMessage("Minimum lowercase Character(s) should be in range of: [{0}, {1}]", [0, 10]));
		current.setAbortAction(true);
        return;
    }
    if (minimum_numeric_characters &lt; 0 || minimum_numeric_characters &gt; 10) {
        gs.addErrorMessage(gs.getMessage("Minimum numeric character(s) should be in range of: [{0}, {1}]", [0, 10]));
		current.setAbortAction(true);
        return;
    }
    if (minimum_special_characters &lt; 0 || minimum_special_characters &gt; 10) {
        gs.addErrorMessage(gs.getMessage("Minimum special character(s) should be in range of: [{0}, {1}]", [0, 10]));
		current.setAbortAction(true);
        return;
    }
    var tempSum = parseInt(minimum_lowercase_characters) + parseInt(minimum_uppercase_characters) + parseInt(minimum_numeric_characters) + parseInt(minimum_special_characters);
	var sumStr = String(tempSum);
	var sum = sumStr.split(".")[0];
	
    if (sum &gt; minimun_password_length) {
        gs.addErrorMessage(gs.getMessage("The minimum password length must not be less than the sum ({0}) of minimum required character fields.", sum));
		current.setAbortAction(true);
        return;
    }
    if (sum &gt; maximum_password_length) {
        gs.addErrorMessage(gs.getMessage("The maximum password length must not be less than the sum ({0}) of minimum required character fields.", sum));
		current.setAbortAction(true);
        return;
    }

})(current, previous);]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2019-08-23 13:26:07&lt;/sys_created_on&gt;
        &lt;sys_domain&gt;global&lt;/sys_domain&gt;
        &lt;sys_domain_path/&gt;
        &lt;sys_id&gt;13ec27bfb7533300616ceb67ee11a98a&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;68&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;ValidatePwdPolicyForNonAdvancedOption&lt;/sys_name&gt;
        &lt;sys_overrides/&gt;
        &lt;sys_package display_value="Password Policy" source="com.glide.password_policy"&gt;9864b4e83c31311068bcf327dfe37fd8&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_13ec27bfb7533300616ceb67ee11a98a&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2021-12-03 12:50:22&lt;/sys_updated_on&gt;
        &lt;template/&gt;
        &lt;when&gt;before&lt;/when&gt;
    &lt;/sys_script&gt;
    &lt;sys_translated_text action="delete_multiple" query="documentkey=13ec27bfb7533300616ceb67ee11a98a"/&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:56:49</sys_created_on>
        <sys_id>af6dec5d83701210c6695855eeaad393</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>ValidatePwdPolicyForNonAdvancedOption</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_af6dec5d83701210c6695855eeaad393</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:56:49</sys_updated_on>
        <tablename>sys_script</tablename>
    </sys_metadata_link>
</record_update>
