<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition>current.verification.type.sys_id == 'a67585845302011017c3ddeeff7b1267'</condition>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>SoftPIN Param Verification</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[// SoftPIN Verification Type
// parameter validations

validateVerificationParam();

function validateVerificationParam() {
    gs.include('PwdVerificationParameterUtility');


    var MINIMUM_SOFTPIN_LENGTH = 6;
    var MINIMUM_REPETITION_THRESHOLD = 2;
    var MINIMUM_SEQUENCE_THRESHOLD = 2;
    var softPINMinimumLength = gs.getProperty('password_reset.softpin.min_length', MINIMUM_SOFTPIN_LENGTH);

    //SoftPIN length should not be less than minimumPINLength digits
    if (current.name == 'pin_length') {
        assertGreaterOrEqual(current.value, softPINMinimumLength, gs.getMessage('[pin_length] should be a positive Integer of value atleast [{0}]', softPINMinimumLength));
    }

    //SoftPIN digits continuous repetition threshold
    if (current.name == 'repetition_threshold') {
        assertGreaterOrEqual(current.value, MINIMUM_REPETITION_THRESHOLD, gs.getMessage('[repetition_threshold] should be a positive Integer of value atleast [{0}]', MINIMUM_REPETITION_THRESHOLD));
    }

    //SoftPIN digits numeric sequence threshold
    if (current.name == 'sequence_threshold') {
        assertGreaterOrEqual(current.value, MINIMUM_SEQUENCE_THRESHOLD, gs.getMessage('[sequence_threshold] should be a positive Integer of value atleast [{0}]', MINIMUM_SEQUENCE_THRESHOLD));
    }
}

function assertGreaterOrEqual(propLarger, propSmaller, errMsg) {
    var utility = new PwdVerificationParameterUtility();
    if (!utility.isPositiveInteger(current.value) || (parseInt(propLarger) < parseInt(propSmaller))) {
        gs.addErrorMessage(errMsg);
        current.setAbortAction(true);
    }
}]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:49:27</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>33bbe41583701210c6695855eeaad363</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>SoftPIN Param Verification</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_33bbe41583701210c6695855eeaad363</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:49:27</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=33bbe41583701210c6695855eeaad363"/>
</record_update>
