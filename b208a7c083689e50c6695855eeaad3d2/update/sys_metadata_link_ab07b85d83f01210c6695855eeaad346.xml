<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>76a2b9ca0f832010af170c3635767e30</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;public&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;sn_hr_core.hr_BulkCaseRequestAjaxUtils&lt;/api_name&gt;
        &lt;caller_access&gt;2&lt;/caller_access&gt;
        &lt;client_callable&gt;true&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;hr_BulkCaseRequestAjaxUtils&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var hr_BulkCaseRequestAjaxUtils = Class.create();
hr_BulkCaseRequestAjaxUtils.prototype = Object.extendsObject(global.AbstractAjaxProcessor, {

    initialize: function(request, responseXML, gc) {
        global.AbstractAjaxProcessor.prototype.initialize.call(this, request, responseXML, gc);

        this.canReadBulkCaseUserSegment = new GlideRecord('sn_hr_core_bulk_case_user_segment').canRead();
    },

    /**
     * Method to find total number of user-segments to process bulk-case-request
     *  by querying `bulk case user segment` record to find `included` users for provided `bulk case request ID`
     *
     * @params: (extracted from caller)
     *  sysparm_bulkCaseRequestID: bulk case request unique ID
     * 
     * @returns {Object} containing properties
     *  error - {string} message if encountered 
     *  success - {object} containing user-segment count marked `included` and string message for GlideModal
     */
    getIncludedUserSegmentData: function() {
        var response = {};
        var bulkCaseRequestID = this.getParameter('sysparm_bulkCaseRequestID');
		var createParentCase = this.getParameter('sysparm_createParentCase');
		
        if (gs.nil(bulkCaseRequestID))
            return JSON.stringify({
                error: gs.getMessage("Missing required parameter 'sysparm_bulkCaseRequestID'")
            });

        if (!this.canReadBulkCaseUserSegment)
            return JSON.stringify({
                error: gs.getMessage('Invalid user. Access denied.')
            });

        //get `included` user-segment count
        var bulkCaseUserSegmentGR = new GlideRecord('sn_hr_core_bulk_case_user_segment');
        bulkCaseUserSegmentGR.addQuery('user_segment_group.bulk_case_request', bulkCaseRequestID);
        bulkCaseUserSegmentGR.addQuery('status', 'included');
        bulkCaseUserSegmentGR.query();
		bulkCaseUserSegmentGR.next();
        var includedBulkCaseUserSegmentCount = bulkCaseUserSegmentGR.getRowCount();

        if (includedBulkCaseUserSegmentCount &lt; 1)
            return JSON.stringify({
                error: gs.getMessage("No user-segment record found for 'Bulk case request' - {0}", bulkCaseRequestID)
            });
        else {
			if (createParentCase) 
				includedBulkCaseUserSegmentCount++;
				
            var successMessage = (includedBulkCaseUserSegmentCount == 1) ? gs.getMessage('One case will be created.') : gs.getMessage('{0} cases will be created.', includedBulkCaseUserSegmentCount+'');
            return JSON.stringify({
                success: {
                    userCount: includedBulkCaseUserSegmentCount,
                    message: successMessage,
                    info: this._getCautionMessage(bulkCaseUserSegmentGR.user_segment_group.bulk_case_request.hr_service.topic_detail.topic_category.coe+'', includedBulkCaseUserSegmentCount)
                }
            });
        }
    },
	
	_getCautionMessage: function(COE, caseCount) {
		var isHRCoreCase = COE.startsWith('sn_hr_core_case');
		var isLECase = COE.startsWith('sn_hr_le_case');
		
		if (isHRCoreCase &amp;&amp; (caseCount &gt; 10000))
			return gs.getMessage('Processing performance may be affected when creating more than 10,000 HR cases.');
		if (isLECase &amp;&amp; (caseCount &gt; 1000))
			return gs.getMessage('Processing performance may be affected when creating more than 1000 Lifecycle Event cases.');
	},

    type: 'hr_BulkCaseRequestAjaxUtils'
});]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2021-03-23 19:58:30&lt;/sys_created_on&gt;
        &lt;sys_id&gt;76a2b9ca0f832010af170c3635767e30&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;91&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;hr_BulkCaseRequestAjaxUtils&lt;/sys_name&gt;
        &lt;sys_package display_value="Human Resources: Core" source="sn_hr_core"&gt;d4ac3fff5b311200a4656ede91f91af2&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Human Resources: Core"&gt;d4ac3fff5b311200a4656ede91f91af2&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_76a2b9ca0f832010af170c3635767e30&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2021-11-01 20:14:34&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:38:53</sys_created_on>
        <sys_id>ab07b85d83f01210c6695855eeaad346</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>hr_BulkCaseRequestAjaxUtils</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_ab07b85d83f01210c6695855eeaad346</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:38:53</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
