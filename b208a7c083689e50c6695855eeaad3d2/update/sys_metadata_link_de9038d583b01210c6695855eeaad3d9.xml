<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>14b8bad70b31030031a567bff6673a78</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;public&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.pwdEnrollmentReminder&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;pwdEnrollmentReminder&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var pwdEnrollmentReminder = Class.create();
pwdEnrollmentReminder.prototype = {
	ENROLL_REMINDER_SCHEDULED_JOB_PREFIX: "pwd_enroll_reminder_",
	ENROLL_REMINDER_NOTIFICATION_ID: "4bd2a7250b02030031a567bff6673a76",
	
    initialize: function() {
    },
	
	createOrUpdateScheduleJob: function(process) {
		var schedJobGr = this._findScheduleJob(process.getValue("sys_id"));
		if(!gs.nil(schedJobGr)) {
			this.updateScheduleJob(process, schedJobGr);
		} else {
			if(process.enrollment_reminder &amp;&amp; process.active) {
				this.createScheduleJob(process);
			}
		}
	},
		
	createScheduleJob: function(process) {
		var processId = process.getValue("sys_id");
		
		var gr = new GlideRecord("sysauto_script");
		gr.setValue("name", this._getScheduleJobName(processId));
		gr.setValue("active", true);
		
		this._setCommonFields(gr, process);
		
		gr.setValue("conditional", true);
		gr.setValue("condition", this._getScheduleJobCondition(processId));
		gr.setValue("script", this._getScheduleJobScript(processId));
		
		return gr.insert();
	},
	
	canRunScheduleJob: function(processId) {
		var gr = this._findScheduleJob(processId);
		var currentTime = new GlideDateTime();
		var diffSeconds = gs.dateDiff(currentTime, gr.run_start, true);
        if(diffSeconds &lt;= 0) { 
			//run schedule job because current time is on or after start time
			return true;
		}
		return false;
	},
	
	deleteScheduledJob: function(process) {
		//Delete parent and all child scheduled jobs
		var schedJobGr = this._findScheduleJob(process.getValue("sys_id"));
		if(!gs.nil(schedJobGr)){
			schedJobGr.deleteRecord();
			new pwdEnrollmentReminderHelper().deleteChildScheduleJob(process.getValue("sys_id"));
		}
	},
	
	//update active/period/start of schedule job.
	updateScheduleJob: function(process, schJob) {
		var deleteChildScheduledJob = false; 
		
		if(process.enrollment_reminder &amp;&amp; process.active) {
			schJob.setValue("active", true);
		} else {
			schJob.setValue("active", false);
			deleteChildScheduledJob = true;
		}
		this._setCommonFields(schJob, process);
		
		schJob.update();
		//if deactivating parent scheduled job, delete any child jobs. 
		if(deleteChildScheduledJob)
			new pwdEnrollmentReminderHelper().deleteChildScheduleJob(process.getValue("sys_id"));
	},
	
	updateEnrollmentReminderEmailTemplate: function(emailTemplateId) {
		var gr = new GlideRecord("sysevent_email_action");
		gr.get(this.ENROLL_REMINDER_NOTIFICATION_ID);
		gr.setValue("template",emailTemplateId);
		gr.update();
	},
	
	_getScheduleJobName: function(processId) {
		return this.ENROLL_REMINDER_SCHEDULED_JOB_PREFIX + processId;
	},
	
	_getScheduleJobScript: function(processId) {
		return "new global.pwdEnrollmentReminderHelper().sendReminderToNotEnrolledUsersForProcess(\"" + processId + "\");";
	},
	
	_getScheduleJobCondition: function(processId) {
		return "new global.pwdEnrollmentReminder().canRunScheduleJob(\"" + processId + "\");";
	},
	
	_findScheduleJob : function(processId) {
		var gr = new GlideRecord("sysauto_script");
		if(gr.get("name", this._getScheduleJobName(processId)))
			return gr;
		return null;
	},
		
	_setCommonFields: function(schJobGr, processGr){
		schJobGr.setValue("run_type", processGr.getValue("run_type"));
		if(processGr.getValue("run_type") == "weekly")
			schJobGr.setValue("run_dayofweek", processGr.getValue("run_dayofweek"));
		else
			schJobGr.setValue("run_dayofmonth", processGr.getValue("run_dayofmonth"));
		schJobGr.setValue("run_time", processGr.getValue("run_time"));
		var run_start = schJobGr.getValue("run_start");
		if(gs.nil(run_start))
		   run_start = new GlideDateTime();
		schJobGr.setValue("run_start", run_start);
	},
	
    type: 'pwdEnrollmentReminder'
};
]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2017-10-19 17:51:19&lt;/sys_created_on&gt;
        &lt;sys_id&gt;14b8bad70b31030031a567bff6673a78&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;73&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;pwdEnrollmentReminder&lt;/sys_name&gt;
        &lt;sys_package display_value="Password Reset" source="com.glideapp.password_reset"&gt;1399f4e43cf1311068bcf327dfe37fe4&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_14b8bad70b31030031a567bff6673a78&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2013-02-14 05:20:25&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:10:40</sys_created_on>
        <sys_id>de9038d583b01210c6695855eeaad3d9</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>pwdEnrollmentReminder</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_de9038d583b01210c6695855eeaad3d9</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:10:40</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
