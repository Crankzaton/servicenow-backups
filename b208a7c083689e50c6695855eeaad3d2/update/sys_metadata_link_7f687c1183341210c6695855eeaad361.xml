<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>87f2b062eb03201005017994a2522874</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;sn_hr_mobile.HRTaskFieldMappingUtilsSNC&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;Utility methods to extract values from employee form field mappings in Employee form&lt;/description&gt;
        &lt;name&gt;HRTaskFieldMappingUtilsSNC&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var HRTaskFieldMappingUtilsSNC = Class.create();
HRTaskFieldMappingUtilsSNC.prototype = {
    initialize: function() {},

    /**
     * Returns default values to be prefilled in the survey's questions as default answers
     * @param {String} taskId - The sys_id of HR task
     * @return {Object} The object containing sys_id of survey instance questions and the value to be prefilled as default answer to the corresponding question
     */
    getDefaultValuesFromTask: function(taskId) {
        var taskGr = new GlideRecord(sn_hr_core.hr.TABLE_TASK);
        var tableName;
        var condition;
        var recordGr;

        taskGr.get(taskId);

        var defaultValues = {};
        try {
            if (taskGr.hr_task_type.toString() === 'collect_Information') {
                tableName = taskGr.getElement('employee_form.table') + '';
                condition = taskGr.getElement('employee_form.condition') + '';
                if (gs.nil(condition) || !isRecordCountValid(tableName, condition))
                    return defaultValues;
                recordGr = new GlideRecord(tableName);
                recordGr.addEncodedQuery(condition);
                recordGr.query();
                recordGr.next();
                var mappingGr = new GlideRecord('sn_hr_core_employee_form_field_mapping');
                mappingGr.addQuery('employee_form', taskGr.getValue('employee_form'));
                mappingGr.query();
                while (mappingGr.next()) {
                    var field = mappingGr.getValue('field');
                    var qaGr = new GlideRecord('asmt_assessment_instance_question');
                    qaGr.addQuery('metric', mappingGr.question);
                    qaGr.addQuery('instance', taskGr.getValue('survey_instance'));
                    qaGr.query();
                    if (qaGr.next())
                        defaultValues[qaGr.getValue('sys_id')] = recordGr.getElement(field).toString();
                }
            }
        } catch (err) {
            gs.warn('HRTaskFieldMappingUtilsSNC: Error in fetching default values: ' + err);
            defaultValues = {};
        }


        return defaultValues;

        /**
         * Check if Record count is strictly 1 for given tablename and condition
         * @param {String} tableName - The table name of the mapped table 
         * @param {String} condition - The condition for the mapped table
         * @return {boolean} true if record count for table and condition is 1 else false
         */
        function isRecordCountValid(tableName, condition) {
            var recordGa = new GlideAggregate(tableName);
            recordGa.addAggregate('COUNT');
            recordGa.addEncodedQuery(condition);
            recordGa.query();
            var count = 0;
            if (recordGa.next())
                count = recordGa.getAggregate('COUNT');
            return count == 1 ? true : false;
        }
    },

    type: 'HRTaskFieldMappingUtilsSNC'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2021-03-25 04:44:23&lt;/sys_created_on&gt;
        &lt;sys_id&gt;87f2b062eb03201005017994a2522874&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;1&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;HRTaskFieldMappingUtilsSNC&lt;/sys_name&gt;
        &lt;sys_package display_value="HR Service Delivery for mobile" source="sn_hr_mobile"&gt;c8585b0b413a6300964f47790d3ec577&lt;/sys_package&gt;
        &lt;sys_policy&gt;read&lt;/sys_policy&gt;
        &lt;sys_scope display_value="HR Service Delivery for mobile"&gt;c8585b0b413a6300964f47790d3ec577&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_87f2b062eb03201005017994a2522874&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2021-04-08 18:21:06&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:44:54</sys_created_on>
        <sys_id>7f687c1183341210c6695855eeaad361</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>HRTaskFieldMappingUtilsSNC</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_7f687c1183341210c6695855eeaad361</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:44:54</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
