<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>true</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Delete dictionary</name>
        <order>0</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[if (current.name.endsWith('_default_spell_check_dictionary') && current.operation() == "delete") {
    gs.addErrorMessage(gs.getMessage("You cannot delete the auto-generated Typo Handling dictionary. You can either disable Typo Handling in your UI or remove all fields from contributing to this dictionary"));
    current.setAbortAction(true);
}
if (current.operation() == "delete") {
    var preventDelete = false;
    var profileNames = [];
    var profiles = new GlideRecord('ais_search_profile_ais_dictionary_m2m');
    profiles.addQuery('dictionary', current.sys_id);
    profiles.query();
    
    while (profiles.next()) {
        preventDelete = true;
        profileNames.push(GlideStringUtil.escapeHTML(profiles.profile.label));
    }
    if (preventDelete) {
        gs.addErrorMessage(gs.getMessage("You cannot delete this dictionary. It is still linked to the following Search Profiles: {0}", profileNames.join(",")));
        current.setAbortAction(true);
    } else
        deleteDictionary();

} else if (current.operation() == "update" && current.active.changes() && current.active == false)
    deleteDictionary();

function deleteDictionary() {
    var result = new sn_ais.Synchronizer().deleteDictionary(current.name);
    if (result)
        gs.addInfoMessage(gs.getMessage("Dictionary deleted"));
    else {
        gs.addErrorMessage(gs.getMessage("Failed to delete dictionary, please check log for more details"));
        current.setAbortAction(true);
    }
}]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:48:03</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>cf6b649183701210c6695855eeaad36a</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Delete dictionary</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_cf6b649183701210c6695855eeaad36a</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:48:03</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=cf6b649183701210c6695855eeaad36a"/>
</record_update>
