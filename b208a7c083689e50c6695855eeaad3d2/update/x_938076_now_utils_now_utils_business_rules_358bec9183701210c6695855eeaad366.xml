<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition>!(current.scheduling_method.changes() &amp;&amp; current.scheduling_method == 'optimization') &amp;&amp; current.is_fixed_window &amp;&amp; !current.estimated_end.nil() &amp;&amp; !current.expected_start.nil() &amp;&amp; !current.window_start.nil() &amp;&amp; !current.window_end.nil()</condition>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Validate Fixed Window Dates</name>
        <order>3000</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
 var plannedWorkStart = current.expected_start.getGlideObject().getNumericValue();
 var plannedWorkEnd = current.estimated_end.getGlideObject().getNumericValue();
 var windowStart = current.window_start.getGlideObject().getNumericValue();
 var windowEnd = current.window_end.getGlideObject().getNumericValue();
 if(plannedWorkStart < windowStart || plannedWorkStart > windowEnd || plannedWorkEnd < windowStart || plannedWorkEnd > windowEnd) {
  if(!new SharedServiceUtils().fieldChangeCheck("actual_travel_start")){
   var message = gs.getMessage("Task needs to start and complete within the window when it is fixed.");
   gs.addErrorMessage(message);
   current.setAbortAction(true);
  }
  else{
   //4 OR conditions. plannedWorkStart > windowEnd ==true then plannedWorkEnd > windowEnd has to be true
   //if plannedWorkEnd < windowStart ==true then plannedWorkStart < windowStart has to be true, info message already sent in ValidateWindowStart BR
   if(plannedWorkEnd > windowEnd){
    gs.addInfoMessage(gs.getMessage("{0} is now expected to complete after window end", current.getValue("number")))
   }
  }
 }
  
})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:48:30</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>358bec9183701210c6695855eeaad366</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Validate Fixed Window Dates</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_358bec9183701210c6695855eeaad366</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:48:30</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=358bec9183701210c6695855eeaad366"/>
</record_update>
