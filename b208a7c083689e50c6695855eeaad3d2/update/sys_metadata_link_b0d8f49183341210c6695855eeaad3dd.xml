<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>a4dd7f6d0f003010c0774ee7c8767e39</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;public&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.LFDocumentContentField&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;Class which represents the LFDocumentContentField&lt;/description&gt;
        &lt;name&gt;LFDocumentContentField&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var LFDocumentContentField = Class.create();
LFDocumentContentField.prototype = {
    initialize: function(originalValue, translatedValue) {
        this.field = {};
        this.field['originalValue'] = originalValue;
        this.field['translatedValue'] = translatedValue;
        this.lfValidationUtils = new LFValidationUtils();
    },

    setTextType: function(textType) {
        this._validateTextType(textType);
        this.field['textType'] = textType;
        return this;
    },

    setIsFieldLocked: function(isFieldLocked) {
        this._validateIsFieldLocked(isFieldLocked);
        this.field['isFieldLocked'] = isFieldLocked;
        return this;
    },

    setEscapeDetails: function(escapeDetails) {
        this._validateEscapeDetails(escapeDetails);
        this.field['escapeDetails'] = escapeDetails;
        return this;
    },

    setAdditionalParameters: function(additionalParameters) {
        this.field['additionalParameters'] = additionalParameters;
        return this;
    },

    getOriginalValue: function() {
        return this.field['originalValue'];
    },

    getTranslatedValue: function() {
        return this.field['translatedValue'];
    },

    getTextType: function() {
        return this.field['textType'];
    },

    getIsFieldLocked: function() {
        return this.field['isFieldLocked'];
    },

    getEscapeDetails: function() {
        return this.field['escapeDetails'];
    },

    getAdditionalParameters: function() {
        return this.field['additionalParameters'];
    },

    _validateTextType: function(textType) {
        var isValid = true;
        if (this.lfValidationUtils.isFieldTypeNonString(textType)) {
            isValid = false;
        }
        if (isValid &amp;&amp; textType != LFDocumentContentHelper.PLAIN_TEXT_TYPE &amp;&amp; textType != LFDocumentContentHelper.HTML_TEXT_TYPE) {
            isValid = false;
        }
        if (!isValid) {
            var exceptionMapper = new LFExceptionMapper('INVALID_TEXT_TYPE');
            exceptionMapper.throwException();
        }
    },

    _validateIsFieldLocked: function(isFieldLocked) {
        if (this.lfValidationUtils.isFieldTypeNonBoolean(isFieldLocked)) {
            var exceptionMapper = new LFExceptionMapper('INVALID_IS_FIELD_LOCKED');
            exceptionMapper.throwException();
        }
    },

    _validateEscapeDetails: function(escapeDetails) {
        if (!Array.isArray(escapeDetails) || escapeDetails.length == 0) {
            var exceptionMapper = new LFExceptionMapper('INVALID_ESCAPE_DETAILS');
            exceptionMapper.throwException();
        }
    },

    type: 'LFDocumentContentField'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2021-05-11 09:51:57&lt;/sys_created_on&gt;
        &lt;sys_id&gt;a4dd7f6d0f003010c0774ee7c8767e39&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;1&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;LFDocumentContentField&lt;/sys_name&gt;
        &lt;sys_package display_value="Localization Framework" source="com.glide.localization_framework"&gt;a4dd193447720210cd4e1ce4316d4312&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_a4dd7f6d0f003010c0774ee7c8767e39&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2022-03-09 11:41:54&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:46:36</sys_created_on>
        <sys_id>b0d8f49183341210c6695855eeaad3dd</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>LFDocumentContentField</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_b0d8f49183341210c6695855eeaad3dd</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:46:36</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
