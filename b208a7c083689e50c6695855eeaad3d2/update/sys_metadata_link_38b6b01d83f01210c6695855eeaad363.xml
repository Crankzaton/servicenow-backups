<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>571ff007537230103953ddeeff7b129d</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;sn_rf.RFSimilarityService&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;RFSimilarityService&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var RFSimilarityService = Class.create();

RFSimilarityService.prototype = {
    initialize: function(solutionDefinition) {
        var solutionDefGr = new GlideRecord(RFConstants.tables.ML_CAPABILITY_DEFINITION_SIMILARITY);
        solutionDefGr.addQuery('sys_id', solutionDefinition);
        solutionDefGr.addActiveQuery();
        solutionDefGr.query();
        if (solutionDefGr.next()) {
            this.solutionDefinition = solutionDefGr;
        }
    },

    getPredictions: function(current, additionalParameters) {
        var predictions = [];
        if (!this.solutionDefinition) {
            return predictions;
        }
        var predictor = new global.MLPredictor();
        var solution = predictor.findActiveSolution(this.solutionDefinition.getValue(RFConstants.fields.ML_CAPABILITY_DEFINITION_BASE_SOLUTION_NAME));
        if (solution &amp;&amp; predictor.isSimilaritySolution(solution)) {
            var options = {};
            if (additionalParameters &amp;&amp; additionalParameters[RFConstants.mlPredictorOptions.TOP_N]) {
                var topN = additionalParameters[RFConstants.mlPredictorOptions.TOP_N];
                topN = (typeof topN == 'number') ? String(topN) : topN;
                options[RFConstants.mlPredictorOptions.TOP_N] = topN;
            }
            predictions = predictor.getPredictions(current, solution, options);
        }

        return predictions;
    },

    isSolutionDefValid: function() {
        return Boolean(this.solutionDefinition);
    },

    getSimilarityDefinitionId: function() {
        return this.solutionDefinition.getValue('sys_id');
    },

    getTableName: function() {
        if (this.isSolutionDefValid()) {
            return this.solutionDefinition.getValue(RFConstants.fields.ML_CAPABILITY_DEFINITION_BASE_TABLE);
        }
    },

    getTestTableName: function() {
        if (this.isSolutionDefValid()) {
            return this.solutionDefinition.getValue(RFConstants.fields.ML_CAPABILITY_DEFINITION_SIMILARITY_TEST_TABLE);
        }
    },

    type: 'RFSimilarityService'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2021-09-29 05:54:35&lt;/sys_created_on&gt;
        &lt;sys_id&gt;571ff007537230103953ddeeff7b129d&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;3&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;RFSimilarityService&lt;/sys_name&gt;
        &lt;sys_package display_value="Recommendation Framework" source="sn_rf"&gt;30a32ce6c7313010dd7ab6c427c2600e&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Recommendation Framework"&gt;30a32ce6c7313010dd7ab6c427c2600e&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_571ff007537230103953ddeeff7b129d&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2021-11-18 14:22:03&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:37:19</sys_created_on>
        <sys_id>38b6b01d83f01210c6695855eeaad363</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>RFSimilarityService</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_38b6b01d83f01210c6695855eeaad363</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:37:19</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
