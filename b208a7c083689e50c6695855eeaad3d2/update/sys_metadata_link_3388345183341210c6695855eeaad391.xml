<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>8fafc6ab1cfa111003e45b7517caa309</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;sn_uibtk_api.Preset&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;Preset&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var Preset = Class.create();
Preset.prototype = Object.extendsObject(BuilderToolkitAPIBase, {
    TABLE: 'sys_ux_component_preset',
    FIELDS: ['name', 'component', 'controller', 'description', 'properties', 'event_handlers', 'hide_component', 'is_repeater', 'is_repeated_element', 'parent_repeater_preset', 'repeat_with', 'repeated_item_meta'],

    /**
     * @param fields {string[]}
     */
    initialize: function(fields) {
        BuilderToolkitAPIBase.prototype.initialize.call(this, this.TABLE, fields || this.FIELDS);
    },

    /**
     * Overrides parent class function to inject special fields
     * @param acc {object} the accumulator object
     * @param field {GlideElement} the field element we are currently working on
     */
    getFieldValues: function(acc, field) {
        if (field.nil()) {
            return acc;
        }
        acc = BuilderToolkitAPIBase.prototype.getFieldValues.call(this, acc, field);
        const fieldName = field.getName();
        if (fieldName === 'properties') {
            const properties = this.parseJSON(field, {
                sysId: acc.sysId,
                field: 'properties'
            });
            acc['properties'] = Object.entries(properties).reduce(function(propsAcc, [key, value]) {
                if (value.type === 'CLIENT_TRANSFORM_SCRIPT') {
                    const scriptSysId = value?.script?.scriptSysId;
                    const clientScript = new ClientScript(['script']).getRecordById(scriptSysId, true);
                    if (clientScript) {
                        value = {
                            ...value,
                            script: {
                                ...value.script,
                                scriptSysId: '',
                                inlineScript: clientScript.getValue('script')
                            }
                        };
                    }
                }
                propsAcc[key] = value;
                return propsAcc;
            }, {});
        }
        return acc;
    },

    /**
     * @param presetArray {array} converts an array of presets into object by component ID
     */
    convertPresetDefinitions: function(presetArray) {
        return presetArray.reduce(function(acc, preset) {
            const componentId = preset.isRepeater ? BuilderToolkitConstants.REPEATER : preset.component
            if (!acc[componentId]) {
                acc[componentId] = [];
            }
            acc[componentId].push(preset);
            return acc;
        }, {});
    },

    type: 'Preset'
});]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;maint&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2022-11-02 16:16:08&lt;/sys_created_on&gt;
        &lt;sys_id&gt;8fafc6ab1cfa111003e45b7517caa309&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;19&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;Preset&lt;/sys_name&gt;
        &lt;sys_package display_value="@devsnc/uibtk-api" source="sn_uibtk_api"&gt;cdfd3bed43321110e70583020cb8f28e&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="@devsnc/uibtk-api"&gt;cdfd3bed43321110e70583020cb8f28e&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_8fafc6ab1cfa111003e45b7517caa309&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2023-04-12 19:42:18&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:45:26</sys_created_on>
        <sys_id>3388345183341210c6695855eeaad391</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Preset</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_3388345183341210c6695855eeaad391</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:45:26</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
