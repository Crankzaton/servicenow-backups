<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>0599259697cc4a147884f5ece053af69</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="sys_script"&gt;
    &lt;sys_script action="INSERT_OR_UPDATE"&gt;
        &lt;abort_action&gt;false&lt;/abort_action&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;action_delete&gt;false&lt;/action_delete&gt;
        &lt;action_insert&gt;false&lt;/action_insert&gt;
        &lt;action_query&gt;false&lt;/action_query&gt;
        &lt;action_update&gt;true&lt;/action_update&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;add_message&gt;false&lt;/add_message&gt;
        &lt;advanced&gt;true&lt;/advanced&gt;
        &lt;change_fields&gt;false&lt;/change_fields&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;collection&gt;asmt_assessment_instance&lt;/collection&gt;
        &lt;condition/&gt;
        &lt;description/&gt;
        &lt;execute_function&gt;false&lt;/execute_function&gt;
        &lt;filter_condition table="asmt_assessment_instance"&gt;metric_type=d519c71747f735d0e4707f84f16d432d^stateCHANGESTOcomplete^EQ&lt;item endquery="false" field="metric_type" goto="false" newquery="false" operator="=" or="false" value="d519c71747f735d0e4707f84f16d432d"/&gt;
            &lt;item display_value="Complete" endquery="false" field="state" goto="false" newquery="false" operator="CHANGESTO" or="false" value="complete"/&gt;
            &lt;item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/&gt;
        &lt;/filter_condition&gt;
        &lt;is_rest&gt;false&lt;/is_rest&gt;
        &lt;message/&gt;
        &lt;name&gt;WFCopyAddCFITToAssessmentResultsTable&lt;/name&gt;
        &lt;order&gt;100&lt;/order&gt;
        &lt;priority&gt;100&lt;/priority&gt;
        &lt;rest_method/&gt;
        &lt;rest_method_text/&gt;
        &lt;rest_service/&gt;
        &lt;rest_service_text/&gt;
        &lt;rest_variables/&gt;
        &lt;role_conditions/&gt;
        &lt;script&gt;&lt;![CDATA[(function executeRule(current, previous /*null when async*/ ) {

    var count = 0;
    var asrPrjRec = '';
    var taskRec = current.task_id.getValue('sys_id');
    var asrRec = new GlideRecord('u_assessment_results');
    asrRec.addQuery('u_task', taskRec);
    asrRec.addQuery('u_cfit_instance_ids', 'CONTAINS', current.sys_id);
    asrRec.orderBy('sys_created_on');
    asrRec.query();
    if (asrRec.next()) {

        asrPrjRec = asrRec.getValue('sys_id');

    }

    var asrResultsGr = new GlideRecord('u_assessment_results'); // custom table to hold results value

    asrResultsGr.addQuery('sys_id', asrPrjRec);

    asrResultsGr.query();

    if (asrResultsGr.next()) {

        var asmtResultGr = new GlideRecord('asmt_metric_result'); // as the data is available on metric result table

        asmtResultGr.addQuery('instance', current.sys_id);
        asmtResultGr.query();
        while (asmtResultGr.next()) {

            var answer = asmtResultGr.string_value.toString();

            var assessMetric = asmtResultGr.getDisplayValue('metric');
            var asmtResultAggGr = new GlideAggregate('asmt_metric_result'); // as the data is available on metric result table

            asmtResultAggGr.addQuery('instance', current.sys_id);
            asmtResultAggGr.addQuery('metric.name', asmtResultGr.metric.name);
            asmtResultAggGr.addAggregate('count', 'metric.name');
            asmtResultAggGr.query();
            if (asmtResultAggGr.next()) {

                if (asmtResultAggGr.getAggregate('COUNT', 'metric.name') &gt; 1) {
                  
                    if (asmtResultGr.metric.name.toString() === 'u_will_this_initiative_potentially_impact_any_of_the_following') {
 
                        answer = getImpType(current.getValue('sys_id'), current.task_id.getValue('sys_id'), asmtResultGr.metric.name);
                    } else {
                        answer = canCatass(current.getValue('sys_id'), current.task_id.getValue('sys_id'), asmtResultGr.metric.name);
                    }


                }
            }
            asrResultsGr.setValue(assessMetric, answer);

        }

        asrResultsGr.update();

    }

    function canCatass(curObj, instID, assMet) {


        var ans = "";
        var canCat = new GlideRecord('asmt_metric_result');

        canCat.addQuery('instance', curObj);

        canCat.addQuery('source_id', instID);

        canCat.addQuery('metric.name', assMet);

        canCat.query();

        while (canCat.next()) {

            ans = ans + "," + canCat.string_value;


        }
        ans = ans.substring(1);
        return ans;

    }

    function getImpType(curObj, instID, assMet) {
        var ans = "";
        var canCat = new GlideRecord('asmt_metric_result');

        canCat.addQuery('instance', curObj);

        canCat.addQuery('source_id', instID);

        canCat.addQuery('metric.name', assMet);

        canCat.query();

        while (canCat.next()) {

            var strValue = canCat.string_value.toString().split(":");
			ans = ans + "," + strValue[0].toString();
        }
        ans = ans.substring(1);
        return ans;
    }


})(current, previous);]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;K098414&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2024-02-01 11:55:17&lt;/sys_created_on&gt;
        &lt;sys_domain&gt;global&lt;/sys_domain&gt;
        &lt;sys_domain_path&gt;/&lt;/sys_domain_path&gt;
        &lt;sys_id&gt;0599259697cc4a147884f5ece053af69&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;3&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;WFCopyAddCFITToAssessmentResultsTable&lt;/sys_name&gt;
        &lt;sys_overrides/&gt;
        &lt;sys_package display_value="Global" source="global"&gt;global&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_0599259697cc4a147884f5ece053af69&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;K098414&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2024-02-05 07:16:59&lt;/sys_updated_on&gt;
        &lt;template/&gt;
        &lt;when&gt;async_always&lt;/when&gt;
    &lt;/sys_script&gt;
    &lt;sys_translated_text action="delete_multiple" query="documentkey=0599259697cc4a147884f5ece053af69"/&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:55:56</sys_created_on>
        <sys_id>263d6c1d83701210c6695855eeaad33b</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>WFCopyAddCFITToAssessmentResultsTable</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_263d6c1d83701210c6695855eeaad33b</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:55:56</sys_updated_on>
        <tablename>sys_script</tablename>
    </sys_metadata_link>
</record_update>
