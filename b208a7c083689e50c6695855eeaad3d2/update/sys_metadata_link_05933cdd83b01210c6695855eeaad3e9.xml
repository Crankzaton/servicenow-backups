<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>b030e81cb71230109fa9b381de11a948</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_fix"&gt;
    &lt;sys_script_fix action="INSERT_OR_UPDATE"&gt;
        &lt;before&gt;false&lt;/before&gt;
        &lt;description&gt;Replace changed boost_context_field  ids in ais_rule_action&lt;/description&gt;
        &lt;name&gt;Update Boot Action Context IDs&lt;/name&gt;
        &lt;record_for_rollback&gt;false&lt;/record_for_rollback&gt;
        &lt;script&gt;&lt;![CDATA[var fTargetField = 'boost_context_field';
var fTargetTable = 'ais_rule_action';

var fReplacements = {
    'domain': 'domains_id',
    'location': 'location_id',
    'roles': 'roles_id'
};

var gr = new GlideRecord(fTargetTable);
gr.addQuery(fTargetField, "IN", Object.keys(fReplacements));
gr.query();

var ruleIdsCheckedForPublish = [];
var profileIdsToPublish = [];
var profileNamesToPublish = [];

while (gr.next()) {
    // Find already published profiles to republish later
    var ruleId = gr.getValue('rule');
    if (!ruleIdsCheckedForPublish.includes(ruleId)) {
        ruleIdsCheckedForPublish.push(ruleId);
        var rule = new GlideRecord('ais_rule');
        rule.get(ruleId);
        var profileId = rule.getValue('profile');
        if (!profileIdsToPublish.includes(profileId)) {
            var profile = new GlideRecord('ais_search_profile');
            profile.get(profileId)
            if (profile.getValue('state') == "PUBLISHED")
                profileNamesToPublish.push(profile.getValue('name'));
        }
    }
    var key = gr.getValue(fTargetField);
    gr.setValue(fTargetField, fReplacements[key]);
    gr.update();
}

// Republish already published profiles
if (profileNamesToPublish.length &gt; 0) {
    var synchronizer = new sn_ais.Synchronizer();
    for (var i = 0; i &lt; profileNamesToPublish.length; i++)
        synchronizer.publishProfile(profileNamesToPublish[i])
}]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_fix&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2021-08-26 16:53:02&lt;/sys_created_on&gt;
        &lt;sys_id&gt;b030e81cb71230109fa9b381de11a948&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;2&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;Update Boot Action Context IDs&lt;/sys_name&gt;
        &lt;sys_package display_value="AI Search" source="com.glide.ais"&gt;eb04fc283c31311068bcf327dfe37f93&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_fix_b030e81cb71230109fa9b381de11a948&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2021-08-26 17:00:04&lt;/sys_updated_on&gt;
        &lt;unloadable&gt;false&lt;/unloadable&gt;
    &lt;/sys_script_fix&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:23:41</sys_created_on>
        <sys_id>05933cdd83b01210c6695855eeaad3e9</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Update Boot Action Context IDs</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_05933cdd83b01210c6695855eeaad3e9</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:23:41</sys_updated_on>
        <tablename>sys_script_fix</tablename>
    </sys_metadata_link>
</record_update>
