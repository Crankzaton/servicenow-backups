<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>2cb052390b540300a6acc93563673a64</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.RMKingstonUpgradeHelper&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;RMKingstonUpgradeHelper&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var RMKingstonUpgradeHelper = Class.create();
RMKingstonUpgradeHelper.prototype = {
    initialize: function() {
    },
	
	run: function(processingDate) {
		this.endDate = null;
		if (!gs.nil(processingDate)) {
			this.endDate = new GlideDate();
			this.endDate.setValue(processingDate);
		} else
			return;
		
		this._populateActuals();
		this._populateTopTaskOnAllocationDaily();
		this._populateParentCategoryAvailability();
		this._populateParentCategoryCapacity();
		this._populateParentCategoryAllocated();
	},
	
	_populateActuals: function() {
		var resourcePlans = this._getResourcePlans();
		var updateOnly = true;
		while(resourcePlans.next()) {
			var timeCard = this._getTimeCards(resourcePlans.getValue('sys_id'));
			while(timeCard.next()) {
				var resourceActuals = new ResourceActuals(timeCard);
				resourceActuals.updateActualsFromTimeCard(updateOnly);
			}
		}
	},
	
	_populateTopTaskOnAllocationDaily: function() {
		var allocationDaily = new GlideRecord('resource_allocation_daily');
		allocationDaily.addNotNullQuery('task');
		allocationDaily.addNotNullQuery('allocation');
		allocationDaily.addNullQuery('top_task');
		allocationDaily.query();
		while(allocationDaily.next()) {
			allocationDaily.top_task = allocationDaily.allocation.resource_plan.top_task;
			allocationDaily.update();
		}
	},
	
	_populateParentCategoryAvailability: function() {
		this._updateAggregatesByCategory('resource_aggregate_daily', 'availability', 'availability');
		this._updateAggregatesByCategory('resource_aggregate_weekly', 'availability', 'availability');
		this._updateAggregatesByCategory('resource_aggregate_monthly', 'availability', 'availability');
	},
	
	_populateParentCategoryCapacity: function() {
		this._updateAggregatesByCategory('resource_aggregate_daily', 'capacity', 'capacity');
		this._updateAggregatesByCategory('resource_aggregate_weekly', 'capacity', 'capacity');
		this._updateAggregatesByCategory('resource_aggregate_monthly', 'capacity', 'capacity');
	},
	
	_populateParentCategoryAllocated: function() {
		//For category project_allocated
		this._updateAggregatesByCategory('resource_aggregate_daily', 'project_allocated', 'allocated');
		this._updateAggregatesByCategory('resource_aggregate_weekly', 'project_allocated', 'allocated');
		this._updateAggregatesByCategory('resource_aggregate_monthly', 'project_allocated', 'allocated');
		//For category project_confirmed
		this._updateAggregatesByCategory('resource_aggregate_daily', 'project_confirmed', 'allocated');
		this._updateAggregatesByCategory('resource_aggregate_weekly', 'project_confirmed', 'allocated');
		this._updateAggregatesByCategory('resource_aggregate_monthly', 'project_confirmed', 'allocated');
		//For category non_project_time
		this._updateAggregatesByCategory('resource_aggregate_daily', 'non_project_time', 'allocated');
		this._updateAggregatesByCategory('resource_aggregate_weekly', 'non_project_time', 'allocated');
		this._updateAggregatesByCategory('resource_aggregate_monthly', 'non_project_time', 'allocated');
	},
	
	_updateAggregatesByCategory: function(tableName, category, parentCategory) {
		var gr = new GlideRecord(tableName);
		gr.addQuery('category', category);
		if (parentCategory == 'allocated')
			gr.addNullQuery('parent_category');
		gr.setValue('parent_category', parentCategory);
		gr.updateMultiple();
	},
	
	_getResourcePlans: function() {
		var gr = new GlideRecord('resource_plan');
		gr.addQuery('end_date','&gt;=',this.endDate);
		gr.query();
		return gr;
	},
	
	_getTimeCards: function(resourcePlan) {
		var gr = new GlideRecord('time_card');
		gr.addQuery('resource_plan',resourcePlan);
		gr.addQuery('state', 'IN', 'Approved,Processed');
		gr.query();
		return gr;
	},

    type: 'RMKingstonUpgradeHelper'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2017-08-02 08:31:59&lt;/sys_created_on&gt;
        &lt;sys_id&gt;2cb052390b540300a6acc93563673a64&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;12&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;RMKingstonUpgradeHelper&lt;/sys_name&gt;
        &lt;sys_package display_value="Resource Management" source="com.snc.resource_management"&gt;7200da2b47e64210cd4e1ce4316d438e&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_2cb052390b540300a6acc93563673a64&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2017-09-05 12:50:18&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:13:11</sys_created_on>
        <sys_id>5f21349983b01210c6695855eeaad387</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>RMKingstonUpgradeHelper</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_5f21349983b01210c6695855eeaad387</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:13:11</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
