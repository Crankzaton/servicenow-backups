<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>false</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Cascade retire for custom definitions</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

 var gru = GlideScriptRecordUtil.get(current);
 var changedFields = gru.getChangedFieldNames();
 
 if(changedFields.size() === 1 && changedFields.get(0).equals("last_discovered")){
  //take no action, just a discovery ping
  return;
 } else {
  //check if definition of retired is among the total change list
  var retireDef = sn_cmdb.CMDBRetirementScriptableApi.getRetirementDefinitionForClass(current.sys_class_name);
  if(gs.nil(retireDef))
   return;
  var defParams = JSON.parse(retireDef);
  var shouldCascadeCheck = true;
  for(var key in defParams){
   //Each field of retirement def should be in the changed list AND
   //each field value should match the retirement def
   if(!changedFields.contains(key) || !current.getValue(key).equals(defParams[key])){ 
    shouldCascadeCheck = false;
    break;
   }
  }
  if(shouldCascadeCheck){
   var dependentCIHelper = new DependentCIHelper();
   dependentCIHelper.checkAndAddToEOLLedger(current.sys_id, current.sys_class_name, true);
  }
 }

})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:47:22</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>094b245183701210c6695855eeaad3b5</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Cascade retire for custom definitions</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_094b245183701210c6695855eeaad3b5</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:47:22</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=094b245183701210c6695855eeaad3b5"/>
</record_update>
