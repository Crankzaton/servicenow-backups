<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Validate Fields</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

 function isDuplicatedAPIInScope(sysScope, api) {
  var gr = new GlideRecord("sys_aw_registered_scripting_modal");
   gr.addQuery("api", api);
   gr.addQuery("sys_scope", sysScope);
   if (!current.isNewRecord())
    gr.addQuery('sys_id','!=',current.sys_id);
   gr.query();
   return gr.next();
 }
 
 function isDuplicatedComponentInScope(sysScope, component) {
  var gr = new GlideRecord("sys_aw_registered_scripting_modal");
   gr.addQuery("component", component);
   gr.addQuery("sys_scope", sysScope);
   if (!current.isNewRecord())
    gr.addQuery('sys_id','!=',current.sys_id);
   gr.query();
   return gr.next();
 }
 
 var api = current.getValue("api");
 var component = current.getValue("component");
 var sysScope = current.getValue("sys_scope");
 var error = '';
 
 if (!component) {
  error = gs.getMessage("{0} field is required.", current.getElement('component').getLabel());
 } else if (!api) {
  error = gs.getMessage("{0} field is required.", current.getElement('api').getLabel());
 } else {
   var invalid = !(/^[a-z][a-zA-Z_0-9]+$/.test(api)) || api.length < 2 || api.length > 20;
   if (invalid)
    error = gs.getMessage("{0} field value must be in alphanumeric characters but not start with number characters, and length should be between 2-20 characters long.", current.getElement('api').getLabel());
  else {
   if (isDuplicatedAPIInScope(sysScope, api))
    error = gs.getMessage("The {0} name already exists in scope {1}.", current.getDisplayValue('api'), current.getDisplayValue('sys_scope'));
   else if (isDuplicatedComponentInScope(sysScope, component))
    error = gs.getMessage("An API for Component {0} already exists in scope {1}.", current.getDisplayValue("component"), current.getDisplayValue("sys_scope"));
  }
 }
 
 if (error) {
  gs.addErrorMessage(error);
  current.setAbortAction(true);
 } 
 
})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:52:12</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>3b5c2c1983701210c6695855eeaad374</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Validate Fields</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_3b5c2c1983701210c6695855eeaad374</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:52:12</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=3b5c2c1983701210c6695855eeaad374"/>
</record_update>
