<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>7671a7ba93e73510b31a30dcebba10b7</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_fix"&gt;
    &lt;sys_script_fix action="INSERT_OR_UPDATE"&gt;
        &lt;before&gt;false&lt;/before&gt;
        &lt;description/&gt;
        &lt;name&gt;WF - Project Task Notification&lt;/name&gt;
        &lt;record_for_rollback&gt;true&lt;/record_for_rollback&gt;
        &lt;script&gt;&lt;![CDATA[(function executeRule(current, previous /*null when async*/ ) {

    //Sub Project - Review and Draft

    if ((current.correlation_display.toString() === 'CMS - Approve') || (current.correlation_display.toString() === 'CMS - Draft') &amp;&amp; (current.state.toString() === '3')) {

        var subProjID = []; //Sub Project Unique Value
        var projTask = []; //Sub Project Task Unique Values
        var closedTsk = []; //Closed Sub Projects
        var subProj = new GlideRecord('pm_project');
        subProj.addQuery('parent', current.parent.parent.getValue('sys_id'));
        subProj.query();
        while (subProj.next()) {
            subProjID.push(subProj.sys_id + "");

        }

        //All Sub Projects Task of Review And Draft
        var totTskLen = subProjID.length;
        for (var i = 0; i &lt; totTskLen; i++) {
            var subProjTsk = new GlideRecord('pm_project_task');
            subProjTsk.addQuery('parent', subProjID[i]);
            subProjTsk.addEncodedQuery('correlation_display=CMS - Approve^ORcorrelation_display=CMS - Draft');
            subProjTsk.query();
            while (subProjTsk.next()) {
                projTask.push(subProjTsk.sys_id + "");
            }
        }

        //All Sub Projects of Tasks Review And Draft - closed complete
        var comTskLen = subProjID.length;
        for (var k = 0; k &lt; comTskLen; k++) {
            var compTsk = new GlideRecord('pm_project_task');
            compTsk.addQuery('parent', subProjID[k]);
            compTsk.addEncodedQuery('correlation_display=CMS - Approve^ORcorrelation_display=CMS - Draft^state=3');
            compTsk.query();
            while (compTsk.next()) {
                closedTsk.push(compTsk.sys_id + "");
            }
        }


        if (projTask.length.toString() === closedTsk.length.toString()) {
            var grpType = "func";
            var chgGrpArr = [];
            var totalUsers = new ArrayUtil();
            var usrArrayMain = [];
            var chgMgmtGrps = new wfCMSDemandImpactedGrp().getImpactedAssignGroup(current.parent.parent.demand.getValue('sys_id'), grpType);

            chgGrpArr = chgMgmtGrps.split(",");

            var chgLen = chgGrpArr.length;

            for (var j = 0; j &lt; chgLen; j++) {
                var receipientList = new wfSPMCMSDemandUtils().getUserList(chgGrpArr[j]);
                var usrArray = receipientList.split(",");

                usrArrayMain = totalUsers.union(usrArrayMain, usrArray);

            }
            gs.eventQueue('wf.cms.review.implementation.readiness', current, usrArrayMain.toString());

        }



    }
    //Sub Project - Review and Draft


    //Formal Approval - Closed Incomplete
    if (((current.correlation_display.toString() === 'CMS - Formal Approval to move Forward') || (current.correlation_display.toString() === 'CMS-Formal Approval to move forward for Medium Change') || (current.correlation_display.toString() === 'CMS-Formal Approval to move forward for High Risk Change') || (current.correlation_display.toString() === 'CMS-Formal Approval to move forward for Low Change'))) {
        //gs.addInfoMessage('hello1');
        var prjGrpType = "func";
        var prjGrpArr = [];
        var prjUsers = new ArrayUtil();
        var prjArrayMain = [];
        var prjMgmtGrps = new wfSPMCMSNotification().getImpactedAssignGroup(current.parent.parent.demand.getValue('sys_id'), prjGrpType);

        prjGrpArr = prjMgmtGrps.split(",");

        var prjLen = prjGrpArr.length;

        for (var n = 0; n &lt; prjLen; n++) {
            var prjReceipList = new wfSPMCMSDemandUtils().getUserList(prjGrpArr[n]);
            var prjusrArray = prjReceipList.split(",");

            prjArrayMain = prjUsers.union(prjArrayMain, prjusrArray);

        }
        gs.eventQueue('wf.cms.formal.approval.for.change.effort', current, prjArrayMain.toString());
    }
    //Formal Approval - Closed Incomplete


    //CMS - Implementation Readiness Approval - Closed Incomplete
    if ((current.correlation_display.toString() === 'CMS - Implementation Readiness Approval') &amp;&amp; (current.state.toString() === '4')) {


        var prjGrp = "imp";
        var impGrpArr = [];
        var impUsers = new ArrayUtil();
        var impArrayMain = [];
        var impMgmtGrps = new wfCMSDemandImpactedGrp().getImpactedAssignGroup(current.parent.demand, prjGrp);

        impGrpArr = impMgmtGrps.split(",");

        var impLen = impGrpArr.length;

        for (var m = 0; m &lt; impLen; m++) {
            var impReceipList = new wfSPMCMSDemandUtils().getUserList(impGrpArr[m]);
            var impUsrArray = impReceipList.split(",");

            impArrayMain = impUsers.union(impArrayMain, impUsrArray);

        }
        gs.eventQueue('wf.cms.imp.readiness.approval.incomplete', current, impArrayMain.toString());

    }

    //CMS - Implementation Readiness Approval - Closed Complete
    if ((current.correlation_display.toString() === 'CMS - Implementation Readiness Approval') &amp;&amp; (current.state.toString() === '3')) {

        var dmnRec = new GlideRecord('dmn_demand');
        dmnRec.addQuery('sys_id', current.parent.demand.getValue('sys_id'));
        dmnRec.query();
        if (dmnRec.next()) {

			var dmnMgr = dmnRec.demand_manager.getValue('sys_id');

            gs.eventQueue('wf.cms.imp.readiness.approval.complete', current, dmnMgr);

        }

    }



})(current, previous);]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_fix&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2024-01-09 13:24:55&lt;/sys_created_on&gt;
        &lt;sys_id&gt;7671a7ba93e73510b31a30dcebba10b7&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;WF - Project Task Notification&lt;/sys_name&gt;
        &lt;sys_package display_value="Global" source="global"&gt;global&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_fix_7671a7ba93e73510b31a30dcebba10b7&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2024-01-09 13:24:55&lt;/sys_updated_on&gt;
        &lt;unloadable&gt;false&lt;/unloadable&gt;
    &lt;/sys_script_fix&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:22:02</sys_created_on>
        <sys_id>3033f89d83b01210c6695855eeaad34e</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>WF - Project Task Notification</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_3033f89d83b01210c6695855eeaad34e</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:22:02</sys_updated_on>
        <tablename>sys_script_fix</tablename>
    </sys_metadata_link>
</record_update>
