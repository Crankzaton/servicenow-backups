<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition>!previous.workflow_state.nil()</condition>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Update Stage State</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
 
 // We know we are running Legacy
 // but ensure it is Legacy with no Icon Attribute
 if (!current.workflow_state.getED().hasAttribute('icon'))
  updateVistitedStages();

 function updateVistitedStages() {
  // Lookup our Stage status GlideRecord
  var stageStatusGr = getStageStatus();
  
  // Create a StageState JSON Object with Value and Visited array
  var stageStatus = new StageStatus(stageStatusGr.getValue('stage_status'));
  var visited = stageStatus.getVisited();

  // Add our last Stage to the list of visited
  if ((current.workflow_state != previous.workflow_state) && (visited.indexOf(previous.workflow_state.toString()) == -1))
   visited.push(previous.workflow_state.toString());

  // Update our Stage state list with our new stage
  updateStages(stageStatusGr, stageStatus, visited);
 }
 
 function updateStages(stageStatusGr, ss, stages) {
  ss.setValue(current.workflow_state.toString());
  ss.setVisited(stages);
  
  stageStatusGr.setValue("stage_status", ss.toString1());
  stageStatusGr.update();
 }
 
 function getStageStatus() {
  var ss = new GlideRecord("stage_state");
  ss.addQuery("id", current.sys_id);
  ss.addQuery("table", current.getTableName());
  ss.query();
  if (ss.next())
   return ss;
  else
   return createStageState();
 }
 
 function createStageState() {
  // Create an new StageStatus JSON object with our current value
  var ss = new StageStatus();
  ss.setValue(current.workflow_state.toString());
  
  var stageStates = new GlideRecord("stage_state");
  stageStates.initialize();
  stageStates.setValue("table", current.getTableName());
  stageStates.setValue("id", current.sys_id);
  stageStates.setValue("stage_status", ss.toString1());
  stageStates.insert();
  return stageStates;
 }
 
})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:54:10</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>34dc6cd983701210c6695855eeaad310</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Update Stage State</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_34dc6cd983701210c6695855eeaad310</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:54:10</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=34dc6cd983701210c6695855eeaad310"/>
</record_update>
