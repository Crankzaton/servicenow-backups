<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition>current.run_calc_brs != false &amp;&amp; ( current.instanceOf("pm_project") || current.instanceOf("pm_project_task")  || current.instanceOf("pm_program_task") )</condition>
        <description/>
        <execute_function>true</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Disable the Change of Planned Dates</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[function onBefore(current, previous) {
    var propertyName = 'com.snc.project.enable_alter_of_planned_dates';
    var property = 'com.snc.project.move_project.wip';
    var tableName = current.sys_class_name;
    var isEnableAlterOfPlannedDates = SNC.PPMConfig.getProperty(propertyName, tableName, 'false');
    var isMoveProjectAllowed = SNC.PPMConfig.getProperty(property, tableName, 'false');

    // If Task is in WIP and Planned Start Date Changes OR
    // If Task is Closed and Planned Start Date or Planned End Date Changes
    var stateUtil = new PlannedTaskStateUtil(current);
    var stateBucket = stateUtil.getBucketForState(current.state);

    var currentStartDate = current.getValue("start_date");
    var previousStartDate = previous.getValue("start_date");
    var startDateChanged = current.start_date.changes() && currentStartDate != previousStartDate;

    if (stateBucket == PlannedTaskStateUtil.CLOSE_STATES) {
        if (current.end_date.changes()) {
            // Ignore this condition if triggered for Actual dates update
            if (!(current.work_start.changes() || current.work_end.changes() || current.state.changes()) && !current.rollup) {
                gs.addErrorMessage(gs.getMessage("Cannot change the planned end date of closed task"));
                current.setAbortAction(true);
            }
        }
    }

    if (stateBucket != PlannedTaskStateUtil.OPEN_STATES && stateBucket != PlannedTaskStateUtil.PENDING_STATES) {
        if (current.instanceOf('pm_project')) {
            if (startDateChanged && isMoveProjectAllowed != 'true') {
                gs.addErrorMessage(gs.getMessage("Cannot change the planned start date of already started / complete task"));
                current.setAbortAction(true);
            }
        } else if (current.instanceOf('pm_project_task')) {
            if (startDateChanged && isEnableAlterOfPlannedDates != 'true') {
                gs.addErrorMessage(gs.getMessage("Cannot change the planned start date of already started / complete task"));
                current.setAbortAction(true);
            }
        }
    }

    var isPMOActive = GlidePluginManager.isActive('com.snc.financial_planning_pmo');
    if (startDateChanged && isPMOActive) {
        var ppmProjectFunding = new PPMProjectFunding();
        var projectFunding = ppmProjectFunding.findProjectFundingForEntity(current.sys_id);
        if (projectFunding.isPlanned()) {
            gs.addErrorMessage(gs.getMessage("The project has been selected for execution in {0} and cannot be moved", [projectFunding.fiscalPeriodDisplayValue()]));
            current.setAbortAction(true);
        }
    }
}]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:50:33</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>3bfba09583701210c6695855eeaad374</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Disable the Change of Planned Dates</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_3bfba09583701210c6695855eeaad374</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:50:33</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=3bfba09583701210c6695855eeaad374"/>
</record_update>
