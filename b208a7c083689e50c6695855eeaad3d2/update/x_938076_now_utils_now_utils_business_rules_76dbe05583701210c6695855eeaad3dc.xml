<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition>(JSUtil.nil(current.item_option_new) &amp;&amp; JSUtil.nil(current.set)) || (current.item_option_new.changes() || current.set.changes())</condition>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Check catalog item field for variable</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

 // Add your code here
 var catItem = new SNCCatalogWizardUtil().getCatItemFromWizardQuestion(current);
 if (JSUtil.nil(catItem)) {
  abortInsert(gs.getMessage('Catalog item configuration for this wizard is invalid. Please choose a valid catalog item before inserting a question')); 
  return;
 }
 else if (!current.map_to_set)
  validateQuestion(catItem);
 else if (current.map_to_set)
  validateMRVS(catItem);

 function abortInsert(message) {
  gs.addErrorMessage(message);
  current.setAbortAction(true);
 }
 
 function validSet(qSetId, itemId) {
  var catItem = new sn_sc.CatItem(itemId);
  if (JSUtil.nil(catItem))
   return false;
  var varSets = catItem.getVariableSet();
  return (varSets.indexOf(qSetId + '') > -1);
 }
 
 function validateQuestion(itemId) {
  var invalidQuestionMsg = gs.getMessage('Please select a valid question');
  var invalidCatalogItemMsg = gs.getMessage('The selected question is not associated with the catalog item configured on this wizard');
  var quesId = current.getValue("item_option_new");
  if (!GlideStringUtil.isEligibleSysID(quesId)) {
   abortInsert(invalidQuestionMsg);
   return;
  }
  var questionObj = GlideappQuestion.getQuestion(quesId);
  if (JSUtil.nil(questionObj)) {
   abortInsert(invalidQuestionMsg);
   return;
  }
  var qItemId = questionObj.getCatalogItem();
  var qSetId = questionObj.getVSetID();
  if (qItemId == itemId)
   return;
  if (!GlideStringUtil.isEligibleSysID(qSetId)) {
   abortInsert(invalidCatalogItemMsg);
   return;
  }
  if (questionObj.getVSetType().toString() == "one_to_many") {
   abortInsert(invalidQuestionMsg);
   return;
  }
  if (!validSet(qSetId,itemId))
   abortInsert(invalidCatalogItemMsg);
 }
 
 function validateMRVS(itemId) {
  var invalidMRVSMsg = gs.getMessage('Please select a valid MRVS');
  var invalidCatalogItemMsg = gs.getMessage('The selected MRVS is not associated with the catalog item configured on this wizard');
  var setId = current.getValue("set");
  if (!GlideStringUtil.isEligibleSysID(setId)) {
   abortInsert(invalidMRVSMsg);
   return;
  }
  var setGr = new GlideRecord("item_option_new_set");
  if (!setGr.get(setId) || setGr.getValue("type") != "one_to_many") {
   abortInsert(invalidMRVSMsg);
   return;
  }
  if (!validSet(setId,itemId))
   abortInsert(invalidCatalogItemMsg);
 }

})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:49:57</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>76dbe05583701210c6695855eeaad3dc</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Check catalog item field for variable</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_76dbe05583701210c6695855eeaad3dc</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:49:57</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=76dbe05583701210c6695855eeaad3dc"/>
</record_update>
