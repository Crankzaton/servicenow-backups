<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>48e1635fdbeabd10653d1a5913961962</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.wfSPMCMSCFITUtils&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;wfSPMCMSCFITUtils&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var wfSPMCMSCFITUtils = Class.create();
wfSPMCMSCFITUtils.prototype = {
    initialize: function() {},

    getImpactedGrpsFromInitAssessment: function(dmnGr) {
        var strValue = "";
        var intGrpLength = 0;
        var impGrps = "";
        var impSubGroups = "";
        var impquestSubgroupArea = "u_select_impacted_functional_business_sub_group_areas";
        var impquestSubgroup = "u_select_impacted_functional_business_sub_groups";
        var mtrTypeRec = gs.getProperty('wf.spm.cms.demand.assessments');
        var metricObj = JSON.parse(mtrTypeRec);
        var mtrType = metricObj["initAssessment"];
        var asmtInsGr = new GlideRecord("asmt_assessment_instance");
        asmtInsGr.addQuery("task_id", dmnGr);
        asmtInsGr.addQuery("metric_type", mtrType);
        asmtInsGr.addQuery("state", "complete");
        asmtInsGr.query();
        if (asmtInsGr.next()) {

            var asmtGr = new GlideRecord("asmt_metric_result");
            asmtGr.addQuery('instance', asmtInsGr.sys_id);
            asmtGr.addQuery('metric.name', 'IN', impquestSubgroupArea);
            asmtGr.query();
            while (asmtGr.next()) {


                if (asmtGr.string_value != "N/A") {
                    var anSubArea = asmtGr.string_value;
                    impGrps = impGrps + "," + anSubArea;
                } else {
                    impGrps = "";
                }




            }
            var asmtGr1 = new GlideRecord("asmt_metric_result");
            asmtGr1.addQuery('instance', asmtInsGr.sys_id);
            asmtGr1.addQuery('metric.name', 'IN', impquestSubgroup);
            asmtGr1.query();
            while (asmtGr1.next()) {

                if (asmtGr1.string_value != "N/A") {
                    var anSubgrp = asmtGr1.string_value;
                    impSubGroups = impSubGroups + "," + anSubgrp;
                } else {
                    impSubGroups = "";
                }




            }
        }
        var subGroupVls = impSubGroups.toString();
        var subGrpAreaVls = impGrps.toString();
        //subGrpAreaVls = subGrpAreaVls.substring(1);
        var impSubGrpvls = this.getDepndtValuesfromAssRsltChoiceTable(impSubGroups, subGrpAreaVls);
        //impSubGrpvls = impSubGrpvls.substring(1);
        if (impSubGrpvls.length === 0) {
            strValue = subGrpAreaVls;
        } else {
            strValue = subGrpAreaVls + "," + impSubGrpvls;
        }


        strValue = strValue.substring(1);



        return impSubGrpvls;

    },
    getDepndtValuesfromAssRsltChoiceTable: function(subGrpVls, subgrpAreaVls) {
        var strValue = "";
        var impArray = subGrpVls.toString();
        var impArray2 = subgrpAreaVls.toString();
        
        if (impArray2.length === 0) {
            strValue = subGrpVls;
            return strValue;
        } else {
			var dependentgrps = "";
            var area = impArray2.split(",");
            var array = area.length;
            for (var i = 0; i &lt; array; i++) {
				
                var chsgr = new GlideRecord("sys_choice");
                chsgr.addQuery("name", "u_assessment_results");
                chsgr.addQuery("element", "u_select_impacted_functional_business_sub_group_areas");
                chsgr.addQuery("value", area[i]);
                chsgr.groupBy("dependent_value");
                chsgr.query();

                if (chsgr.next()) {
                    var assignGrpsStr = chsgr.getValue("dependent_value");
                    dependentgrps = dependentgrps + "," + assignGrpsStr;
                    //dependentgrps.push(assignGrpsStr);
                }
            }



            // var array1 = subGrpVls.split(",");
            // var array2 = dependentgrps.split(",");
            // var nonMatchingValues = array1.filter(function(value) {
            //     return array2.indexOf(value) === -1;
            // });




        }

       //var impNonMatchValue = nonMatchingValues.toString();
        return dependentgrps;

    },






    type: 'wfSPMCMSCFITUtils'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;k098118&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2023-11-22 09:41:15&lt;/sys_created_on&gt;
        &lt;sys_id&gt;48e1635fdbeabd10653d1a5913961962&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;59&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;wfSPMCMSCFITUtils&lt;/sys_name&gt;
        &lt;sys_package display_value="Global" source="global"&gt;global&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_48e1635fdbeabd10653d1a5913961962&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2024-02-04 17:24:11&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:36:38</sys_created_on>
        <sys_id>fa8678d983f01210c6695855eeaad362</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>wfSPMCMSCFITUtils</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_fa8678d983f01210c6695855eeaad362</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:36:38</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
