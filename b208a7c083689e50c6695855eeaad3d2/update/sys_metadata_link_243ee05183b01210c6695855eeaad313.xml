<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>368ba0d183701210c6695855eeaad367</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules"&gt;
    &lt;x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE"&gt;
        &lt;abort_action&gt;false&lt;/abort_action&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;action_delete&gt;true&lt;/action_delete&gt;
        &lt;action_insert&gt;true&lt;/action_insert&gt;
        &lt;action_query&gt;false&lt;/action_query&gt;
        &lt;action_update&gt;true&lt;/action_update&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;add_message&gt;false&lt;/add_message&gt;
        &lt;advanced&gt;true&lt;/advanced&gt;
        &lt;change_fields&gt;false&lt;/change_fields&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;collection/&gt;
        &lt;condition&gt;!gs.nil(current.profile)&lt;/condition&gt;
        &lt;description/&gt;
        &lt;execute_function&gt;false&lt;/execute_function&gt;
        &lt;filter_condition/&gt;
        &lt;is_rest&gt;false&lt;/is_rest&gt;
        &lt;message/&gt;
        &lt;name&gt;Update profile state&lt;/name&gt;
        &lt;order&gt;100&lt;/order&gt;
        &lt;priority&gt;100&lt;/priority&gt;
        &lt;rest_method/&gt;
        &lt;rest_method_text/&gt;
        &lt;rest_service/&gt;
        &lt;rest_service_text/&gt;
        &lt;rest_variables/&gt;
        &lt;role_conditions/&gt;
        &lt;script&gt;&lt;![CDATA[function abortDueToSpellcheckViolation(profileDictionaryM2MRecord) {
    gs.addErrorMessage(gs.getMessage("Operation Failed: You cannot link the dictionary \"{0}\" with the profile \"{1}\" because you can only have one spellcheck dictionary per profile, and \"{2}\" has the spellcheck dictionary \"{3}\" associated with it.", [GlideStringUtil.escapeHTML(current.dictionary.name), GlideStringUtil.escapeHTML(current.profile.name), GlideStringUtil.escapeHTML(current.profile.name), GlideStringUtil.escapeHTML(profileDictionaryM2MRecord.dictionary.name)]));
    current.setAbortAction(true);
}

function abortDueToPreExisting(profileDictionaryM2MRecord) {
    gs.addErrorMessage(gs.getMessage("Operation failed: The dictionary \"{0}\" has already been linked to the profile \"{1}\"", [GlideStringUtil.escapeHTML(current.dictionary.name), GlideStringUtil.escapeHTML(current.profile.name)]));
    current.setAbortAction(true);
}

/* 
 * Check to see if the dictionary is able to be linked
 *
 * A dictionary can be linked if:
 *
 *   1.) It is not already linked to the profile
 *   2.) It is a spellcheck dictionary, and the profile does not have a spellcheck 
 *       dictionary already associated with it
 */
if (current.operation() == 'insert') {
    var profileDictionaryM2MGR = new GlideRecord('ais_search_profile_ais_dictionary_m2m');
    profileDictionaryM2MGR.addQuery('profile', current.profile);
    profileDictionaryM2MGR.query();
    while (profileDictionaryM2MGR.next()) {
        if (current.dictionary.type === 'SPELLCHECK' &amp;&amp; profileDictionaryM2MGR.dictionary.type === 'SPELLCHECK') {
            abortDueToSpellcheckViolation(profileDictionaryM2MGR);
        } else if (current.dictionary == profileDictionaryM2MGR.dictionary) {
            abortDueToPreExisting(profileDictionaryM2MGR);
        }
    }
}

// Everything checks out, update the profile to be in a draft state if necessary
if (!current.isActionAborted()) {
    var profileGR = new GlideRecord('ais_search_profile');
    if (profileGR.get(current.profile)) {
        if (profileGR.state != "NEW") {
            profileGR.state = 'DRAFT';
            profileGR.update();
        }
    }
}]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;x_938076_now_utils_now_utils_business_rules&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2024-09-21 07:48:35&lt;/sys_created_on&gt;
        &lt;sys_domain&gt;global&lt;/sys_domain&gt;
        &lt;sys_domain_path&gt;/&lt;/sys_domain_path&gt;
        &lt;sys_id&gt;368ba0d183701210c6695855eeaad367&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;Update profile state&lt;/sys_name&gt;
        &lt;sys_overrides/&gt;
        &lt;sys_package display_value="Now Utils" source="x_938076_now_utils"&gt;b208a7c083689e50c6695855eeaad3d2&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Now Utils"&gt;b208a7c083689e50c6695855eeaad3d2&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;x_938076_now_utils_now_utils_business_rules_368ba0d183701210c6695855eeaad367&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2024-09-21 07:48:35&lt;/sys_updated_on&gt;
        &lt;template/&gt;
        &lt;when&gt;before&lt;/when&gt;
    &lt;/x_938076_now_utils_now_utils_business_rules&gt;
    &lt;sys_translated_text action="delete_multiple" query="documentkey=368ba0d183701210c6695855eeaad367"/&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:00:10</sys_created_on>
        <sys_id>243ee05183b01210c6695855eeaad313</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Update profile state</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_243ee05183b01210c6695855eeaad313</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:00:10</sys_updated_on>
        <tablename>sys_script</tablename>
    </sys_metadata_link>
</record_update>
