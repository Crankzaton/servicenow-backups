<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>8093a9f5b71930100290b9708e11a9a0</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;sn_app_intake.AppIntakeApprovalEmail&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;Constructs the Application Intake Approval email, only to be used in the email script. &lt;/description&gt;
        &lt;name&gt;AppIntakeApprovalEmail&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var AppIntakeApprovalEmail = Class.create();
AppIntakeApprovalEmail.prototype = {
    initialize: function() {},

    type: 'AppIntakeApprovalEmail',
    getEmailSubject: function() {
        return gs.getMessage("Your app access has been approved");
    },
    getEmailMessage: function(openedBy, appName, devEnvURL) {
        //using double quotes here instead of \' for translation keys
        var g2g = gs.getMessage("{0}Now you can start working on this app{1}", ['&lt;h1 style="margin-bottom: 50px;"&gt;', '&lt;/h1&gt;']);
        var intro = gs.getMessage('{0}Hi {1},{2}', ['&lt;p&gt;', openedBy, '&lt;/p&gt;']);
        var message = gs.getMessage('{0}Your admin has reviewed and approved your request to access {1} in App Engine Studio.{2}', ['&lt;p style="margin-bottom: 24px;"&gt;', appName, '&lt;/p&gt;']);
        var tips = gs.getMessage('{0}If you need any help while working on this app, try browsing the resources available on App Engine Studio. You can also reach out to your admin if you have any additional questions.{1}', ['&lt;p&gt;', '&lt;/p&gt;']);
        var button = '';
        //check if aes is enabled
        if (GlidePluginManager.isActive('com.snc.app-engine-studio')) {
            var trailingSlashRegex = /\/+$/;
            var instanceUrl = devEnvURL &amp;&amp; devEnvURL.replace(trailingSlashRegex, '');
            var linkUrl = instanceUrl + '/now/appenginestudio';
            var buttonOpenTags = '&lt;p style="text-align: center; margin-top: 40px;"&gt;&lt;a class="btn" href="' + linkUrl + '"&gt;';
            var buttonCloseTags = '&lt;/a&gt;&lt;/p&gt;';
            button = gs.getMessage('{0}Go to App Engine Studio{1}', [buttonOpenTags, buttonCloseTags]);
        }
        return g2g + "\n" + intro + "\n" + message + "\n" + tips + "\n" + button;
    },

	getEmailMessageLimited: function(openedBy, appName) {
        //using double quotes here instead of \' for translation keys
        var g2g = gs.getMessage("{0}Now you can start working on this app{1}", ['&lt;h1 style="margin-bottom: 50px;"&gt;', '&lt;/h1&gt;']);
        var intro = gs.getMessage('{0}Hi {1},{2}', ['&lt;p&gt;', openedBy, '&lt;/p&gt;']);
        var message = gs.getMessage('{0}Your admin has reviewed and approved your request to access {1} in App Engine Studio.{2}', ['&lt;p style="margin-bottom: 24px;"&gt;', appName, '&lt;/p&gt;']);
        var tips = gs.getMessage('{0}If you need any help while working on this app, try browsing the resources available on App Engine Studio. You can also reach out to your admin if you have any additional questions.{1}', ['&lt;p&gt;', '&lt;/p&gt;']);

        return g2g + "\n" + intro + "\n" + message + "\n" + tips;
    },

    getEmailMessageManualPermissionProvisioning: function(openedBy, appName) {
        //using double quotes here instead of \' for translation keys
        var g2g = gs.getMessage("{0}Now you can start working on this app{1}", ['&lt;h1 style="margin-bottom: 50px;"&gt;', '&lt;/h1&gt;']);
        var intro = gs.getMessage('{0}Hi {1},{2}', ['&lt;p&gt;', openedBy, '&lt;/p&gt;']);
        var message = gs.getMessage('{0}Your admin has reviewed and approved your request to access {1} in App Engine Studio.{2}', ['&lt;p style="margin-bottom: 24px;"&gt;', appName, '&lt;/p&gt;']);

        var adminsGr = new GlideRecord('sys_user_group');
        adminsGr.get(AppIntakeConstants.groups.APP_ENGINE_ADMINS);
        var email = adminsGr.getValue('email');
        if (email) {
            message = message + gs.getMessage('{0}If you need any help while working on this app, try browsing the resources available on App Engine Studio. You can also reach out to your admin at {1} if you have any additional questions.{2}', ['&lt;p&gt;', email, '&lt;/p&gt;']);
        } else {
            message = message + gs.getMessage('{0}If you need any help while working on this app, try browsing the resources available on App Engine Studio. You can also reach out to your admin if you have any additional questions.{1}', ['&lt;p&gt;', '&lt;/p&gt;']);
        }

        return g2g + "\n" + intro + "\n" + message;
    },

    getEmailMessageAdminManualPermissionProvisioning: function(openedBy, appName) {
        //using double quotes here instead of \' for translation keys
        var g2g = gs.getMessage("{0}Configure permissions for app access{1}", ['&lt;h1 style="margin-bottom: 50px;"&gt;', '&lt;/h1&gt;']);
        var intro = gs.getMessage('{0}Hi App Engine Admins,{2}', ['&lt;p&gt;', openedBy, '&lt;/p&gt;']);
		var message = gs.getMessage('{0}{1} requested access to App Engine Studio for app {2}. The request was approved, but the user canâ€™t access the app until you manually configure their permissions.{3}', ['&lt;p style="margin-bottom: 24px;"&gt;', openedBy, appName, '&lt;/p&gt;']);
		message = message + gs.getMessage('{0}To configure permissions, add the user to one of these groups:{1}', ['&lt;p style="margin-bottom: 24px;"&gt;', '&lt;ul&gt;']);
		message = message + gs.getMessage('{0}{1}App Engine Studio Users{2} - users can edit and create apps{3}', ['&lt;li&gt;', '&lt;b&gt;', '&lt;/b&gt;', '&lt;/li&gt;']);
		message = message + gs.getMessage('{0}{1}App Engine Studio User Limited{2} - users can only edit apps{3}', ['&lt;li&gt;', '&lt;b&gt;', '&lt;/b&gt;', '&lt;/li&gt;']);
		message = message + gs.getMessage('&lt;/ul&gt;&lt;/p&gt;');

        return g2g + "\n" + intro + "\n" + message;
    }
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2021-07-12 20:53:17&lt;/sys_created_on&gt;
        &lt;sys_id&gt;8093a9f5b71930100290b9708e11a9a0&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;70&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;AppIntakeApprovalEmail&lt;/sys_name&gt;
        &lt;sys_package display_value="Application Intake" source="sn_app_intake"&gt;3d3c2505c3e22010b83971e54440dd75&lt;/sys_package&gt;
        &lt;sys_policy&gt;read&lt;/sys_policy&gt;
        &lt;sys_scope display_value="Application Intake"&gt;3d3c2505c3e22010b83971e54440dd75&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_8093a9f5b71930100290b9708e11a9a0&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2022-12-22 19:35:25&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:39:25</sys_created_on>
        <sys_id>ef27309d83f01210c6695855eeaad3f5</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>AppIntakeApprovalEmail</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_ef27309d83f01210c6695855eeaad3f5</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:39:25</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
