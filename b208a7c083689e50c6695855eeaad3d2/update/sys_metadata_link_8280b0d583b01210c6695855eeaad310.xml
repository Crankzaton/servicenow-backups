<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>1168a7509381320064f572edb67ffbf5</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;public&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.ResourceAllocationDaily&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;ResourceAllocationDaily&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var ResourceAllocationDaily = Class.create();
ResourceAllocationDaily.prototype = {
    initialize: function(gr) {
		this.gr = gr;
    },
	
	convertBookingType : function(type,workflow) {    
		this.gr.setValue("booking_type",type);
		this.gr.setWorkflow(workflow);
		this.gr.update();
	},
	
	calculateAndSetManDaysAndFteFromHours: function() {
		var hours = this.gr.hours;
		this.gr.setValue("fte" ,this._hoursToFte(hours));
		this.gr.setValue("man_days",this.gr.getValue("fte"));
	},
	
	calculateAndSetFteAndHoursFromManDays: function() {
		var hours = this._manDaysToHours(this.gr.man_days);
		this.gr.setValue("fte", this.gr.getValue("man_days"));
		this.gr.setValue("hours" ,hours);
	},
	
	calculateAndSetManDaysAndHoursFromFte: function() {
		var hours = this._fteToHours(this.gr.fte);
		this.gr.setValue("man_days",this.gr.getValue("fte"));
		this.gr.setValue("hours" ,hours);
	},
	
	calculateAndSetActualManDaysAndFteFromActualHours: function() {
		var hours = this.gr.actual_hours;
		this.gr.setValue("actual_fte" ,this._hoursToFte(hours));
		this.gr.setValue("actual_man_days",this.gr.getValue("actual_fte"));
	},
	
	calculateAndSetActualFteAndHoursFromActualManDays: function() {
		var hours = this._manDaysToHours(this.gr.actual_man_days);
		this.gr.setValue("actual_fte", this.gr.getValue("actual_man_days"));
		this.gr.setValue("actual_hours" ,hours);
	},
	
	calculateAndSetActualManDaysAndHoursFromActualFte: function() {
		var hours = this._fteToHours(this.gr.actual_fte);
		this.gr.setValue("actual_man_days",this.gr.getValue("actual_fte"));
		this.gr.setValue("actual_hours" ,hours);
	},
	
	_calculateCost: function(hours) {
		if(gs.nil(hours) || parseFloat(hours) &lt;= 0)
			return 0;
		var cost = parseFloat(hours) * this.rateInfo.rate;
		return cost;
	},
	
	_getRateInfo: function(){
		if(JSUtil.nil(this.rateInfo)){
			var rmRates = new RMRates(this.gr.allocation.resource_plan.getRefRecord());
			var date = this.gr.date.getValue();
			var dailyRates = rmRates.getDailyRatesForUser(this.gr.user,date,date);
			this.rateInfo = dailyRates.getRateForDay(date);
		}
		return this.rateInfo;
	},
	
	updateAllocatedCost: function(hours){
		this._getRateInfo();
		var allocatedCost = this._calculateCost(hours);
		this.gr.setValue('allocated_cost', allocatedCost);
		this.gr.setValue('allocated_cost_rate_line' ,this.rateInfo.rate_line);
		this.gr.setValue('allocated_conversion_rate' ,this.rateInfo.conv_rate);
		this.gr.setValue('allocated_hourly_rate' ,this.rateInfo.rate);
	},
	
	updateActualCost: function(hours){
		this._updateCost("actual_cost","actual_cost_rate_line","actual_conversion_rate","actual_hourly_rate",hours);
	},
	
	_updateCost: function(costField,costRateLineField,costConvRate,costHourlyRate,hours){
		this._getRateInfo();
		var costValue = this._calculateCost(hours);
		this.gr.setValue(costField, costValue);
		this.gr.setValue(costRateLineField ,this.rateInfo.rate_line);
		this.gr.setValue(costConvRate ,this.rateInfo.conv_rate);
		this.gr.setValue(costHourlyRate ,this.rateInfo.rate);
	},
	
	_fteToHours: function(fte) {
		var averageDailyFte = this._userAverageDailyFte();
		var hours = averageDailyFte * fte;
		return hours;
	},
	
	_manDaysToHours: function(manDays) {
		return this._fteToHours(manDays);
	},
	
	_hoursToFte: function(hours) {
		var averageDailyFte = this._userAverageDailyFte();
		var fte = 0;
		if (averageDailyFte &gt; 0)
			fte = hours/averageDailyFte;
		return fte;
	},
	
	_hoursToManDays: function(hours){
		return this._hoursToFte(hours); //as fte and mandays are same for daily
	},
	
	_userAverageDailyFte: function() {
		if (gs.nil(this.averageDailyFte))
			this.averageDailyFte = RMUtil.averageDailyFteForUser(this.gr.getValue('user'));
		return this.averageDailyFte;
	},
	
	_setAverageDailyFte: function(value) {
		this.averageDailyFte = value;
	},

    type: 'ResourceAllocationDaily'
};

ResourceAllocationDaily.deleteRecords = function(rpIds, encodedQuery, workflow) {
	if(JSUtil.nil(rpIds))
		return;
	var resourceAllocationDaily = new GlideRecord('resource_allocation_daily');
	resourceAllocationDaily.addQuery('allocation.resource_plan', 'IN', rpIds);
	if(JSUtil.notNil(encodedQuery))
		resourceAllocationDaily.addEncodedQuery(encodedQuery);
	if(JSUtil.notNil(workflow) &amp;&amp; !workflow)
		resourceAllocationDaily.setWorkflow(workflow);
	resourceAllocationDaily.deleteMultiple();
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2017-02-16 10:47:43&lt;/sys_created_on&gt;
        &lt;sys_id&gt;1168a7509381320064f572edb67ffbf5&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;22&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;ResourceAllocationDaily&lt;/sys_name&gt;
        &lt;sys_package display_value="Resource Management" source="com.snc.resource_management"&gt;7200da2b47e64210cd4e1ce4316d438e&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_1168a7509381320064f572edb67ffbf5&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2020-04-26 13:50:55&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:10:22</sys_created_on>
        <sys_id>8280b0d583b01210c6695855eeaad310</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>ResourceAllocationDaily</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_8280b0d583b01210c6695855eeaad310</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:10:22</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
