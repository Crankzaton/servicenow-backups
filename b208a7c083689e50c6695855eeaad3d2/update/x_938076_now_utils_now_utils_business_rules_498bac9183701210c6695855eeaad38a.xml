<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>true</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Populate scratchpads for subscription</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[function onDisplay(current, g_scratchpad) {
    g_scratchpad.subscriptionAllotmentType = getSubscriptionAllotmentType(current);
 g_scratchpad.viewSubscriptionHistory = gs.getMessage('Subscription History');
  g_scratchpad.dashboard_id = current.dashboard_id;
 getDashboardLink();
}

function getDashboardLink() {
    var dashboard_id = current.dashboard_id;
    var allotGR = new GlideRecord('license_dashboard_inventory');
    allotGR.addQuery('dashboard_id', dashboard_id);
    allotGR.query();

    if (allotGR.next()) {
        var dashboard_link = allotGR.getValue('dashboard_link');
        if (dashboard_link) {            
            g_scratchpad.dashboard_link = dashboard_link;
        }
    }
}

function getSubscriptionAllotmentType(current) {
    const entitlementEngineUtils = new sn_lef.EntitlementEngineUtils();
    let ctiSubscriptionReference = 'license';
    if (entitlementEngineUtils.canRouteToEMS())
        ctiSubscriptionReference = 'subscription_entitlement';

    const allotGR = new GlideRecord('license_cust_table_allotment');
    allotGR.addQuery(ctiSubscriptionReference, current.getUniqueValue());
    allotGR.query();
    let allotmentType = "-1";
    if (allotGR.next())
        allotmentType = allotGR.getValue('allotment_type');

    if (allotmentType == '3') // TableBundle
        gs.addInfoMessage(gs.getMessage('Custom tables associated to this subscription are managed through the "Manage Your Tables" link.'));
    else if (allotmentType == '2') // Grandfather
        gs.addInfoMessage(gs.getMessage('Please note: Once added, tables cannot be removed from this subscription'));
    else if (allotmentType == '1') { // AppEngine/PlatformOnly
        const tableCount = entitlementEngineUtils.getTableCount(allotmentType, current.getUniqueValue());

        if (tableCount > 0) {
            const params = [current.purchased_count, tableCount];
            gs.addInfoMessage(gs.getMessage('{0} users may access up to {1} custom tables from given Custom Tables list', params));
        }
    }

    return allotmentType;
}]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:48:27</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>498bac9183701210c6695855eeaad38a</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Populate scratchpads for subscription</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_498bac9183701210c6695855eeaad38a</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:48:27</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=498bac9183701210c6695855eeaad38a"/>
</record_update>
