<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>d49844c687f0130049e94c2c59cb0be9</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_fix"&gt;
    &lt;sys_script_fix action="INSERT_OR_UPDATE"&gt;
        &lt;before&gt;false&lt;/before&gt;
        &lt;description&gt;Set enable Client Side to true and fire_br to false for zbooted Customers&lt;/description&gt;
        &lt;name&gt;Set enable client side for pm_project&lt;/name&gt;
        &lt;record_for_rollback&gt;false&lt;/record_for_rollback&gt;
        &lt;script&gt;&lt;![CDATA[resetDefaultForUpgrade();

function checkCustomRecord(recordName) {
	var gr = new GlideRecord('sys_update_xml');
	gr.addQuery("name", recordName);
	gr.addQuery("replace_on_upgrade", false);
	gr.query();
	if(gr.next())
		return true;
	return false;
}

function isRecordExists(recordName) {
    if (gs.tableExists(recordName)) {
        var gr = new GlideRecord(recordName);
        gr.query();
        if (gr.getRowCount() &gt; 0)
            return true;
    }
    return false;
}

function resetDefaultForUpgrade(){
	var isPlannedTaskActive = this.isRecordExists('planned_task');
	var isPPSActive = this.isRecordExists('pm_project');
	gs.log('Fix Script for enable client , planned_task_v2 active = '+isPlannedTaskActive+' and isPPSActive = '+isPPSActive);
	if(isPlannedTaskActive){
		gs.log('Setting Enable Client to false');
		var gr = new GlideRecord('pm_console');
		gr.query();
		gr.setValue('enable_client_side', false);
		gr.setWorkflow(false);
		gr.updateMultiple();
		
		//Here, Only the pm_project display columns are handled, Teamspace related console columns will be synced during the fix script execution of respective teamSpaces
		var pmConsole = new GlideRecord('pm_console');
		pmConsole.addQuery('entity','pm_project');
		pmConsole.addQuery('context','default');
		pmConsole.query();
		if(isPPSActive){//For instances that have PPS already activated.
			
			if(pmConsole.next()){
				gs.log('Resetting fire_br to true');
				var pmConsoleDispColumns = new GlideRecord('pm_console_display_column');
				pmConsoleDispColumns.addQuery('pm_console',pmConsole.getValue('sys_id'));
				pmConsoleDispColumns.addQuery('json_column','IN', 'state,actual_start_date,actual_end_date,percent_complete');
				pmConsoleDispColumns.query();

				while(pmConsoleDispColumns.next()){
					if(!checkCustomRecord('pm_console_display_column'+'_'+pmConsoleDispColumns.getValue('sys_id'))){
						pmConsoleDispColumns.setWorkflow(false);
						pmConsoleDispColumns.setValue('fire_br',true);
						pmConsoleDispColumns.update();
					}
				}
			}
		}else if(!isPPSActive){//Resetting to default, This is to handle the scenario where, planned_task_v2 was activated but PPS is not yet active
			//fire_br is already set to false through seeded data, Hence not resetting here. 
			gs.log('Resetting Enable Client to true');
			if(pmConsole.next()){
			pmConsole.setValue('enable_client_side', true);
			pmConsole.setWorkflow(false);
			pmConsole.update();
		}
	}
		
	}
	
}]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_fix&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2018-03-13 11:19:39&lt;/sys_created_on&gt;
        &lt;sys_id&gt;d49844c687f0130049e94c2c59cb0be9&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;35&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;Set enable client side for pm_project&lt;/sys_name&gt;
        &lt;sys_package display_value="Planned Task_v2" source="com.snc.planned_task_v2"&gt;92ef82e747e64210cd4e1ce4316d43f1&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_fix_d49844c687f0130049e94c2c59cb0be9&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2018-03-19 15:51:32&lt;/sys_updated_on&gt;
        &lt;unloadable&gt;false&lt;/unloadable&gt;
    &lt;/sys_script_fix&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 09:40:52</sys_created_on>
        <sys_id>7b3585d583741210c6695855eeaad311</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Set enable client side for pm_project</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_7b3585d583741210c6695855eeaad311</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 09:40:52</sys_updated_on>
        <tablename>sys_script_fix</tablename>
    </sys_metadata_link>
</record_update>
