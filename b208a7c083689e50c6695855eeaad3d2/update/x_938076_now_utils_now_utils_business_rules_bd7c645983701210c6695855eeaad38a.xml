<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>true</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description>Restricts taxonomy layers to be updated or deleted when nodes are present in any layer within a portfolio</description>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Block taxonomy layer operations</name>
        <order>40</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

 var gr = new GlideRecord('spm_taxonomy_node');
 var query = 'spm_service_portfolio='+current.spm_service_portfolio;

 if (current.operation() != 'insert' && previous.spm_service_portfolio != current.spm_service_portfolio)
  query += '^ORspm_service_portfolio='+previous.spm_service_portfolio;

 gr.addEncodedQuery(query);
 gr.query();

 if (!gr.next())
  return;

 switch (current.operation()){
  case 'insert':
   gs.addErrorMessage(gs.getMessage('This layer cannot be created because there are taxonomy layers in this portfolio that contain nodes'));
   current.setAbortAction(true);
   break;
  case 'update':
   if (previous.order != current.order || previous.spm_service_portfolio != current.spm_service_portfolio){
    gs.addErrorMessage(gs.getMessage('A node for this portfolio has been created already. Taxonomy layers ordering and portfolio reassignments are locked'));
    current.setAbortAction(true);
   }
   break;
  case 'delete':
   gs.addErrorMessage(gs.getMessage('This layer cannot be deleted because there are taxonomy layers in this portfolio that contain nodes'));
   current.setAbortAction(true);
   break;
 }

})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:52:36</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>bd7c645983701210c6695855eeaad38a</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Block taxonomy layer operations</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_bd7c645983701210c6695855eeaad38a</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:52:36</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=bd7c645983701210c6695855eeaad38a"/>
</record_update>
