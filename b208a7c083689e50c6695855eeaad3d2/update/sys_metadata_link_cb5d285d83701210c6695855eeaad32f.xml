<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>0f0c289583701210c6695855eeaad3ae</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules"&gt;
    &lt;x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE"&gt;
        &lt;abort_action&gt;false&lt;/abort_action&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;action_delete&gt;false&lt;/action_delete&gt;
        &lt;action_insert&gt;true&lt;/action_insert&gt;
        &lt;action_query&gt;false&lt;/action_query&gt;
        &lt;action_update&gt;true&lt;/action_update&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;add_message&gt;false&lt;/add_message&gt;
        &lt;advanced&gt;true&lt;/advanced&gt;
        &lt;change_fields&gt;false&lt;/change_fields&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;collection/&gt;
        &lt;condition/&gt;
        &lt;description/&gt;
        &lt;execute_function&gt;false&lt;/execute_function&gt;
        &lt;filter_condition/&gt;
        &lt;is_rest&gt;false&lt;/is_rest&gt;
        &lt;message/&gt;
        &lt;name&gt;RestrictFilterCriteriaUsageAsPerContext&lt;/name&gt;
        &lt;order&gt;100&lt;/order&gt;
        &lt;priority&gt;100&lt;/priority&gt;
        &lt;rest_method/&gt;
        &lt;rest_method_text/&gt;
        &lt;rest_service/&gt;
        &lt;rest_service_text/&gt;
        &lt;rest_variables/&gt;
        &lt;role_conditions/&gt;
        &lt;script&gt;&lt;![CDATA[(function executeRule(current, previous /*null when async*/ ) {

 /*
 This BR validates if a particular Filter Criteria ia allowed in a Context. e.g
 1. User Based Filter Criteria (Group,  Role, AuthScheme, Identity provider) are not allowed in Pre Auth Context.
 2. MFA Filter Criteria (Role Based MFA, User Based MFA) can only be used in MFA Context.
 */
    var policySysId;
    var decisionTable = current.decision_table;
    var currentFields;
    var policyGR = new GlideRecord('sys_authentication_policy');
    policyGR.addQuery('decision_table', decisionTable);
    policyGR.query();
    if (policyGR.next())
        policySysId = policyGR.getUniqueValue();


    var policyContextGR = new GlideRecord('sys_auth_policy_context');
    policyContextGR.query();
    while (policyContextGR.next()) {
        var defaultPolicy = policyContextGR.default_policy;
        var defaultPolicyId = policyContextGR.allow_policy;

        if (defaultPolicy == 'deny_policy')
            defaultPolicyId = policyContextGR.deny_policy;

        if (policySysId == defaultPolicyId) {

            if (!currentFields)
                currentFields = fetchFields(current.condition);
            if (policyContextGR.getUniqueValue() == '62c7e85773112010616ca9843cf6a78e') {
                var gr = new GlideRecord('sys_auth_filter_criteria');
                gr.addQuery('element_name', 'IN', currentFields.join(','));
                gr.addQuery('sys_class_name', 'IN', 'sys_role_filter_criteria,sys_group_filter_criteria, sys_generic_user_filter_criteria');
                gr.query();
                if (gr.next()) {
                    gs.addErrorMessage(gs.getMessage("You can only use the {0}, {1} and {2} criteria in the Pre Authentication Policy Context.", ["IP Filter", "Trusted Mobile App Filter", "Location Based Filter"]));
                    current.setAbortAction(true);
                    return;
                }
            }

            gr = new GlideRecord('sys_generic_user_filter_criteria');
            gr.addQuery('element_name', 'IN', currentFields.join(','));
            gr.addQuery('type', 'IN', 'role_based_mfa,user_based_mfa');
            gr.query();
            if (gr.next()) {
                gs.addErrorMessage(gs.getMessage("User Based MFA and Role Based MFA filters cannot be used in Authentication Policy Context."));
                current.setAbortAction(true);
                return;
            }
        }
    }

    function fetchFields(condition) {
        var finalTerms = [];
        if (!condition)
            return finalTerms;
        var glideQS = new GlideQueryString(current.input_table, condition);
        glideQS.deserialize();
        var queryTerms = glideQS.getTerms();
        for (var i = 0; i &lt; queryTerms.size(); i++) {
            var field = queryTerms.get(i).getField();
            //sometimes field value is null
            if (field != 'null' &amp;&amp; field) {
                //fields can be of simple format like 'first_name', 'email' or of dotwalked type like 'user.company.location'
                //if they are not dot walked fields, use them directly, otherwise get the parent field which is being dotwalked
                var dotIndex = field.indexOf('.');
                if (dotIndex &lt; 0)
                    finalTerms.push(String(field));
                else
                    finalTerms.push(field.substring(0, dotIndex));
            }
        }
        return finalTerms;
    }

})(current, previous);]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;x_938076_now_utils_now_utils_business_rules&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2024-09-21 07:50:47&lt;/sys_created_on&gt;
        &lt;sys_domain&gt;global&lt;/sys_domain&gt;
        &lt;sys_domain_path&gt;/&lt;/sys_domain_path&gt;
        &lt;sys_id&gt;0f0c289583701210c6695855eeaad3ae&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;RestrictFilterCriteriaUsageAsPerContext&lt;/sys_name&gt;
        &lt;sys_overrides/&gt;
        &lt;sys_package display_value="Now Utils" source="x_938076_now_utils"&gt;b208a7c083689e50c6695855eeaad3d2&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Now Utils"&gt;b208a7c083689e50c6695855eeaad3d2&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;x_938076_now_utils_now_utils_business_rules_0f0c289583701210c6695855eeaad3ae&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2024-09-21 07:50:47&lt;/sys_updated_on&gt;
        &lt;template/&gt;
        &lt;when&gt;before&lt;/when&gt;
    &lt;/x_938076_now_utils_now_utils_business_rules&gt;
    &lt;sys_translated_text action="delete_multiple" query="documentkey=0f0c289583701210c6695855eeaad3ae"/&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:56:30</sys_created_on>
        <sys_id>cb5d285d83701210c6695855eeaad32f</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>RestrictFilterCriteriaUsageAsPerContext</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_cb5d285d83701210c6695855eeaad32f</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:56:30</sys_updated_on>
        <tablename>sys_script</tablename>
    </sys_metadata_link>
</record_update>
