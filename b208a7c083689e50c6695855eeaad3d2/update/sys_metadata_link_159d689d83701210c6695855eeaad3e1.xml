<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>1d36b2a5c7311110917cfe665cc260b8</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="sys_script"&gt;
    &lt;sys_script action="INSERT_OR_UPDATE"&gt;
        &lt;abort_action&gt;false&lt;/abort_action&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;action_delete&gt;false&lt;/action_delete&gt;
        &lt;action_insert&gt;true&lt;/action_insert&gt;
        &lt;action_query&gt;false&lt;/action_query&gt;
        &lt;action_update&gt;true&lt;/action_update&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;add_message&gt;false&lt;/add_message&gt;
        &lt;advanced&gt;true&lt;/advanced&gt;
        &lt;change_fields&gt;false&lt;/change_fields&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;collection&gt;ecc_agent_property&lt;/collection&gt;
        &lt;condition/&gt;
        &lt;description/&gt;
        &lt;execute_function&gt;false&lt;/execute_function&gt;
        &lt;filter_condition table="ecc_agent_property"&gt;valueVALCHANGES^ORnameVALCHANGES^ORecc_agentVALCHANGES^ORsys_domainVALCHANGES^EQ&lt;item endquery="false" field="value" goto="false" newquery="false" operator="VALCHANGES" or="false" value=""/&gt;
            &lt;item endquery="false" field="name" goto="false" newquery="false" operator="VALCHANGES" or="true" value=""/&gt;
            &lt;item endquery="false" field="ecc_agent" goto="false" newquery="false" operator="VALCHANGES" or="true" value=""/&gt;
            &lt;item endquery="false" field="sys_domain" goto="false" newquery="false" operator="VALCHANGES" or="true" value=""/&gt;
            &lt;item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/&gt;
        &lt;/filter_condition&gt;
        &lt;is_rest&gt;false&lt;/is_rest&gt;
        &lt;message/&gt;
        &lt;name&gt;MID property check&lt;/name&gt;
        &lt;order&gt;100&lt;/order&gt;
        &lt;priority&gt;100&lt;/priority&gt;
        &lt;rest_method/&gt;
        &lt;rest_method_text/&gt;
        &lt;rest_service/&gt;
        &lt;rest_service_text/&gt;
        &lt;rest_variables/&gt;
        &lt;role_conditions/&gt;
        &lt;script&gt;&lt;![CDATA[(function executeRule(current, previous /* null when async */ ) {
	validatePropertyValue();
	checkDuplicateProperty();
	
	function validatePropertyValue() {
		// If any field other than value is updated no need to validate the property value
		if (current.operation() == 'update' &amp;&amp; !current.value.changes())
			return;
		
		// *** Validate property value if property is a known non-legacy MIDConfigParameter name
		var mcp = SncMIDConfigParameter;
		var param = mcp.byName(current.name);
		if (param) {
			try {
				param.parseAndValidateValue(current.value); // Ignore return value, throws exception if value is invalid
			} catch (e) {
				var valMsg = gs.getMessage("Invalid value: {0}", e.getMessage() != null ? e.getMessage() + '' : e + '');
				gs.addErrorMessage(valMsg);
				current.setAbortAction(true);
			}
		}
	}

	function checkDuplicateProperty() {
		// *** Check for duplicate property record in all visible domains
	
		// No need to check for the duplicate record if the updated field is not property name or MID Server or the domain
		if (current.operation() == 'update' &amp;&amp; 
				!(current.name.changes() || current.ecc_agent.changes() || current.sys_domain.changes()))
			return;
		
		var isDomainSeparated = gs.getProperty("glide.sys.domain.use_record_domain_for_processes") == 'true';
		var gr = new GlideRecord('ecc_agent_property');
		gr.addQuery('name', current.name);
		gr.addQuery('ecc_agent', current.ecc_agent);
		if (isDomainSeparated) {

			// Since we cannot have addQuery for domain, and we query based on the name and assigned Mid Server
			// If we update the record and we only change the domain, the updated record is in the result of 
			// query and we need to exclude it
			if (current.operation() == 'update' &amp;&amp; current.sys_domain.changes()) {
				gr.addQuery('sys_id', '!=', current.sys_id + '');
			}

			// Make sure we don't count the override record as duplicate
			// Since the business rule is running before insert/update, the override record is still visible
			// After inserting the record with 'sys_overrides, the parent record is not visible to child domain
			if(current.sys_overrides) {
				gr.addQuery('sys_id', '!=', current.sys_overrides + '');
			}
			gr.addDomainQuery(current.sys_domain + '');
			
		}
		gr.query();
		
		if (!gr.hasNext())
			return;

		gs.addErrorMessage(gs.getMessage('Cannot create a duplicate MID server property record'));
		if (isDomainSeparated) {
			gs.warning('Check for duplicate name + ecc_agent in all accessible domains on ecc_agent_property found duplicate record');
		} else {
			gs.warning('Check for duplicate name + ecc_agent on ecc_agent_property found duplicate record');
		}
		current.setAbortAction(true);
	}

}(current, previous));]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2022-09-07 20:59:27&lt;/sys_created_on&gt;
        &lt;sys_domain&gt;global&lt;/sys_domain&gt;
        &lt;sys_domain_path/&gt;
        &lt;sys_id&gt;1d36b2a5c7311110917cfe665cc260b8&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;16&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;MID property check&lt;/sys_name&gt;
        &lt;sys_overrides/&gt;
        &lt;sys_package display_value="MID Server" source="com.glideapp.agent"&gt;a6877ce83cb1311068bcf327dfe37f69&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_1d36b2a5c7311110917cfe665cc260b8&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;marjan.marzban&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2022-10-13 23:09:04&lt;/sys_updated_on&gt;
        &lt;template/&gt;
        &lt;when&gt;before&lt;/when&gt;
    &lt;/sys_script&gt;
    &lt;sys_translated_text action="delete_multiple" query="documentkey=1d36b2a5c7311110917cfe665cc260b8"/&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:57:29</sys_created_on>
        <sys_id>159d689d83701210c6695855eeaad3e1</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>MID property check</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_159d689d83701210c6695855eeaad3e1</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:57:29</sys_updated_on>
        <tablename>sys_script</tablename>
    </sys_metadata_link>
</record_update>
