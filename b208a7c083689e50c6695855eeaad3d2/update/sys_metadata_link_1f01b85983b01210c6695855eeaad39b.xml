<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>2768eaf19f523100598a5bb0657fcf07</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.PmProject&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;PmProject&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var PmProject = Class.create();
PmProject.prototype = Object.extendsObject(PmBaseDecorator, {

    allTasks: function() {
        var gr = new GlideRecord(PmTableConstants.PLANNED_TASK);
        gr.addQuery(PmFieldConstants.TOP_TASK, this.gr.sys_id);
        gr.query();
        return gr;
    },

    tasks: function() {
        PmDebugUtil.logMsg(this.type, 'Into projectTasks');
        var gr = new GlideRecord(PmTableConstants.PROJECT_TASK);
        gr.addQuery(PmFieldConstants.PARENT, this.gr.sys_id);
        gr.query();
        return gr;
    },

    projects: function() {
        PmDebugUtil.logMsg(this.type, 'Into projects');
        var gr = new GlideRecord(PmTableConstants.PROJECT);
        gr.addQuery(PmFieldConstants.PARENT, this.gr.sys_id);
        gr.query();
        return gr;
    },

    tableName: function() {
        return PmTableConstants.PROJECT;
    },

    baselines: function() {
        var gr = new GlideRecord(PmTableConstants.BASELINE);
        gr.addQuery('top_task', this.getValue('sys_id'));
        gr.addQuery('enable_task_baseline',1);
        gr.query();
        var json = new PmBaseline(gr).toJson();
        return json;
    },

    createBaseline: function(name, description, projectId, enableTaskBaseline, enableFinancialBaseline) {
        var baseline = new GlideRecord(PmTableConstants.BASELINE);
        baseline.name = name.trim();
        baseline.top_task = projectId;
        baseline.description = description;
        baseline.enable_financial_baseline = enableFinancialBaseline;
        baseline.enable_task_baseline = enableTaskBaseline;
        var baseId = baseline.insert();

        if(enableTaskBaseline == "true"){
            var tasks = new GlideRecord(PmTableConstants.PLANNED_TASK);
            tasks.addQuery("top_task", projectId);
            tasks.query();
            while (tasks.next()) {
                var baseItem = new GlideRecord(PmTableConstants.BASELINE_ITEMS);
                baseItem.baseline = baseId;
                baseItem.task = tasks.sys_id;
                baseItem.start = tasks.start_date;
                baseItem.end = tasks.end_date;
                baseItem.insert();
            }
        }

        if(enableFinancialBaseline == "true" &amp;&amp; baseId){
            var pmFinancialBaseline = new PmFinancialBaseline();
            pmFinancialBaseline.createFinancialBaseline(baseId);
            //Adding the baseline to the next experience
            if (GlidePluginManager.isActive('sn_invst_pln') &amp;&amp; sn_invst_pln.FinancialsCoreInvestmentBaseline.prototype.hasOwnProperty('createBaselineForTaskItems')) {
                var invstBaselineObj = new sn_invst_pln.FinancialsCoreInvestmentBaseline();
                invstBaselineObj.createBaselineForTaskItems(baseline.top_task.sys_class_name, projectId, baseline.name, description);
            }
            gs.addInfoMessage(gs.getMessage('Created Financial baseline Job: {0}', [baseline.name]));
        }
        return baseline;
    },

    type: 'PmProject'
});]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2015-02-18 16:24:59&lt;/sys_created_on&gt;
        &lt;sys_id&gt;2768eaf19f523100598a5bb0657fcf07&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;19&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;PmProject&lt;/sys_name&gt;
        &lt;sys_package display_value="Project Management" source="com.snc.project_management_v3"&gt;9eef82e747e64210cd4e1ce4316d43e3&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_2768eaf19f523100598a5bb0657fcf07&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2024-04-16 06:10:28&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:12:38</sys_created_on>
        <sys_id>1f01b85983b01210c6695855eeaad39b</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>PmProject</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_1f01b85983b01210c6695855eeaad39b</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:12:38</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
