<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>23832a12c32331000295b348b1d3ae08</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;sn_kb_social_qa.SocialQAView&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;SocialQAView - Script include to increment question view count.&lt;/description&gt;
        &lt;name&gt;SocialQAView&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var SocialQAView = Class.create();
SocialQAView.prototype = {
    initialize: function() {
		this.globalUtil = new global.GlobalKnowledgeUtil();
		this.socialQACommon = new SocialQACommon();
		this.tableNames = this.socialQACommon.getTableNames();
    },
	
	_updateQuestionTable: function(questionId) {
		var gr = new GlideRecord(this.tableNames.table_question);
		gr.addActiveQuery();
		gr.addQuery('sys_id', questionId);
		gr.query();
		if (gr.next()) {
			gr.views++;
			gr.autoSysFields(false);
			gr.setWorkflow(false);
			gr.update();
		}
	},
	
	questionViewIncrement: function(questionId) {
		var inValid = gs.nil(questionId);
		if (inValid)
			return ;
		
		var gr = new GlideRecord(this.tableNames.table_view);
		var sessionId = gs.getSessionID();
		gr.addActiveQuery();
		gr.addQuery('session_id', sessionId);
		gr.addQuery('question', questionId);
		gr.query();
		if (gr.hasNext()) 
			return ;
		else {
			gr.initialize();
			gr.session_id = sessionId;
			gr.question = questionId;
			gr.insert();
			this._updateQuestionTable(questionId);
		}
	},

    type: 'SocialQAView'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2015-04-23 08:42:04&lt;/sys_created_on&gt;
        &lt;sys_id&gt;23832a12c32331000295b348b1d3ae08&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;106&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;SocialQAView&lt;/sys_name&gt;
        &lt;sys_package display_value="Social Knowledge" source="sn_kb_social_qa"&gt;11722b01473231007f47563dbb9a7154&lt;/sys_package&gt;
        &lt;sys_policy&gt;read&lt;/sys_policy&gt;
        &lt;sys_scope display_value="Social Knowledge"&gt;11722b01473231007f47563dbb9a7154&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_23832a12c32331000295b348b1d3ae08&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2019-07-19 11:41:04&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:12:13</sys_created_on>
        <sys_id>85f0f05983b01210c6695855eeaad34e</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>SocialQAView</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_85f0f05983b01210c6695855eeaad34e</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:12:13</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
