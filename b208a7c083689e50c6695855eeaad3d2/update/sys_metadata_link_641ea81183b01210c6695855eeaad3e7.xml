<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>32b2afd673502300f82ec7a18af6a726</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="sys_script"&gt;
    &lt;sys_script action="INSERT_OR_UPDATE"&gt;
        &lt;abort_action&gt;false&lt;/abort_action&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;action_delete&gt;false&lt;/action_delete&gt;
        &lt;action_insert&gt;true&lt;/action_insert&gt;
        &lt;action_query&gt;false&lt;/action_query&gt;
        &lt;action_update&gt;false&lt;/action_update&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;add_message&gt;false&lt;/add_message&gt;
        &lt;advanced&gt;true&lt;/advanced&gt;
        &lt;change_fields&gt;false&lt;/change_fields&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;collection&gt;sys_user_has_role&lt;/collection&gt;
        &lt;condition&gt;current.user.user_name == 'guest' &amp;amp;&amp;amp; pm.isActive('com.glide.encryption')&lt;/condition&gt;
        &lt;description/&gt;
        &lt;execute_function&gt;false&lt;/execute_function&gt;
        &lt;filter_condition/&gt;
        &lt;is_rest&gt;false&lt;/is_rest&gt;
        &lt;message/&gt;
        &lt;name&gt;Prevent guest user encryption context&lt;/name&gt;
        &lt;order&gt;100&lt;/order&gt;
        &lt;priority&gt;100&lt;/priority&gt;
        &lt;rest_method/&gt;
        &lt;rest_method_text/&gt;
        &lt;rest_service/&gt;
        &lt;rest_service_text/&gt;
        &lt;rest_variables/&gt;
        &lt;role_conditions/&gt;
        &lt;script&gt;&lt;![CDATA[(function executeRule(current, previous /*null when async*/) {
	// Property 'glide.encryption.context.allow_guest' will sunset in the N release
	// Behavior after N will be to always disallow, with no available override
	if (GlideProperties.getBoolean('glide.encryption.context.allow_guest', false))
		return;

	if (roleHasEncryptionContext())
		disallowAddRole();

	function roleHasEncryptionContext() {
		// Check the current role
		if (current.role.encryption_context)
			return true;

		// If the current role doesn't have it, check all of its contained roles
		var currentRole = ''+current.role;
		var rm = new SNC.RoleManagementAPI();
		var roleSet = rm.findAllContainedRolesForRole(currentRole); //Set&lt;String&gt;
		var it = roleSet.iterator();
		
		var roleChunk = [];
		var containedRole;
		while (it.hasNext()) {
			containedRole = ''+it.next();
			if (containedRole === currentRole)
				continue;  // The Set contains the original role, skip since it was already checked

			roleChunk.push(containedRole);
			if (roleChunk.length &lt; 100)
				continue;

			if (rolesHaveEncryptionContext(roleChunk))
				return true;

			roleChunk = [];
		}

		// Handle the last chunk if necessary
		return roleChunk.length ? rolesHaveEncryptionContext(roleChunk) : false;
	}
	
	function rolesHaveEncryptionContext(roles) {
		var gr = new GlideRecord('sys_user_role');
		gr.addQuery('sys_id', 'IN', roles);
		gr.addNotNullQuery('encryption_context');
		gr.query();

		return gr.hasNext();
	}

	function disallowAddRole() {
		gs.addErrorMessage(gs.getMessage("Adding a role containing an Encryption Context to the guest user is not allowed"));
		current.setAbortAction(true);
	}

})(current, previous);]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;steve.bandow&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2018-09-04 21:19:13&lt;/sys_created_on&gt;
        &lt;sys_domain&gt;global&lt;/sys_domain&gt;
        &lt;sys_domain_path&gt;/&lt;/sys_domain_path&gt;
        &lt;sys_id&gt;32b2afd673502300f82ec7a18af6a726&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;2&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;Prevent guest user encryption context&lt;/sys_name&gt;
        &lt;sys_overrides/&gt;
        &lt;sys_package display_value=""&gt;d6375ef01b8a21109c18a9f9bc4bcb45&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_32b2afd673502300f82ec7a18af6a726&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;steve.bandow&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2018-11-01 18:37:37&lt;/sys_updated_on&gt;
        &lt;template/&gt;
        &lt;when&gt;before&lt;/when&gt;
    &lt;/sys_script&gt;
    &lt;sys_translated_text action="delete_multiple" query="documentkey=32b2afd673502300f82ec7a18af6a726"/&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:59:37</sys_created_on>
        <sys_id>641ea81183b01210c6695855eeaad3e7</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Prevent guest user encryption context</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_641ea81183b01210c6695855eeaad3e7</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:59:37</sys_updated_on>
        <tablename>sys_script</tablename>
    </sys_metadata_link>
</record_update>
