<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>true</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Handle req_enroll validation/default val</name>
        <order>50</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[// Performs 2 functions:
//   1. When inserting records, change the default value of requires_enrollment, if the verification is auto-enroll
//   2. Enforce that at least one of the process verifications must have auto_enroll=true OR requires_enrollment=true
//      We handle this by showing a message and deactivating the process (if active)
(function executeRule(current, previous /*null when async*/) {
 
 // Override default value if the verification type has auto enroll
 // This is done in biz rule because current is null when using a dynamic default value with M2M
 if (current.operation() == 'insert' && hasAutoEnroll(current)) {
  current.requires_enrollment = false;
  return;
 }
 
 // Don't need to check other records when updating if the updated value is valid 
 if (current.operation() == 'update' && (current.getValue('requires_enrollment') == true || hasAutoEnroll(current)))
  return;
 
 var mapGr = new GlideRecord(current.sys_class_name);
 mapGr.addQuery('process', current.process);
 mapGr.addQuery('requires_enrollment', true).addOrCondition('verification.type.auto_enroll', true);
 mapGr.addQuery('sys_id', '<>', current.sys_id);
 mapGr.query();
 
 if (!mapGr.next()) {
  gs.addInfoMessage(gs.getMessage('Process must be mapped to at least one verification which requires enrollment or has auto-enrollment'));
  var procGr = new GlideRecord("pwd_process");
  if (procGr.get(current.process) && procGr.getValue("active") == true) {
   procGr.setValue("active", false);
   procGr.update();
   gs.addInfoMessage(gs.getMessage('Process deactivated: {0}', procGr.getValue('name')));
  }
 } 
})(current, previous);

function hasAutoEnroll(current) {
 return current.verification.type.auto_enroll + '' == 'true';
}]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:50:01</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>b7db645583701210c6695855eeaad373</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Handle req_enroll validation/default val</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_b7db645583701210c6695855eeaad373</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:50:01</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=b7db645583701210c6695855eeaad373"/>
</record_update>
