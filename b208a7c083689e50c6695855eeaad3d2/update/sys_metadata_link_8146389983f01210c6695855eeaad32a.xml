<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>2e0e7d71fc387110f87736513ef7b26e</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;public&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;sn_sow.SOWTaskIntelligenceAjaxHelper&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;true&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;SOWTaskIntelligenceAjaxHelper&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var SOWTaskIntelligenceAjaxHelper = Class.create();
SOWTaskIntelligenceAjaxHelper.prototype = Object.extendsObject(global.AbstractAjaxProcessor, {

    getPredictionResults: function (sysId, tableName) {
        sysId = sysId || this.getParameter('sysparm_sys_id');
        tableName = tableName || this.getParameter('sysparm_table_name');
        var predictionsResults = [];

        if (tableName != 'interaction' || gs.nil(sysId) || gs.nil(tableName))
            return predictionsResults;

        // Security check to check if record exsits
        var _gr = new GlideRecordSecure(tableName);
        if (!_gr.get(sysId))
            return predictionsResults;


        var predictionsByFeature = new GlideScriptedExtensionPoint().getExtensions(SOWTaskIntelligenceConstants.UI_EXTENSION_POINT);
        for (var i = 0; i &lt; predictionsByFeature.length; i++) {
            if (predictionsByFeature[i].isFeatureEnabled())
                predictionsResults = predictionsResults.concat(predictionsByFeature[i].getPredictions(sysId, tableName));
        }

        return JSON.stringify(predictionsResults);
    },

    execute: function (input) {
        var results = [];
        var fieldsToMonitor = ["chat_summary","short_description"];
        var sysId = input["sysId"];
        var tableName = input["table"];
        if (!gs.nil(sysId) &amp;&amp; !gs.nil(tableName)) {
            var predictionsResults = JSON.parse(this.getPredictionResults(sysId, tableName));

            if (!gs.nil(predictionsResults)) {
                for (i = 0; i &lt; predictionsResults.length; i++) {
                    var predictionsResult = predictionsResults[i];
                    results.push(this.getUIDisplayInfo(predictionsResult));
                    if (predictionsResult.fieldsToMonitor.length &gt; 0)
                        fieldsToMonitor = fieldsToMonitor.concat(predictionsResult.fieldsToMonitor);
                }
            }
        }

        if (fieldsToMonitor.length &gt; 0)
            fieldsToMonitor = this.removeDuplicates(fieldsToMonitor);

        var output = {
            "predictionResults": results,
            "fieldsToMonitor": fieldsToMonitor
        };
        return output;
    },


    getUIDisplayInfo: function (prediction) {
        var uiDisplayInfo = {};
		
        uiDisplayInfo[prediction.predictedField] = {
            'sectionLabel': SOWTaskIntelligenceConstants.UI_INFO.SECTION_LABEL,
            'items': prediction.recommendations,
            'source': {
                'iconName': SOWTaskIntelligenceConstants.UI_INFO.ICON_NAME,
                'value': SOWTaskIntelligenceConstants.UI_INFO.ICON_VALUE,
                'variantName': SOWTaskIntelligenceConstants.UI_INFO.ICON_VARIANT_NAME,
                'colorName': SOWTaskIntelligenceConstants.UI_INFO.ICON_COLOR_NAME,
                'showIcon': SOWTaskIntelligenceConstants.UI_INFO.ICON_SHOW,
                'description': prediction.iconDescription
            }
        };

        if (prediction.implementationPlan == SOWTaskIntelligenceConstants.IMPLEMENTATION_PLANS.AUTOFILL &amp;&amp;
            !gs.nil(prediction.predictedValue) &amp;&amp; !gs.nil(prediction.predictedDisplayValue)) {
            uiDisplayInfo[prediction.predictedField].autofill = {
                'force': true,
                'value': prediction.predictedValue,
                'displayValue': prediction.predictedDisplayValue
            };
        }

        return uiDisplayInfo;
    },

    removeDuplicates: function (fieldsToMonitor) {
        fieldsToMonitor = fieldsToMonitor.reduce(function (a, b) {
            if (a.indexOf(b) &lt; 0) a.push(b);
            return a;
        }, []);
        return fieldsToMonitor;
    },
    
    type: 'SOWTaskIntelligenceAjaxHelper'
});]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2023-08-22 10:47:24&lt;/sys_created_on&gt;
        &lt;sys_id&gt;2e0e7d71fc387110f87736513ef7b26e&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;8&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;SOWTaskIntelligenceAjaxHelper&lt;/sys_name&gt;
        &lt;sys_package display_value="Service Operations Workspace Core" source="sn_sow"&gt;5ca1bcb3733320103e366238edf6a706&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Service Operations Workspace Core"&gt;5ca1bcb3733320103e366238edf6a706&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_2e0e7d71fc387110f87736513ef7b26e&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2023-10-04 10:35:07&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:35:25</sys_created_on>
        <sys_id>8146389983f01210c6695855eeaad32a</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>SOWTaskIntelligenceAjaxHelper</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_8146389983f01210c6695855eeaad32a</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:35:25</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
