<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition>current.getValue('type') == 'rotate' &amp;&amp; current.duration.changes()</condition>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Table Rotation - Duration Change</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[updateSchedules();
var model = current.name.toString();
if (model == 'sys_replication_queue')
  SncReplicationEngine.reload();

function updateSchedules() {
   gs.log("Duration changed to " + current.duration + " for rotation " + current.name);
   var schedEntry = new GlideRecord('sys_table_rotation_schedule');
   schedEntry.addQuery('name', current.sys_id);
   schedEntry.orderBy('valid_from');
   schedEntry.query();
   var now = new GlideDateTime();
   var end = new GlideDateTime();
   end.setNumericValue(now.getNumericValue() + current.duration.dateNumericValue());
   var startTime = gs.now();
   while (schedEntry.next()) {
       // Check for in the past entries
       if (schedEntry.valid_from.dateNumericValue() < now.getNumericValue() && 
           schedEntry.valid_to.dateNumericValue() < now.getNumericValue()) {
          continue; 
       }

       // Check for current rotation entry
       if (schedEntry.valid_from.dateNumericValue() < now.getNumericValue()) {
          schedEntry.valid_to.setDateNumericValue(end.getNumericValue());
          schedEntry.setWorkflow(false);
          schedEntry.update();
          startTime = schedEntry.valid_to.getDisplayValue();
          continue;
       }

       // in the future entries
       schedEntry.valid_from = startTime;
       schedEntry.valid_to.setDateNumericValue(schedEntry.valid_from.dateNumericValue() + current.duration.dateNumericValue());
       schedEntry.setWorkflow(false);
       schedEntry.update();
       startTime = schedEntry.valid_to.getDisplayValue();
   }
}]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:51:40</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>804cacd583701210c6695855eeaad3c6</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Table Rotation - Duration Change</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_804cacd583701210c6695855eeaad3c6</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:51:40</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=804cacd583701210c6695855eeaad3c6"/>
</record_update>
