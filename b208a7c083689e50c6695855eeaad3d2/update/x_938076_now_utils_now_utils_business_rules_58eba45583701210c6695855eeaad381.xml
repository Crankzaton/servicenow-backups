<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>true</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Is Password Reset Process Secure</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {
    var ACTION_DELETE = 'delete';
    var ACTION_UPDATE = 'update';

    if (!isProcessSecure()) {
        throwError(gs.getMessage("The verifications configured are not secure enough for this password reset process."));
        return;
    }

    function isProcessSecure() {
        var secureVerificationsCount = 0;
        var nonSecureVerificationsCount = 0;
        var mandatorySecureVerificationsCount = 0;

        var processGr = new GlideRecord('pwd_process');
        processGr.get(current.process);

        var verificationMapGr = new GlideRecord('pwd_map_proc_to_verification');
        verificationMapGr.addQuery('process', processGr.sys_id);
        verificationMapGr.query();

        // Check existing verifications
        while (verificationMapGr.next()) {
            var grVerificationType = new GlideRecord("pwd_verification");
            grVerificationType.get(verificationMapGr.getValue('verification'));
            grVerificationType.query();
            var mandatory = verificationMapGr.mandatory;
            if (PwdConstants.NONSECURE_VERIFICATIONTYPES[grVerificationType.getValue('type')] == true) {
                nonSecureVerificationsCount++;
            } else {
                secureVerificationsCount++;
                if (mandatory == true)
                    mandatorySecureVerificationsCount++;
            }
        }

        // Check current changes in the verification type
        if (PwdConstants.NONSECURE_VERIFICATIONTYPES[current.verification.type] == true && current.operation() == ACTION_DELETE) {
            nonSecureVerificationsCount--;
        } else if (!PwdConstants.NONSECURE_VERIFICATIONTYPES[current.verification.type]) {
            if (current.operation() == ACTION_DELETE) {
                secureVerificationsCount--;
                if (current.mandatory == true)
                    mandatorySecureVerificationsCount--;
            } else if (current.operation() == ACTION_UPDATE) {
                if (current.mandatory == false && previous.mandatory == true)
                    mandatorySecureVerificationsCount--;
                if (current.mandatory == true && previous.mandatory == false)
                    mandatorySecureVerificationsCount++;
            }
        }

        return ((mandatorySecureVerificationsCount > 0) || (nonSecureVerificationsCount < processGr.min_verifications))
    }


    function throwError(errorMessage) {
        gs.addErrorMessage(errorMessage);
        current.setAbortAction(true);
    }
})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:50:03</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>58eba45583701210c6695855eeaad381</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Is Password Reset Process Secure</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_58eba45583701210c6695855eeaad381</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:50:03</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=58eba45583701210c6695855eeaad381"/>
</record_update>
