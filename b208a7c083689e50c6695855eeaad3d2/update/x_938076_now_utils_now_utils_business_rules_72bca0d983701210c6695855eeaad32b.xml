<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description>If there are dependencies between the fields used in the same set values step, display an error message and do not allow the step to be saved.</description>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Check for dependent fields</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
 var table = current.inputs.table;
 var queryString = new GlideQueryString(table, current.inputs.field_values);
 queryString.deserialize();
 var terms = queryString.getTerms();
 var dependentFields = {};
 var td = GlideTableDescriptor.get(table);
 for (var i = 0; i < terms.size(); i++) {
  var term = terms.get(i);
  var field = term.getField() + "";
  if (gs.nil(field))
   continue;

  var ed = td.getElementDescriptor(field);
  if (ed) {
   var dependentField = ed.getDependent();
   if (!gs.nil(dependentField))
    dependentFields[field] = dependentField + "";
   else
    dependentFields[field] = "";
  }
 }

 var fieldList = getDependentFields(dependentFields);
 if (!gs.nil(fieldList)) {
  var message = gs.getMessage("Some fields have dependencies on other fields being set in this step. To keep your test stable, break out the following field(s) into a subsequent set values step: {0}.", fieldList);
  gs.addErrorMessage(message);
  current.setAbortAction(true);
 }

 // get the list of fields that are dependent on other fields set in this step
 function getDependentFields(dependentFields) {
  var fields = Object.keys(dependentFields);
  var fieldsToMove = [];
  for (var i = 0; i < fields.length; i++) {
   var dependentField = dependentFields[fields[i]];
   if (!gs.nil(dependentField) && fields.indexOf(dependentField) != -1)
    fieldsToMove.push(fields[i]);
  }
  if (fieldsToMove.length == 0)
   return "";

  // not using array.join here because we want to use both comma and 'and' as concatenators
  var fieldList = fieldsToMove[0];
  for (var i = 1; i < fieldsToMove.length - 1; i++)
   fieldList += ", " + fieldsToMove[i];

  if (fieldsToMove.length > 1)
   fieldList += " " + gs.getMessage("and") + " " + fieldsToMove[fieldsToMove.length - 1];

  return fieldList;
 }
})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:53:45</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>72bca0d983701210c6695855eeaad32b</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Check for dependent fields</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_72bca0d983701210c6695855eeaad32b</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:53:45</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=72bca0d983701210c6695855eeaad32b"/>
</record_update>
