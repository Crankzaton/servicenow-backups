<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>contractFilter</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[function contractFilter() {
 var contractScore = {};

 var slaModelGr = new GlideRecord("cmdb_contract_product_model");
 slaModelGr.addQuery("attach_sla", true);
 slaModelGr.query();

 var attachContract = {};
 while (slaModelGr.next())
  attachContract[slaModelGr.getUniqueValue()] = true;

 function updateContractScore(relGr, fldNm) {
  fldNm = fldNm || "contract";
  while (relGr.next()) {
   var cSysId = relGr[fldNm] + "";
   var modelId = relGr[fldNm].contract_model + "";

   if (!attachContract[modelId]) // If it's an model with attach_sla=false
    continue;

   if (!contractScore[cSysId])
    contractScore[cSysId] = 1;
   else
    contractScore[cSysId]++;
  }
 }

 if (!current.company.nil()) {
  var cpyLkp = new GlideRecord('ast_contract');
  cpyLkp.addQuery('vendor', current.company);
  cpyLkp.query();
  while (cpyLkp.next()) {
   if (!attachContract[cpyLkp.contract_model + ""]) // If it's an model with attach_sla=false
    continue;

   var cId = cpyLkp.getUniqueValue() + "";
   
   if (!contractScore[cId])
    contractScore[cId] = 1;
   else
    contractScore[cId]++;
  }
  
  updateContractScore(cpyLkp);
 }

 if (!current.location.nil()) {
  var locLkp = new GlideRecord('contract_rel_location');
  locLkp.addQuery('location', current.location);
  locLkp.query();
  updateContractScore(locLkp);
 }

 if (!current.cmdb_ci.nil()) {
  // Check relationship from SLA integration (ast_service)
  var ciLkp = new GlideRecord('contract_rel_ci');
  ciLkp.addQuery('ci_item', current.cmdb_ci);
  ciLkp.query();
  updateContractScore(ciLkp);

  // Check relationship from ast_contract.
  ciLkp = new GlideRecord("ast_contract_instance");
  ciLkp.addQuery('ci_item', current.cmdb_ci);
  ciLkp.addQuery("ast_contract.contract_model.attach_sla", true);
  ciLkp.query();
  updateContractScore(ciLkp, "ast_contract");
 }

 if (!current.caller_id.nil()) {
  var callerLkp = new GlideRecord('contract_rel_user');
  callerLkp.addQuery('user', current.caller_id);
  callerLkp.query();
  updateContractScore(callerLkp);

  // Check relationship from ast_contract.
  callerLkp = new GlideRecord("clm_m2m_contract_user");
  callerLkp.addQuery('user', current.caller_id);
  callerLkp.addQuery("contract.contract_model.attach_sla", true);
  var now = new GlideDate();
  callerLkp.addQuery("added","<=", now);
  callerLkp.addQuery("removed",">=", now);
  callerLkp.query();
  updateContractScore(callerLkp);
 }

 if (!current.assignment_group.nil()) {
  var grpLkp = new GlideRecord('contract_rel_group');
  grpLkp.addQuery('group', current.assignment_group);
  grpLkp.query();
  updateContractScore(grpLkp);
 }

 var contracts = Object.keys(contractScore);
 return "sys_idIN" + contracts.join(",");
}]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:52:32</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>fc7ce05983701210c6695855eeaad323</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>contractFilter</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_fc7ce05983701210c6695855eeaad323</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:52:32</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=fc7ce05983701210c6695855eeaad323"/>
</record_update>
