<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>00c74fc13b1333001b420896c3efc4f2</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.CloneProfileUtil&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;Defines utility methods for clone profile configuration.&lt;/description&gt;
        &lt;name&gt;CloneProfileUtil&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var CloneProfileUtil = Class.create();
CloneProfileUtil.prototype = {
	initialize: function() {
	},
	type: 'CloneProfileUtil'
};

/**
 * Duplicates the clone profile. Duplicates the relationships with clone profiles too.
 * @param sourceProfile
 * @param targetProfile
 */
CloneProfileUtil.duplicateProfile = function(sourceProfile, targetProfile) {
	if(gs.nil(sourceProfile) || gs.nil(targetProfile))
		return;
	
	// Copying Exclusion List
	var profileExclusionGr = new GlideRecord('clone_profile_exclusions');
	profileExclusionGr.addQuery('profile', sourceProfile);
	profileExclusionGr.query();
	
	while(profileExclusionGr.next()) {
		profileExclusionGr.setValue('profile', targetProfile);
		profileExclusionGr.insert();
	}
	
	// Copying Preserver List
	var profilePreserverGr = new GlideRecord('clone_profile_preservers');
	profilePreserverGr.addQuery('profile', sourceProfile);
	profilePreserverGr.query();
	
	while(profilePreserverGr.next()) {
		profilePreserverGr.setValue('profile', targetProfile);
		profilePreserverGr.insert();
	}
	
	// Copying Cleanup Scripts List
	var profileCleanupScriptGr = new GlideRecord('clone_profile_cleanup_scripts');
	profileCleanupScriptGr.addQuery('profile', sourceProfile);
	profileCleanupScriptGr.query();
	
	while(profileCleanupScriptGr.next()) {
		profileCleanupScriptGr.setValue('profile', targetProfile);
		profileCleanupScriptGr.insert();
	}
};

/**
 * Gets the default clone profile.
 * @return cloneProfileGr  GlideRecord
 */
CloneProfileUtil.getDefaultProfile = function() {
	var cloneProfileGr = new GlideRecord('clone_profile');
	cloneProfileGr.addQuery('default_profile', true);
	cloneProfileGr.query();
	
	if(cloneProfileGr.next())
		return cloneProfileGr;
	
	return '';
};

/**
 * Builds the default profile configuration.
 * @param profileSysId String
 */
CloneProfileUtil.buildDefaultProfileConfig = function(profileSysId) {
	if(gs.nil(profileSysId))
		return;
	
	CloneProfileUtil.buildDefaultPreserverList(profileSysId);
	CloneProfileUtil.buildDefaultExclusionList(profileSysId);
	CloneProfileUtil.buildDefaultCleanupScriptList(profileSysId);
};

/**
 * Builds the default profile preservers list.
 * @param profileSysId String
 */
CloneProfileUtil.buildDefaultPreserverList = function(profileSysId) {
	if(gs.nil(profileSysId))
		return;
	
	var clonePreserverGr = new GlideRecord(CloneConstants.tableName.CLONE_DATA_PRESERVER);
	clonePreserverGr.addQuery('include_in_system_clone', true);
	clonePreserverGr.addQuery('default', false);
	clonePreserverGr.query();
	
	while(clonePreserverGr.next()) 
		CloneProfileUtil.createProfilePreserver(profileSysId, clonePreserverGr.getValue('sys_id'));
};

/**
 * Builds the default profile exclusions list.
 * @param profileSysId String
 */
CloneProfileUtil.buildDefaultExclusionList = function(profileSysId) {
	if(gs.nil(profileSysId))
		return;
	
	var cloneExclusionGr = new GlideRecord(CloneConstants.tableName.CLONE_DATA_EXCLUSION);
	cloneExclusionGr.addQuery('include_in_system_clone', true);
	cloneExclusionGr.addQuery('default', false);
	cloneExclusionGr.query();
	
	while(cloneExclusionGr.next()) 
		CloneProfileUtil.createProfileExclusion(profileSysId, cloneExclusionGr.getValue('sys_id'));
};

/**
 * Builds the default profile cleanup scripts list.
 * @param profileSysId String
 */
CloneProfileUtil.buildDefaultCleanupScriptList = function(profileSysId) {
	if(gs.nil(profileSysId))
		return;
	
	var cleanupScriptGr = new GlideRecord(CloneConstants.tableName.CLONE_CLEANUP_SCRIPT);
	cleanupScriptGr.addQuery('include_in_system_clone', true);
	cleanupScriptGr.addQuery('default', false);
	cleanupScriptGr.query();
	
	while(cleanupScriptGr.next()) 
		CloneProfileUtil.createProfileCleanupScript(profileSysId, cleanupScriptGr);
};

/**
 * Creates the profile and preserver relationship.
 * @param profile String
 * @param preserver String
 */
CloneProfileUtil.createProfilePreserver = function(profile, preserver) {
	var profilePreserverGr = new GlideRecord(CloneConstants.tableName.CLONE_PROFILE_PRESERVER);
	profilePreserverGr.initialize();
	
	profilePreserverGr.setValue('profile', profile);
	profilePreserverGr.setValue('preserver', preserver);
	profilePreserverGr.insert();
};

/**
 * Creates the profile and exclusion relationship.
 * @param profile String
 * @param exclusion String
 */
CloneProfileUtil.createProfileExclusion = function(profile, exclusion) {
	var profileExclusionGr = new GlideRecord(CloneConstants.tableName.CLONE_PROFILE_EXCLUSION);
	profileExclusionGr.initialize();
	
	profileExclusionGr.setValue('profile', profile);
	profileExclusionGr.setValue('exclusion', exclusion);
	profileExclusionGr.insert();
};

/**
 * Creates the profile and cleanup scripts relationship.
 * @param profile String
 * @param cleanupscriptGr GlideRecord
 */
CloneProfileUtil.createProfileCleanupScript = function(profile, cleanupScriptGr) {
	var profileCleanupScriptGr = new GlideRecord(CloneConstants.tableName.CLONE_PROFILE_CLEANUP_SCRIPT);
	profileCleanupScriptGr.initialize();
	
	profileCleanupScriptGr.setValue('profile', profile);
	profileCleanupScriptGr.setValue('cleanup_script', cleanupScriptGr.getValue('sys_id'));
	profileCleanupScriptGr.setValue('order', cleanupScriptGr.getValue('order'));
	profileCleanupScriptGr.setValue('active', cleanupScriptGr.getValue('active'));
	profileCleanupScriptGr.insert();
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2019-08-14 21:19:27&lt;/sys_created_on&gt;
        &lt;sys_id&gt;00c74fc13b1333001b420896c3efc4f2&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;4&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;CloneProfileUtil&lt;/sys_name&gt;
        &lt;sys_package display_value="High Availability Cloning" source="com.snc.ha"&gt;ba533ca03c31311068bcf327dfe37f7a&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_00c74fc13b1333001b420896c3efc4f2&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2020-10-01 22:11:34&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:08:53</sys_created_on>
        <sys_id>9830b85583b01210c6695855eeaad3bb</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>CloneProfileUtil</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_9830b85583b01210c6695855eeaad3bb</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:08:53</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
