<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Inserting and updating action parameters</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {

    if (previous.action_type != current.action_type) {
        var actionType = current.action_type.getRefRecord();
        var clientParams = (actionType.getValue("client_parameters") || "").split(",");
        var serverParams = (actionType.getValue("server_parameters") || "").split(",");
        var actionId = current.getUniqueValue();
        var table = current.getValue('table');
        setParameters(clientParams, actionId, table, true);
        setParameters(serverParams, actionId, table, false);
    }

})(current, previous);

function setParameters(parameters, actionId, tableName, is_client) {
    var gr = new GlideRecord('sn_ex_sp_action_parameter');
    gr.addQuery("is_client", is_client);
    gr.addQuery("action", actionId);
    gr.query();
    while (gr.next()) {
        var paramName = gr.getValue('name');
        if (parameters.indexOf(paramName) < 0) {
            gr.deleteRecord();
        } else {
            parameters = parameters.filter(function(x) {
                return x != paramName;
            });
        }
    }
    parameters.map(function(x) {
        if (x) {
            var initializeGr = new GlideRecord('sn_ex_sp_action_parameter');
            initializeGr.initialize();
            initializeGr.setValue('parameter_type', 'string');
            initializeGr.setValue('name', x);
            initializeGr.setValue('action', actionId);
            initializeGr.setValue('table', tableName);
            initializeGr.setValue('is_client', is_client);
            initializeGr.insert();
        }
    });
}]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:49:47</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>24db205583701210c6695855eeaad398</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Inserting and updating action parameters</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_24db205583701210c6695855eeaad398</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:49:47</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=24db205583701210c6695855eeaad398"/>
</record_update>
