<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>24bdf17b53a17300acb8ddeeff7b12c8</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;sn_csm_case_digest.MajorPCRPublishOOB&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;Implements extension point sn_csm_case_digest.MajorPCRPublish&lt;/description&gt;
        &lt;name&gt;MajorPCRPublishOOB&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var MajorPCRPublishOOB = Class.create();
MajorPCRPublishOOB.prototype = {
	initialize: function() {
	},

	majorCasePublish: function(pcrGr, childPCRSyncOnly) {
		var message = '';
		var caseDigest = new CaseDigest();
		if(!gs.nil(pcrGr) &amp;&amp; pcrGr.isValidRecord()){
			if(gs.nil(childPCRSyncOnly) || childPCRSyncOnly == false){
				var ep = new GlideScriptedExtensionPoint().getExtensions(CaseDigestConstants.PCR_PUBLISH_EXTENSION_POINT);
				if(ep.length &gt; 0){
					ep[0].publish(pcrGr, true, true);
				}
			}
			if(gs.getProperty(CaseDigestConstants.PARENT_CHILD_CASE_SYNC, false) == 'true'){
				new MajorCaseDigest().bulkPublishWorker(pcrGr, childPCRSyncOnly);
				if(gs.nil(childPCRSyncOnly) || childPCRSyncOnly == false){
					message = gs.getMessage("The Post Case Review document will be published to all associated child cases.");
					caseDigest.closePCR(pcrGr);
				}
				else
				{
					message = gs.getMessage("Post Case Review documents will be created for all associated child cases.");
				}
			}
			else if(!gs.nil(pcrGr.case_number))
			{
				message = gs.getMessage("The Post Case Review document has been published to major case {0} but not to the associated child cases.", pcrGr.case_number.number);
			}
		}
		return message;
	},
	
	type: 'MajorPCRPublishOOB'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2019-05-28 05:07:52&lt;/sys_created_on&gt;
        &lt;sys_id&gt;24bdf17b53a17300acb8ddeeff7b12c8&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;3&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;MajorPCRPublishOOB&lt;/sys_name&gt;
        &lt;sys_package display_value="Case Digests" source="sn_csm_case_digest"&gt;8fa0059c73632300f74071ef64f6a76a&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Case Digests"&gt;8fa0059c73632300f74071ef64f6a76a&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_24bdf17b53a17300acb8ddeeff7b12c8&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2019-08-12 06:51:53&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:12:22</sys_created_on>
        <sys_id>5ff0345983b01210c6695855eeaad362</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>MajorPCRPublishOOB</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_5ff0345983b01210c6695855eeaad362</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:12:22</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
