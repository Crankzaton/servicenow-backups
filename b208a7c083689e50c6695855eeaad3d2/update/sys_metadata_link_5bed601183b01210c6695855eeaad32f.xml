<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>2ceba45583701210c6695855eeaad3f3</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules"&gt;
    &lt;x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE"&gt;
        &lt;abort_action&gt;false&lt;/abort_action&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;action_delete&gt;false&lt;/action_delete&gt;
        &lt;action_insert&gt;false&lt;/action_insert&gt;
        &lt;action_query&gt;false&lt;/action_query&gt;
        &lt;action_update&gt;true&lt;/action_update&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;add_message&gt;false&lt;/add_message&gt;
        &lt;advanced&gt;true&lt;/advanced&gt;
        &lt;change_fields&gt;false&lt;/change_fields&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;collection/&gt;
        &lt;condition/&gt;
        &lt;description/&gt;
        &lt;execute_function&gt;false&lt;/execute_function&gt;
        &lt;filter_condition/&gt;
        &lt;is_rest&gt;false&lt;/is_rest&gt;
        &lt;message/&gt;
        &lt;name&gt;Validate Evaluation Type Inputs&lt;/name&gt;
        &lt;order&gt;100&lt;/order&gt;
        &lt;priority&gt;100&lt;/priority&gt;
        &lt;rest_method/&gt;
        &lt;rest_method_text/&gt;
        &lt;rest_service/&gt;
        &lt;rest_service_text/&gt;
        &lt;rest_variables/&gt;
        &lt;role_conditions/&gt;
        &lt;script&gt;&lt;![CDATA[(function executeRule(current, previous /*null when async*/ ) {
    var msg;
    if (current.getValue(RFConstants.fields.SN_RF_RECOMMENDATION_RULE_EVALUATION_TYPE) == RFConstants.evaluationTypeSysIds.CONDITIONAL_RULES) {
        var currentTable = current.getValue(RFConstants.fields.SN_RF_RECOMMENDATION_RULE_TABLE);
        var currentConditionalDefSysIds = current.evaluation_type_input.conditional_definitions;

        currentConditionalDefSysIds = currentConditionalDefSysIds ? currentConditionalDefSysIds.split(',') : [];
        for (var i = 0; i &lt; currentConditionalDefSysIds.length; i++) {
            var conditionalDefinition = new RFConditionalDefinitionService(currentConditionalDefSysIds[i]);
            if (conditionalDefinition.hasValidRecord()) {
                if (conditionalDefinition.getTable() != currentTable) {
                    msg = gs.getMessage('Conditional definitions are added for tables other than "{0}". Please remove such records', currentTable);
                }
            }
        }
    } else if (current.getValue(RFConstants.fields.SN_RF_RECOMMENDATION_RULE_EVALUATION_TYPE) == RFConstants.evaluationTypeSysIds.SIMILARITY) {
        currentTable = current.getValue(RFConstants.fields.SN_RF_RECOMMENDATION_RULE_TABLE);
        var currentSimilarityDefinition = new RFSimilarityService(current.evaluation_type_input.similarity_definition);
        if (currentTable != currentSimilarityDefinition.getTestTableName()) {
            msg = gs.getMessage('Similarity definition is added for table other than "{0}".', currentTable);
        }
    } else if (current.getValue(RFConstants.fields.SN_RF_RECOMMENDATION_RULE_EVALUATION_TYPE) == RFConstants.evaluationTypeSysIds.SIMILARITY_WITH_TREND) {
        currentTable = current.getValue(RFConstants.fields.SN_RF_RECOMMENDATION_RULE_TABLE);
        currentSimilarityDefinition = new RFSimilarityService(current.evaluation_type_input.similarity_definition);
        if (currentTable != currentSimilarityDefinition.getTestTableName()) {
            msg = gs.getMessage('Similarity definition is added for table other than "{0}".', currentTable);
        }
        var currentTrendDefinition = new RFTrendDefinitionService(current.evaluation_type_input.trend_definition.getRefRecord());
        if (currentTable != currentTrendDefinition.getTable()) {
            msg = gs.getMessage('Trend definition is added for table other than "{0}".', currentTable);
        }
    } else if (current.getValue(RFConstants.fields.SN_RF_RECOMMENDATION_RULE_EVALUATION_TYPE) == RFConstants.evaluationTypeSysIds.CLASSIFICATION) {
        currentTable = current.getValue(RFConstants.fields.SN_RF_RECOMMENDATION_RULE_TABLE);
        var currentClassificationDefinition = new RFClassificationService(current.evaluation_type_input.classification_definition.getRefRecord());
        if (currentTable != currentClassificationDefinition.getTable()) {
            msg = gs.getMessage('Classification definition is added for table other than "{0}".', currentTable);
        }
    } else if (current.getValue(RFConstants.fields.SN_RF_RECOMMENDATION_RULE_EVALUATION_TYPE) == RFConstants.evaluationTypeSysIds.CLASSIFICATION_PIWB) {
        currentTable = current.getValue(RFConstants.fields.SN_RF_RECOMMENDATION_RULE_TABLE);
        var currentClassificationUsecase = new RFPIWBClassificationService(current.evaluation_type_input.classification_usecase);
        if (currentTable != currentClassificationUsecase.getTable()) {
            msg = gs.getMessage('Classification usecase is added for table other than "{0}".', currentTable);
        }
    }

    if (msg) {
        gs.addErrorMessage(msg);
        current.setAbortAction(true);
        return;
    }
})(current, previous);]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;x_938076_now_utils_now_utils_business_rules&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2024-09-21 07:50:04&lt;/sys_created_on&gt;
        &lt;sys_domain&gt;global&lt;/sys_domain&gt;
        &lt;sys_domain_path&gt;/&lt;/sys_domain_path&gt;
        &lt;sys_id&gt;2ceba45583701210c6695855eeaad3f3&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;Validate Evaluation Type Inputs&lt;/sys_name&gt;
        &lt;sys_overrides/&gt;
        &lt;sys_package display_value="Now Utils" source="x_938076_now_utils"&gt;b208a7c083689e50c6695855eeaad3d2&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Now Utils"&gt;b208a7c083689e50c6695855eeaad3d2&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;x_938076_now_utils_now_utils_business_rules_2ceba45583701210c6695855eeaad3f3&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2024-09-21 07:50:04&lt;/sys_updated_on&gt;
        &lt;template/&gt;
        &lt;when&gt;before&lt;/when&gt;
    &lt;/x_938076_now_utils_now_utils_business_rules&gt;
    &lt;sys_translated_text action="delete_multiple" query="documentkey=2ceba45583701210c6695855eeaad3f3"/&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:58:59</sys_created_on>
        <sys_id>5bed601183b01210c6695855eeaad32f</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Validate Evaluation Type Inputs</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_5bed601183b01210c6695855eeaad32f</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:58:59</sys_updated_on>
        <tablename>sys_script</tablename>
    </sys_metadata_link>
</record_update>
