<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Handle product rank update</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
 if(typeof current.product == 'undefined' || current.product == null || current.product == ''){
  gs.addErrorMessage(gs.getMessage('Product rank can be provided only when product is specified on the story'));
  current.setAbortAction(true);
 } else {
  if(typeof productRankUpdateSysId == 'undefined' || productRankUpdateSysId == null){
   productRankUpdateSysId = current.sys_id;
  }
  if(productRankUpdateSysId == current.sys_id){
   var api = new AgileStoryRankingAPI();
   var productStoriesWithRank = api.getProductRankObject(current.product);
   //When Rank is changed from null to a new value getProductRankObject
   //wouldn't include current record as we are querying on rank!=NULL, so add it here
   if(typeof previous.product_rank == 'undefined' || previous.product_rank == null || previous.product_rank == 0)
    productStoriesWithRank.push({"key":current.getValue("sys_id"), "rank":parseInt(previous.product_rank), "isDirty":false});
   api.updateRanks(productStoriesWithRank,current.sys_id,parseInt(current.product_rank),'product_rank');
   productRankUpdateSysId = '';
  }
 }

})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:53:54</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>f8cc64d983701210c6695855eeaad3b4</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Handle product rank update</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_f8cc64d983701210c6695855eeaad3b4</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:53:54</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=f8cc64d983701210c6695855eeaad3b4"/>
</record_update>
