<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Check valid start and review target date</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[var startDate = current.target_at;
var reviewDate = current.target_review;
var previousDate = previous.target_at;
var previousReview = previous.target_review;
var invalidReviewDate = startDate >= reviewDate;

// When reviewDate field is empty
if (reviewDate == '00000000') {
    reviewDate = 0;
    invalidReviewDate = false;
}

var result = invalidReviewDate ? 'invalid_review_date' : validTargetRange();

if (result === 'invalid_uuid') {
    var invalidUuidMsg = gs.getMessage('Not a valid Indicator, Breakdown, Element or Aggregate combination');
    gs.addInfoMessage(invalidUuidMsg);
    current.setAbortAction(true);
} else if (result === 'invalid_review_date') {
    var invalidReviewDateMsg = gs.getMessage('Review date should be greater than the start date');
    gs.addInfoMessage(invalidReviewDateMsg);
    current.setAbortAction(true);
} else if (result === 'overlap') {
    var overlapMsg = gs.getMessage('There is already a target value set for this date range');
    gs.addInfoMessage(overlapMsg);
    current.setAbortAction(true);
}

function validTargetRange() {
    var paTarget = new SNC.PATarget();
    var config = JSON.stringify({
        "indicator_sysid": current.target.indicator.toString(),
        "breakdown_sysid": current.target.breakdown.toString(),
        "element_sysid": current.target.element.toString(),
        "breakdown_level2_sysid": current.target.breakdown_level2.toString(),
        "element_level2_sysid": current.target.element_level2.toString(),
        "aggregate_sysid": current.target.aggregate.toString(),
        "domain_sysid": current.sys_domain.toString(),
        "startDate": startDate.toString(),
        "reviewDate": reviewDate.toString(),
        "previousDate": previousDate.toString(),
    });

    return paTarget.validTargetDate(config, current.target.owner ? false : true);
}]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:51:31</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>b53c68d583701210c6695855eeaad3c9</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Check valid start and review target date</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_b53c68d583701210c6695855eeaad3c9</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:51:31</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=b53c68d583701210c6695855eeaad3c9"/>
</record_update>
