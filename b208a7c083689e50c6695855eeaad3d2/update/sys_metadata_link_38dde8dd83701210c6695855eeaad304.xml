<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>2898ec930758201028ef0a701ad30078</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="sys_script"&gt;
    &lt;sys_script action="INSERT_OR_UPDATE"&gt;
        &lt;abort_action&gt;false&lt;/abort_action&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;action_delete&gt;false&lt;/action_delete&gt;
        &lt;action_insert&gt;false&lt;/action_insert&gt;
        &lt;action_query&gt;false&lt;/action_query&gt;
        &lt;action_update&gt;true&lt;/action_update&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;add_message&gt;false&lt;/add_message&gt;
        &lt;advanced&gt;true&lt;/advanced&gt;
        &lt;change_fields&gt;false&lt;/change_fields&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;collection&gt;ml_solution&lt;/collection&gt;
        &lt;condition&gt;sn_nlu_workbench.NLUBatchTestIntegrator.isTrainingModeValid(current)&lt;/condition&gt;
        &lt;description/&gt;
        &lt;execute_function&gt;false&lt;/execute_function&gt;
        &lt;filter_condition table="ml_solution"&gt;capability=nlu_trainer^stateVALCHANGES^EQ&lt;item display_value="NLU" endquery="false" field="capability" goto="false" newquery="false" operator="=" or="false" value="nlu_trainer"/&gt;
            &lt;item endquery="false" field="state" goto="false" newquery="false" operator="VALCHANGES" or="false" value=""/&gt;
            &lt;item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/&gt;
        &lt;/filter_condition&gt;
        &lt;is_rest&gt;false&lt;/is_rest&gt;
        &lt;message/&gt;
        &lt;name&gt;NLU batch test run - process results&lt;/name&gt;
        &lt;order&gt;100&lt;/order&gt;
        &lt;priority&gt;100&lt;/priority&gt;
        &lt;rest_method/&gt;
        &lt;rest_method_text/&gt;
        &lt;rest_service/&gt;
        &lt;rest_service_text/&gt;
        &lt;rest_variables/&gt;
        &lt;role_conditions/&gt;
        &lt;script&gt;&lt;![CDATA[(function executeRule(current, previous /*null when async*/ ) {

    var tables = sn_nlu_workbench.NLUWorkbenchConstants.tables;
    var SOLUTION_STATES = sn_nlu_workbench.NLUWorkbenchConstants.SOLUTION_STATES;
    var EXECUTION_STATUS = sn_nlu_workbench.NLUWorkbenchConstants.EXECUTION_STATUS;

    var testExecution;
    try {
        // Get the execution record: 
        var executionGr = new GlideRecord(tables.NLU_BATCH_TEST_RUN_EXECUTION);
        if (executionGr.get('solution', current.sys_id)) {
            testExecution = new sn_nlu_workbench.NLUBatchTestExecution(null, executionGr);
            var status = current.getValue('state');

            if (status === SOLUTION_STATES.TRAIN_SUCCESS_STATE) {
                testExecution.updateStatus(EXECUTION_STATUS.PROCESSING_RESULTS);
                sn_nlu_workbench.NLUBatchTestResultsProcessor.processInBackground(testExecution.getId());
            } else if (status === SOLUTION_STATES.TRAIN_TIMEOUT_STATE) {
                testExecution.updateStatus(EXECUTION_STATUS.REQUEST_TIMEOUT);
            } else if (SOLUTION_STATES.TRAIN_ERROR_STATES.indexOf(status) !== -1) {
                testExecution.updateStatus(EXECUTION_STATUS.FAILED);
            } else if (status === SOLUTION_STATES.TRAIN_CANCELLED_STATE) {
                testExecution.updateStatus(EXECUTION_STATUS.CANCELLED);
            }
        }
    } catch (ex) {
        gs.error('Failed to process batch test results: ' + ex.message);
        testExecution &amp;&amp; testExecution.updateStatus(EXECUTION_STATUS.FAILED);
    }

})(current, previous);]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2020-11-10 19:04:22&lt;/sys_created_on&gt;
        &lt;sys_domain&gt;global&lt;/sys_domain&gt;
        &lt;sys_domain_path&gt;/&lt;/sys_domain_path&gt;
        &lt;sys_id&gt;2898ec930758201028ef0a701ad30078&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;21&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;NLU batch test run - process results&lt;/sys_name&gt;
        &lt;sys_overrides/&gt;
        &lt;sys_package display_value="NLU Workbench - Advanced Features" source="sn_nlu_workbench"&gt;31f5f491c3a710100bf407720f40ddf4&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="NLU Workbench - Advanced Features"&gt;31f5f491c3a710100bf407720f40ddf4&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_2898ec930758201028ef0a701ad30078&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2021-06-22 12:25:53&lt;/sys_updated_on&gt;
        &lt;template/&gt;
        &lt;when&gt;after&lt;/when&gt;
    &lt;/sys_script&gt;
    &lt;sys_translated_text action="delete_multiple" query="documentkey=2898ec930758201028ef0a701ad30078"/&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:58:33</sys_created_on>
        <sys_id>38dde8dd83701210c6695855eeaad304</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>NLU batch test run - process results</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_38dde8dd83701210c6695855eeaad304</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:58:33</sys_updated_on>
        <tablename>sys_script</tablename>
    </sys_metadata_link>
</record_update>
