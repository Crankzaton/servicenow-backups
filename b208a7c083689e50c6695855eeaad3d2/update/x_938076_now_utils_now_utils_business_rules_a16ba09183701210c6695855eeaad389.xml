<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Sync Ops Status for CMDB CI</name>
        <order>999</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[var OpsStatusSynchronizer = Class.create();
OpsStatusSynchronizer.prototype = {
    initialize: function(currentCIRecord) {
        if (!currentCIRecord)
            return;

        this.current = currentCIRecord;
        if (currentCIRecord.getElement('hardware_status')) {
            this.statusField = 'hardware_status';
            this.baseTable = 'cmdb_ci_hardware';
        } else {
            this.statusField = 'install_status';
            this.baseTable = 'cmdb_ci';
        }
    },

    shouldSync: function() {
        if (!this.current)
            return false;

        var current = this.current;
        var opsChoice = current.getElement('operational_status').getChoiceValue();
        var statusChoice = current.getElement(this.statusField).getChoiceValue();

        var retired = gs.getMessage('Retired');
        return opsChoice == retired && statusChoice != retired ||
            opsChoice != retired && statusChoice == retired;
    },

    syncStatus: function() {
        if (!this.current)
            return;

        var current = this.current;
        var statusField = this.statusField;
        var baseTable = this.baseTable;

        var retired = gs.getMessage('Retired');
        var fromOps = {};
        fromOps[retired] = retired;

        var toOps = {};
        toOps[retired] = retired;

        var ops = current.getElement('operational_status');
        var status = current.getElement(statusField);
        if (ops.changes()) { // higher priority for checking Operational Status
            var opsChoice = ops.getChoiceValue();
            var statusChoice = fromOps[opsChoice];
            var subStatusChoice = ''; // necessary to set Hardware Asset retired
            if (!statusChoice) {
                statusChoice = gs.getMessage('Installed');
                subStatusChoice = gs.getMessage('In Use');
            }
            current.setValue(statusField,
                new GlideChoiceListGenerator(baseTable, statusField).get().getValueOf(statusChoice));
            if (baseTable == 'cmdb_ci_hardware') {
                var subStatusField = 'hardware_substatus';
                current.setValue(subStatusField, !subStatusChoice ? '' :
                    new GlideChoiceListGenerator(baseTable, subStatusField).get().getValueOf(subStatusChoice));
            }

        } else {
            statusChoice = status.getChoiceValue();
            opsChoice = toOps[statusChoice];
            if (!opsChoice)
                opsChoice = gs.getMessage('Non-Operational');
            current.setValue('operational_status',
                new GlideChoiceListGenerator(baseTable, 'operational_status').get().getValueOf(opsChoice));

        }
    },

    type: 'OpsStatusSynchronizer'
};

var synchronizer = new OpsStatusSynchronizer(current);
if (synchronizer.shouldSync())
    synchronizer.syncStatus();]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:47:56</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>a16ba09183701210c6695855eeaad389</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Sync Ops Status for CMDB CI</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_a16ba09183701210c6695855eeaad389</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:47:56</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=a16ba09183701210c6695855eeaad389"/>
</record_update>
