<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>unique field attribute for data source</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {

    // ensure the attribute already doesn't exist for the current datasource (datasource must be active)
    var gr = new GlideRecord('ais_datasource_field_attribute');
    gr.addQuery('datasource', current.datasource);
    gr.addQuery('datasource.active', true);
    gr.addQuery('source', current.source);
    gr.addQuery('field', current.field);
    gr.addQuery('attribute', current.attribute);
    gr.addQuery('sys_id', '!=', current.getUniqueValue());
    gr.query();
    if (gr.next()) {
        current.setAbortAction(true);
        gs.addErrorMessage(gs.getMessage("Attribute '{0}' already exists for {1} : {2}", [current.attribute.attribute, current.source, current.field]));
        return;
    }

    // ensure 1 to 1 mapping for common fields (datasource must be active)
    if (current.attribute.attribute == 'map_to' || current.attribute.attribute == 'map_to_raw') {
        gr.initialize();
        gr.addQuery('datasource', current.datasource);
        gr.addQuery('datasource.active', true);
        gr.addQuery('source', current.source);
        // map_to f734a634c7320010d1cfd9795cc26094 and map_to_raw 8f86f1a8b7021010ba148481de11a9a8
        gr.addQuery('attribute', 'IN','f734a634c7320010d1cfd9795cc26094,8f86f1a8b7021010ba148481de11a9a8');
        gr.addQuery('value', current.value);
        gr.addQuery('sys_id', '!=', current.getUniqueValue());
        gr.query();
        if (gr.next()) {
            current.setAbortAction(true);
            gs.addErrorMessage(gs.getMessage("'{0}' already mapped for {1}", [current.value, current.source]));
        }
    }

})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:51:02</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>7e1cac9583701210c6695855eeaad3b8</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>unique field attribute for data source</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_7e1cac9583701210c6695855eeaad3b8</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:51:02</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=7e1cac9583701210c6695855eeaad3b8"/>
</record_update>
