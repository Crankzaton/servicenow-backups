<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>922967b0dba67910ee77482a1396193b</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;public&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.WF_IncPrbChoiceUtils&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;Functions to fetch and validate choice values.&lt;/description&gt;
        &lt;name&gt;WF_IncPrbChoiceUtils&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var WF_IncPrbChoiceUtils = Class.create();
WF_IncPrbChoiceUtils.prototype = {
    initialize: function() {},

    /**
     * Fetches a sys_choice record. Can be used to determine if a value
	 * is valid. Will only return active records.
	 *  
     * @param {String} table - The name of the choice record. This will match the table name associated with the choice.
     * @param {String} element - The field on the table for the choice option.
     * @param {String} value - The value to be searched. Value is checked against both the value and the label of the record.
     * @param {String} dependent_value - Optional. Specify the parent value for the choice. Not required if the choice has no parent.
     * @param {String} language - Optional. The language for he value. Default is English.
     */
    getChoice: function(table, element, value, dependent_value, language) {
        // default to English
        language = language || 'en';

        var gr = new GlideRecord('sys_choice');
        gr.addQuery('name', table);
        gr.addQuery('element', element);

		// Make sure we only return records with a null dependent_value
		// if no dependent value is provided. This ensures we don't return
		// child records when a parent is being saught. 
        if (gs.nil(dependent_value))
            gr.addNullQuery('dependent_value');
        else
            gr.addQuery('dependent_value', dependent_value);
        
		gr.addQuery('language', language);
        gr.addNotNullQuery('value');
        // Match value provided on both value and label to ensure there
		// is no confusion around which is required.
		gr.addQuery('value', value).addOrCondition('label', value);
        gr.addQuery('inactive', false);
        gr.setLimit(1);
        gr.query();
        if (gr.next()) {
            return gr;
        }

        return null;
    },

  /**
     * Fetches the value of a sys_choice record. Can be used to determine if 
	 * a target value is valid. Will only return active records.
	 *  
     * @param {String} table - The name of the choice record. This will match the table name associated with the choice.
     * @param {String} element - The field on the table for the choice option.
     * @param {String} value - The value to be searched. Value is checked against both the value and the label of the record.
     * @param {String} dependent_value - Optional. Specify the parent value for the choice. Not required if the choice has no parent.
     * @param {String} language - Optional. The language for he value. Default is English.
     */
    getChoiceValue: function(table, element, value, dependent_value, language) {
		var gr = new GlideRecord('sys_choice');
		gr = this.getChoice(table, element, value, dependent_value, language);
		if (gr) {
			return gr.getValue('value');
		}
		return null;
	},
    type: 'WF_IncPrbChoiceUtils'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;A648157&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2023-11-14 15:58:50&lt;/sys_created_on&gt;
        &lt;sys_id&gt;922967b0dba67910ee77482a1396193b&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;6&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;WF_IncPrbChoiceUtils&lt;/sys_name&gt;
        &lt;sys_package display_value="Global" source="global"&gt;global&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_922967b0dba67910ee77482a1396193b&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2024-02-04 17:25:54&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:45:36</sys_created_on>
        <sys_id>4e98385183341210c6695855eeaad3c3</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>WF_IncPrbChoiceUtils</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_4e98385183341210c6695855eeaad3c3</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:45:36</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
