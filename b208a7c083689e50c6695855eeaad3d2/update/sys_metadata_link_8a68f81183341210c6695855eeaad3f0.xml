<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>85fe1085ff076110468365d7d3b8fe69</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;sn_entitlement.GroupHasRoleInMemoryCache&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;GroupHasRoleInMemoryCache&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var GroupHasRoleInMemoryCache = Class.create();
GroupHasRoleInMemoryCache.prototype = {
    /**
     * Create an in-memory cache of the data in sys_group_has_role limited to the roleIds that are provided
     * in this constructor.
     *
     * @param meteredRoleIds The super-set of roleIds to load into the in-memory cache
     */
    initialize: function(meteredRoleIds) {
        this._membershipInMemoryCache = this._constructInMemoryCache(meteredRoleIds);
    },

    /**
     * Retrieve the roleIds assigned to the group
     *
     * @param groupId The sys_user_group.sys_id to retrieve roles for
     * @returns {string[]} An array of sys_user_role.sys_id values
     */
    getRoleIdsByGroupId: function(groupId) {
        return this._membershipInMemoryCache.getValsById(groupId);
    },

    /**
     * Setup the in-memory cache to hold the appropriate data
     *
     * @param meteredRoleIds The super-set of roleIds to load into the in-memory cache
     * @returns {sn_entitlement.MembershipInMemoryCache} A configured in-memory cache object
     * @private
     */
    _constructInMemoryCache: function(meteredRoleIds) {
        const keyName = 'group';
        const valName = 'role';

        const gr = new GlideRecord('sys_group_has_role');
        gr.addQuery('role', 'IN', meteredRoleIds);
        gr.addQuery('group.active', true);
        gr.query();

        return new sn_entitlement.MembershipInMemoryCache(gr, keyName, valName, meteredRoleIds.length);
    },

    type: 'GroupHasRoleInMemoryCache'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;maint&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2023-05-24 20:03:06&lt;/sys_created_on&gt;
        &lt;sys_id&gt;85fe1085ff076110468365d7d3b8fe69&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;5&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;GroupHasRoleInMemoryCache&lt;/sys_name&gt;
        &lt;sys_package display_value="Licensing Engine" source="sn_entitlement"&gt;bcadabf277f311109c62f5f3cb5a992a&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Licensing Engine"&gt;bcadabf277f311109c62f5f3cb5a992a&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_85fe1085ff076110468365d7d3b8fe69&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;maint&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2023-06-05 20:49:18&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:44:46</sys_created_on>
        <sys_id>8a68f81183341210c6695855eeaad3f0</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>GroupHasRoleInMemoryCache</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_8a68f81183341210c6695855eeaad3f0</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:44:46</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
