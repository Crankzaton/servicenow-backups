<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>2a8658e773101010589a09496bf6a7eb</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.ConstraintsValidation&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;ConstraintsValidation&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var ConstraintsValidation = Class.create();
ConstraintsValidation.prototype = {
    initialize: function(encodedQuery/*projectSysId */) {
       PPMDebug.log('into ConstraintsValidation encoded query is '+ encodedQuery);
       this.encodedQuery = encodedQuery;
    },

    getInvalidSNLTParents: function(){
        var result= [];
        try{
            var project =  this._getProjectRecord();
            var projectTasks = this._getInvalidSNLTParents(project.getUniqueValue());
            while(projectTasks.next()){
                result.push(projectTasks.getUniqueValue());
            }
        }
        catch(err){
            gs.log('error in processing validateInvalidSNLTParents'+ err);
            return result;;
        }
        PPMDebug.log('invalid SNLT Parents '+ result.length);
        return result;
    },

    getInvalidTasksWithEmptyConstraintDate: function(){
      PPMDebug.log('i')
      var result = [];
      try{
        var project = this._getProjectRecord();
        var projectTasks = this._getInvalidTasksWithEmptyConstraintDate(project.getUniqueValue());
        while(projectTasks.next()){
            result.push(projectTasks.getUniqueValue());
        }
      }
      catch(err){
        gs.log('error in processing getInvalidTasksWithEmptyConstraintDate'+ err);
        return result;;
      }
      return result;
    },

    _getProjectRecord: function(){
        var gr = new GlideRecord('pm_project');
        gr.addEncodedQuery(this.encodedQuery);
        gr.query();
        gr.next();
        return gr;
    },

    _getInvalidSNLTParents: function(topTaskId){
        if(JSUtil.nil(topTaskId))
           throw error('invalid top task id');
        var gr = new GlideRecord('pm_project_task');
        gr.addQuery('top_task', topTaskId);
        gr.addQuery('rollup', true);
        gr.addQuery('time_constraint', 'snlt');
        gr.query();
        return gr;
    },

    _getInvalidTasksWithEmptyConstraintDate: function(topTaskId){
        if(JSUtil.nil(topTaskId))
           throw 'invalid top task id';
        

        var gr = new GlideRecord('pm_project_task');
        gr.addQuery('top_task', topTaskId);
        gr.addNullQuery('constraint_date');
        var qc = gr.addQuery('time_constraint', 'snet');
        qc.addOrCondition('time_constraint', 'snlt');
        gr.query();
        PPMDebug.log('Encoded Query from _getInvalidTasksWithEmptyConstraintDate is '+ gr.getEncodedQuery());
        return gr;
    },

    type: 'ConstraintsValidation'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2020-04-26 16:02:49&lt;/sys_created_on&gt;
        &lt;sys_id&gt;2a8658e773101010589a09496bf6a7eb&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;48&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;ConstraintsValidation&lt;/sys_name&gt;
        &lt;sys_package display_value="Project Management" source="com.snc.project_management_v3"&gt;9eef82e747e64210cd4e1ce4316d43e3&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_2a8658e773101010589a09496bf6a7eb&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2020-04-27 02:00:18&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:12:55</sys_created_on>
        <sys_id>db11bc5983b01210c6695855eeaad36d</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>ConstraintsValidation</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_db11bc5983b01210c6695855eeaad36d</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:12:55</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
