<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Validate unique api resoure when update</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {

    if (current.api_path != previous.api_path ||
        current.version != previous.version ||
        current.http_method != previous.http_method ||
        current.api_resource != previous.api_resource ||
        current.apply_all_resources != previous.apply_all_resources ||
        current.apply_all_methods != previous.apply_all_methods ||
        current.apply_all_versions != previous.apply_all_versions ||
        current.apply_global != previous.apply_global ||
        current.apply_all != previous.apply_all || (current.active && !previous.active)) {

        var gr = new GlideRecord('sys_api_access_policy');
        gr.addQuery('active', current.active);
        gr.addQuery('api_path', current.api_path);
        gr.addQuery('version', current.version);
        gr.addQuery('http_method', current.http_method);
        gr.addQuery('api_resource', current.api_resource);
        gr.addQuery('apply_all_resources', current.apply_all_resources);
        gr.addQuery('apply_all_methods', current.apply_all_methods);
        gr.addQuery('apply_all_versions', current.apply_all_versions);
        gr.addQuery('apply_global', current.apply_global);
        gr.addQuery('apply_all', current.apply_all);
        gr.query();
        if (gr.next() && (current.active)) {
            gs.addErrorMessage(gs.getMessage('Another policy with the same configuration is active. You can have only one policy active with the same configuration.'));
            current.setAbortAction(true);
        }
    }
})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:47:24</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>e14b645183701210c6695855eeaad36f</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Validate unique api resoure when update</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_e14b645183701210c6695855eeaad36f</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:47:24</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=e14b645183701210c6695855eeaad36f"/>
</record_update>
