<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>18cc5ef2ff302110468365d7d3b8fed3</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;sn_entitlement.UserGroupDao&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;UserGroupDao&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var UserGroupDao = Class.create();
UserGroupDao.prototype = {
    initialize: function() {},
    /**
     * Retrieves the sys_user_group.sys_id values for all active groups
     *
     * @returns {array} An array of sys_user_group.sys_id values
     */
    getUserGroupIdsByActive: function() {
        const gr = new GlideRecord('sys_user_group');
        gr.addQuery('active', true);
        gr.query();
        let ids = [];
        while (gr.next())
            ids.push(gr.getUniqueValue());
        return ids;
    },

    /**
     * Checks to see if the group is active and returns a boolean indicating if it is or not
     *
     * @param {guid} groupId the sys_user_group.sys_id to check
     * @returns {bool} True if the group exists and is active
     */
    getGroupIdIsActive: function(groupId) {
        const gr = new GlideRecord('sys_user_group');
        gr.addQuery('sys_id', groupId);
        gr.addQuery('active', true);
        gr.query();

        return gr.hasNext();
    },

    /**
     * Retrieves the sys_user_group.sys_id values for all active groups that also have at least 
     * one of the roles provided.
     *
     * @param {array} roleIds An array of sys_user_role.sys_id values to filter groups down
     * @returns {array} An array of sys_user_group.sys_id values
     */
    getGroupIdsByActiveAndHasRole: function(roleIds) {
        const gr = new GlideRecord('sys_group_has_role');
        gr.addQuery('group.active', true);
        gr.addQuery('role.sys_id', 'IN', roleIds);
        gr.query();

        const ids = new Set();
        while (gr.next())
            ids.add(String(gr.group.sys_id));
        return Array.from(ids);
    },

    type: 'UserGroupDao'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2023-02-07 19:20:56&lt;/sys_created_on&gt;
        &lt;sys_id&gt;18cc5ef2ff302110468365d7d3b8fed3&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;5&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;UserGroupDao&lt;/sys_name&gt;
        &lt;sys_package display_value="Licensing Engine" source="sn_entitlement"&gt;bcadabf277f311109c62f5f3cb5a992a&lt;/sys_package&gt;
        &lt;sys_policy&gt;read&lt;/sys_policy&gt;
        &lt;sys_scope display_value="Licensing Engine"&gt;bcadabf277f311109c62f5f3cb5a992a&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_18cc5ef2ff302110468365d7d3b8fed3&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2023-02-21 16:41:27&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:11:01</sys_created_on>
        <sys_id>e3a03cd583b01210c6695855eeaad33e</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>UserGroupDao</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_e3a03cd583b01210c6695855eeaad33e</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:11:01</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
