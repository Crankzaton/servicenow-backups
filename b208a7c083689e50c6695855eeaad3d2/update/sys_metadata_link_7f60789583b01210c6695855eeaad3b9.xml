<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>0ce8ec768731330085d4578c87cb0b6c</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.DemandActualUtil&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;Script include to pop&lt;/description&gt;
        &lt;name&gt;DemandActualUtil&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var DemandActualUtil = Class.create();
DemandActualUtil.prototype = {
    initialize: function() {},

    demandActualCostUpdate: function(demandTable) {
		gs.log('DemandActualUtil:: Start updating Demand Actual Cost for table ' + demandTable);
        var count = new GlideAggregate('fm_expense_line');
        count.addEncodedQuery('task.sys_class_name=' + demandTable + '^state=processed');
        count.addAggregate('SUM', 'amount');
        count.groupBy('task');
        count.query();
		var recUpdatedCount = 0;
        var demandRecord = new GlideRecord(demandTable);
        while (count.next()) {
            if (demandRecord.get(count.getValue('task'))) {
                var currencyCode = demandRecord.demand_actual_cost.getReferenceCurrencyCode();
                var totalCost = parseFloat(count.getAggregate('SUM', 'amount'));
                demandRecord.demand_actual_cost = currencyCode + ";" + totalCost;
                demandRecord.setWorkflow(false);
                demandRecord.update();
				recUpdatedCount++;
            }
        }
		gs.log('DemandActualUtil:: Finished updating '+ recUpdatedCount + ' Demand Actual Cost for table ' + demandTable);
    },

    demandActualEffortUpdate: function(demandTable) {
		gs.log('DemandActualUtil:: Start updating Demand Actual Effort for table ' + demandTable);
        var timeCard = new GlideAggregate('time_card');
        timeCard.addEncodedQuery('task.sys_class_name=' + demandTable + '^state=Approved^ORstate=Processed');
        timeCard.addAggregate('SUM', 'total');
        timeCard.groupBy('task');
        timeCard.query();
		var recUpdatedCount = 0;
        var demandRecord = new GlideRecord(demandTable);
        while (timeCard.next()) {
            if (demandRecord.get(timeCard.getValue('task'))) {
                var currentEffort = parseFloat(timeCard.getAggregate('SUM', 'total')) * 60 * 60 * 1000;
                demandRecord.demand_actual_effort = new GlideDuration(currentEffort);
                demandRecord.setWorkflow(false);
                demandRecord.update();
				recUpdatedCount++;
            }
        }
		gs.log('DemandActualUtil:: Finished updating '+ recUpdatedCount +' Demand Actual Effort for table ' + demandTable);
    },


    updateEffortAndCost: function() {
		gs.log('DemandActualUtil:: Updating Demand Actuals started' + new GlideDateTime().getDisplayValue());
        this.demandActualCostUpdate('dmn_demand');
        this.demandActualEffortUpdate('dmn_demand');

        if (GlidePluginManager.isActive('com.snc.ppm_teamspace_1')) {
            this.demandActualCostUpdate('tsp1_demand');
            this.demandActualEffortUpdate('tsp1_demand');
        }

        if (GlidePluginManager.isActive('com.snc.ppm_teamspace_2')) {
            this.demandActualCostUpdate('tsp2_demand');
            this.demandActualEffortUpdate('tsp2_demand');
        }

        if (GlidePluginManager.isActive('com.snc.ppm_teamspace_3')) {
            this.demandActualCostUpdate('tsp3_demand');
            this.demandActualEffortUpdate('tsp3_demand');
        }

        if (GlidePluginManager.isActive('com.snc.ppm_teamspace_4')) {
            this.demandActualCostUpdate('tsp4_demand');
            this.demandActualEffortUpdate('tsp4_demand');
        }

        if (GlidePluginManager.isActive('com.snc.ppm_teamspace_5')) {
            this.demandActualCostUpdate('tsp5_demand');
            this.demandActualEffortUpdate('tsp5_demand');
        }
		
		gs.log('DemandActualUtil:: Updating Demand Actuals end' + new GlideDateTime().getDisplayValue());
    },

    type: 'DemandActualUtil'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2019-06-06 06:39:23&lt;/sys_created_on&gt;
        &lt;sys_id&gt;0ce8ec768731330085d4578c87cb0b6c&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;10&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;DemandActualUtil&lt;/sys_name&gt;
        &lt;sys_package display_value="Demand Management" source="com.snc.demand_management"&gt;82005a2b47e64210cd4e1ce4316d4346&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_0ce8ec768731330085d4578c87cb0b6c&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2019-06-11 07:08:28&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:09:57</sys_created_on>
        <sys_id>7f60789583b01210c6695855eeaad3b9</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>DemandActualUtil</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_7f60789583b01210c6695855eeaad3b9</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:09:57</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
