<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>30ace49983701210c6695855eeaad3f7</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules"&gt;
    &lt;x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE"&gt;
        &lt;abort_action&gt;false&lt;/abort_action&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;action_delete&gt;true&lt;/action_delete&gt;
        &lt;action_insert&gt;true&lt;/action_insert&gt;
        &lt;action_query&gt;false&lt;/action_query&gt;
        &lt;action_update&gt;true&lt;/action_update&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;add_message&gt;false&lt;/add_message&gt;
        &lt;advanced&gt;true&lt;/advanced&gt;
        &lt;change_fields&gt;false&lt;/change_fields&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;collection/&gt;
        &lt;condition&gt;!current.cmdb_ci.nil() &amp;amp;&amp;amp; current.begin.hasValue() &amp;amp;&amp;amp; gs.dateDiff(current.begin, gs.nowNoTZ(), true) &amp;gt;= 0&lt;/condition&gt;
        &lt;description/&gt;
        &lt;execute_function&gt;false&lt;/execute_function&gt;
        &lt;filter_condition/&gt;
        &lt;is_rest&gt;false&lt;/is_rest&gt;
        &lt;message/&gt;
        &lt;name&gt;Service Portal Outage Events&lt;/name&gt;
        &lt;order&gt;100&lt;/order&gt;
        &lt;priority&gt;100&lt;/priority&gt;
        &lt;rest_method/&gt;
        &lt;rest_method_text/&gt;
        &lt;rest_service/&gt;
        &lt;rest_service_text/&gt;
        &lt;rest_variables/&gt;
        &lt;role_conditions/&gt;
        &lt;script&gt;&lt;![CDATA[(function executeRule(current, previous /*null when async*/) {
 if (current.operation() == "insert") {
  if (current.end.hasValue())
   return; // record inserted w/ start/end both populated, do nothing

  gs.addInfoMessage(gs.getMessage("Outage opened for {0}", current.cmdb_ci.getDisplayValue()));
  gs.eventQueue("outage.begin", current, current.cmdb_ci, current.cmdb_ci.getDisplayValue());
 }

 if (current.operation() == "update") {
  // we only care here if 1) end just got populated, or 2) message was updated
  if (previous.end.nil() &amp;&amp; current.end.hasValue()) { // existing outage was closed
   gs.addInfoMessage(gs.getMessage("Outage closed for {0}", current.cmdb_ci.getDisplayValue()));
   gs.eventQueue("outage.end", current, current.cmdb_ci, current.cmdb_ci.getDisplayValue());
  } else if (current.details.changes()) {
   gs.addInfoMessage(gs.getMessage("Outage details updated for {0}", current.cmdb_ci.getDisplayValue()) + ": " + current.details.getHTMLValue());
   gs.eventQueue("outage.details", current, current.cmdb_ci, current.cmdb_ci.getDisplayValue());
  }
 }
 
 if (current.operation() == "delete") {
  gs.addInfoMessage(gs.getMessage("Outage deleted for {0}", current.cmdb_ci.getDisplayValue()));
  gs.eventQueue("outage.delete", current, current.cmdb_ci, current.cmdb_ci.getDisplayValue());
 }

 var outage = new GlideRecord("cmdb_ci_outage");
 outage.addQuery("cmdb_ci", current.cmdb_ci);
 outage.addQuery("begin", "&lt;=", gs.nowNoTZ());
 outage.addQuery("end", "&gt;", gs.nowNoTZ()).addOrCondition("end", "=", "NULL");
 outage.setLimit(1);
 outage.query();
 var hasCurrentOutage = outage.hasNext();

})(current, previous);]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;x_938076_now_utils_now_utils_business_rules&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2024-09-21 07:53:21&lt;/sys_created_on&gt;
        &lt;sys_domain&gt;global&lt;/sys_domain&gt;
        &lt;sys_domain_path&gt;/&lt;/sys_domain_path&gt;
        &lt;sys_id&gt;30ace49983701210c6695855eeaad3f7&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;Service Portal Outage Events&lt;/sys_name&gt;
        &lt;sys_overrides/&gt;
        &lt;sys_package display_value="Now Utils" source="x_938076_now_utils"&gt;b208a7c083689e50c6695855eeaad3d2&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Now Utils"&gt;b208a7c083689e50c6695855eeaad3d2&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;x_938076_now_utils_now_utils_business_rules_30ace49983701210c6695855eeaad3f7&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2024-09-21 07:53:21&lt;/sys_updated_on&gt;
        &lt;template/&gt;
        &lt;when&gt;before&lt;/when&gt;
    &lt;/x_938076_now_utils_now_utils_business_rules&gt;
    &lt;sys_translated_text action="delete_multiple" query="documentkey=30ace49983701210c6695855eeaad3f7"/&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:59:24</sys_created_on>
        <sys_id>590ee41183b01210c6695855eeaad31f</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Service Portal Outage Events</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_590ee41183b01210c6695855eeaad31f</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:59:24</sys_updated_on>
        <tablename>sys_script</tablename>
    </sys_metadata_link>
</record_update>
