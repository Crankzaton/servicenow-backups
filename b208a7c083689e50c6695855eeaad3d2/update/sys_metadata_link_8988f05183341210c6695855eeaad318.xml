<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>8d56a72753033010e530ddeeff7b1206</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;sn_rf.RFEvaluationTypeInputService&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;RFEvaluationTypeInputService&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var RFEvaluationTypeInputService = Class.create();

RFEvaluationTypeInputService.getByEvaluationTypeSysId = function(evaluationTypeSysId) {
    var evaluationTypeInputs = [];
    var gr = new GlideRecord(RFConstants.tables.SN_RF_EVALUATION_TYPE_INPUT);
    gr.addQuery(RFConstants.fields.SN_RF_EVALUATION_TYPE_INPUT_MODEL, evaluationTypeSysId);
    gr.query();

    while (gr.next()) {
        evaluationTypeInputs.push(new RFEvaluationTypeInputService(gr.getValue(RFConstants.fields.SYS_ID)));
    }
    return evaluationTypeInputs;
};

RFEvaluationTypeInputService.prototype = {
    tableName: RFConstants.tables.SN_RF_EVALUATION_TYPE_INPUT,

    initialize: function(grOrSysId) {
        if (grOrSysId &amp;&amp; grOrSysId.sys_class_name == this.tableName) {
            this.currentRecord = grOrSysId;
        } else if (grOrSysId) {
            var gr = new GlideRecord(this.tableName);
            if (gr.get(grOrSysId)) {
                this.currentRecord = gr;
            }
        }
    },

    hasValidRecord: function() {
        return this.currentRecord &amp;&amp; this.currentRecord.sys_class_name == this.tableName;
    },

    getName: function() {
        return this.currentRecord.getValue(RFConstants.fields.SN_RF_EVALUATION_TYPE_INPUT_ELEMENT);
    },

    type: 'RFEvaluationTypeInputService'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2021-10-13 16:33:37&lt;/sys_created_on&gt;
        &lt;sys_id&gt;8d56a72753033010e530ddeeff7b1206&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;RFEvaluationTypeInputService&lt;/sys_name&gt;
        &lt;sys_package display_value="Recommendation Framework" source="sn_rf"&gt;30a32ce6c7313010dd7ab6c427c2600e&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Recommendation Framework"&gt;30a32ce6c7313010dd7ab6c427c2600e&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_8d56a72753033010e530ddeeff7b1206&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2021-10-28 15:45:07&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:45:15</sys_created_on>
        <sys_id>8988f05183341210c6695855eeaad318</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>RFEvaluationTypeInputService</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_8988f05183341210c6695855eeaad318</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:45:15</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
