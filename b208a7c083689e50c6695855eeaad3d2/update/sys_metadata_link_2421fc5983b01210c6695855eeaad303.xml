<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>2b2ce60b0a0a0aa300f98a1659780c27</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.ListMechanic&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;true&lt;/client_callable&gt;
        &lt;description&gt;User list personalization&lt;/description&gt;
        &lt;name&gt;ListMechanic&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[gs.include("PrototypeServer");

var ListMechanic = Class.create();

ListMechanic.prototype = {
	initialize: function() {
		this.viewName = "";
		this.parent =  "";
      this.parentID = "";
		this.relationship = "";
	},

	getList: function(tableName) {
		var sl = this._getSysList(tableName);
		var cls = sl.getListSet();
		this.applyRules(cls, tableName);
		var document =  cls.toXML();
		var e = document.getDocumentElement();
		var userList = "false";
		if (sl.isUserList())
			userList = "true";

		e.setAttribute("user_list", userList);

		e.setAttribute('table.wrap', gs.getPreference('table.wrap'));
		e.setAttribute('table.compact', gs.getPreference('table.compact'));
		e.setAttribute('table.highlighting', gs.getPreference('table.highlighting'));
		e.setAttribute('list_edit_enable', gs.getPreference('list_edit_enable'));
		e.setAttribute('list_edit_double', gs.getPreference('list_edit_double'));
		e.setAttribute('field_style_circles', gs.getPreference('glide.ui.field_style_circles', 'true'));

		answer = document;
		return document;
	},

	applyRules: function(cls, tableName) {
		var avail = cls.getColumns();
		var sm = GlideSecurityManager.get();
		for (var i = 0; i &lt; avail.getSize();) {
			var c = avail.getChoice(i);
			var name = c.getValue();
			
			if(tableName)
				tableName = tableName.toLowerCase();

			var url = "record/" + tableName + '.' + name + "/add_to_list";
			var canAdd = sm.hasRightsTo(url, null);
			if (canAdd) {
				i++;
				continue;
			}
			avail.remove(i);
		}
	},

	setViewName: function(viewName) {
		this.viewName = viewName;
	},

	setParent: function(parent) {
		this.parent = parent;
	},

   setParentID: function(parentID) {
      this.parentID = parentID;
   },

	setRelationship: function(relationship) {
		this.relationship = relationship;
	},

	setCompact: function(compact) {
		if (!compact)
			compact = 'false';

		session.getUser().setPreference('table.compact', compact);
	},

	setHighlighting: function(highlighting) {
		if (!highlighting)
			highlighting = 'false';

		session.getUser().setPreference('table.highlighting', highlighting);
	},

	setWrap: function(wrap) {
		if (!wrap)
			wrap = 'false';

		session.getUser().setPreference('table.wrap', wrap);
	},

	setListEditEnable: function(flag) {
		if ( !flag )  // if not defined, set to false
			flag = 'false';
		session.getUser().setPreference('list_edit_enable', flag);
	},

	setListEditDouble: function(flag) {
		if ( !flag )  // if not defined set to false
			flag = 'false';
		session.getUser().setPreference('list_edit_double', flag);
	},

	setFieldStyleCircles: function(flag) {
		if (!flag)
			flag = 'false';

		session.getUser().setPreference('glide.ui.field_style_circles', flag);
	},

	saveList: function(tableName, fields) {
		var sl = this._getSysList(tableName);
		sl.saveForUser(fields);
	},

	reset: function(tableName) {
		var sl = this._getSysList(tableName);
		sl.saveForUser("");
	},

	_getSysList: function(tableName) {
		var sl = new GlideSysList(tableName);
		sl.setRelatedParentName(this.parent);
      sl.setRelatedParentID(this.parentID);
		sl.setRelationshipID(this.relationship);
		sl.setViewName(this.viewName);
		return sl;
	},

	type: 'ListMechanic'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;glide.maint&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2007-04-25 23:56:41&lt;/sys_created_on&gt;
        &lt;sys_id&gt;2b2ce60b0a0a0aa300f98a1659780c27&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;74&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;ListMechanic&lt;/sys_name&gt;
        &lt;sys_package display_value="UI Pages (define HTML pages and their processing)" source="com.glide.ui_page"&gt;fd2338603c31311068bcf327dfe37f15&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_2b2ce60b0a0a0aa300f98a1659780c27&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2020-03-19 05:29:27&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:13:00</sys_created_on>
        <sys_id>2421fc5983b01210c6695855eeaad303</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>ListMechanic</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_2421fc5983b01210c6695855eeaad303</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:13:00</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
