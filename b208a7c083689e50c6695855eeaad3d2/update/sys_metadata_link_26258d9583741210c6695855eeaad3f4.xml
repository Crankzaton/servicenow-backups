<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>ca444d69938ac210b31a30dcebba103a</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_fix"&gt;
    &lt;sys_script_fix action="INSERT_OR_UPDATE"&gt;
        &lt;before&gt;false&lt;/before&gt;
        &lt;description/&gt;
        &lt;name&gt;ACL group memebership - HSBC&lt;/name&gt;
        &lt;record_for_rollback&gt;true&lt;/record_for_rollback&gt;
        &lt;script&gt;&lt;![CDATA[var us = '224cc27e93b0c610b31a30dcebba1087';
var grpMem = []; //fetching the groups the logged in user is part of
var grpTyp = []; // fetching owning business group the logged in user is part of 
var arrayUtil = new ArrayUtil();
var myGroups = new GlideRecord('sys_user_grmember');
myGroups.addQuery('user', '224cc27e93b0c610b31a30dcebba1087');
myGroups.query();
while (myGroups.next()) {
    grpMem.push(myGroups.group.sys_id);
    grpTyp.push(myGroups.group.u_band);
}

gs.info("Users belong to groups: " + grpMem.toString());
var type = grpTyp.toString().split(",");
var uniqType = arrayUtil.unique(type);
gs.info("Users belong to bands: " + uniqType);

// filtering records to display based on the type and the group memebership

//sys_idIN8cbb463e93b0c610b31a30dcebba10e2,88bb463e93b0c610b31a30dcebba10df,48bb463e93b0c610b31a30dcebba10f2,
//sys_idIN8cbb463e93b0c610b31a30dcebba10e2^u_bandINBand 2,Band 3
//active=true^ORu_bandINBand 1,Band 2
var grpList = grpMem.toString(); //sys if of groups
var gr = new GlideRecord('sys_user_group');
if (us.hasRole('antivirus_admin')) { // change to logged in user manager
    gr.addEncodedQuery('sys_idIN' + grpList + '^ORu_bandIN' + uniqType); // return records for the logged in user memeberships and he is part of the type
} else if(us.hasRole('antivirus_admin')){ //maker and checker
    gr.addEncodedQuery('sys_idIN' + grpList);
}
gr.query();
while (gr.next()) {
    gs.info(gr.name);
}
// filtering records to display based on the type and the group memebership]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_fix&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2024-05-08 11:22:48&lt;/sys_created_on&gt;
        &lt;sys_id&gt;ca444d69938ac210b31a30dcebba103a&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;ACL group memebership - HSBC&lt;/sys_name&gt;
        &lt;sys_package display_value="Global" source="global"&gt;global&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_fix_ca444d69938ac210b31a30dcebba103a&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2024-05-08 11:22:48&lt;/sys_updated_on&gt;
        &lt;unloadable&gt;false&lt;/unloadable&gt;
    &lt;/sys_script_fix&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 09:40:31</sys_created_on>
        <sys_id>26258d9583741210c6695855eeaad3f4</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>ACL group memebership - HSBC</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_26258d9583741210c6695855eeaad3f4</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 09:40:31</sys_updated_on>
        <tablename>sys_script_fix</tablename>
    </sys_metadata_link>
</record_update>
