<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>6b96223c43202110a878634a1bb8f2a2</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;sn_fsm_map_integr.FSMMapProviderRequestProcessor&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;Script to transform request body from consumers to specific format required by map provider&lt;/description&gt;
        &lt;name&gt;FSMMapProviderRequestProcessor&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var FSMMapProviderRequestProcessor = Class.create();
FSMMapProviderRequestProcessor.prototype = {
    initialize: function() {},

    transformRequestBody: function(requestPayload, vendor) {
        var request = {};

        requestPayload = JSON.parse(requestPayload);

        switch (vendor) {
            case FSMMapProviderConstants.MAP_VENDOR.BEANS_AI:
                this._processRequestForBeans(request, requestPayload);
                break;
            case FSMMapProviderConstants.MAP_VENDOR.GOOGLE:
                request = this._processRequestForGoogle(JSON.parse(JSON.stringify(requestPayload)));
				
                break;
            default:
                break;
        }

        return request;
    },

	_googleLocationArrayTransform(locArray){
		return locArray.map(function(latLonData) {
			var id = !gs.nil(latLonData.id) ? latLonData.id :latLonData.lat+ ',' + latLonData.lon;
			
            return {
                latitude: latLonData.lat,
                longitude: latLonData.lon,
                id: id
            };
        });
	},
    _processRequestForGoogle(request) {
        request.origins = this._googleLocationArrayTransform(request.origins);
		request.destinations = this._googleLocationArrayTransform(request.destinations);
		return request;
    },

    _processRequestForBeans: function(request, requestPayload) {
        var index = 0;

        request['requestId'] = requestPayload['matrixId'] ?
            requestPayload['matrixId'] :
            '';
        request['asynchronous'] = false;
        request['points'] = [];
        request['sourcesIdx'] = [];
        request['destinationsIdx'] = [];
		request['matrixField'] = requestPayload['matrixField'];

        requestPayload['origins'].forEach((origin) =&gt; {
            var point = {
                position: {
                    latitude: origin.lat,
                    longitude: origin.lon,
                },
            };
            request['points'].push(point);
            request['sourcesIdx'].push(index);
            index++;
        });

        requestPayload['destinations'].forEach((destination) =&gt; {
            var point = {
                position: {
                    latitude: destination.lat,
                    longitude: destination.lon,
                },
            };
            request['points'].push(point);
            request['destinationsIdx'].push(index);
            index++;
        });

        request['numOrigins'] = requestPayload['origins'].length;
        request['numDestinations'] = requestPayload['destinations'].length;
        request['origins'] = requestPayload['origins'];
        request['destinations'] = requestPayload['destinations'];
    },

    type: 'FSMMapProviderRequestProcessor',
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2023-01-20 04:40:50&lt;/sys_created_on&gt;
        &lt;sys_id&gt;6b96223c43202110a878634a1bb8f2a2&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;31&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;FSMMapProviderRequestProcessor&lt;/sys_name&gt;
        &lt;sys_package display_value="Map Integrations for Field Service" source="sn_fsm_map_integr"&gt;32467aba87d8a910f53c7515dabb3598&lt;/sys_package&gt;
        &lt;sys_policy&gt;read&lt;/sys_policy&gt;
        &lt;sys_scope display_value="Map Integrations for Field Service"&gt;32467aba87d8a910f53c7515dabb3598&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_6b96223c43202110a878634a1bb8f2a2&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2023-08-24 14:46:56&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:38:19</sys_created_on>
        <sys_id>93e6705d83f01210c6695855eeaad385</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>FSMMapProviderRequestProcessor</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_93e6705d83f01210c6695855eeaad385</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:38:19</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
