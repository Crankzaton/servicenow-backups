<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>42f486ae5b310110d7541e991e81c709</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;public&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.IPAddrFixScriptUtil&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;Helper script that provides utility methods that can be used in fix scripts to update column type for ip_address columns from 'string' to 'ip_addr'&lt;/description&gt;
        &lt;name&gt;IPAddrFixScriptUtil&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var IPAddrFixScriptUtil;
(function() {
    IPAddrFixScriptUtil = {
        fixIPAddressColumnType: fixIPAddressColumnType
    };

    /*
     * Summary.  Updates the column type &amp; ip_data_control value for the columns supplied in ipFields
     * 
     * @param {string} scriptIdentifier - A string to uniquely identify the fix script that invokes this method.
     *                                    Example: 'FIX_IPADDR_DISCO' - for Discovery Fix script
     * @param {object} ipFields - An object that contains the tablename, columns 
     *                             &amp; optionally ip_data_control glide attribute to be updated
     *                             Example: ipFields={ &lt;tableA&gt;:{'name':&lt;column1&gt;},
     *                                                 &lt;tableB&gt;:[{'name':&lt;column1, 'ip_data_control': &lt;value&gt;},
     *                                                          {'name':&lt;column2}]};
     *
     */
    function fixIPAddressColumnType(scriptIdentifier, ipFields) {
        gs.debug(scriptIdentifier + ": Starting IPAddrFixScriptUtil.fixIPAddressColumnType'");

        var gr = new GlideRecord('sys_dictionary');
        if (!gr.isValid()) {
            gs.error(scriptIdentifier + ": Cannot update! Missing 'sys_dictionary' table!");
            return;
        }
        if (!gr.isValidField('name') || !gr.isValidField('element')) {
            gs.error(scriptIdentifier + ": Cannot update! Missing required fields in 'sys_dictionary' table!");
            return;
        }

        for (var ipTableName in ipFields) {
            var fields = ipFields[ipTableName];
            if (!(fields instanceof Array)) { // if not an array, convert to one
                fields = [fields];
            }
            for (var index in fields) {
                _updateColumnType(scriptIdentifier, ipTableName, fields[index]);
            }
        }

        gs.debug(scriptIdentifier + ": End of IPAddrFixScriptUtil.fixIPAddressColumnType");
    }

    function _updateColumnType(scriptIdentifier, table, column) {
        if (!column.hasOwnProperty('name')) {
            gs.error(scriptIdentifier + ": Invalid input format! Missing column name");
            return;
        }

        var sysDictionaryGr = new GlideRecord('sys_dictionary');
        sysDictionaryGr.addQuery('name', table);
        sysDictionaryGr.addQuery('element', column.name);
        sysDictionaryGr.query();

        if (sysDictionaryGr.next()) {
            var columnType = sysDictionaryGr.getValue('internal_type');
            var maxLength = sysDictionaryGr.getValue('max_length');

            sysDictionaryGr.setValue('internal_type', 'ip_addr');

            if (column.hasOwnProperty('ip_data_control')) {
                var attributeGr = _updateIPDataControlAttribute(scriptIdentifier, column.ip_data_control, sysDictionaryGr.getValue('attributes'));
                sysDictionaryGr.setValue('attributes', attributeGr.serializeAttributes());
            }

            var start = new Date().getTime();
            sysDictionaryGr.update();
            var end = new Date().getTime();

            gs.debug(scriptIdentifier + ': Updated ' + table + '.' + column.name + ' type from ' + columnType + ' with maxLength=' + maxLength + ' to ip_addr type in ' + (end - start) + ' ms');
        } else
            gs.warn(scriptIdentifier + ': Skipped update for ' + table + '.' + column.name);
    }

    function _updateIPDataControlAttribute(scriptIdentifier, value, attributes) {
        var attributeGr = new GlideAttributes(attributes);
        attributeGr.setAttribute('ip_data_control', value);

        gs.debug(scriptIdentifier + ': GlideAttribute updated, ip_data_control=' + attributeGr.getAttribute('ip_data_control'));

        return attributeGr;
    }
})();]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;varsha.rao&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2022-02-23 23:53:01&lt;/sys_created_on&gt;
        &lt;sys_id&gt;42f486ae5b310110d7541e991e81c709&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;3&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;IPAddrFixScriptUtil&lt;/sys_name&gt;
        &lt;sys_package display_value="Configuration Management (CMDB)" source="com.snc.cmdb"&gt;8f64bce83c31311068bcf327dfe37f7e&lt;/sys_package&gt;
        &lt;sys_policy&gt;read&lt;/sys_policy&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_42f486ae5b310110d7541e991e81c709&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;varsha.rao&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2022-03-01 22:38:04&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:36:21</sys_created_on>
        <sys_id>2e76f0d983f01210c6695855eeaad3c8</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>IPAddrFixScriptUtil</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_2e76f0d983f01210c6695855eeaad3c8</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:36:21</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
