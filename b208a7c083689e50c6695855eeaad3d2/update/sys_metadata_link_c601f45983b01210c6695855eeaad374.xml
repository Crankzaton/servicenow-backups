<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>2697853f77653110569156391e5a9993</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;public&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.NowAssistDeflectionLogHelper&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;provides APIs to insert/update records in sys_cs_deflection_log table.&lt;/description&gt;
        &lt;name&gt;NowAssistDeflectionLogHelper&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var NowAssistDeflectionLogHelper = Class.create();

NowAssistDeflectionLogHelper.LOGGER_NAME = 'sn_cs.na_deflection_metrics';
NowAssistDeflectionLogHelper.LOGGING_CONTEXT = {
    app: 'CI',
    track: 'DEFLECTION_METRICS',
    layer: 'Script'
};

NowAssistDeflectionLogHelper.getLogger = function(conversationQueryId) {
    var context = global.NowAssistDeflectionLogHelper.LOGGING_CONTEXT;

    if (!gs.nil(conversationQueryId))
        context.conversation_query_id = conversationQueryId;

    return new sn_log.GlideLogger(global.NowAssistDeflectionLogHelper.LOGGER_NAME, context, Object.keys(context));
};

/**
 * Insert record in the deflection table
 * @param conversationId
 * @param channel
 * @param portal
 * @param contextProfile
 * @return conversationQueryId - sysId of the new record
 */
NowAssistDeflectionLogHelper.insertDeflectionLog = function(conversationId, channelSysId, portal, contextProfile, deploymentId, deviceType) {
    var gr = new GlideRecord(AISearchConstants.SYS_CS_DEFLECTION_LOG_TABLE);
    gr.initialize();

    gr.conversation_id = conversationId ? conversationId : '';
    gr.context_profile = contextProfile ? contextProfile : '';
	gr.assistant = deploymentId ? deploymentId : '';
    gr.channel = channelSysId ? channelSysId : '';
	gr.device_type = deviceType ? deviceType : '';
    gr.portal = portal ? portal : '';
    gr.state = AISearchConstants.DEFLECTION_STATUS_RESOLVED;
    gr.num_of_turns = 0;
    gr.requestor = gs.getUserID();

    return gr.insert();
};

/**
 * Updates record in the deflection table
 * @param conversationQueryId
 * @param state
 * @param resourceId
 * @param resourceTable
 * @param turns
 */
NowAssistDeflectionLogHelper.updateDeflectionLog = function(conversationQueryId, state, resourceId, resourceTable, turns) {
    var logger = NowAssistDeflectionLogHelper.getLogger(conversationQueryId);
    if (!state) {
        logger.error('State must be non-null to update deflection log');
        return null;
    }
    var gr = new GlideRecord(AISearchConstants.SYS_CS_DEFLECTION_LOG_TABLE);
    gr.addQuery('sys_id', conversationQueryId);
    gr.query();
    if (gr.next()) {
        gr.state = state;
        if (resourceId &amp;&amp; resourceTable) {
            var deflectionType = AISearchConstants.RESOURCE_TABLE_DEFLECTION_TYPE_MAP[resourceTable];
            gr.deflection_type = deflectionType ? deflectionType : '';
            gr.resource_id = resourceId;
            gr.resource_table = resourceTable;
        }
        gr.num_of_turns = turns ? turns : 0;

        gr.update();
    } else {
        logger.error('Deflection log with sys_id: {0} does not exist', conversationQueryId);
        return null;
    }
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2023-10-04 18:42:20&lt;/sys_created_on&gt;
        &lt;sys_id&gt;2697853f77653110569156391e5a9993&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;4&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;NowAssistDeflectionLogHelper&lt;/sys_name&gt;
        &lt;sys_package display_value="Virtual Agent Platform Topic Blocks" source="com.glide.cs.topic_blocks"&gt;289d7c203c75311068bcf327dfe37f6e&lt;/sys_package&gt;
        &lt;sys_policy&gt;read&lt;/sys_policy&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_2697853f77653110569156391e5a9993&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2024-03-11 16:16:31&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:12:33</sys_created_on>
        <sys_id>c601f45983b01210c6695855eeaad374</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>NowAssistDeflectionLogHelper</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_c601f45983b01210c6695855eeaad374</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:12:33</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
