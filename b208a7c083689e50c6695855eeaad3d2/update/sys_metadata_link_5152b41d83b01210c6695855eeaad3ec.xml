<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>ef1b6bcc47a17950020ba9f8536d4395</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_fix"&gt;
    &lt;sys_script_fix action="INSERT_OR_UPDATE"&gt;
        &lt;before&gt;false&lt;/before&gt;
        &lt;description&gt;https://mavembry.info/post/dependent-variable-sp/&lt;/description&gt;
        &lt;name&gt;Dynamically Glide and fetch dropdown bas&lt;/name&gt;
        &lt;record_for_rollback&gt;true&lt;/record_for_rollback&gt;
        &lt;script&gt;&lt;![CDATA[/////////////////////////////////////////////////Script Include///////////////////////////////////////////
var dynamicDropdown = Class.create();
dynamicDropdown.prototype = Object.extendsObject(AbstractAjaxProcessor, {
    getSubOpt: function() {

        //grab the category value
        var newValue = this.getParameter('sysparm_functional_business_group');

        //query the choice table
        var choices = new GlideRecord("u_variable_choice"); //fetching the custom table for values

        //filter choices by category
        choices.addQuery("u_dependent_value", newValue); //here dependent values are provided via client script
        choices.orderBy('order');
        choices.query();

        var dynOpt = [];

        //populate sub-categories into an object
        while (choices.next()) {
            dynOpt.push({
                value: choices.u_value.toString(),  //adding the value and label from the custom table
                text: choices.u_label.toString()
            });
        }

        //return the JSON
        return new JSON().encode(dynOpt);
    },

    type: 'dynamicDropdown'
});
/////////////////////////////////////////////////Script Include///////////////////////////////////////////



///////////////////////On Change Script///////////////////////////////////////

function onChange(control, oldValue, newValue, isLoading) {

    //Add the NULL option to the sub-group field.
    //We do this because we are completely changing ALL the choices in the field.
    if (isLoading) {
        g_form.clearOptions('functional_business_sub_group');
        g_form.addOption('functional_business_sub_group', 'NULL', '-- None --');

        return;
    }
    if (newValue == oldValue) {

        return;
    }

    //Clear the options in the field to reset the field onLoad
    g_form.clearOptions('functional_business_sub_group');

    //initially add a NULL option to the sub-group field
    g_form.addOption('functional_business_sub_group', 'NULL', '-- None --');

    //Here's where we call the script you just created
    var ga = new GlideAjax('dynamicDropdown');

    //Add the getSubOpt method to this paremeter.
    //We created this function in the script-include.
    ga.addParam('sysparm_name', 'getSubOpt');

    //Add the NewValue (functionl business group) to the paremeter
    ga.addParam('sysparm_functional_business_group', newValue);

    //This is where we will populate the actual field with the options that are related to the functional group
    ga.getXML(function(response) {

        //this getAnswer() method will retrieve the results from the server-side code.
        var answer = ga.getAnswer();

        //Parse the results
        var obj = JSON.parse(answer);

        //Loop through the object and grab the values.
        //Add the options to the dropdown field.
        for (var i = 0; i &lt; obj.length; i++) {
            g_form.addOption('functional_business_sub_group', obj[i].value, obj[i].text);

        }
    });
}

///////////////////////On Change Script///////////////////////////////////////]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_fix&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;Gokul Nath&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2023-09-23 14:58:21&lt;/sys_created_on&gt;
        &lt;sys_id&gt;ef1b6bcc47a17950020ba9f8536d4395&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;Dynamically Glide and fetch dropdown bas&lt;/sys_name&gt;
        &lt;sys_package display_value="Global" source="global"&gt;global&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_fix_ef1b6bcc47a17950020ba9f8536d4395&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;Gokul Nath&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2023-09-23 14:58:21&lt;/sys_updated_on&gt;
        &lt;unloadable&gt;false&lt;/unloadable&gt;
    &lt;/sys_script_fix&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:18:15</sys_created_on>
        <sys_id>5152b41d83b01210c6695855eeaad3ec</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Dynamically Glide and fetch dropdown bas</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_5152b41d83b01210c6695855eeaad3ec</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:18:15</sys_updated_on>
        <tablename>sys_script_fix</tablename>
    </sys_metadata_link>
</record_update>
