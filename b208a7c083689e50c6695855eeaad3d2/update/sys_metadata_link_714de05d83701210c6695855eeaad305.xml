<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>09a02e2921032010f877aa04a7c93f43</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="sys_script"&gt;
    &lt;sys_script action="INSERT_OR_UPDATE"&gt;
        &lt;abort_action&gt;false&lt;/abort_action&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;action_delete&gt;false&lt;/action_delete&gt;
        &lt;action_insert&gt;false&lt;/action_insert&gt;
        &lt;action_query&gt;false&lt;/action_query&gt;
        &lt;action_update&gt;true&lt;/action_update&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;add_message&gt;false&lt;/add_message&gt;
        &lt;advanced&gt;true&lt;/advanced&gt;
        &lt;change_fields&gt;false&lt;/change_fields&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;collection&gt;sn_apptmnt_booking_day_configuration&lt;/collection&gt;
        &lt;condition&gt;current.active == true&lt;/condition&gt;
        &lt;description/&gt;
        &lt;execute_function&gt;false&lt;/execute_function&gt;
        &lt;filter_condition table="sn_apptmnt_booking_day_configuration"&gt;daily_start_timeVALCHANGES^ORdaily_end_timeVALCHANGES^service_configuration.default_timezone=location^service_configuration.appointment_booking_config.task_table=wu_appointment^EQ&lt;item display_value="-- None --" endquery="false" field="daily_start_time" goto="false" newquery="false" operator="VALCHANGES" or="false" value=""/&gt;
            &lt;item display_value="-- None --" endquery="false" field="daily_end_time" goto="false" newquery="false" operator="VALCHANGES" or="true" value=""/&gt;
            &lt;item display_value="Appointment Location" endquery="false" field="service_configuration.default_timezone" goto="false" newquery="false" operator="=" or="false" value="location"/&gt;
            &lt;item endquery="false" field="service_configuration.appointment_booking_config.task_table" goto="false" newquery="false" operator="=" or="false" value="wu_appointment"/&gt;
            &lt;item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/&gt;
        &lt;/filter_condition&gt;
        &lt;is_rest&gt;false&lt;/is_rest&gt;
        &lt;message/&gt;
        &lt;name&gt;Validate Daily Start, End time changes&lt;/name&gt;
        &lt;order&gt;20&lt;/order&gt;
        &lt;priority&gt;100&lt;/priority&gt;
        &lt;rest_method/&gt;
        &lt;rest_method_text/&gt;
        &lt;rest_service/&gt;
        &lt;rest_service_text/&gt;
        &lt;rest_variables/&gt;
        &lt;role_conditions/&gt;
        &lt;script&gt;&lt;![CDATA[(function executeRule(current, previous /*null when async*/) {

		var util = new sn_apptmnt_booking.AppointmentBookingUtil();
		var hasActiveAppointments = false;
		
		var dailyStartTimeGT = new GlideTime();
		dailyStartTimeGT.setValue(current.daily_start_time.toString() + ":00");
		var dailyEndTimeGT = new GlideTime();
		dailyEndTimeGT.setValue(current.daily_end_time.toString() + ":00");
	
		var dailyStartTime = current.daily_start_time.toString() + ":00";
		var dailyEndTime = current.daily_end_time.toString() + ":00";
	
		var startDate = previous.getValue('start_date');
		var endDate = previous.getValue('end_date');                                           
		
		var prevDailyStartTimeGT = new GlideTime();
		prevDailyStartTimeGT.setValue(previous.daily_start_time.toString() + ":00");
		var prevDailyEndTimeGT = new GlideTime();
		prevDailyEndTimeGT.setValue(previous.daily_end_time.toString() + ":00");
	
		var prevDailyStartTime = previous.daily_start_time.toString() + ":00";
		var prevDailyEndTime = previous.daily_end_time.toString() + ":00";

		if((prevDailyStartTimeGT &lt; dailyEndTimeGT) &amp;&amp; (prevDailyEndTimeGT &gt; dailyStartTimeGT)){ //Overlap case
		
			if(prevDailyStartTimeGT &lt; dailyStartTimeGT){
				
				hasActiveAppointments = util.hasActiveAppointmentsInRangeForCatalog(current, startDate, endDate, prevDailyStartTime, dailyStartTime);
				
			}
			if(!(hasActiveAppointments) &amp;&amp; (prevDailyStartTimeGT &gt; dailyStartTimeGT)){
		
				hasActiveAppointments = util.hasActiveAppointmentsInRangeForCatalog(current, startDate, endDate, dailyStartTime, prevDailyStartTime);
				
			}
			if(!(hasActiveAppointments) &amp;&amp; (prevDailyEndTimeGT &lt; dailyEndTimeGT)){
				
				hasActiveAppointments = util.hasActiveAppointmentsInRangeForCatalog(current, startDate, endDate, prevDailyEndTime, dailyEndTime);
				
			}
			if(!(hasActiveAppointments) &amp;&amp; (prevDailyEndTimeGT &gt; dailyEndTimeGT)){
				
				hasActiveAppointments = util.hasActiveAppointmentsInRangeForCatalog(current, startDate, endDate, dailyEndTime, prevDailyEndTime);
				
			}

		}
		else{
			
			hasActiveAppointments = util.hasActiveAppointmentsInRangeForCatalog(current, startDate, endDate,prevDailyStartTime, prevDailyEndTime);
			
			if(!(hasActiveAppointments))
				hasActiveAppointments = util.hasActiveAppointmentsInRangeForCatalog(current, startDate, endDate,dailyStartTime, dailyEndTime);
		}
		
		if(hasActiveAppointments){
			current.setAbortAction(true);
			if(current.daily_start_time.changes())
				gs.addErrorMessage(gs.getMessage("Active appointments found. Before updating the {0}, clear active appointments affected by the change.", "Daily start time"));
			else
				gs.addErrorMessage(gs.getMessage("Active appointments found. Before updating the {0}, clear active appointments affected by the change.", "Daily end time"));
			gs.setRedirect(current);
		}
	
})(current, previous);]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2021-03-22 10:01:52&lt;/sys_created_on&gt;
        &lt;sys_domain&gt;global&lt;/sys_domain&gt;
        &lt;sys_domain_path&gt;/&lt;/sys_domain_path&gt;
        &lt;sys_id&gt;09a02e2921032010f877aa04a7c93f43&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;12&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;Validate Daily Start, End time changes&lt;/sys_name&gt;
        &lt;sys_overrides/&gt;
        &lt;sys_package display_value="Appointment Booking" source="sn_apptmnt_booking"&gt;d0f0c1303ba23200ce8a4d72f3efc4ac&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Appointment Booking"&gt;d0f0c1303ba23200ce8a4d72f3efc4ac&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_09a02e2921032010f877aa04a7c93f43&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2021-04-09 10:48:39&lt;/sys_updated_on&gt;
        &lt;template/&gt;
        &lt;when&gt;before&lt;/when&gt;
    &lt;/sys_script&gt;
    &lt;sys_translated_text action="delete_multiple" query="documentkey=09a02e2921032010f877aa04a7c93f43"/&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:56:09</sys_created_on>
        <sys_id>714de05d83701210c6695855eeaad305</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Validate Daily Start, End time changes</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_714de05d83701210c6695855eeaad305</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:56:09</sys_updated_on>
        <tablename>sys_script</tablename>
    </sys_metadata_link>
</record_update>
