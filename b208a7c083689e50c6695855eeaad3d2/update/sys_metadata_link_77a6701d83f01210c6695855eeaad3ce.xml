<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>558ec639eb42211078aca892e25228b0</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;sn_entitlement.LicenseGroupHasSubscriptionDAO&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt; DAO to retrieve data from license_group_has_subscription table&lt;/description&gt;
        &lt;name&gt;LicenseGroupHasSubscriptionDAO&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var LicenseGroupHasSubscriptionDAO = Class.create();
LicenseGroupHasSubscriptionDAO.prototype = {
    initialize: function() {
        this._groupHasSubscriptionTable = "license_group_has_subscription";
    },

    /**
     * @return {object} an object map of group sysids to product code
     */
    getGroupSysIdToProductCodeMap: function() {
        let groupSysIdToProductCodeMap = {};
        const groupHasSubscriptionGr = new GlideRecord(this._groupHasSubscriptionTable);
        groupHasSubscriptionGr.addQuery('source', 'group');
        groupHasSubscriptionGr.query();
        while (groupHasSubscriptionGr.next()) {
            let groupSysId = groupHasSubscriptionGr.getElement('group.sys_id');
            let productCode = String(groupHasSubscriptionGr.getElement('license.product_code'));
            let errorMessage = global.JSUtil.nil(productCode) ? "group_mapped_to_license_with_no_product_code" : productCode.includes(",") ? "group_mapped_to_consolidated_license" : null;
			const mapKey = groupSysId + '-' + productCode;
            global.JSUtil.nil(errorMessage) ? groupSysIdToProductCodeMap[mapKey] = productCode : groupSysIdToProductCodeMap[groupSysId] = errorMessage;
        }
        return groupSysIdToProductCodeMap;
    },

    /**
     * Retrieves the number of groups that are subscribed to the provided license
     * 
     * @param {uuid} licenseId The license_detail.sys_id to filter by
     * @returns {int} The count of the number of groups subscribed to the license
     */
    getCountByLicenseId: function(licenseId) {
        const gr = new GlideRecord(this._groupHasSubscriptionTable);
        gr.addQuery('license.sys_id', licenseId);
        gr.query();
        return gr.getRowCount();
    },

    type: 'LicenseGroupHasSubscriptionDAO'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;maint&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2023-04-07 19:03:49&lt;/sys_created_on&gt;
        &lt;sys_id&gt;558ec639eb42211078aca892e25228b0&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;16&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;LicenseGroupHasSubscriptionDAO&lt;/sys_name&gt;
        &lt;sys_package display_value="Licensing Engine" source="sn_entitlement"&gt;bcadabf277f311109c62f5f3cb5a992a&lt;/sys_package&gt;
        &lt;sys_policy&gt;read&lt;/sys_policy&gt;
        &lt;sys_scope display_value="Licensing Engine"&gt;bcadabf277f311109c62f5f3cb5a992a&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_558ec639eb42211078aca892e25228b0&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;maint&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2023-10-03 21:36:04&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:37:15</sys_created_on>
        <sys_id>77a6701d83f01210c6695855eeaad3ce</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>LicenseGroupHasSubscriptionDAO</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_77a6701d83f01210c6695855eeaad3ce</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:37:15</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
