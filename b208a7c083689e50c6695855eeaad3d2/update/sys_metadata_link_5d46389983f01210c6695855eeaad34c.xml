<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>2e4d6af977881110b123f825bc5a9903</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.PADTriggerInstanceService&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;Trigger Instance Service for business logic of Trigger Instance in PAD&lt;/description&gt;
        &lt;name&gt;PADTriggerInstanceService&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var PADTriggerInstanceService = Class.create();
PADTriggerInstanceService.prototype = {
    initialize: function(opts) {
		this.triggerInstanceRepo = (opts &amp;&amp; opts.triggerInstanceRepo) || new PADTriggerInstanceRepository();
    },
	updateTriggerInstanceVars: function(params) {
		var sysId = params.sysId;
		var inputs = params.inputs;
		
		var triggerInstance = this.triggerInstanceRepo.get(sysId);
		if (triggerInstance.errorType)
			return triggerInstance;
		
		if (triggerInstance) {
			var triggerInputs = triggerInstance.getElement(PADConstants.Shared.TRIGGER_INPUT);
			var glideVarUtil = new PADGlideVarUtilSI();
			var mandatoryAttrs = glideVarUtil.getMandatoryAttributes(triggerInputs);
			var invalidInputs = [];
			for (var i=0; i&lt;inputs.length; i++) {
				var inputName = inputs[i].variableName;
				var inputValue = inputs[i].variableValue;
				if (mandatoryAttrs[inputName] &amp;&amp; JSUtil.nil(inputValue))
					invalidInputs.push(inputs[i]);
			}
			if (invalidInputs.length &gt;0)
				return {
					errorType: PADConstants.Errors.UPDATE_FAILED,
					message: 'Could not save trigger instance because mandatory inputs are empty'
				};
			else
				return this.triggerInstanceRepo.updateTriggerInstanceVars({triggerSysId: sysId, inputs: inputs});
		} else {
			return {
				errorType: PADConstants.Errors.UPDATE_FAILED,
				message: 'Trigger not found for id: ' + sysId
			};
		}
	},
    type: 'PADTriggerInstanceService'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2022-06-13 15:01:39&lt;/sys_created_on&gt;
        &lt;sys_id&gt;2e4d6af977881110b123f825bc5a9903&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;16&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;PADTriggerInstanceService&lt;/sys_name&gt;
        &lt;sys_package display_value="Process Automation Designer Core - Model" source="com.glide.pad.core.model"&gt;0ae817db47220210cd4e1ce4316d431f&lt;/sys_package&gt;
        &lt;sys_policy&gt;read&lt;/sys_policy&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_2e4d6af977881110b123f825bc5a9903&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2022-06-16 05:35:48&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:35:26</sys_created_on>
        <sys_id>5d46389983f01210c6695855eeaad34c</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>PADTriggerInstanceService</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_5d46389983f01210c6695855eeaad34c</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:35:26</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
