<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>2c6bdc777f522200c57212f44efa9136</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;public&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.FSMManagerMapHelper&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;FSMManagerMapHelper&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var FSMManagerMapHelper = Class.create();
FSMManagerMapHelper.prototype = {
    initialize: function() {
    },
	
	getGroupList: function() {
		var gr = new GlideAggregate("sm_m2m_group_dependency");
		gr.addQuery('assignment_group.manager', gs.getUserID());
		gr.orderBy('assignment_group.name');
		gr.groupBy("assignment_group");
		gr.query();
		var result = [];
		gs.log('getGroupList count ' + gr.getRowCount(),'Manager');
		while(gr.next()) {
			result.push({
				value: gr.assignment_group.sys_id + '',
				label: gr.assignment_group.getDisplayValue()
			});
		}
		result.unshift({value: 'all', label: gs.getMessage('All')});
		return result;
	},
	
	getAgents: function(groupId) {
		var result = [];
		if (groupId) {
			var gr = new GlideRecord("sys_user_grmember");
			gr.addQuery('group', groupId);
			gr.orderBy('user.name');
			gr.query();

			while(gr.next()) {
				result.push({
					value: gr.user.sys_id + '',
					label: gr.user.getDisplayValue()
				});
			}
		}
		
		result.unshift({value: 'all', label: gs.getMessage('All')});
		return result;
	},
	submitTestChanges: function(filterObject, prefName){
		filterObject = this._mergeWithDefaults(filterObject, prefName);
		var prefs = [];
		var valueString;
		for (var key in filterObject) {
			if (key)
				prefs.push(key + '=' + filterObject[key]);
		}
		valueString = prefs.join('|');
		
		var pref = new GlideRecord("sys_user_preference");
		pref.addQuery("user", filterObject.user);
		pref.addQuery("name", prefName);
		pref.query();
		
		if(pref.next()){
			pref.setValue("value", valueString);
			pref.update();
		}
		else{
			pref.initialize();
			pref.setValue("user", filterObject.user);
			pref.setValue("name", prefName);
			pref.setValue("value", valueString);
			pref.insert();
		}
		return true;
	},
	
	
	submitChanges: function(filterObject){	
		var pref = new GlideRecord("wm_manager_map_filter");
		pref.addQuery("user", filterObject.user);
		pref.query();
		gs.log('pref Count ' + pref.getRowCount() + ' filterObject.workGroup ' + filterObject.workGroup + ' filterObject.agent ' + filterObject.agent,'Manager');
		if(pref.next()){
			pref.assigned_tasks = filterObject.assigned;
			pref.unassigned_tasks = filterObject.unassigned;
			pref.routing_numbers = filterObject.routingNumbers;
			pref.on = filterObject.date;
			pref.work_group = filterObject.workGroup;
			pref.agent = filterObject.agent;
			pref.update();
		}
		else{
			pref.initialize();
			pref.assigned_tasks = filterObject.assigned;
			pref.unassigned_tasks = filterObject.unassigned;
			pref.routing_numbers = filterObject.routingNumbers;
			pref.user = filterObject.user;
			pref.on = filterObject.date;
			pref.work_group = filterObject.workGroup;
			pref.agent = filterObject.agent;

			pref.insert();
		}
		return true;
	},
	
	_getManagerDefaultPreferences: function(prefName) {
		var returnObject;
		var gdt = new GlideDateTime();
		gdt.setDisplayValue(gs.nowDateTime());
		if(prefName == "geo_location_user_property")
			returnObject = {
			'unassigned': 'true',
			'assigned': 'true',
			'myLocation': 'true',
			'routingNumbers': 'true',
			'date': gdt.getLocalDate().getDisplayValue(),
			'workGroup': 'all',
			'agent': 'all'
		};
		return returnObject;
	},

    type: 'FSMManagerMapHelper'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2016-10-13 00:09:52&lt;/sys_created_on&gt;
        &lt;sys_id&gt;2c6bdc777f522200c57212f44efa9136&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;19&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;FSMManagerMapHelper&lt;/sys_name&gt;
        &lt;sys_package display_value="Field Service Management" source="com.snc.work_management"&gt;b66bd6bb4722c210cd4e1ce4316d4387&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_2c6bdc777f522200c57212f44efa9136&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2016-10-17 19:50:58&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:13:09</sys_created_on>
        <sys_id>3221349983b01210c6695855eeaad355</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>FSMManagerMapHelper</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_3221349983b01210c6695855eeaad355</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:13:09</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
