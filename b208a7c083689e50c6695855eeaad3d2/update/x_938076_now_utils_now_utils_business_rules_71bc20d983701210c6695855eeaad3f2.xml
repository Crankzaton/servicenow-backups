<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition>current.time_worked.changes()</condition>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Task Time Worked</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[/*
 * Create task_time_worked records from the task timer incremental value
 * Also see 'Update task timer' business rule which will update the task's total time in the case of modified/deleted time worked records
 * Service-now.com
 */
createTimeWorked();

function createTimeWorked() {
    //updated task, calc difference in timer
    if (current.operation() == 'update') {
        var end = current.time_worked.dateNumericValue();
        var start = previous.time_worked.dateNumericValue();
        var diff = end - start;
    }
    else {
        var diff = current.time_worked.dateNumericValue();
    }
    if (diff == 0) 
        return;
 
    var tw = new GlideRecord('task_time_worked');
    tw.user = gs.userID();
    tw.task = current.sys_id;
    tw.time_worked.setDateNumericValue(diff);
 if(tw.isValidField("rate_type") && (typeof TimeSheetPolicy != 'undefined')){
  var tsp = TimeSheetPolicy.getFromUserId(gs.userID());
  var isMultiRatetypeAllowed = tsp.allowMultipleRatetypes();
  if(isMultiRatetypeAllowed)
   tw.setValue("rate_type",tsp.defaultRateType());
 }
    if (current.comments.changes()) {
        tw.comments = current.comments.getJournalEntry(1);
    } 
    tw.insert();
}]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:53:41</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>71bc20d983701210c6695855eeaad3f2</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Task Time Worked</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_71bc20d983701210c6695855eeaad3f2</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:53:41</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=71bc20d983701210c6695855eeaad3f2"/>
</record_update>
