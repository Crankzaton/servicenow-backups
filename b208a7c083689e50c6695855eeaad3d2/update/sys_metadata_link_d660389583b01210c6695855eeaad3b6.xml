<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>0bd869519f532200598a5bb0657fcfdf</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;public&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.ProjectChangeNotifier&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;This will broadcast changes in shadow task in a predecessor project to downstream successor projects&amp;#13;
If it is soft relation, we will check and raise notification&amp;#13;
If it is hard relation, we will create notification and accept it&lt;/description&gt;
        &lt;name&gt;ProjectChangeNotifier&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var ProjectChangeNotifier = Class.create();
ProjectChangeNotifier.prototype = {
    initialize: function() {
    },
    
    broadcastDownStream: function (shadowTaskIds) {
        PPMDebug.log("Into ProjectChangeNotifier: aggregateAndRaiseEvent -&gt; " + JSON.stringify(shadowTaskIds));
        var topTasks = {};
        // Only hard dependencies with update tasks are meant to reach here
        for (var i = 0; i &lt; shadowTaskIds.length; i++) {
            var task = shadowTaskIds[i];
            var relationApplied = task.relation_applied;
            var relationRecord = ShadowTaskQueryHelper.relationRecord(relationApplied);
            var isHard = ShadowTaskAndRelationChecker.isHard(relationRecord);
            var hasOrigTopTaskId = JSUtil.notNil(task.orig_top_task_id);
            PPMDebug.log("isHard -&gt; " + isHard + " | hasOrigTopTaskId -&gt; " + hasOrigTopTaskId);
            if(isHard &amp;&amp; hasOrigTopTaskId) {
                if(JSUtil.nil(topTasks[task.orig_top_task_id]))
                    topTasks[task.orig_top_task_id] = [task];
                else
                    topTasks[task.orig_top_task_id].push(task);
            }           
        }
        PPMDebug.log("ProjectChangeNotifier: getTopTasks -&gt; " + JSON.stringify(topTasks));
        for( var topTaskId in topTasks ) {
            if(this.processHardDependencyInSync(topTaskId)) {
                PPMDebug.log("Into ProjectChangeNotifier: processHardDependencyInSync -&gt; In Sync");
                this.raiseAndAcceptNotification(topTasks[topTaskId]);
            } else {
                PPMDebug.log("Into ProjectChangeNotifier: processHardDependencyInSync -&gt; Async");
                InterProjectEventManager.raiseEvent(topTaskId, JSON.stringify(topTasks[topTaskId]));   
            }
        }
    },

    // Check if the Process Interproject Hard dependency is In Sync
    processHardDependencyInSync: function (topTaskId) {
        PPMDebug.log("Into ProjectChangeNotifier: processHardDependencyInSync -&gt; " + topTaskId);
        if(JSUtil.notNil(topTaskId)) {
            var gr = new GlideRecord("planned_task");
            if(gr.get(topTaskId)) {
                return SNC.PPMConfig.getProperty("com.snc.project.process_hard_dependency_in_sync", 
                    gr.getValue("sys_class_name"), 'true') == 'true';
            }
        }
        return false;
    },

    raiseAndAcceptNotification: function (tasks) {
        PPMDebug.log("Into ProjectChangeNotifier: raiseAndAcceptNotification -&gt; " + JSON.stringify(tasks));
        var notificationHandler = new PlannedTaskNotificationHandler();
        if(JSUtil.notNil(tasks) &amp;&amp; tasks.length &gt; 0) {
            for (var i = 0; i &lt; tasks.length; i++) {
                var task = tasks[i];
                PPMDebug.log("Into ProjectChangeNotifier: raiseNotification -&gt; " + JSON.stringify(task));
                var event = notificationHandler.raiseNotification(task.sys_id, task.orig_sys_id, task.relation_applied, task.previous_start_date);
                var notifRecord = event.record;
                // re-query the notification - as dot walk records are missing
                var notifRecordSysId = notifRecord.getValue("sys_id");
                var notificationGr = new GlideRecord("planned_task_notification");
                if(notificationGr.get(notifRecordSysId)) {
                    PPMDebug.log("Into ProjectChangeNotifier.acceptNotification -&gt; " + notifRecordSysId );
                    notificationHandler.acceptNotification(notificationGr);
                }
            }
        }
    },

    type: 'ProjectChangeNotifier'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2016-11-24 04:06:19&lt;/sys_created_on&gt;
        &lt;sys_id&gt;0bd869519f532200598a5bb0657fcfdf&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;15&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;ProjectChangeNotifier&lt;/sys_name&gt;
        &lt;sys_package display_value="Planned Task_v2" source="com.snc.planned_task_v2"&gt;92ef82e747e64210cd4e1ce4316d43f1&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_0bd869519f532200598a5bb0657fcfdf&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2021-11-25 04:18:29&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:09:50</sys_created_on>
        <sys_id>d660389583b01210c6695855eeaad3b6</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>ProjectChangeNotifier</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_d660389583b01210c6695855eeaad3b6</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:09:50</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
