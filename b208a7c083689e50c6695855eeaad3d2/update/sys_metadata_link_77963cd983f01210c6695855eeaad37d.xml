<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>4f92d36793ffb5903fc2bac86cba10b1</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.wfCMSProjectCFIT&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;true&lt;/client_callable&gt;
        &lt;description&gt;asmtGr.u_functional_impacted_group_name&lt;/description&gt;
        &lt;name&gt;wfCMSProjectCFIT&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var wfCMSProjectCFIT = Class.create();
wfCMSProjectCFIT.prototype = Object.extendsObject(AbstractAjaxProcessor, {


    validateDemandManager: function(dmnRec) {

        var dmnBusUnit = gs.getProperty('wf.spm.business.unit');
        var gr = new GlideRecord('dmn_demand');
        if (gr.get(dmnRec)) {
            if ((gs.getUserID() == gr.getValue('demand_manager')) &amp;&amp; (gr.u_imp_type != '') &amp;&amp; (gr.getValue('business_unit') == dmnBusUnit)) {
                return true;
            }
            return false;
        }
    },


    createSurvey: function() {

        var prjcfit = gs.getProperty("wf.cms.prj.additional.cfit");
        var projID = this.getParameter('sysparm_sysid');
        var typeSysID = prjcfit; //The sys_id of the assessment, should be in published state
        var sourceRecordID = projID; //sys_id of the transaction record (Ex: sys_id of the IMS record)
        var userID = gs.getUserID(); // sys_id in the opened_by field
        var result = new SNC.AssessmentCreation().createAssessments(typeSysID, sourceRecordID, userID); // successfully created the Survey instance record


        //Association of Trigger ID and Trigger Records
        var asmtGR = new GlideRecord("asmt_assessment_instance");
        asmtGR.get(result.split(",")[0]); // gets the sys_id of the newly created assessment record from the 'result' variable array
        asmtGR.setValue('trigger_table', 'pm_project'); //setting target table to demand
        asmtGR.setValue('task_id', projID); //sys_id of the task id to the current record
        asmtGR.setValue('trigger_id', projID);
        asmtGR.update();

        return 'assessment_take2.do?sysparm_assessable_sysid=' + asmtGR.sys_id.toString() + '&amp;sysparm_assessable_type=' + asmtGR.metric_type.toString();
    },


   

    /*@name createRecInCustomTable
    @description creates a record Custom Table
    @param {Instance Id, task, mtrType}
    @returns does not return anything*/

    createRecInCustomTable: function(insId, task, mtrType) {

        var asrGr = new GlideRecord('u_assessment_results');
        asrGr.initialize();
        asrGr.u_metrictype = mtrType;
        asrGr.u_cfit_instance_ids = insId.sys_id;
        asrGr.u_task = insId.task_id;
        asrGr.insert();

    },

    getImpactedGrpsFromProject: function(prjRec, insId) {

        var impSubGrps;
        var arrSubGrps = [];
        var arrSubGrpsArea = [];
        var impSubGrpsArea;

        var impGrps = [];
        var asmtResult = new GlideRecord('u_assessment_results');
        asmtResult.addQuery('u_task.sys_id', prjRec.sys_id);
        asmtResult.addQuery('u_cfit_instance_ids', 'CONTAINS', insId.sys_id);

        asmtResult.query();
        if (asmtResult.next()) {

            if (!gs.nil(asmtResult.u_select_impacted_functional_business_sub_groups_project)) {

                impSubGrps = asmtResult.u_select_impacted_functional_business_sub_groups_project;
                arrSubGrps = impSubGrps.split(",");

            }
            if (!gs.nil(asmtResult.u_select_impacted_functional_business_sub_group_areas_project)) {

                impSubGrpsArea = asmtResult.u_select_impacted_functional_business_sub_group_areas_project;
                arrSubGrpsArea = impSubGrpsArea.split(",");
            }

        }

var arrDependentValues
        var dependentValues = this.getDependentValues(impSubGrps, impSubGrpsArea);
		if(!gs.nil(dependentValues)){
arrDependentValues = dependentValues.split(",");
		}
       
        var arrUtil = new ArrayUtil();
        impGrps = arrUtil.union(arrSubGrps, arrSubGrpsArea);
        impGrps = arrUtil.diff(impGrps, arrDependentValues);
        return impGrps.toString();


    },


    getDependentValues: function(impSubGrps, impSubGrpsArea) {
        var dependentValues = [];
        var chsgr = new GlideRecord("sys_choice");
        chsgr.addQuery("name", "u_assessment_results");
        chsgr.addQuery("element", "u_select_impacted_functional_business_sub_group_areas");
        chsgr.addQuery("value", 'IN', impSubGrpsArea);
        chsgr.groupBy("dependent_value");
        chsgr.query();

        while (chsgr.next()) {
            dependentValues.push(chsgr.getValue("dependent_value"));
        }
        return dependentValues.toString();
    },


    type: 'wfCMSProjectCFIT'
});]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;K095239&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2024-01-24 06:34:32&lt;/sys_created_on&gt;
        &lt;sys_id&gt;4f92d36793ffb5903fc2bac86cba10b1&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;48&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;wfCMSProjectCFIT&lt;/sys_name&gt;
        &lt;sys_package display_value="Global" source="global"&gt;global&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_4f92d36793ffb5903fc2bac86cba10b1&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;K095239&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2024-02-12 14:28:17&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:36:58</sys_created_on>
        <sys_id>77963cd983f01210c6695855eeaad37d</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>wfCMSProjectCFIT</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_77963cd983f01210c6695855eeaad37d</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:36:58</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
