<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>42cceb66772230106a9e78adaf5a99b7</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;sn_docker_spoke.DockerWebhookCallbackURLGenerator&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;true&lt;/client_callable&gt;
        &lt;description&gt;When generateCallbackURL() is called by UI Action on Docker webhook registry table, this prepares the URL to be used to register webhook&lt;/description&gt;
        &lt;name&gt;DockerWebhookCallbackURLGenerator&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var DockerWebhookCallbackURLGenerator = Class.create();
DockerWebhookCallbackURLGenerator.prototype = Object.extendsObject(global.AbstractAjaxProcessor, {
	
	generateCallbackURL: function(registryGR) {
        var tokenID = this.getParameter('sysparm_token') || registryGR.getValue('token');
        var path = this.getParameter('sysparm_path') || registryGR.getValue('path');
        var registryID = this.getParameter('sysparm_id') || registryGR.getUniqueValue();
		
		var whRegistryGr = new GlideRecordSecure('sn_docker_spoke_docker_webhook_registry');
		whRegistryGr.addQuery('sys_id', registryID);
		whRegistryGr.addQuery('token', tokenID);
		whRegistryGr.query();

        var tokenVerification = new GlideRecordSecure('token_verification');
        if (!gs.nil(tokenID) &amp;&amp; tokenVerification.get(tokenID) &amp;&amp; whRegistryGr.hasNext()) {
            return gs.getProperty("glide.servlet.uri") + GlideStringUtil.escapeHTML(path) + "?" + "ni.nolog.id=" + registryID + "&amp;" + "ni.nolog.token=" + encodeURIComponent(tokenVerification.getValue('token'));
        }
        return '';
    },
	
    type: 'DockerWebhookCallbackURLGenerator'
});]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2021-09-15 17:50:12&lt;/sys_created_on&gt;
        &lt;sys_id&gt;42cceb66772230106a9e78adaf5a99b7&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;1&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;DockerWebhookCallbackURLGenerator&lt;/sys_name&gt;
        &lt;sys_package display_value="Docker Spoke" source="sn_docker_spoke"&gt;dcb0e1e4db075300dd14596e5e9619ca&lt;/sys_package&gt;
        &lt;sys_policy&gt;read&lt;/sys_policy&gt;
        &lt;sys_scope display_value="Docker Spoke"&gt;dcb0e1e4db075300dd14596e5e9619ca&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_42cceb66772230106a9e78adaf5a99b7&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2023-01-20 07:09:48&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:36:20</sys_created_on>
        <sys_id>6e76f0d983f01210c6695855eeaad39e</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>DockerWebhookCallbackURLGenerator</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_6e76f0d983f01210c6695855eeaad39e</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:36:20</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
