<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>0c71a4bd37701200455726877e41f19a</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.CustomEntityLoader&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;CustomEntityLoader&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var CustomEntityLoader = Class.create();
CustomEntityLoader.prototype = {
    initialize: function(sysClassName) {
		this.sysClassName = sysClassName;
    },
	
	getRecords: function(params) {
		var owner = params['owner'];
		var gr = new GlideRecord('planned_task_custom_console');
		gr.addQuery('owner', owner);
        gr.addQuery('table', this.sysClassName);
		gr.query();
		var records = [];
		while ( gr.next() )
			records.push(this.entityObject(gr));
		var memberConsoles = new GlideRecord('planned_task_custom_console_member');
		memberConsoles.addQuery('user', owner);
		memberConsoles.query();
		var ids = [];
		while ( memberConsoles.next() )
			ids.push(memberConsoles.getValue('console'));
		if ( ids.length &gt; 0 ) {
			var console = new GlideRecord('planned_task_custom_console');
			console.addEncodedQuery('sys_idIN'+ids.join(','));
			console.addQuery('table', this.sysClassName);
			console.query();
			while ( console.next() )
				records.push(this.entityObject(console));
		}
		return records;
	},
	
	getRecordIds: function(user) {
		var params = {};
		params['owner'] = user;
		var records = this.getRecords(params);
		var ids = [];
		records.forEach(function(r) {
			ids.push(r['sys_id']);
		});
		return ids;
	},
	
	getMyConsoleRefQualifier: function(user) {
		var ids = this.getRecordIds(user);
		return 'sys_idIN' + ids.join(',');
	},

    entityObject: function(gr) {
		var entityColors = new EntityColors();
		var color = entityColors.entityColor(gr.getValue('table'));
		var recCount = 0;
		var recs = new GlideAggregate(gr.getValue('table'));
		recs.addEncodedQuery(gr.getValue('filter'));
		recs.addNullQuery('parent');
		recs.addAggregate('COUNT');
		recs.query();
		if ( recs.next() )
			recCount =recs.getAggregate('COUNT');
        var entity = {
            sys_id: gr.getValue('sys_id'),
            name: gr.getValue('name'),
            description: gr.getDisplayValue('filter'),
			filter: gr.getValue('filter'),
            color: color,
            owned_by: gr.getDisplayValue('owner'), // currently there is no column
            owned_by_id: gr.getValue('owner'),
			short_description: gr.getValue('short_description'),
			count: recCount,
			over_limit : parseInt(recCount) &gt; parseInt(gr.getValue('record_limit')) ? true: false
        };
		
        return entity;
    },
    

    type: 'CustomEntityLoader'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2016-01-07 09:22:57&lt;/sys_created_on&gt;
        &lt;sys_id&gt;0c71a4bd37701200455726877e41f19a&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;21&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;CustomEntityLoader&lt;/sys_name&gt;
        &lt;sys_package display_value="Project Management" source="com.snc.project_management_v3"&gt;9eef82e747e64210cd4e1ce4316d43e3&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_0c71a4bd37701200455726877e41f19a&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2019-04-02 07:07:11&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:09:55</sys_created_on>
        <sys_id>d360789583b01210c6695855eeaad385</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>CustomEntityLoader</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_d360789583b01210c6695855eeaad385</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:09:55</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
