<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>917e3fb753822110ad0fddeeff7b1279</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;public&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;sn_sow_collab.SOWSidebarChatUtilsSNC&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;SOWSidebarChatUtilsSNC&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var SOWSidebarChatUtilsSNC = Class.create();
SOWSidebarChatUtilsSNC.prototype = {
    initialize: function() {},

    TABLES: {
        SYS_CS_COLLAB_RECORD: 'sys_cs_collab_record',
        INCIDENT: 'incident',
        SYS_USER_HAS_ROLE: 'sys_user_has_role'
    },

    FIELDS: {
        TABLE: 'table',
        DOCUMENT: 'document',
        SYS_ID: 'sys_id',
        COLLAB_CHAT: 'collab_chat',
        TITLE: 'title',
        SYS_UPDATED_ON: 'sys_updated_on',
        SYS_CREATED_BY: 'sys_created_by',
        CALLER_ID: 'caller_id',
        USER: 'user',
        ROLE: 'role'
    },

    COLLAB_MEMBER_FIELDS: {
        USER_NAME: 'userName',
        DISPLAY_NAME: 'displayName',
        AVATAR: 'avatar',
        EMAIL: 'email',
        SYS_ID: 'userSysId'
    },

    SIDEBAR_CHATS: {
        NUMBER_OF_AVATARS: 5
    },

    hasPermission: function(userSysId, recordSysId, table) {
        if (!userSysId || !recordSysId || !table)
            return false;
        if (table == 'interaction' &amp;&amp; this.userHasNoRoles(userSysId))
            return false;
        if (table == 'incident' || table == 'sc_request' || table == 'sc_req_item' || table == 'change_request') {
            var isRequesterIncluded = gs.getProperty('sn_sow_collab.enable_requester_in_sidebar_discussion', 'true');
            if (isRequesterIncluded == 'false' &amp;&amp; this.userHasNoRoles(userSysId))
                return false;
        }
        return true;
    },

    userHasNoRoles: function(userSysId) {
        if (!userSysId)
            return true;
        var roleGr = new GlideRecord(this.TABLES.SYS_USER_HAS_ROLE);
        roleGr.addQuery(this.FIELDS.USER, userSysId);
        roleGr.addQuery('role.name', '!=', 'snc_internal'); // Exclude users with no role or only snc_internal role 
        roleGr.setLimit(1);
        roleGr.query();
        return !(roleGr.hasNext());
    },

    isSidebarSupportedOnSOW: function() {
        var isPolarisEnabled = gs.getProperty('glide.ui.polaris.experience', "false");
        var releaseVersion = gs.getProperty('itsm_family_release_version_check', 0);
        var isSidebarSupportedOnSOW = gs.getProperty('sn_oe_sfs.prepopulate_users_on_sidebar_modal_is_supported', "false");
        if (isSidebarSupportedOnSOW === 'true' &amp;&amp; isPolarisEnabled === 'true' &amp;&amp; (releaseVersion &amp;&amp; releaseVersion &gt;= 24))
            return true;
        return false;
    },

    getChatsForRecord: function(table, sysId, participantsLimit, chatSysId, chatsLimit) {
        if (gs.nil(table) || gs.nil(sysId)) return [];
        if (!this.isSidebarSupportedOnSOW()) return [];

        var sidebarChats = [];
        var collabRecordGr = new GlideRecord(this.TABLES.SYS_CS_COLLAB_RECORD);
        collabRecordGr.addQuery(this.FIELDS.TABLE, table);
        collabRecordGr.addQuery(this.FIELDS.DOCUMENT, sysId);
        if (!gs.nil(chatSysId))
            collabRecordGr.addQuery(this.FIELDS.COLLAB_CHAT, chatSysId);
        collabRecordGr.orderByDesc(this.FIELDS.SYS_UPDATED_ON);
        if (!gs.nil(chatsLimit))
            collabRecordGr.setLimit(chatsLimit);
        collabRecordGr.query();
        while (collabRecordGr.next()) {
            var chatGr = collabRecordGr.collab_chat ? collabRecordGr.collab_chat.getRefRecord() : null;
            if (gs.nil(chatGr) || !chatGr.isValidRecord())
                continue;
            var collabChatMembers = sn_collab.CollabChatScriptObject.getCollabChatMembers(chatGr.getValue(this.FIELDS.SYS_ID), participantsLimit);
            var participants = [];
            var moreParticipantsText = "";
            var createdByUserSysId = '';
            for (var i = 0; i &lt; collabChatMembers.length; i++) {
                createdByUserSysId = chatGr.getValue(this.FIELDS.SYS_CREATED_BY) === collabChatMembers[i]['userName'] ? collabChatMembers[i]['userSysId'] : createdByUserSysId;
                if (i &lt; this.SIDEBAR_CHATS.NUMBER_OF_AVATARS)
                    participants.push({
                        'userName': collabChatMembers[i][this.COLLAB_MEMBER_FIELDS.USER_NAME],
                        'displayName': collabChatMembers[i][this.COLLAB_MEMBER_FIELDS.DISPLAY_NAME],
                        'avatar': collabChatMembers[i][this.COLLAB_MEMBER_FIELDS.AVATAR],
                        'email': collabChatMembers[i][this.COLLAB_MEMBER_FIELDS.EMAIL],
                        'sysId': collabChatMembers[i][this.COLLAB_MEMBER_FIELDS.SYS_ID]
                    });
                else
                if (!moreParticipantsText.length)
                    moreParticipantsText = collabChatMembers[i][this.COLLAB_MEMBER_FIELDS.DISPLAY_NAME];
                else
                    moreParticipantsText += ", " + collabChatMembers[i][this.COLLAB_MEMBER_FIELDS.DISPLAY_NAME];
            }
            var moreParticipantsHtml = "";
            if (moreParticipantsText)
                moreParticipantsHtml = '&lt;div title="' + moreParticipantsText + '"&gt;+' + this._nFormatter(parseInt(collabChatMembers.length) - 5) + "&lt;/div&gt;";

            sidebarChats.push({
                'chatSysId': chatGr.getValue(this.FIELDS.SYS_ID),
                'type': "sidebar_discussion",
                'title': chatGr.getValue(this.FIELDS.TITLE),
                'timeAgo': this.getDuration(chatGr.getValue(this.FIELDS.SYS_UPDATED_ON)),
                'updatedOn': chatGr.getValue(this.FIELDS.SYS_UPDATED_ON),
                'createdBy': createdByUserSysId,
                'participants': participants,
                'totalParticipants': collabChatMembers.length,
                'moreParticipantsHtml': moreParticipantsHtml
            });
        }
        return sidebarChats;
    },

    getNumberOfChats: function(table, sysId) {
        var collabRecordGa = new GlideAggregate(this.TABLES.SYS_CS_COLLAB_RECORD);
        collabRecordGa.addAggregate('COUNT');
        collabRecordGa.addQuery(this.FIELDS.TABLE, table);
        collabRecordGa.addQuery(this.FIELDS.DOCUMENT, sysId);
        collabRecordGa.query();
        if (collabRecordGa.next())
            return collabRecordGa.getAggregate('COUNT');
        return 0;
    },

    getDuration: function(gdt) {
        if (!gdt)
            return '';

        var gd = new GlideDuration();
        gd.setValue(gdt);

        var currentGd = new GlideDuration();
        currentGd.setValue(new GlideDateTime());

        var difference = currentGd.subtract(gd);
        difference = difference.getDisplayValue();
        difference = difference.split(" ");
        return difference[0] + " " + difference[1];
    },

    _nFormatter: function(num) {
        if (num &gt;= 1000000000)
            return (num / 1000000000).toFixed(1).replace(/\.0$/, '') + 'B';

        if (num &gt;= 1000000)
            return (num / 1000000).toFixed(1).replace(/\.0$/, '') + 'M';

        if (num &gt;= 1000)
            return (num / 1000).toFixed(1).replace(/\.0$/, '') + 'K';

        return num;
    },

    type: 'SOWSidebarChatUtilsSNC'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2023-04-14 08:20:29&lt;/sys_created_on&gt;
        &lt;sys_id&gt;917e3fb753822110ad0fddeeff7b1279&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;82&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;SOWSidebarChatUtilsSNC&lt;/sys_name&gt;
        &lt;sys_package display_value="Collaboration Services for Service Operations Workspace" source="sn_sow_collab"&gt;fa27a0dd53423010bf68ddeeff7b12ac&lt;/sys_package&gt;
        &lt;sys_policy&gt;read&lt;/sys_policy&gt;
        &lt;sys_scope display_value="Collaboration Services for Service Operations Workspace"&gt;fa27a0dd53423010bf68ddeeff7b12ac&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_917e3fb753822110ad0fddeeff7b1279&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2023-07-06 11:14:19&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:45:33</sys_created_on>
        <sys_id>5998b45183341210c6695855eeaad357</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>SOWSidebarChatUtilsSNC</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_5998b45183341210c6695855eeaad357</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:45:33</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
