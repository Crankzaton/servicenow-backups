<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>SNC ManyToMany Create</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[createMTMTable();

function createMTMTable() {
 if (exists()) {
  current.setAbortAction(true);
  current.m2m_table.setError(gs.getMessage("A Many to Many entry already exists for this table"));
  return;
 }

 if (MTMexists()) {
  gs.addInfoMessage(gs.getMessage("The many to many table {0} already exists", current.m2m_table));
  return;
 }

 createTable();
}

// check for duplicate entry on the many to many table name
function exists() {
 var chk = new GlideRecord('sys_m2m');
 chk.addQuery('m2m_table', current.m2m_table);
 chk.query();
 return chk.hasNext();
}

// check to see if the many to many table already exists
function MTMexists() {
 return gs.tableExists(current.m2m_table);
}

// create the many to many table needed for this sys_m2m entry
function createTable() {
 var tableLabel = getM2MTableLabel();
 current.m2m_table = gs.tableCreate(current.m2m_table, tableLabel);

 var to = GlideDBUtil.createElement(current.m2m_table, current.m2m_from_label,
  current.m2m_to_field, 'reference', '', current.to_table, true);
 var from = GlideDBUtil.createElement(current.m2m_table, current.m2m_to_label,
  current.m2m_from_field, 'reference', '', current.from_table, true);
 current.m2m_from_field = from.getName();
 current.m2m_to_field = to.getName();

 gs.addInfoMessage(gs.getMessage("Many to Many table {0} has been created", current.m2m_table));
}

function getM2MTableLabel() {
 var tableName = current.m2m_table;
 var scope = tableName.substring(0, tableName.indexOf("m2m"));
 return scope + "m2m_" + getLabels();
}

function getLabels() {
 var fromLabel = current.m2m_from_label;
 var toLabel = current.m2m_to_label;
 if (fromLabel.length + toLabel.length >= 25) {
  if (fromLabel.length > 12)
   fromLabel = trimLabel(fromLabel);
  if (toLabel.length > 12)
   toLabel = trimLabel(toLabel);
 }
 return toLabel + "_" + fromLabel;
}

function trimLabel(label) {
 if (label.charAt(12) === '_' || label.charAt(12) === ' ')
  return label.substr(0, 11);
 return label.substr(0, 12);
}]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:47:33</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>7b4b285183701210c6695855eeaad3da</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>SNC ManyToMany Create</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_7b4b285183701210c6695855eeaad3da</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:47:33</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=7b4b285183701210c6695855eeaad3da"/>
</record_update>
