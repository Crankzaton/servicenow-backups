<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>ValidatePwdPolicyForNonAdvancedOption</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {
    var minimun_password_length = current.minimun_password_length;
    var maximum_password_length = current.maximum_password_length;
    var minimum_uppercase_characters = current.minimum_uppercase_characters;
    var minimum_lowercase_characters = current.minimum_lowercase_characters;
    var minimum_numeric_characters = current.minimum_numeric_characters;
    var minimum_special_characters = current.minimum_special_characters;
    var whitelisted_special_characters = current.whitelisted_special_characters;

    var policyScript;
    if (current.isValidField('password_policy_script')) {
        policyScript = current.password_policy_script;
    }
    var options = eval(policyScript);
    if (options) {
        if (options['minimun_password_length'] != undefined)
            minimun_password_length = options['minimun_password_length'];
        if (options['maximum_password_length'] != undefined)
            maximum_password_length = options['maximum_password_length'];
        if (options['minimum_uppercase_characters'] != undefined)
            minimum_uppercase_characters = options['minimum_uppercase_characters'];
        if (options['minimum_lowercase_characters'] != undefined)
            minimum_lowercase_characters = options['minimum_lowercase_characters'];
        if (options['minimum_numeric_characters'] != undefined)
            minimum_numeric_characters = options['minimum_numeric_characters'];
        if (options['minimum_special_characters'] != undefined)
            minimum_special_characters = options['minimum_special_characters'];
    }

    // valiidate script options
    if (minimun_password_length < 8 || minimun_password_length > 100) {
        gs.addErrorMessage(gs.getMessage("Minimum password length should be in range of: [{0}, {1}]", [8, 100]));
  current.setAbortAction(true);
        return;
    }
    if (maximum_password_length < 8 || maximum_password_length > 100) {
        gs.addErrorMessage(gs.getMessage("Maximum password length should be in range of: [{0}, {1}]", [8, 100]));
  current.setAbortAction(true);
        return;
    }
 
 if(maximum_password_length - minimun_password_length < 5){
  gs.addErrorMessage(gs.getMessage("Difference between minimum and maximum password length must be 5 or more", [8, 100]));
  current.setAbortAction(true);
        return;
 }
 
    if (minimum_uppercase_characters < 0 || minimum_uppercase_characters > 10) {
        gs.addErrorMessage(gs.getMessage("Minimum uppercase character(s) should be in range of: [{0}, {1}]", [0, 10]));
  current.setAbortAction(true);
        return;
    }
    if (minimum_lowercase_characters < 0 || minimum_lowercase_characters > 10) {
        gs.addErrorMessage(gs.getMessage("Minimum lowercase Character(s) should be in range of: [{0}, {1}]", [0, 10]));
  current.setAbortAction(true);
        return;
    }
    if (minimum_numeric_characters < 0 || minimum_numeric_characters > 10) {
        gs.addErrorMessage(gs.getMessage("Minimum numeric character(s) should be in range of: [{0}, {1}]", [0, 10]));
  current.setAbortAction(true);
        return;
    }
    if (minimum_special_characters < 0 || minimum_special_characters > 10) {
        gs.addErrorMessage(gs.getMessage("Minimum special character(s) should be in range of: [{0}, {1}]", [0, 10]));
  current.setAbortAction(true);
        return;
    }
    var tempSum = parseInt(minimum_lowercase_characters) + parseInt(minimum_uppercase_characters) + parseInt(minimum_numeric_characters) + parseInt(minimum_special_characters);
 var sumStr = String(tempSum);
 var sum = sumStr.split(".")[0];
 
    if (sum > minimun_password_length) {
        gs.addErrorMessage(gs.getMessage("The minimum password length must not be less than the sum ({0}) of minimum required character fields.", sum));
  current.setAbortAction(true);
        return;
    }
    if (sum > maximum_password_length) {
        gs.addErrorMessage(gs.getMessage("The maximum password length must not be less than the sum ({0}) of minimum required character fields.", sum));
  current.setAbortAction(true);
        return;
    }

})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:50:02</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>40eb645583701210c6695855eeaad3ee</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>ValidatePwdPolicyForNonAdvancedOption</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_40eb645583701210c6695855eeaad3ee</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:50:02</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=40eb645583701210c6695855eeaad3ee"/>
</record_update>
