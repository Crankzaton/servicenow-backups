<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition>current.verification.type.sys_id == '58a2f398eb6001006a668c505206fed3' || current.verification.type.sys_id == '47cf0e830b233200572a6f3ef6673a00'</condition>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>SMS And Email Code Param Validation</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[// SMS Code Verification Type
// parameter validations

check();

function check() {
 gs.include('PwdVerificationParameterUtility');
 var utility = new PwdVerificationParameterUtility();
 
 // all params are integers:
 var paramList = ['complexity', 'expiry', 'pause_window', 'max_per_day']; 
 if (utility.contains(paramList, current.name) && !utility.isInteger(current.value)) {
  gs.addErrorMessage(gs.getMessage('pwd_integer_required', current.name));
  current.setAbortAction(true);
  return;
 }
 
 // Specific check for expiry:
 if (current.name == 'expiry') {
  var requestExpiry = GlideProperties.get("password_reset.request.expiry", '0');
  assertGreaterOrEqual(requestExpiry, current.value, gs.getMessage('pwd_cannot_be_greater_than', [current.name, requestExpiry]));
  assertGreaterOrEqual(current.value, '0', gs.getMessage('pwd_non_negative', [current.name]));
 }
 
 // Specific check for complexity:
 if (current.name == 'complexity') {
  var MAX_VALUE = 10;
  assertGreaterOrEqual(MAX_VALUE, current.value, gs.getMessage('pwd_cannot_be_greater_than', [current.name, MAX_VALUE]));
  assertGreaterOrEqual(current.value, '1', gs.getMessage('pwd_cannot_be_less_than', [current.name, '1']));
 }
 
 // Specific check for pause_window:
 if (current.name == 'pause_window') {
  var MAX_VALUE = 100;
  assertGreaterOrEqual(MAX_VALUE, current.value, gs.getMessage('pwd_cannot_be_greater_than', [current.name, MAX_VALUE]));
  assertGreaterOrEqual(current.value, '0', gs.getMessage('pwd_non_negative', [current.name]));
 }
 
 // Specific check for max_per_day:
 if (current.name == 'max_per_day') {
  var MAX_VALUE = 100;
  assertGreaterOrEqual(MAX_VALUE, current.value, gs.getMessage('pwd_cannot_be_greater_than', [current.name, MAX_VALUE]));
  assertGreaterOrEqual(current.value, '0', gs.getMessage('pwd_non_negative', [current.name]));
 }
}



function assertGreaterOrEqual(propLarger, propSmaller, errMsg) {
 if (parseInt(propLarger) < parseInt(propSmaller)){
  gs.addErrorMessage(errMsg);
  current.setAbortAction(true);
 }
}]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:49:30</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>58cb281583701210c6695855eeaad308</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>SMS And Email Code Param Validation</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_58cb281583701210c6695855eeaad308</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:49:30</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=58cb281583701210c6695855eeaad308"/>
</record_update>
