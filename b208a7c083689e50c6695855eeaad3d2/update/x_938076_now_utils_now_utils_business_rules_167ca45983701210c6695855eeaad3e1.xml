<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Validate indicator definition</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

 var spmConstants = new sn_spm.SPMConstants();
 
 // Check if all indicators have the OOB service offering as a breakdown
 var validBreakdown = new GlideRecord('pa_indicator_breakdowns');
 validBreakdown.addQuery('breakdown', spmConstants.SERVICE_OFFERINGS_BREAKDOWN);
 validBreakdown.addQuery('indicator', current.indicator);
 validBreakdown.query();
 if (validBreakdown.getRowCount() == 0) {
  var breakdown = new GlideRecord('pa_breakdowns');
  breakdown.get(spmConstants.SERVICE_OFFERINGS_BREAKDOWN);
  gs.addErrorMessage(gs.getMessage("{0} should have '{1}' breakdown associated to it" , [current.indicator.getED().getLabel(), breakdown.getDisplayValue()]));
  current.setAbortAction(true);
 }
 
 // Check if the the indicator has OOB SPM data collection job
 var validJob = new GlideRecord('pa_job_indicators');
 validJob.addQuery('job', spmConstants.SPM_DATA_COLLECTION_JOB_FOR_PA);
 validJob.addQuery('indicator', current.indicator);
 validJob.query();
 if (!validJob.hasNext()) {
  var job = new GlideRecord('sysauto_pa');
  job.get(spmConstants.SPM_DATA_COLLECTION_JOB_FOR_PA);
  gs.addErrorMessage(gs.getMessage("{0} should have '{1}' job attached to it" , [current.indicator.getED().getLabel(), job.getDisplayValue()]));
  current.setAbortAction(true);
 }
 
})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:52:38</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>167ca45983701210c6695855eeaad3e1</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Validate indicator definition</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_167ca45983701210c6695855eeaad3e1</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:52:38</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=167ca45983701210c6695855eeaad3e1"/>
</record_update>
