<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>373beaab07b11010220b0a701ad3002e</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_fix"&gt;
    &lt;sys_script_fix action="INSERT_OR_UPDATE"&gt;
        &lt;before&gt;false&lt;/before&gt;
        &lt;description&gt;Updates Dirty, LastPublishedOn and LastTrainedOn in nlu_model_status table.
Model is dirty if: 
- Neither published or trained.
- Model is updated after published / trained.&lt;/description&gt;
        &lt;name&gt;Update NLU Model Status Table&lt;/name&gt;
        &lt;record_for_rollback&gt;false&lt;/record_for_rollback&gt;
        &lt;script&gt;&lt;![CDATA[var tables = NLUConstants.tables;

function updateModelStateDict() {
    var dictGr = new GlideRecord(tables.SYS_DICTIONARY);
    dictGr.addQuery('name', tables.SYS_NLU_MODEL);
    dictGr.addQuery('element', 'state');
    dictGr.query();
    if (dictGr.next()) {
        dictGr.setValue('calculation', 'var nluModel = new global.NLUModel(current.sys_id);current.state = nluModel.getState();');
        dictGr.update();
        gs.info('NLU Model: Upgraded state virtual column');
    }
}

function updateEntityDict() {
    var dictGr = new GlideRecord(tables.SYS_DICTIONARY);
    dictGr.addQuery('name', tables.SYS_NLU_ENTITY);
    dictGr.addQuery('element', 'field_name');
    dictGr.query();
    if (dictGr.next()) {
        dictGr.setValue('internal_type', 'string');
        dictGr.setValue('max_length', '100');
        dictGr.setValue('dependent_on_field', '');
        dictGr.update();
        gs.info('NLU Entity: Upgraded field_name column details');
    }
}

(function() {

    var modelId, modelGr, parloIntegrator, result, lastPublishedOrTrained, modelUpdatedOn;

    updateModelStateDict();
    updateEntityDict();

    var gr = new GlideRecord(tables.SYS_NLU_MODEL_STATUS);
    gr.query();
    while (gr.next()) {
        modelId = gr.getValue('model');
        modelGr = new GlideRecord(tables.SYS_NLU_MODEL);
        if (!modelGr.get(modelId)) {
            gs.info('NLU Model: ' + modelId + ' - ERROR: nlu_model record does not exist!');
            continue;
        }
        parloIntegrator = new NLUParloIntegrator(modelGr);
        lastPublishedOrTrained = null;

        result = parloIntegrator.getModelStatus();
        if (result &amp;&amp; result.status === 'success') {
            if (result.lastPublishedOn) {
                lastPublishedOrTrained = new GlideDateTime(result.lastPublishedOn);
                gs.info('NLU Model: ' + modelId + ' - Updating published on: ' + lastPublishedOrTrained.getDisplayValueInternal());
                gr.setValue('last_published_on', lastPublishedOrTrained);
            }

            if (result.lastTrainedOn) {
                var lastTrainedOn = new GlideDateTime(result.lastTrainedOn);
                lastPublishedOrTrained = NLUHelper.getLatestDate(lastPublishedOrTrained, lastTrainedOn);
                gs.info('NLU Model: ' + modelId + ' - Updating trained on: ' + lastTrainedOn.getDisplayValueInternal());
                gr.setValue('last_trained_on', lastTrainedOn);
            }
        }

        modelUpdatedOn = NLUModel.getLastUpdatedOn(modelId);
        gs.info('NLU Model: ' + modelId + ' - Updated on: ' + modelUpdatedOn.getDisplayValueInternal());
        var dirty = !lastPublishedOrTrained || (modelUpdatedOn.getNumericValue() &gt; lastPublishedOrTrained.getNumericValue());
        gs.info('NLU Model: ' + modelId + ' - Updating dirty: ' + dirty);
        gr.setValue('dirty', dirty);
        gr.setValue('model_updated_on', modelUpdatedOn);
        gr.update();
    }
})();]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_fix&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2020-07-10 18:25:54&lt;/sys_created_on&gt;
        &lt;sys_id&gt;373beaab07b11010220b0a701ad3002e&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;53&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;Update NLU Model Status Table&lt;/sys_name&gt;
        &lt;sys_package display_value="NLU Workbench - Core" source="com.glide.nlu"&gt;302438683c31311068bcf327dfe37f2f&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_fix_373beaab07b11010220b0a701ad3002e&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2020-09-25 13:44:18&lt;/sys_updated_on&gt;
        &lt;unloadable&gt;false&lt;/unloadable&gt;
    &lt;/sys_script_fix&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:20:17</sys_created_on>
        <sys_id>97c2785d83b01210c6695855eeaad3d7</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Update NLU Model Status Table</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_97c2785d83b01210c6695855eeaad3d7</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:20:17</sys_updated_on>
        <tablename>sys_script_fix</tablename>
    </sys_metadata_link>
</record_update>
