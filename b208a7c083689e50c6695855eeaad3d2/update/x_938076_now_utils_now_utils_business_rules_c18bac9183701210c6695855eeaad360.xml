<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition>current.active != previous.active</condition>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Capability and active model version chk</name>
        <order>200</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
 
 var currentCapability = current.getValue("capability");
 var mlHelper = AutoResolutionMLFactory.createMLHelperForCapability(currentCapability);
 
 if (currentCapability != AutoResolutionConstants.ML_CAPBILITIES.LANGUAGEX) {
  // if use legacy = false, we should not allow language config with agent_zero capability to be set to active
  // if use legacy = true, we should not allow language config with workflow capability to be set to active
  var expectedCapability = mlHelper.getCapability();
  if (expectedCapability !== currentCapability) {
   current.active = previous.active;
   gs.addErrorMessage(gs.getMessage("Model with capability={0} cannot be set to active as the system property={1} is set to use capability={2}. Update the system property to use the appropriate Issue Auto-Resolution solution.", [GlideStringUtil.escapeHTML(current.getValue("capability")), "glide.platform_ml.agent_zero.enable_legacy", GlideStringUtil.escapeHTML(expectedCapability)]));
   current.setAbortAction(true);
   gs.setRedirect(current);
  }
 }
 
 if (!mlHelper.hasActiveVersion(current.getValue("ml_solution_name"))) {
  current.active = previous.active;
  gs.addErrorMessage(gs.getMessage('Train the model to activate the language configuration for {0}.', GlideStringUtil.escapeHTML(current.training_language)));
  current.setAbortAction(true);
  gs.setRedirect(current);
 }
 

})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:48:27</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>c18bac9183701210c6695855eeaad360</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Capability and active model version chk</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_c18bac9183701210c6695855eeaad360</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:48:27</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=c18bac9183701210c6695855eeaad360"/>
</record_update>
