<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>058ed3e69c9b11eba8b30242ac130003</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;sn_mab_api.ConfigKeyStackCreator&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;ConfigKeyStackCreator&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var ConfigKeyStackCreator = Class.create();
ConfigKeyStackCreator.prototype = {
    initialize: function () {
        this.configKeyFactory = new sn_mab_api.ConfigKeyFactory();
        this.validationHandler = new sn_mab_api.ValidationHandler();
        this.errorHandler = new sn_mab_api.ErrorHandler();
    },

    createStackFromNodes: function (branchNodeArray) {
        if (!branchNodeArray || !branchNodeArray.length) {
            new ErrorHandler().throwInternalError('Branch nodes must be provided');
        }

        var configKeyStack = [];
        branchNodeArray.forEach(function (node) {
            var stackEntry = this.createConfigKeyStackEntry(node);
            configKeyStack.push(stackEntry);
        }, this);

        return configKeyStack;
    },

    createConfigKeyStackEntry: function (node) {
        var currTableName = node.sys_class_name;
        this.validateExternalNodeTable(currTableName, 'External node with missing or non-existing table name: ' + currTableName);
        var currSysId = node.sys_id;
        this.validateExternalSysId(currSysId, 'External node with missing or non-existing SysId: ' + currSysId);
        var gr = this.createCurrentRecordGR(currTableName, currSysId);
        var generator = this.configKeyFactory.getGenerator(currTableName);
        var configMetadata = generator.getTreeConfiguration(gr, node);
        return new ConfigKeyStackEntry(configMetadata.getConfigKey(), currTableName, currSysId);
    },

    validateExternalNodeTable: function (tableName, err) {
        if (!tableName)
            this.errorHandler.throwBadRequestError(err);

        if (!this.validationHandler.isValidTable(tableName))
            this.errorHandler.throwNotFoundError(err);
    },

    validateExternalSysId: function (sysId, err) {
        if (!this.validationHandler.isGeneratedOrNormalSysId(sysId))
            this.errorHandler.throwBadRequestError(err);
    },

    createCurrentRecordGR: function (tableName, sysId) {
        var gr = new GlideRecord(tableName);
        if (this.isFakeId(sysId))
            gr.initialize();
        else if (!gr.get(sysId))
            new ErrorHandler().throwBadRequestError('No record found for table: ' + tableName + ' sysId: ' + sysId);

        return gr;
    },

    isFakeId: function (sysId) {
        return this.validationHandler.isGeneratedId(sysId);
    },

    type: 'ConfigKeyStackCreator'
};
]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2021-02-11 15:32:36&lt;/sys_created_on&gt;
        &lt;sys_id&gt;058ed3e69c9b11eba8b30242ac130003&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;ConfigKeyStackCreator&lt;/sys_name&gt;
        &lt;sys_package display_value="Mobile App Builder API" source="sn_mab_api"&gt;3c64259bc7812010100f2f3bf4c2609a&lt;/sys_package&gt;
        &lt;sys_policy&gt;read&lt;/sys_policy&gt;
        &lt;sys_scope display_value="Mobile App Builder API"&gt;3c64259bc7812010100f2f3bf4c2609a&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_058ed3e69c9b11eba8b30242ac130003&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2021-02-11 15:32:36&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:09:18</sys_created_on>
        <sys_id>9640fc5583b01210c6695855eeaad33b</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>ConfigKeyStackCreator</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_9640fc5583b01210c6695855eeaad33b</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:09:18</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
