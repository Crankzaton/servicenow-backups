<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition>MIDClusterManagementUtil.checkPrecondition(current)</condition>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>MID Server Cluster Management</name>
        <order>80</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[/**
 * Service-now.com
 * 
 * Description: If the MID server is in a cluster, potentially replace the agent with the proper one.
 */

runMIDManagement();

function runMIDManagement() {
    var agentGr = getMIDServerGr();
    if (JSUtil.nil(agentGr))
        return;

 // only use cluster for Shazzam if the MID is down
 if (current.topic == "Shazzam" && agentGr.status == "Up") 
  return;

 // If probe param ECC_AGENT_SELECTOR_DETAILS exists in payload, then exit and don't use
 // legacy cluster management. For performance, uses a cached regex instead of a real XML parser.
 var midSelectorRegex = new SNC.Regex(GlideappIECC.ECC_AGENT_SELECTOR_DETAILS_REGEX+'');
 if (midSelectorRegex.match(current.payload))
  return;

 // only if a mid is down should a failover cluster be considered
 var msc;
 if (agentGr.status == "Down" || agentGr.status == "Upgrade Failed")
  msc = new MIDServerCluster(agentGr, "Failover");
 else
     msc = new MIDServerCluster(agentGr, "Load Balance");
 
    if (!msc.clusterExists())  // no available clusters of any kind
        return;
 
    var newAgent = msc.getClusterAgent();
    current.agent = "mid.server." + newAgent;
}

function getMIDServerGr() {
    var agentName = current.agent;
    agentName = agentName.substring("mid.server.".length, agentName.length);
 
    var agentCache = new SNC.ECCAgentCache();
 var gr = agentCache.getByName(agentName);
  
    if (!gr)
        return;   
 
    return gr;
}]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:50:32</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>affb609583701210c6695855eeaad3e0</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>MID Server Cluster Management</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_affb609583701210c6695855eeaad3e0</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:50:32</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=affb609583701210c6695855eeaad3e0"/>
</record_update>
