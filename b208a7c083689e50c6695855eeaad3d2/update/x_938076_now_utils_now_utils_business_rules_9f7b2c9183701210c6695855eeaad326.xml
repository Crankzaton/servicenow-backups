<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition>!current.task.nil() || !current.knowledge_article.nil()</condition>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Set Document Details</name>
        <order>50</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
 if (current.type == 'task' && current.task) {
  var glide = new GlideRecord('task');
  glide.addQuery('sys_id', current.task);
  glide.query();
  current.document_table = glide.next() ? glide.getValue('sys_class_name') : '';
        current.document_id = current.task;

  //set knowledge to null to prevent potential previous knowledge record data retention
  current.knowledge_article = '';

 } else if (current.type == 'knowledge' && current.knowledge_article) {
  current.document_table = "kb_knowledge";
  current.document_id = current.knowledge_article;

  //set task to null to prevent potential previous task record data retention
  current.task = '';
 }

 if (current._operation() == 'insert') {
  var existingRelationship = new GlideRecord("interaction_related_record");
  existingRelationship.addQuery("interaction", current.interaction);
  existingRelationship.addQuery("document_id", current.document_id);
  existingRelationship.setLimit(1);
  existingRelationship.query();

  if (existingRelationship.next()) {
   current.setAbortAction(true);
   gs.addInfoMessage(gs.getMessage("{0} is already associated with {1}", [current.document_id.getRefRecord().number, current.interaction.getRefRecord().number]));
  } else {
   gs.addInfoMessage(gs.getMessage("{0} has been associated with {1}", [current.document_id.getRefRecord().number, current.interaction.getRefRecord().number]));
  }
 } 
})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:48:20</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>9f7b2c9183701210c6695855eeaad326</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Set Document Details</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_9f7b2c9183701210c6695855eeaad326</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:48:20</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=9f7b2c9183701210c6695855eeaad326"/>
</record_update>
