<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>true</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition>gs.getProperty("glide.cost_mgmt.calc_actual_cost") == "true"</condition>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Update Planned Task Actual Cost</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[/**
Service-now.com
Description: For planned task source expenses, calculate the total actual costs from related expense lines
 **/
setTaskActualCosts();

function setTaskActualCosts() {
    var task = current.source_id.getRefRecord();
    if (!task.instanceOf("planned_task") || task.instanceOf("pm_program") || !task.isValidRecord())
        return;
    //start financial mgmt logging, only outputs if debug property is enabled
    var total = 0;
 var isProjectCurrencyCalculationRequired=new ProjectCurrencyUtil().isProjectCurrencyCalculationRequired(task);
    var expTotal = this.getTotalExpenseLineActualCost(task,isProjectCurrencyCalculationRequired);
    var childTotal = this.getTotalChildTaskActualCost(task,isProjectCurrencyCalculationRequired);
    total = expTotal.amount + childTotal.actual_cost;
    this.updateTaskActualCost(task, total); 
 if(expTotal.amount_project_currency){
  var totalProjectCurrency=expTotal.amount_project_currency+childTotal.actual_cost_project_currency;
  this.updateTaskActualCostprojectCurrency(task,totalProjectCurrency);
 } else if (new ProjectCurrencyUtil().isProjectCurrencyPresent(task)){
  this.updateTaskActualCostprojectCurrency(task,total);
 }
  task.update();
}

function getTotalExpenseLineActualCost(task,isProjectCurrencyCalculationRequired) {
    var expTotal = {};
    var exp = new GlideAggregate("fm_expense_line");
    exp.addQuery("source_table", current.source_table);
    exp.addQuery("source_id", current.source_id);
    exp.addQuery("state", "processed");
 exp.addAggregate("SUM","amount");
 if(isProjectCurrencyCalculationRequired)
  exp.addAggregate("SUM","amount_project_currency");
    exp.setGroup(false); 
    exp.query();
    if (exp.next()) {
        expTotal.amount = parseFloat(exp.getAggregate("SUM","amount"));
  if(isProjectCurrencyCalculationRequired)
   expTotal.amount_project_currency = parseFloat(exp.getAggregate("SUM","amount_project_currency"));
    }
    if (isNaN(expTotal.amount))
        expTotal.amount = 0; 
    return expTotal;
}

function getTotalChildTaskActualCost(task, isProjectCurrencyCalculationRequired) {
    var childTotal = {};
    childTotal.actual_cost = 0;
    childTotal.actual_cost_project_currency = 0;
    var log = new FMLogger("Update Planned Task Actual rule: ");
    //if we copy expenses to top task, don't include children for top task
    if (gs.getProperty("glide.cost_mgmt.process_task_top_task") == "true" && task.parent.nil()) {
        log.logDebug("skipping children total since we have all expenses on top task");
    } else {
        //get children totals
        var children = new GlideAggregate('planned_task');
        children.addQuery('parent', current.source_id.toString());
        children.addAggregate("SUM", "work_cost");
        if (isProjectCurrencyCalculationRequired)
            children.addAggregate("actual_cost_project_currency");
        children.setGroup(false);
        children.query();
        log.logDebug("children query: " + children.getEncodedQuery() + " = " + children.getRowCount());
        if (children.next()) {
            childTotal.actual_cost = parseFloat(children.getAggregate("SUM", "work_cost"));
        }
        if (isNaN(childTotal.actual_cost))
            childTotal.actual_cost = 0;
        if (isProjectCurrencyCalculationRequired)
            childTotal.actual_cost_project_currency = parseFloat(new ProjectCurrencyUtil().convertCurrencyUsingFxRate(childTotal.actual_cost, task.cost.getReferenceCurrencyCode(), task.project_currency.code));
        if (isNaN(childTotal.actual_cost_project_currency))
            childTotal.actual_cost_project_currency = 0;

    }
    return childTotal;
}
function updateTaskActualCost(task, total) {
    var currencyCode = task.cost.getReferenceCurrencyCode();
    task.work_cost = currencyCode + ";" + total;
}

function updateTaskActualCostprojectCurrency(task, totalProjectCurrency) {
    task.actual_cost_project_currency.amount = totalProjectCurrency;
    task.actual_cost_project_currency.currency = task.project_currency.code; 
}]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:49:35</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>edcba81583701210c6695855eeaad3f7</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Update Planned Task Actual Cost</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_edcba81583701210c6695855eeaad3f7</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:49:35</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=edcba81583701210c6695855eeaad3f7"/>
</record_update>
