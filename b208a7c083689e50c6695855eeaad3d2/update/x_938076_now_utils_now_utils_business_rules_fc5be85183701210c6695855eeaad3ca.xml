<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Restrict controller properties</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
 var properties = []; 
 var outputPropMapping = {};
 
 try {
  properties = JSON.parse(current.props);
 } catch(e) {
  //Leaving this as warn instead of stopping update as UXF's macroponent validator handles schema checking
  gs.warn("Unable to parse controller properties", e);
 }
 
 try {
  outputPropMapping = JSON.parse(current.output_prop_mapping);
 } catch(e) {
  //Leaving this as warn instead of stopping update as UXF's macroponent validator handles schema checking
  gs.warn("Unable to parse controller output prop mapping", e);
 }
 
 var propertyKeys = properties.map(function(prop) {
  return prop.name;
 });
 
 propertyKeys = propertyKeys.concat(Object.keys(outputPropMapping));
 
 var duplicateKeys = propertyKeys.filter(function(item, index) {
  return propertyKeys.indexOf(item) !== index;
 });
 
 if(duplicateKeys.length > 0) {
  gs.addErrorMessage(gs.getMessage("Please make sure there are no duplicate keys between Output Prop Mappings and Properties: {0}", duplicateKeys));
  current.setAbortAction(true);
  return;
 }
 
 if(propertyKeys.indexOf("inputs") > -1) {
  gs.addErrorMessage(gs.getMessage("\"inputs\" is a reserved property which is used to expose out the input properties of a controller."));
  current.setAbortAction(true);
  return;
 }

})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:47:37</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>fc5be85183701210c6695855eeaad3ca</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Restrict controller properties</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_fc5be85183701210c6695855eeaad3ca</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:47:37</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=fc5be85183701210c6695855eeaad3ca"/>
</record_update>
