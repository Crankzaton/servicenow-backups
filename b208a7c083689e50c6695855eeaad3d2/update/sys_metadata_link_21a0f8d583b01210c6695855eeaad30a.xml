<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>171217e09333020064f572edb67ffbe9</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.PmAggregateHelper&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;PmAggregateHelper&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var PmAggregateHelper = Class.create();
PmAggregateHelper.prototype = {
    initialize: function() {
    },

    getCount: function(tableName, filterColumn, columnValue, additionalQuery) {
        var count = new GlideAggregate(tableName);
        count.addQuery(filterColumn, columnValue);
        if(JSUtil.notNil(additionalQuery))
            count.addEncodedQuery(additionalQuery);
        count.addAggregate('COUNT');
        count.query();
        var agg = 0;
        if (count.next())
            agg = parseInt(count.getAggregate('COUNT'));
        return agg;
    },
    
    getCountByGroup: function(tableName, filterColumn, columnValue, groupBy) {
        var count = new GlideAggregate(tableName);
        count.addQuery(filterColumn, columnValue);
        count.addAggregate('COUNT', groupBy);
        count.query();
        var agg = {};
        while (count.next())
            agg[count.getValue(groupBy)] = parseInt(count.getAggregate('COUNT', groupBy));
        return agg;
    },
	
	getGlideAggregateForEntity: function(entity) {
		if (entity == 'risk')
			return this._createGlideAggregateForRisk();
		else if (entity == 'issue')
			return this._createGlideAggregateForIssue();
	},
	
	_createGlideAggregateForIssue: function() {
		var gAgg = new GlideAggregate('issue');
		gAgg.addAggregate('COUNT', 'priority');
		gAgg.addQuery('state', 'IN', '-5,1,2');
		gAgg.groupBy('priority');
		return gAgg;
	},
	
	_createGlideAggregateForRisk: function() {
		var gAgg = new GlideAggregate('risk');
		gAgg.addAggregate('COUNT', 'probability');
		gAgg.addQuery('state', 'IN', 'pending,not_achieved');
		gAgg.groupBy('probability');
		return gAgg;
	},
	
	addAggCountToResult: function(gAgg, resultObj, groupByColumn) {
		while (gAgg.next()) {
			if (JSUtil.notNil(resultObj[gAgg.getValue(groupByColumn)]))
				resultObj[gAgg.getValue(groupByColumn)] += parseInt(gAgg.getAggregate('COUNT', groupByColumn));
			else
				resultObj[gAgg.getValue(groupByColumn)] = parseInt(gAgg.getAggregate('COUNT', groupByColumn));
		}
	},		

    type: 'PmAggregateHelper'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2015-11-15 08:16:48&lt;/sys_created_on&gt;
        &lt;sys_id&gt;171217e09333020064f572edb67ffbe9&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;8&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;PmAggregateHelper&lt;/sys_name&gt;
        &lt;sys_package display_value="Program Management" source="com.snc.program_management"&gt;1110926b47e64210cd4e1ce4316d433e&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_171217e09333020064f572edb67ffbe9&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2016-02-06 21:29:27&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:10:52</sys_created_on>
        <sys_id>21a0f8d583b01210c6695855eeaad30a</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>PmAggregateHelper</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_21a0f8d583b01210c6695855eeaad30a</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:10:52</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
