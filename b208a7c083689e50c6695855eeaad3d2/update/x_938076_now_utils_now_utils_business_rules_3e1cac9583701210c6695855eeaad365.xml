<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Arrival entry validation</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {

    var resp;

    var offsetData = gs.getSession().getClientData('offsetData' + current.workplace_request.toString());
    var date = gs.getSession().getClientData('arrivalDate' + current.workplace_request.toString());
 
 if(gs.nil(offsetData) || gs.nil(date)){
  gs.addErrorMessage(gs.getMessage("Please use 'Schedule your arrival' record producer to create arrival entries"));
  current.setAbortAction(true);
  return;
 }
  
    if (!gs.nil(current.arrival_schedule))
        resp = new WPArrivalUtils().checkIfRequestIsValid(current.arrival_schedule, current.arrival_schedule.workplace_location, offsetData, date);

    if (gs.nil(resp) || resp.status == "error") {
        if (!gs.nil(current.workplace_request)) {
            var wpReqGr = new GlideRecord(WPConstants.TABLES.WORKPLACE_REQUEST);
            if (wpReqGr.get(current.workplace_request)) {
                wpReqGr.state = WPConstants.REQUEST_STATE.CLOSED_INCOMPLETE;
                wpReqGr.comments = gs.getMessage("Sorry the requested arrival time for the entry point is no longer available. Please request for another available time");
                wpReqGr.close_notes = resp.errorMsg || gs.getMessage("Reqeusted arrival time for the entry point is no longer available.");
                wpReqGr.update();
            }
        }
        current.setAbortAction(true);
    }

})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:51:02</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>3e1cac9583701210c6695855eeaad365</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Arrival entry validation</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_3e1cac9583701210c6695855eeaad365</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:51:02</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=3e1cac9583701210c6695855eeaad365"/>
</record_update>
