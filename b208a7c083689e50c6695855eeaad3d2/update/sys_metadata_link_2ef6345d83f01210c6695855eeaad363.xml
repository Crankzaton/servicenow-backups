<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>6ff662e0f75e1110dc25d3e543bfd6a1</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;public&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.MobileUtahUpgradeCommonUtils&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;This script include contains utility methods for upgrade scripts for upgrading mobile artifacts (cards, form screen) for utah&lt;/description&gt;
        &lt;name&gt;MobileUtahUpgradeCommonUtils&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var MobileUtahUpgradeCommonUtils = Class.create();
MobileUtahUpgradeCommonUtils.prototype = {
	TABLE: {
		SYS_SG_ITEM_VIEW: "sys_sg_item_view",
		SYS_SG_UI_STYLE: "sys_sg_ui_style",
		SYS_SG_FORM_SCREEN: "sys_sg_form_screen",
		SYS_SG_MASTER_ITEM: "sys_sg_master_item"
	},
	initialize: function () {
		this.GCD = GlideCollisionDetector.get();
	},
	isRecordCustomized: function (record) {
		if (!gs.nil(this.GCD))
			return this.GCD.containsKey(record.getValue("sys_update_name"));
		else {
			var updates = new GlideRecord("sys_update_xml");
			return updates.get("name", record.getValue("sys_update_name"));
		}
	},
	getGlideRecord: function (tableName, sysId) {
		var record = new GlideRecord(tableName);
		record.get(sysId);
		return record;
	},
	getMultipleGlideRecords: function (tableName, sysIds) {
		var records = new GlideRecord(tableName);
		records.addQuery("sys_id", "IN", sysIds);
		records.query();
		return records;
	},
	revertCardtoItemView: function (masterGr, itemViewSysId) {
		masterGr.setValue("use_view_config", 0);
		masterGr.setValue("item_view", itemViewSysId);
		masterGr.setWorkflow(false);
		masterGr.update();
		gs.info("MobileCardViewMigrationTools: revertUntouchedItems: Reverted {0} Record {1} ", masterGr.getTableName(), masterGr.getUniqueValue());
	},
	
	revertButton: function(btnInstanceGr, oldBtnSysId){
		btnInstanceGr.setValue("button",oldBtnSysId);
		btnInstanceGr.setWorkflow(false);
		btnInstanceGr.update();
		gs.info("MobileCardViewMigrationTools: revertButton: Reverted SYS_SG_BUTTON_INSTANCE Record {0} ", btnInstanceGr.getUniqueValue());
	},

	cleanUpgradeLegacyCards: function (itemViewMap) {
		for (var itemView in itemViewMap) {
			var itemViewGr = this.getGlideRecord(this.TABLE.SYS_SG_ITEM_VIEW, itemView);
			if (!itemViewGr || !itemViewGr.isValidRecord()) {
				gs.warn("MobileCardViewMigrationTools: cleanUpgrade: Skipping revert as sys_sg_item_view Record {0} not found", itemView);
			} else if (gs.nil(itemViewMap[itemView][this.TABLE.SYS_SG_MASTER_ITEM]) &amp;&amp; gs.nil(itemViewMap[itemView][this.TABLE.SYS_SG_FORM_SCREEN])) {
				gs.warn("MobileCardViewMigrationTools: cleanUpgrade: Skipping revert as no master or form screen mapped for sys_sg_item_view Record {0}", itemView);
			} else if (this.isItemViewFlowCustom(itemViewGr)) {
				this.revertUntouchedItems(itemViewGr, itemViewMap[itemView], this.TABLE.SYS_SG_MASTER_ITEM);
				this.revertUntouchedItems(itemViewGr, itemViewMap[itemView], this.TABLE.SYS_SG_FORM_SCREEN);
			} else {
				gs.info("MobileCardViewMigrationTools: cleanUpgrade: Skipping revert as sys_sg_item_view Record {0} not customized", itemView);
			}
		}
	},
	isItemViewFlowCustom: function (itemViewGr) {
		return this.isRecordCustomized(itemViewGr) || this.isUIStyleCustomized(itemViewGr);
	},
	isUIStyleCustomized: function (itemViewGr) {
		var uiStyles = itemViewGr.getValue("ui_styles");
		var uiStylesGr = this.getMultipleGlideRecords(this.TABLE.SYS_SG_UI_STYLE, uiStyles);
		while (uiStylesGr.next()) {
			if (this.isRecordCustomized(uiStylesGr))
				return true;
		}
		return false;
	},
	revertUntouchedItems: function (itemViewGr, itemViewMap, tableName) {
		if (gs.nil(itemViewMap[tableName]))
			return;
		var masterGr = this.getMultipleGlideRecords(tableName, itemViewMap[tableName]);
		masterGr.query();
		if (masterGr.hasNext()) {
			while (masterGr.next()) {
				if (!this.isRecordCustomized(masterGr) &amp;&amp; masterGr.getValue("use_view_config") &amp;&amp; gs.nil(masterGr.getValue("item_view")))
					this.revertCardtoItemView(masterGr, itemViewGr.getUniqueValue());
			}
		} else {
			gs.warn("MobileCardViewMigrationTools: revertUntouchedItems: No valid {0} record found for revert, hence no action taken ", tableName);
		}
	},

	type: 'MobileUtahUpgradeCommonUtils'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2022-09-29 14:04:07&lt;/sys_created_on&gt;
        &lt;sys_id&gt;6ff662e0f75e1110dc25d3e543bfd6a1&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;MobileUtahUpgradeCommonUtils&lt;/sys_name&gt;
        &lt;sys_package display_value="Knowledge Management Core" source="com.glideapp.knowledge"&gt;a8c6f4a43cb1311068bcf327dfe37f3e&lt;/sys_package&gt;
        &lt;sys_policy&gt;read&lt;/sys_policy&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_6ff662e0f75e1110dc25d3e543bfd6a1&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2022-10-07 08:43:51&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:38:32</sys_created_on>
        <sys_id>2ef6345d83f01210c6695855eeaad363</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>MobileUtahUpgradeCommonUtils</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_2ef6345d83f01210c6695855eeaad363</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:38:32</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
