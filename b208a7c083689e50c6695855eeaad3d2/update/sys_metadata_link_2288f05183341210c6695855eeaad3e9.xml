<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>8ea474b4773421109c62f5f3cb5a9925</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;sn_entitlement.UAInstanceStateDAO&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;DAO class to fetch data from ua_instance_state table&lt;/description&gt;
        &lt;name&gt;UAInstanceStateDAO&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var UAInstanceStateDAO = Class.create();
UAInstanceStateDAO.prototype = {
   initialize: function () {},

   isCommunicationAlive: function () {
      var instGR = new GlideRecord(LicensingEngineDBConstants.UA_INSTANCE_STATE);
      if (instGR.isValid()) {
         instGR.query();
         if (instGR.isValidField(LicensingEngineDBConstants.CENTRAL_COMM) &amp;&amp; instGR.next()) {
            var centralCommAlive = instGR.getValue(LicensingEngineDBConstants.CENTRAL_COMM);
            return centralCommAlive === LicensingEngineConstants.TRUE_ONE || centralCommAlive === LicensingEngineConstants.TRUE;
         }
      }
      return false;
   },

   isInstanceStateOpen: function () {
      var instGR = new GlideRecord(LicensingEngineDBConstants.UA_INSTANCE_STATE);
      if (instGR.isValid()) {
         instGR.query();
         if (instGR.isValidField(LicensingEngineDBConstants.STATE) &amp;&amp; instGR.next())
            return instGR.getValue(LicensingEngineDBConstants.STATE) === LicensingEngineDBConstants.OPEN;
      }
      return false;
   },

   isProductionInstance: function() {
        var instGR = new GlideRecord(LicensingEngineDBConstants.UA_INSTANCE_STATE);
        instGR.query();
        if (instGR.isValidField(LicensingEngineDBConstants.INSTANCE_USED_FOR) &amp;&amp; instGR.next())
            return instGR.getValue(LicensingEngineDBConstants.INSTANCE_USED_FOR) === LicensingEngineConstants.PRODUCTION;
        return false;
   },

   type: 'UAInstanceStateDAO'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2023-02-01 06:38:15&lt;/sys_created_on&gt;
        &lt;sys_id&gt;8ea474b4773421109c62f5f3cb5a9925&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;UAInstanceStateDAO&lt;/sys_name&gt;
        &lt;sys_package display_value="Licensing Engine" source="sn_entitlement"&gt;bcadabf277f311109c62f5f3cb5a992a&lt;/sys_package&gt;
        &lt;sys_policy&gt;read&lt;/sys_policy&gt;
        &lt;sys_scope display_value="Licensing Engine"&gt;bcadabf277f311109c62f5f3cb5a992a&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_8ea474b4773421109c62f5f3cb5a9925&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;maint&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2023-02-01 06:38:15&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:45:21</sys_created_on>
        <sys_id>2288f05183341210c6695855eeaad3e9</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>UAInstanceStateDAO</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_2288f05183341210c6695855eeaad3e9</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:45:21</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
