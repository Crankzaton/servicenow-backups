<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>1dc0a95e53ad2110b7edddeeff7b123e</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.IncidentNotificationUtilSNC&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;Update incident notifications during the plugin upgrade.&lt;/description&gt;
        &lt;name&gt;IncidentNotificationUtilSNC&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var IncidentNotificationUtilSNC = Class.create();
IncidentNotificationUtilSNC.prototype = {
    initialize: function() {
        this.notificationMappingSysIds = {
            '498162a20a0a0b4b00725fb9e5b6aeb3': '4d505448e5aeb410f8777565f90b2f13',
            '8f9389b5c0a8016401715c208ff9bf48': '58e3c1d45322301001b2ddeeff7b1266',
            '8f9cea1dc0a801640185982cb7b19252': 'fc78e05653a6301001b2ddeeff7b128d',
            '24e34b54c61122aa0108c1b7a33697cf': '5b82abc767a630105f74e8a331b73092',
            'be1a8cb6c0a8016600d5d5f018487cd4': 'b2b3e70b67a630105f74e8a331b73044'
        };
        this.gcd = GlideCollisionDetector.get();
    },

    updateIncidentNotifications: function() {
        if (gs.nil(this.gcd)) {
            gs.info("Error in initiating GlideCollisionDetector.");
            return;
        }
        var newNotificationSysIds = [];
        var customerNotUpdatedNotificationSysIds = this.__getCustomerNotUpdatedNotifications();
        var notificationGr = new GlideRecord('sysevent_email_action');
        notificationGr.addEncodedQuery('active=true^sys_idIN' + Object.keys(this.notificationMappingSysIds));
        notificationGr.query();
        while (notificationGr.next()) {
            var notificationSysId = this.notificationMappingSysIds[notificationGr.sys_id];
            if (customerNotUpdatedNotificationSysIds.indexOf(notificationSysId) != -1)
                newNotificationSysIds.push(notificationSysId);
        }
        this.__inactivateNotifications(newNotificationSysIds);

    },

    __getRecord: function(sysId) {
        var gr = new GlideRecord("sysevent_email_action");
        if (gr.get(sysId)) {
            return gr;
        }
        gs.info("Record not found: " + sysId + '|' + tableName);
        return false;
    },

    __getCustomerNotUpdatedNotifications: function() {
        var notUpdatedNotifications = [];
        var self = this;
        Object.keys(this.notificationMappingSysIds).forEach(function(oldNotificationSysId) {
            var newNotificationSysId = self.notificationMappingSysIds[oldNotificationSysId];
            if (!(self.__isNotificationUpdated(newNotificationSysId)))
                notUpdatedNotifications.push(newNotificationSysId);
        });
        return notUpdatedNotifications;
    },

    //checks whether the notification is customized by customer or not
    __isNotificationUpdated: function(notificationSysId) {
        var notificationGr = this.__getRecord(notificationSysId);
        if (notificationGr) {
            var updateName = notificationGr.sys_update_name + "";
            if (this.gcd.containsKey(updateName)) {
                gs.info("!Detected customization in " + updateName);
                return true;
            }
            return false;
        }
    },

    __inactivateNotifications: function(notificationSysIds) {
        var gr = new GlideRecord('sysevent_email_action');
        gr.setWorkflow(false);
        gr.addEncodedQuery('active=true^sys_idIN' + notificationSysIds);
        gr.query();
        gr.setValue('active', false);
        gr.updateMultiple();
    },
    type: 'IncidentNotificationUtilSNC'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2023-03-15 09:03:09&lt;/sys_created_on&gt;
        &lt;sys_id&gt;1dc0a95e53ad2110b7edddeeff7b123e&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;6&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;IncidentNotificationUtilSNC&lt;/sys_name&gt;
        &lt;sys_package display_value="Incident Management Notification" source="com.snc.incident_notification"&gt;1196b0643cb1311068bcf327dfe37f09&lt;/sys_package&gt;
        &lt;sys_policy&gt;read&lt;/sys_policy&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_1dc0a95e53ad2110b7edddeeff7b123e&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2023-04-24 05:17:46&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:11:34</sys_created_on>
        <sys_id>afc0b41983b01210c6695855eeaad3df</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>IncidentNotificationUtilSNC</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_afc0b41983b01210c6695855eeaad3df</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:11:34</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
