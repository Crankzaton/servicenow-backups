<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition>current.operation() == 'insert' || current.info_fields.changes()</condition>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Allow only whitelist fields for Header</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
 
 var notAllowedFields = "number,short_description,sys_created_on,sys_updated_on, sys_mod_count,state,watch_list,comments,comments_and_work_notes,work_notes,work_notes_list,user_input";
 notAllowedFields = notAllowedFields.replace(/\s/g,'');
 notAllowedFields = notAllowedFields.split(',');
 var infoFields = current.info_fields + '';
 infoFields = infoFields.split(',');
 var notAllowedConfigFields = [];
 for(var i=0; i < infoFields.length; i++) {
  var notAllowedField = infoFields[i];
  if (notAllowedFields.indexOf(notAllowedField) >= 0)
   notAllowedConfigFields.push(notAllowedField);
 }
 if (notAllowedConfigFields.length > 0) {
        current.setAbortAction(true);
        var resFields = [];
        var gr = new GlideRecord(current.table);
        for (var j = 0; j < notAllowedConfigFields.length; j++)
            resFields.push(gr.getElement(notAllowedConfigFields[j]).getED().getLabel());
        gs.addErrorMessage(gs.getMessage("The following fields '{0}' are not allowed in info region", resFields.join(', ')));
    }
})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:51:47</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>bd4c601983701210c6695855eeaad31f</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Allow only whitelist fields for Header</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_bd4c601983701210c6695855eeaad31f</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:51:47</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=bd4c601983701210c6695855eeaad31f"/>
</record_update>
