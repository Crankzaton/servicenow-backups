<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>71e1fdc543642110a878634a1bb8f2f4</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;public&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;sn_fsm_map_integr.FSMMapProviderConstants&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;Includes constants used in the Map Integrtaions for FSM plugin&lt;/description&gt;
        &lt;name&gt;FSMMapProviderConstants&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var FSMMapProviderConstants = Class.create();

FSMMapProviderConstants.MAP_VENDOR = {
    BEANS_AI: 'beans',
	GOOGLE : 'google',
	STRAIGHT_LINE : 'Use straight line estimate'
};
FSMMapProviderConstants.GOOGLE ={
	GOOGLE_API: 'Use Google Maps API',
	GOOGLE_REAL_TIME: 'Use Google API real time traffic',
},

FSMMapProviderConstants.BEANS_DISP = 'Use Beans';

FSMMapProviderConstants.GRAPHQL_STATUS = {
    SUCCESS: 'Success',
    FAILURE: 'Failure',
};

FSMMapProviderConstants.TABLE = {
    STRAIGHT_LINE: 'sn_fsm_straight_line_config',
    DECISION_TABLE: '16cb6763b74d211052fcaa7e1e11a9ba',
    USAGE_COUNT: 'sn_fsm_map_integr_usage',
};

FSMMapProviderConstants.LOG_PREFIX = gs.getMessage(
    'FSM Map Provider Integrations',
);

FSMMapProviderConstants.ERROR_TYPE = {
    DECISION_TABLE: gs.getMessage('DecisionTableRecordError'),
    MAP_PROVIDER_NOT_SUPPORTED: gs.getMessage('NotSupportedVendorError'),
    VALIDATE_COUNT_LIMIT: gs.getMessage('ValidateCountLimitError'),
    REQUEST_PAYLOAD_INCORRECT: gs.getMessage('RequestPayloadIncorrectError'),
};

FSMMapProviderConstants.ERROR_MESSAGE = {
    LIMIT_REACHED: gs.getMessage(
        'Request count and Location element count have reached limit',
    ),
    REQUEST_COUNT_LIMIT_REACHED: gs.getMessage(
        'Request count has reached limit',
    ),
    LOCATION_ELEMENTS_COUNT_LIMIT_REACHED: gs.getMessage(
        'Location element count has reached limit',
    ),
    INCORRECT_REQUEST_PAYLOAD: gs.getMessage(
        'Request Payload sent in the query is incorrect.',
    ),
    MAP_PROVIDER_NOT_SUPPORTED: gs.getMessage(
        'Map provider is not yet supported in this version',
    ),
    DECISION_TABLE_CONFIG: gs.getMessage(
        'Required field(s) is missing in the FSM Map Provider Policy',
    ),
};

FSMMapProviderConstants.ENABLE_MAP_PROVIDER_LOGGING =
    gs.getProperty('sn_fsm_map_integr.enable_map_provider_logging') === 'true';

FSMMapProviderConstants.LOG_TEMPLATE = gs.getMessage(
    'Map Provider : {mapProvider} , Action  :  {action}  , Error Message : {errorMessage} , Origins - {origins} , Destinations - {destinations}.',
);

FSMMapProviderConstants.LOG_SUFFIX_TEMPLATE = gs.getMessage(
    'Current Counter :  API Count - {request_count} , Location Elements Count - {location_elements_count}.',
);

FSMMapProviderConstants.USAGE_COUNTER_PREFIX_TEMPLATE = gs.getMessage(
    'Counter Reset : FSM Map Provider Integrations , ',
);

FSMMapProviderConstants.USAGE_COUNTER_SUFFIX_TEMPLATE = gs.getMessage(
    'Reset by  {userInfo}  at {dateInfo}.',
);

FSMMapProviderConstants.USAGE_COUNTER_TEMPLATE = gs.getMessage(
    'Map Provider : {mapProvider} , Counter Values before reset  :  API Count -  {request_count} ,  Location Elements - {location_elements_count}.',
);

FSMMapProviderConstants.SUCCESS_LOG_PREFIX = gs.getMessage(
    'Success :  FSM Map Provider Integrations ,',
);

FSMMapProviderConstants.ERROR_LOG_PREFIX = gs.getMessage(
    'Error :  FSM Map Provider Integrations ,',
);
FSMMapProviderConstants.MATRIX_FIELD={
	DURATION:  'travelTimes',
	DISTANCE:  'travelDistances',
	DURATION_DISTANCE:  'travelTimeDistances',
};

FSMMapProviderConstants.prototype = {
    initialize: function () {},

    type: 'FSMMapProviderConstants',
};
]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2023-01-20 19:29:08&lt;/sys_created_on&gt;
        &lt;sys_id&gt;71e1fdc543642110a878634a1bb8f2f4&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;67&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;FSMMapProviderConstants&lt;/sys_name&gt;
        &lt;sys_package display_value="Map Integrations for Field Service" source="sn_fsm_map_integr"&gt;32467aba87d8a910f53c7515dabb3598&lt;/sys_package&gt;
        &lt;sys_policy&gt;read&lt;/sys_policy&gt;
        &lt;sys_scope display_value="Map Integrations for Field Service"&gt;32467aba87d8a910f53c7515dabb3598&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_71e1fdc543642110a878634a1bb8f2f4&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2023-09-08 22:39:28&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:38:37</sys_created_on>
        <sys_id>b7f6f45d83f01210c6695855eeaad3ae</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>FSMMapProviderConstants</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_b7f6f45d83f01210c6695855eeaad3ae</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:38:37</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
