<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>0ac2f515eb683110bd5afd0052522802</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;sn_mobile_card_bui.McbOpenModalUtil&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;Lists all the function calls related to open modal&lt;/description&gt;
        &lt;name&gt;McbOpenModalUtil&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var McbOpenModalUtil = Class.create();
McbOpenModalUtil.prototype = {
    initialize: function() {},

    type: 'McbOpenModalUtil',

    _compareName: function(a, b) {
        var aLower = a.name.toLowerCase();
        var bLower = b.name.toLowerCase();
        if (aLower &lt; bLower) {
            return -1;
        }
        if (aLower &gt; bLower) {
            return 1;
        }
        return 0;
    },

    _removeDuplicatesBySysId: function(arrayWithDuplicates) {
        var returnedSysIds = [];

        return arrayWithDuplicates.filter(function(item) {
            return returnedSysIds.indexOf(item.sysId) &gt;= 0 ?
                false :
                returnedSysIds.push(item.sysId);
        });
    },

    _getTableRecordCount: function(tableName) {
        // GlideAggregate.addAggregate("COUNT") &amp; GlideRecordSecure.getRowCount()
        // don't check for ACL canRead() on the row level, only the table level.
        var grs = new GlideRecordSecure(tableName);
        grs.query();
        var counter = 0;
        while (grs.next()) {
            counter++;
        }
        return counter;
    },

    _getApplications: function(tableName) {
        var distinctApplications = [];
        var glideAggregate = new GlideAggregate(tableName);
        glideAggregate.groupBy("sys_scope");
        glideAggregate.addAggregate("count");
        glideAggregate.query();
        while (glideAggregate.next()) {
            var sysId = String(glideAggregate["sys_scope"]);
            var glideRecord = new GlideRecordSecure("sys_scope");
            if (glideRecord.get(sysId) &amp;&amp; glideRecord.canRead()) {
                var name = glideRecord.getDisplayValue();
                distinctApplications.push({
                    sysId: sysId,
                    name: name
                });
            }
        }
        return distinctApplications.sort(this._compareName);
    },

    _getApplets: function() {
        var distinctApplets = [];

        // All list screens are an applet
        var listScreenGr = new GlideRecordSecure("sys_sg_list_screen");
        listScreenGr.query();
        while (listScreenGr.next() &amp;&amp; listScreenGr.canRead()) {
            distinctApplets.push({
                sysId: listScreenGr.getUniqueValue(),
                name: listScreenGr.getDisplayValue(),
                table: "sys_sg_list_screen",
                application: listScreenGr.getValue("sys_scope"),
            });
        }

        // All map screens are an applet
        var mapScreenGr = new GlideRecordSecure("sys_sg_map_screen");
        mapScreenGr.query();
        while (mapScreenGr.next() &amp;&amp; mapScreenGr.canRead()) {
            distinctApplets.push({
                sysId: mapScreenGr.getUniqueValue(),
                name: mapScreenGr.getDisplayValue(),
                table: "sys_sg_map_screen",
                application: mapScreenGr.getValue("sys_scope"),
            });
        }

        // All stand alone forms are an applet
        // a form is "stand alone" if there are no master items that
        // have a reference to the form via sys_sg_master_item.embedded_screen
        var masterItemGr = new GlideRecordSecure("sys_sg_master_item");
        masterItemGr.addNotNullQuery("embedded_screen");
        masterItemGr.query();
        var formSysIdsToExclude = [];
        while (masterItemGr.next()) {
            formSysIdsToExclude.push(masterItemGr.getValue("embedded_screen"));
        }

        var formScreenGr = new GlideRecordSecure("sys_sg_form_screen");
        formScreenGr.query();
        while (formScreenGr.next() &amp;&amp; formScreenGr.canRead()) {
            var formSysId = formScreenGr.getUniqueValue();
            if (formSysIdsToExclude.indexOf(formSysId) === -1)
                distinctApplets.push({
                    sysId: formScreenGr.getUniqueValue(),
                    name: formScreenGr.getDisplayValue(),
                    table: "sys_sg_form_screen",
                    application: formScreenGr.getValue("sys_scope"),
                });
        }

        return this._removeDuplicatesBySysId(distinctApplets).sort(this._compareName);
    },
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2023-08-08 10:32:14&lt;/sys_created_on&gt;
        &lt;sys_id&gt;0ac2f515eb683110bd5afd0052522802&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;2&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;McbOpenModalUtil&lt;/sys_name&gt;
        &lt;sys_package display_value="Mobile Card Builder" source="sn_mobile_card_bui"&gt;012fa9ad7367ad6393ae5dea97af6f65&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Mobile Card Builder"&gt;012fa9ad7367ad6393ae5dea97af6f65&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_0ac2f515eb683110bd5afd0052522802&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2023-08-09 06:00:49&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:09:45</sys_created_on>
        <sys_id>8960f49583b01210c6695855eeaad3dc</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>McbOpenModalUtil</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_8960f49583b01210c6695855eeaad3dc</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:09:45</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
