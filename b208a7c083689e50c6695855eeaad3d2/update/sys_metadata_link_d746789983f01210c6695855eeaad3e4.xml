<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>31903c09c7f13010d7e818b1c7c2603d</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;sn_sow_itsm_common.SOWITSMCommonUtilsSNC&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;SOWITSMCommonUtilsSNC&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var SOWITSMCommonUtilsSNC = Class.create();
SOWITSMCommonUtilsSNC.prototype = {
    initialize: function() {},
    TABLES: {
        SYS_USER_GRMEMBER: 'sys_user_grmember'
    },

    getMemberGroups: function(userSysID, setlimit) {
        var memberGroups = [];
        var grMembers = new GlideRecord(this.TABLES.SYS_USER_GRMEMBER);
        grMembers.addQuery('group.active', 'true');
        grMembers.addQuery('user', userSysID);
        if (setlimit)
            grMembers.setLimit(setlimit);
        grMembers.query();
        while (grMembers.next()) {
            memberGroups.push(grMembers.group.sys_id);
        }
        return memberGroups;
    },

    canAssignToMe: function(current) {
        var currentTable = current.getTableName();
        var arrayUtil = new global.ArrayUtil();
        var allowedTables = ["problem", "incident", "change_request", "problem_task"];
        if (!arrayUtil.contains(allowedTables, currentTable))
            return false;
        if (!current.active &amp;&amp; !current.isNewRecord())
            return false;
        if (!this._checkRolesForAssignment(currentTable))
            return false;
        if (!current.assigned_to.canWrite())
            return false;
        if (current.assigned_to)
            return false;
        return current.assignment_group.nil() || gs.getUser().isMemberOf(current.assignment_group.toString());
    },

    canAssignToMeOnList: function(current) {
        var currentTable = current.getTableName();
        var arrayUtil = new global.ArrayUtil();
        var allowedTables = ["problem", "incident", "change_request"];
        if (!arrayUtil.contains(allowedTables, currentTable))
            return false;
        if (!this._checkRolesForAssignment(currentTable))
            return false;
        return true;
    },

    _checkRolesForAssignment: function(currentTable) {
        if (currentTable === "problem" &amp;&amp; !gs.hasRole('problem_coordinator'))
            return false;
        if (currentTable === "incident" &amp;&amp; !gs.hasRole('itil') &amp;&amp; !gs.hasRole('sn_incident_write'))
            return false;
        if (currentTable === "change_request" &amp;&amp; !gs.hasRole('itil') &amp;&amp; !gs.hasRole('sn_change_write'))
            return false;
        if (currentTable === "problem_task" &amp;&amp; !gs.hasRole('problem_task_analyst'))
            return false;
        return true;
    },

    type: 'SOWITSMCommonUtilsSNC'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2021-08-04 05:28:46&lt;/sys_created_on&gt;
        &lt;sys_id&gt;31903c09c7f13010d7e818b1c7c2603d&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;5&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;SOWITSMCommonUtilsSNC&lt;/sys_name&gt;
        &lt;sys_package display_value="Service Operations Workspace ITSM Common" source="sn_sow_itsm_common"&gt;0eef12637311301045216238edf6a75e&lt;/sys_package&gt;
        &lt;sys_policy&gt;read&lt;/sys_policy&gt;
        &lt;sys_scope display_value="Service Operations Workspace ITSM Common"&gt;0eef12637311301045216238edf6a75e&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_31903c09c7f13010d7e818b1c7c2603d&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2022-01-17 05:00:02&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:35:34</sys_created_on>
        <sys_id>d746789983f01210c6695855eeaad3e4</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>SOWITSMCommonUtilsSNC</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_d746789983f01210c6695855eeaad3e4</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:35:34</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
