<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>0cf858f1db532200a042f278f0b8f55d</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_fix"&gt;
    &lt;sys_script_fix action="INSERT_OR_UPDATE"&gt;
        &lt;before&gt;false&lt;/before&gt;
        &lt;description&gt;Initializes the 'Version' column for all the non-versioned articles in the kb_knowledge table. All the articles with the state as Published/Retired are initialized to version 1.0, and the rest are initialized to version 0.1&lt;/description&gt;
        &lt;name&gt;Initialize Versions on Articles&lt;/name&gt;
        &lt;record_for_rollback&gt;false&lt;/record_for_rollback&gt;
        &lt;script&gt;&lt;![CDATA[initializeVersions();
populateSummaryFromArticle('kb_feedback','article_summary','article');

// Uncomment following line to populate kb_use synchronously
// populateSummaryFromArticle('kb_use','article_summary','article');

// Let's start the async job to populate kb_use table with the summary field
startAsyncPopulateSummaryForUse();

function initializeVersions(){
	var helper = new SNC.KnowledgeHelper();
	var count = helper.initializeVersions();
	gs.log("Initialized versions for " + count + " articles");
}

function startAsyncPopulateSummaryForUse(){
	var rec = new GlideRecord('sysauto_script');
	rec.get('name', 'Populate Summary field on Knowledge Use');
	SncTriggerSynchronizer.executeNow(rec);
}

function populateSummaryFromArticle(table, summaryField, articleField) {

    var gr = new GlideAggregate(table);
    gr.addNullQuery(summaryField);
    gr.addNotNullQuery(articleField);
    gr.groupBy(articleField);
    gr.query();
    while (gr.next()) {
        var summary = gr.getElement(articleField).getRefRecord();
        if (summary.summary) {
            updateAllWithSummary(gr.getValue(articleField), summary.summary);
        }
    }

    function updateAllWithSummary(sysId, summaryId) {
        var gr = new GlideMultipleUpdate(table);
        gr.addQuery(articleField, sysId);
        gr.query();
        gr.setValue(summaryField, summaryId);
        gr.execute();
    }
}]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_fix&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2016-11-25 11:35:51&lt;/sys_created_on&gt;
        &lt;sys_id&gt;0cf858f1db532200a042f278f0b8f55d&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;13&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;Initialize Versions on Articles&lt;/sys_name&gt;
        &lt;sys_package display_value=""&gt;c59d5ef0dbef515086a072c7f49619e5&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_fix_0cf858f1db532200a042f278f0b8f55d&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2019-11-20 09:40:52&lt;/sys_updated_on&gt;
        &lt;unloadable&gt;false&lt;/unloadable&gt;
    &lt;/sys_script_fix&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:19:04</sys_created_on>
        <sys_id>ad827c1d83b01210c6695855eeaad3b5</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Initialize Versions on Articles</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_ad827c1d83b01210c6695855eeaad3b5</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:19:04</sys_updated_on>
        <tablename>sys_script_fix</tablename>
    </sys_metadata_link>
</record_update>
