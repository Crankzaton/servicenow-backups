<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>481de29b533170103913ddeeff7b12c6</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;public&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;sn_gf.GFStrategy&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;GFStrategy&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var GFStrategy = Class.create();
GFStrategy.prototype = {
    initialize: function(strategyId,strategyGR) {
    this.strategyId = strategyId;
    this.strategyGR = strategyGR;
    },
  
  getStrategyGR: function(strategyId){
    if(!this.strategyGR){
      if(strategyId)
        this.strategyId = strategyId;
      this.strategyGR = new GlideRecord(GoalFrameworkConstants.STRATEGY_TABLE);
      this.strategyGR.get(this.strategyId);
    }
    return this.strategyGR;
  },
  
  getGoals: function(encodedQuery){
    var goals = new GlideRecord(GoalFrameworkConstants.GOAL_TABLE);
    goals.addQuery("strategy",this.strategyId);
    if(encodedQuery)
      goals.addEncodedQuery(encodedQuery);
    goals.query();
    return goals;
  },
  
  getStrategicPlanGR: function(encodedQuery){
    var strategicPlanGR = new GlideRecord(GoalFrameworkConstants.STRATEGIC_PLAN);
    strategicPlanGR.addQuery("sys_id",this.getStrategyGR().getValue('strategic_plan'));
    if(encodedQuery)
      strategicPlanGR.addEncodedQuery(encodedQuery);
    strategicPlanGR.query();
    return strategicPlanGR;
  },
  
  validateDates: function() {
        var sPriorityStartDate = this.getStrategyGR().start_date;
        var sPriorityEndDate = this.getStrategyGR().end_date;
        if (sPriorityStartDate &amp;&amp; sPriorityEndDate &amp;&amp; sPriorityStartDate &gt; sPriorityEndDate)
            return gs.getMessage("Start date cannot be later than the end date.");

        if (GlidePluginManager.isActive('com.sn_align_core')) {
            var sPlanStartDate = this.getStrategyGR().strategic_plan.start_date;
            var sPlanEndDate = this.getStrategyGR().strategic_plan.end_date;
            if (sPriorityStartDate &amp;&amp; sPlanStartDate &amp;&amp; sPriorityStartDate &lt; sPlanStartDate)
                return gs.getMessage("Start date of the strategic priority cannot be earlier than the start date of its strategic plan. ({0}).", [GlideStringUtil.escapeHTML(sPlanStartDate)]);
            else if (sPriorityEndDate &amp;&amp; sPlanEndDate &amp;&amp; sPriorityEndDate &gt; sPlanEndDate)
                return gs.getMessage("End date of the strategic priority cannot be later than the end date of its strategic plan. ({0}).", [GlideStringUtil.escapeHTML(sPlanEndDate)]);
        }
        return "";
    },

    type: 'GFStrategy'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2021-08-11 14:26:52&lt;/sys_created_on&gt;
        &lt;sys_id&gt;481de29b533170103913ddeeff7b12c6&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;8&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;GFStrategy&lt;/sys_name&gt;
        &lt;sys_package display_value="Goal Framework" source="sn_gf"&gt;11879041532030103913ddeeff7b12d8&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Goal Framework"&gt;11879041532030103913ddeeff7b12d8&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_481de29b533170103913ddeeff7b12c6&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2023-07-20 10:59:45&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:36:35</sys_created_on>
        <sys_id>0e86f4d983f01210c6695855eeaad3e5</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>GFStrategy</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_0e86f4d983f01210c6695855eeaad3e5</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:36:35</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
