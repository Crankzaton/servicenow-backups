<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>NLU-Advance system properties validation</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {

    var value = parseFloat(current.value);
    var property = current.name.toString();
    var sysProps = NLUWorkbenchConstants.sysProps;
    var abortAction = false;

    var maxClusteringRecords = gs.getProperty('glide.platform_ml.api.max_clustering_records');
    var minClusteringRecords = gs.getProperty('glide.platform_ml.api.min_clustering_records');
    var conflictModerateThreshold = Number(gs.getProperty('sn_nlu_workbench.glide.nlu.conflict.moderate_threshold'));
    var conflictCriticalThreshold = Number(gs.getProperty('sn_nlu_workbench.glide.nlu.conflict.critical_threshold'));
    var optMinLabeledData = Number(gs.getProperty('sn_nlu_workbench.glide.nlu.optimize.min_labeled_data'));
    var lctMaxResponsePerRun = Number(gs.getProperty('glide.mlpredictor.option.nlu.activeLearning.label_candidate_table.max_response_size'));

    switch (property) {
        case sysProps.UTTERANCE_LIMIT:
            if (isNaN(value) || value < 0 || value > 10000) {
                abortAction = true;
                gs.addErrorMessage(gs.getMessage('Set a value less than 10,000 for maximum number of rows in a batch test import file.'));
            }
            break;

        case sysProps.MIN_CLUSTERING_RECORDS:
            if (isNaN(value) || value <= minClusteringRecords || value > maxClusteringRecords) {
                abortAction = true;
                gs.addErrorMessage(gs.getMessage('Set a value between {0} and {1} for minimum number of records for NLU performance analysis.', [minClusteringRecords, maxClusteringRecords]));
            } else if (value < 5000) {
                gs.addInfoMessage(gs.getMessage('The recommended minimum number of records for NLU performance analysis is 5000.'));
            }
            break;

        case sysProps.CONFLICT_THRESHOLD_CRITICAL:
            if (isNaN(value) || value < 0 || value > 1 || value < conflictModerateThreshold) {
                abortAction = true;
                gs.addErrorMessage(gs.getMessage('Set a decimal between 0 and 1 for Conflict Detection Critical Threshold, and keep it greater than the Moderate Threshold.'));
            }
            break;

        case sysProps.CONFLICT_THRESHOLD_MODERATE:
            if (isNaN(value) || value < 0 || value > 1 || value > conflictCriticalThreshold) {
                abortAction = true;
                gs.addErrorMessage(gs.getMessage('Set a decimal between 0 and 1 for Conflict Detection Moderate Threshold, and keep it less than the Critical Threshold.'));
            }
            break;
        case sysProps.OPT_MIN_LABELED_RECORDS:
            if (isNaN(value) || value < 0 || value > lctMaxResponsePerRun) {
                abortAction = true;
                gs.addErrorMessage(gs.getMessage('Set a value between 0 and {0} for minimum number of utterances that require feedback to execute optimize in expert feedback loop.', lctMaxResponsePerRun));
            }
            break;
        default:
            break;
    }

    if (abortAction)
        current.setAbortAction(abortAction);

})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:49:33</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>45cb681583701210c6695855eeaad3b6</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>NLU-Advance system properties validation</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_45cb681583701210c6695855eeaad3b6</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:49:33</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=45cb681583701210c6695855eeaad3b6"/>
</record_update>
