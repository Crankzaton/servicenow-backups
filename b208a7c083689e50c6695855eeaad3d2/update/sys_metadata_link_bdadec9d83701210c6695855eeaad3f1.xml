<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>210c95650a0a0b26533c32cc0cdfb045</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="sys_script"&gt;
    &lt;sys_script action="INSERT_OR_UPDATE"&gt;
        &lt;abort_action&gt;false&lt;/abort_action&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;action_delete&gt;false&lt;/action_delete&gt;
        &lt;action_insert&gt;false&lt;/action_insert&gt;
        &lt;action_query&gt;false&lt;/action_query&gt;
        &lt;action_update&gt;true&lt;/action_update&gt;
        &lt;active&gt;false&lt;/active&gt;
        &lt;add_message&gt;false&lt;/add_message&gt;
        &lt;advanced&gt;true&lt;/advanced&gt;
        &lt;change_fields&gt;false&lt;/change_fields&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;collection&gt;change_request&lt;/collection&gt;
        &lt;condition&gt;current.approval == 'requested'&lt;/condition&gt;
        &lt;description/&gt;
        &lt;execute_function&gt;false&lt;/execute_function&gt;
        &lt;filter_condition/&gt;
        &lt;is_rest&gt;false&lt;/is_rest&gt;
        &lt;message/&gt;
        &lt;name&gt;SNC Approval - Reset conditions&lt;/name&gt;
        &lt;order&gt;999&lt;/order&gt;
        &lt;priority/&gt;
        &lt;rest_method/&gt;
        &lt;rest_method_text/&gt;
        &lt;rest_service/&gt;
        &lt;rest_service_text/&gt;
        &lt;rest_variables/&gt;
        &lt;role_conditions/&gt;
        &lt;script&gt;&lt;![CDATA[// these are the conditions under which the change request approvals need to be cancelled and reset
// steps to activate
// 1. enable this business rule
// 2. add some comments so the reset will be noted in the approval history
// 3. uncomment the code for restart or reset based on your requirements
// 4. define the reset condition in checkResetConditions function below
// 5. you must set doReset once you capture the change(s) you are interested in


var comment = '';  //written to the approval_history
if (checkResetConditions()) {

   // create a global variable lock on the current record
   // this will prevent triggering a second reset while the first reset is still in progress
   // lock will be release in a late running business rule called 'Workflow Release Lock'
   chg_wf_lock = new GlideRecordLock(current);
   chg_wf_lock.setSpinWait(50);  //wait for lock
   if (chg_wf_lock.get()) {
      gs.print('SNC Approval conditions business rule is locking the ' + current.getDisplayValue() + ' during the workflow reset');

      // The following options are available for resetting the approvals:
      // 
      // 1. Mark all existing approvals for the change as 'cancelled' and restart the workflow to create new approvals
      //       new WorkflowApprovalUtils().cancelAll(current, comment);
      //       new Workflow().restartWorkflow(current);
      //
      // 2. Delete all of the existing approvals for the change and restart the workflow to create new approvals
      //       new WorkflowApprovalUtils().reset(current, comment);
      //       gs.addInfoMessage('Workflow has been reset since key fields have been modified');
      //
      // 3. Leave the approvals for the change in their current state and restart the workflow.
      //    (so that any new approvals that are required will be created)
      //       if (comment)
      //          current.setDisplayValue('approval_history', comment);
      //       new Workflow().restartWorkflow(current, true);
      //

   }
}

function checkResetConditions() {

   var doReset = false;  //default to no reset
   //add reset conditions here such as:
   //if (current.assigned_to.changes())
      //doReset = true;  //enable the reset
   //
   return doReset;
}]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;glide.maint&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2008-10-21 20:16:51&lt;/sys_created_on&gt;
        &lt;sys_domain&gt;global&lt;/sys_domain&gt;
        &lt;sys_domain_path/&gt;
        &lt;sys_id&gt;210c95650a0a0b26533c32cc0cdfb045&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;42&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;SNC Approval - Reset conditions&lt;/sys_name&gt;
        &lt;sys_overrides/&gt;
        &lt;sys_package display_value="Workflow Runtime Engine" source="com.glideapp.workflow"&gt;b6467ca03cb1311068bcf327dfe37f4a&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_210c95650a0a0b26533c32cc0cdfb045&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;glide.maint&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2009-08-12 21:19:09&lt;/sys_updated_on&gt;
        &lt;template/&gt;
        &lt;when&gt;before&lt;/when&gt;
    &lt;/sys_script&gt;
    &lt;sys_translated_text action="delete_multiple" query="documentkey=210c95650a0a0b26533c32cc0cdfb045"/&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:57:47</sys_created_on>
        <sys_id>bdadec9d83701210c6695855eeaad3f1</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>SNC Approval - Reset conditions</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_bdadec9d83701210c6695855eeaad3f1</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:57:47</sys_updated_on>
        <tablename>sys_script</tablename>
    </sys_metadata_link>
</record_update>
