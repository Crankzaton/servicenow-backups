<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>1ddd8e50c6112275015cb235aa3b803a</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="sys_script"&gt;
    &lt;sys_script action="INSERT_OR_UPDATE"&gt;
        &lt;abort_action&gt;false&lt;/abort_action&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;action_delete&gt;false&lt;/action_delete&gt;
        &lt;action_insert&gt;false&lt;/action_insert&gt;
        &lt;action_query&gt;false&lt;/action_query&gt;
        &lt;action_update&gt;false&lt;/action_update&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;add_message&gt;false&lt;/add_message&gt;
        &lt;advanced&gt;true&lt;/advanced&gt;
        &lt;change_fields&gt;false&lt;/change_fields&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;collection&gt;global&lt;/collection&gt;
        &lt;condition/&gt;
        &lt;description/&gt;
        &lt;execute_function&gt;false&lt;/execute_function&gt;
        &lt;filter_condition/&gt;
        &lt;is_rest&gt;false&lt;/is_rest&gt;
        &lt;message/&gt;
        &lt;name&gt;SNC - ITIL - Close Related&lt;/name&gt;
        &lt;order&gt;100&lt;/order&gt;
        &lt;priority/&gt;
        &lt;rest_method/&gt;
        &lt;rest_method_text/&gt;
        &lt;rest_service/&gt;
        &lt;rest_service_text/&gt;
        &lt;rest_variables/&gt;
        &lt;role_conditions/&gt;
        &lt;script&gt;&lt;![CDATA[//
// Close any tasks that are related to the current task
//
function closeRelatedTasks(me) {
	var task = new GlideRecord("task");
	task.addQuery("parent", me.sys_id);
	task.addQuery("sys_class_name", "!=", "kb_submission");
	task.addQuery("sys_class_name", "!=", "incident");
	task.query();
	while (task.next()) {
		if (task.sys_class_name == 'problem')
			closeProblem(task.sys_id, me.number);
		else if (task.sys_class_name == 'change_request')
			closeChange(task.sys_id, me.number);
		else {
			task.active.setValue(false);
			task.update();
			gs.print("Task " + task.number + ' closed based on closure of task ' + me.number);
		}
	}
	
	this.closeIncident(me);
}

function closeIncident(me) {
	var incident = new GlideRecord('incident');
	if (incident.isValidField('parent_incident'))
		incident.addQuery('parent_incident', me.sys_id);
	else if(incident.isValidField('parent'))
			incident.addQuery('parent', me.sys_id);
		else
			return;
	incident.addActiveQuery();
	incident.query();
	while (incident.next()) {
		var msg = gs.getMessage("Incident '{0}' closed based on closure of task '{1}'", [incident.number, me.number]);
		gs.print(msg);
		incident.incident_state.setValue(IncidentState.CLOSED);
		incident.active.setValue(false);
		incident.comments = msg;
		if (incident.isValidField("close_notes")) {
			var notes = incident.close_notes.getDisplayValue();
			notes = notes + '\n' + msg + '\n\n' + me.close_notes;
			incident.close_notes.setValue(notes);
		}
		if(incident.isValidField("close_code"))
			incident.close_code.setValue(me.close_code);
		incident.update();
	}
}

function closeProblem(myID, fromNumber) {
	if (pm.isActive('com.snc.best_practice.problem.madrid.state_model'))
		return;
	var problem = new GlideRecord('problem');
	if (problem.get('sys_id', myID)) {
		var msg = gs.getMessage("Problem '{0}' closed based on closure of task '{1}'", [problem.number, fromNumber]);
		problem.problem_state.setValue(4);
		var notes = problem.close_notes.getDisplayValue();
		notes = notes + '\n' + msg;
		problem.close_notes.setValue(notes);
		problem.update();
		gs.print(msg);
	}
}

function closeChange(myID, fromNumber) {
	var rfc = new GlideRecord('change_request');
	if (rfc.get('sys_id', myID)) {
		var chgReq = ChangeRequest(rfc);
		
		if (!chgReq.isClosed() &amp;&amp; !chgReq.isCancelled()) {
			chgReq.close();
			var msg = gs.getMessage("Change '{0}' closed based on closure of task '{1}'", [rfc.number, fromNumber]);
			var notes = rfc.close_notes.getDisplayValue();
			notes = notes + '\n' + msg;
			rfc.close_notes = notes;
			rfc.update();
		}
	}
}]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;glide.maint&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2006-01-31 00:29:52&lt;/sys_created_on&gt;
        &lt;sys_domain&gt;global&lt;/sys_domain&gt;
        &lt;sys_domain_path/&gt;
        &lt;sys_id&gt;1ddd8e50c6112275015cb235aa3b803a&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;31&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;SNC - ITIL - Close Related&lt;/sys_name&gt;
        &lt;sys_overrides/&gt;
        &lt;sys_package display_value="Service Management Basics" source="com.snc.service"&gt;fd36fc603cb1311068bcf327dfe37f8b&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_1ddd8e50c6112275015cb235aa3b803a&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2019-12-09 11:23:21&lt;/sys_updated_on&gt;
        &lt;template/&gt;
        &lt;when&gt;after&lt;/when&gt;
    &lt;/sys_script&gt;
    &lt;sys_translated_text action="delete_multiple" query="documentkey=1ddd8e50c6112275015cb235aa3b803a"/&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:57:32</sys_created_on>
        <sys_id>4e9da89d83701210c6695855eeaad3fa</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>SNC - ITIL - Close Related</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_4e9da89d83701210c6695855eeaad3fa</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:57:32</sys_updated_on>
        <tablename>sys_script</tablename>
    </sys_metadata_link>
</record_update>
