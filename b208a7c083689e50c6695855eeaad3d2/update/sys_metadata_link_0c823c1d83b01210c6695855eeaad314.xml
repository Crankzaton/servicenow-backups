<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>08c6bcd40f013300c11583fa68767e7c</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_fix"&gt;
    &lt;sys_script_fix action="INSERT_OR_UPDATE"&gt;
        &lt;before&gt;false&lt;/before&gt;
        &lt;description&gt;Upgrade to Local Password Reset Flows&lt;/description&gt;
        &lt;name&gt;Upgrade to Local Password Reset Flows&lt;/name&gt;
        &lt;record_for_rollback&gt;false&lt;/record_for_rollback&gt;
        &lt;script&gt;&lt;![CDATA[(function() {
	var local_cred_store_type = 'e611433fbf020100710071a7bf073921';
	//Don't the order of workflow names and ids.
    var workflow_names = ["passd_reset_wf", "pwd_change_wf", "unlock_user_wf", "conn_test_wf", "get_lock_state_wf"];
    var workflows = ["b4887ebbbf020100710071a7bf07398c", "a5974473eb2311006a668c505206fe84", "1bcbfe1bbf111100c7e39058ff07390f", "e32c1131eb5201002db7648d9106feae", "6ac8de43bf111100c7e39058ff0739b3"];
	
    function wasWfModified(storetypeGr, wf_name, wfid) {
        var currentWfid = storetypeGr.getValue(wf_name);
        if (currentWfid != wfid)
            return true;

        var wf = new GlideRecord('wf_workflow');
        if (!wf.get(wfid))
            return true;
        var wf_update = new GlideRecord('sys_update_xml');
        wf_update.addQuery('name', 'wf_workflow_' + wfid);
        wf_update.query();
        if (wf_update.hasNext())
            return true;

        return false;
    }

    var storetypeGr = new GlideRecord('pwd_cred_store_type');
    storetypeGr.get(local_cred_store_type);
    var switchToFlows = true;

    for (var i in workflows)
        switchToFlows = switchToFlows &amp;&amp; (!wasWfModified(storetypeGr, workflow_names[i], workflows[i]));

    if (!switchToFlows) {
        storetypeGr.setValue('use_flow', false);
        storetypeGr.update();
    }

})();]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_fix&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2019-04-22 06:35:50&lt;/sys_created_on&gt;
        &lt;sys_id&gt;08c6bcd40f013300c11583fa68767e7c&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;41&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;Upgrade to Local Password Reset Flows&lt;/sys_name&gt;
        &lt;sys_package display_value="Password Reset" source="com.glideapp.password_reset"&gt;1399f4e43cf1311068bcf327dfe37fe4&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_fix_08c6bcd40f013300c11583fa68767e7c&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2019-06-19 20:03:10&lt;/sys_updated_on&gt;
        &lt;unloadable&gt;false&lt;/unloadable&gt;
    &lt;/sys_script_fix&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:18:58</sys_created_on>
        <sys_id>0c823c1d83b01210c6695855eeaad314</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Upgrade to Local Password Reset Flows</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_0c823c1d83b01210c6695855eeaad314</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:18:58</sys_updated_on>
        <tablename>sys_script_fix</tablename>
    </sys_metadata_link>
</record_update>
