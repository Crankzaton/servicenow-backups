<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Validations for Class-Recall key</name>
        <order>200</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {

    // Validate only if the selected parameter key is Class-Recall
    if (current.solution_parameters.getRefRecord().getValue('key') !== 'Class-Recall') {
        return;
    }

    try {
        performValidations(current);
    } catch (error) {
        gs.addErrorMessage(error);
        current.setAbortAction(true);
    }

    function performValidations(current) {

        // 1. Check if class Recall is already defined for this solution. This check is applicable only for record insertion.
        if (current.operation() === 'insert') {
            var gr = new GlideRecord('ml_advanced_solution_settings');
            gr.addQuery('ml_capability_definition', current.ml_capability_definition);
            gr.addQuery('solution_parameters.key', 'Class-Recall');
            gr.query();
            if (gr.next())
                throw (gs.getMessage("Class-Recall key has already been defined for this solution"));
        }



        /* 
         * 2.Validate the class-recall format.
         *    The format should be ClassName:RecallValue
         *    ClassName can contain any characters except ':'
         *    RecallValue should be an integer between 0 and 100.
         */
  
        var userInputs = current.getValue('user_inputs');
        var regexFormatForRecallUserInput = /^[^:]+:((100)|(0*\d{1,2}))$/;
        if (!regexFormatForRecallUserInput.test(userInputs))
            throw (gs.getMessage("User Inputs format should be ClassName:RecallValue. RecallValue should be an integer betweem 0 and 100. Multiple ClassName:RecallValue are not allowed. "));

    }

})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:52:06</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>aa5c681983701210c6695855eeaad3d9</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Validations for Class-Recall key</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_aa5c681983701210c6695855eeaad3d9</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:52:06</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=aa5c681983701210c6695855eeaad3d9"/>
</record_update>
