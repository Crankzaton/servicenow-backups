<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>72c332f953602110dff1ddeeff7b1245</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;public&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.UninstallVAFBMessengerCustomBot&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;Script class to facilitate uninstallation of Facebook Messenger custom bot.&lt;/description&gt;
        &lt;name&gt;UninstallVAFBMessengerCustomBot&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var UninstallVAFBMessengerCustomBot = Class.create();


var PROVIDER_APPLICATION_TABLE = 'sys_cs_provider_application';
var HASH_MESSAGE_VERIFICATION_TABLE = 'hash_message_verification';
var TOKEN_VERIFICATION_TABLE = 'token_verification';
var MESSAGE_AUTH_TABLE = 'message_auth';

var FB_MESSENGER_PROVIDER_ID = '4dd0298d0f9310105375001ea8767e73';


UninstallVAFBMessengerCustomBot.prototype = {
    initialize: function() {},

    /**
     * Remove Integration/ Uninstall a FB Messenger custom bot.
     *
     * @param {string} botName - name/label of the bot
     * @param {string} inboundId - page ID
     * @return {Object} error status and message
     */
    unInstallVAFBMessengerCustomBot: function(botName, inboundId) {

        var result = {
            'error': false,
            'message': gs.getMessage('You have successfully uninstalled the Custom Bot for Facebook Messenger - {0}', botName)
        };


        if (!this.validateInputs([botName, inboundId])) {
            result.error = true;
            result.message = gs.getMessage('Bot Configuration parameters are invalid. ');
            gs.error(gs.getMessage('UninstallVAFBMessengerCustomBot:removeCustomBotConfiguration - Bot Configuration parameters are invalid. -  {0}{1}', [botName, inboundId]));
            return result;
        }

        var deleteConfigQuery = 'inbound_id=' + inboundId + '^provider=' + FB_MESSENGER_PROVIDER_ID + '^name=' + botName;
        var providerApplicationRecord = this.getRecords(PROVIDER_APPLICATION_TABLE, deleteConfigQuery);

        if (!providerApplicationRecord.next()) {
            gs.error(gs.getMessage('UninstallVAFBMessengerCustomBot:removeCustomBotConfiguration - Provider Application record with given botName and inboundId does not exist -  {0}:{1}', [botName, inboundId]));
            result.error = true;
            result.message = gs.getMessage('Provider Application record with given botName and inboundId does not exist -  {0}:{1}', [botName, inboundId]);
        } else {
            var messageAuthRecordSysId = providerApplicationRecord.message_auth;
            var tokenRecordSysId = providerApplicationRecord.message_auth.outbound_message_creation;
            var hashRecordSysId = providerApplicationRecord.message_auth.inbound_message_verification;

            result = this.removeCustomBotConfiguration(botName, providerApplicationRecord.sys_id, messageAuthRecordSysId, hashRecordSysId, tokenRecordSysId);
        }
        return result;
    },

    removeCustomBotConfiguration: function(botName, providerAppRecordSysId, messageAuthRecordSysId, hashRecordSysId, tokenRecordSysId) {
        var result = {
            'error': false,
            'message': gs.getMessage('You have successfully uninstalled the Custom Bot for Facebook Messenger - {0}', botName)
        };

        if (!this.validateInputs([providerAppRecordSysId, messageAuthRecordSysId, hashRecordSysId, tokenRecordSysId])) {
            var _configurationRecords = {
                'message_auth': messageAuthRecordSysId,
                'hash_message_verification': hashRecordSysId,
                'token_verification': tokenRecordSysId,
                'sys_cs_provider_application': providerAppRecordSysId
            };
            gs.error(gs.getMessage('UninstallVAFBMessengerCustomBot:removeCustomBotConfiguration - One or more configuration records does not exist for  -  {0} : {1}', [botName, JSON.stringify(_configurationRecords)]));
            result.error = true;
            result.message = gs.getMessage('One or more configuration records does not exist for -  {0}', botName);
        }

        //delete hash message verification record
        var hmDeletionStatus = this.deleteRecordBySysId(HASH_MESSAGE_VERIFICATION_TABLE, hashRecordSysId);
        if (!hmDeletionStatus) {
            result.error = true;
            result.message = gs.getMessage('Failed to delete Hash Message Verification record for -  {0}.', botName);
            //return result;
        }

        var tokenDeletionStatus = this.deleteRecordBySysId(TOKEN_VERIFICATION_TABLE, tokenRecordSysId);
        if (!tokenDeletionStatus) {
            result.error = true;
            result.message = gs.getMessage('Failed to delete Token Verification record for -  {0}.', botName);
            //return result;
        }

        var authDeletionStatus = this.deleteRecordBySysId(MESSAGE_AUTH_TABLE, messageAuthRecordSysId);
        if (!authDeletionStatus) {
            result.error = true;
            result.message = gs.getMessage('Failed to delete Message Auth record for -  {0}.', botName);
            //return result;
        }

        var providerAppDelectionStatus = this.deleteRecordBySysId(PROVIDER_APPLICATION_TABLE, providerAppRecordSysId);
        if (!providerAppDelectionStatus) {
            result.error = true;
            result.message = gs.getMessage('Failed to delete Provider Channel Identity record for -  {0}.', botName);
        }

        return result;
    },


    deleteRecordBySysId: function(tableName, sysId) {

        try {
            var _delGR = new GlideRecord(tableName);
            _delGR.get(sysId);
            _delGR.query();
            if (_delGR.next()) {
                _delGR.deleteRecord();

                return true;
            }

            return false;

        } catch (error) {
            gs.error("UninstallVAFBMessengerCustomBot:deleteRecordBySysId - Failed to delete record in {0}:{1} - {2}" + [tableName, sysId, error.message]);
            return false;
        }
    },

    validateInputs: function(params) {
        /* not null or empty */
        return params.every(function(i) {
            return i !== null &amp;&amp; i !== undefined &amp;&amp; i !== '';
        });
    },

    getRecords: function(tableName, encodedQString) {
        var _getGR = new GlideRecord(tableName);
        _getGR.addEncodedQuery(encodedQString);
        _getGR.query();

        return _getGR;
    },

    type: 'UninstallVAFBMessengerCustomBot'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2023-01-23 08:13:22&lt;/sys_created_on&gt;
        &lt;sys_id&gt;72c332f953602110dff1ddeeff7b1245&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;11&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;UninstallVAFBMessengerCustomBot&lt;/sys_name&gt;
        &lt;sys_package display_value="Conversational Custom Chat Integration Utilities" source="com.glide.ccci.clients.utils"&gt;ac9d7c203c75311068bcf327dfe37f6e&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_72c332f953602110dff1ddeeff7b1245&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2024-02-04 17:25:06&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:38:40</sys_created_on>
        <sys_id>2807385d83f01210c6695855eeaad33e</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>UninstallVAFBMessengerCustomBot</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_2807385d83f01210c6695855eeaad33e</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:38:40</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
