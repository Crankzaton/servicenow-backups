<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>true</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Validate Table Encryption</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[function onBefore(current, previous) {
 var tableName = current.table.toString();
 var edgeTableUtil = new sn_edge_encryption.EdgeTableCompatabilityUtil();

 
 var excludedTables = edgeTableUtil.getBlacklistedTables();
 // prevent encryption in system and pseudo-system tables

 for (var i = 0; i < excludedTables.length; i++) {
  if (tableName == excludedTables[i]) {
   throwUnsupported(tableName, current);
   return;
  }
 }
 
 
 // Its more efficient to leave the GlideRecord checks in here because
 // we can do things like check the actual attribute from the GlideRecord
 // of the choice as opposed to just checking the attributes field which 
 // doesn't always reflect the truth.
 var tableChoiceGR = new GlideRecord(tableName);

 // handle case where table no longer exists 
 if (!tableChoiceGR.isValid() && current.operation() == 'update') {
  // don't allow record to be active when table does not exist
  if (current.active) {
   // any other update is an error
   current.setAbortAction(true);
  } 
  return;
 }

 try {
  if (tableChoiceGR.getAttribute('edge_encryption_excluded')) { 
   current.setAbortAction(true);
   return;
  }
 } catch (error) {
  current.setAbortAction(true);
  return;
 }
 
 if (tableChoiceGR.getAttribute('edge_table_whitelist')) {
  return;
 }

 var excludePrefixes = edgeTableUtil.excludePrefixes;
 for (var i = 0; i < excludePrefixes.length; i++) {
  if (tableName.startsWith(excludePrefixes[i])) {
   throwUnsupported(tableName, current);
   return;
  }
 }
}

function throwUnsupported(tableName, current) {
 gs.addErrorMessage(gs.getMessage('Encrypting data in table {0} is not supported', tableName));
 current.setAbortAction(true);
}]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:50:17</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>33eb2c5583701210c6695855eeaad3d1</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Validate Table Encryption</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_33eb2c5583701210c6695855eeaad3d1</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:50:17</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=33eb2c5583701210c6695855eeaad3d1"/>
</record_update>
