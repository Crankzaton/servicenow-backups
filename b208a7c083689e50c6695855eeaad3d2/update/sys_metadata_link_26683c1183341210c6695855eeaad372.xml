<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>869b6f8e5348311046aeddeeff7b12b6</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.TaskBreakdownUtil&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;Utility APIs to reset task breakdowns for actuals, budget, and planned cost&lt;/description&gt;
        &lt;name&gt;TaskBreakdownUtil&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var TaskBreakdownUtil = Class.create();
TaskBreakdownUtil.prototype = {

    resetTaskBreakdownsBudget: function(taskId) {
        //split budgets in task breakdown
        var gr = new GlideAggregate('project_funding');
        gr.addQuery('task', taskId);
        gr.query();
        while (gr.next()) {
            var projectFunding = new ProjectFunding(gr);
            var fundAllocator = new PPMFundAllocator();
            fundAllocator.allocateEntityFundAcrossPeriods(projectFunding);
        }
    },

    resetTaskBreakdownsCost: function(sys_id, taskRef) {
        var gr = new GlideAggregate('cost_plan_breakdown');
        gr.addQuery('breakdown_type', 'requirement');
        gr.addNotNullQuery('cost_plan');
        gr.addQuery('task', sys_id);
        gr.groupBy('fiscal_period');
        gr.groupBy('expense_type');
        gr.query();
        while (gr.next()) {
            var util = new PPMCostRollupManager(gr.getValue('fiscal_period'), gr.getValue('expense_type'));
            util.updateProjectEstimatedCostByFiscalPeriod(taskRef.getUniqueValue());
        }
    },

    resetTaskBreakdownsActual: function(sys_id) {
        //aggregate from breakdowns type requirement 
        var gr = new GlideRecord('fm_expense_line');
        gr.addQuery('task', sys_id);
        gr.query();
        while (gr.next()) {
            var fundManager = new PPMFundManager();
            fundManager.updateActualsForTask(gr);
            if (!gr.cost_plan.nil()) {
                fundManager.updateActualsForCostPlan(gr);
            }
        }
    },

    type: 'TaskBreakdownUtil'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2023-07-17 06:39:00&lt;/sys_created_on&gt;
        &lt;sys_id&gt;869b6f8e5348311046aeddeeff7b12b6&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;TaskBreakdownUtil&lt;/sys_name&gt;
        &lt;sys_package display_value="Application Diagnostics Tool" source="com.snc.app_diagnostics_tool"&gt;822052ab47e64210cd4e1ce4316d4382&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_869b6f8e5348311046aeddeeff7b12b6&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2023-07-17 06:39:00&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:44:49</sys_created_on>
        <sys_id>26683c1183341210c6695855eeaad372</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>TaskBreakdownUtil</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_26683c1183341210c6695855eeaad372</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:44:49</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
