<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>960e391af8561110f877e0439485d0bc</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;public&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;sn_kmf.CodeSigningKeyCertUtil&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;Define script methods that are used to query the code signing keypair and certficate.&lt;/description&gt;
        &lt;name&gt;CodeSigningKeyCertUtil&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var CodeSigningKeyCertUtil = Class.create();
CodeSigningKeyCertUtil.prototype = {
    initialize: function() {
    },

	isCodeSigningCertAttachmentWithDocId: function(docTable, docSysId) {
		if (docTable != "sys_certificate")
			return false;
		if (gs.nil(docSysId))
			return false;

		var grCert = new GlideRecord("sys_certificate");
		if (!grCert.get(docSysId))
			return false;

		// CodeSigning certificate can be imported/copied over from other instances and it is not
		// associated to any crypto module. Check it using the name.
		var certName = grCert.getValue("name");
		if (gs.nil(certName))
			return false;
		if (this.isCodeSigningCertByName(certName))
			return true;
		
		// CodeSigning certificate can be generated on this instance and it should be
		// associated with the CodeSigning crypto module.
		var grModuleKey = new GlideRecord("sys_kmf_module_key");
		grModuleKey.addQuery("certificate", docSysId);
		grModuleKey.query();
		if (grModuleKey.getRowCount() &lt; 1)
			return false; // not associated to any code signing crypto module

		while (grModuleKey.next()) {
			var cryptoModuleSysId = grModuleKey.getValue("crypto_module");
			if (this.isCodeSigningCryptoModule(cryptoModuleSysId))
				return true;
		}

		return false;
	},

	isCodeSigningCertByName: function(certName) {
		var regEx = /code_signing_key_publicsigver_[0-9a-zA-Z]{32}$/;
		return (certName.match(regEx) != null);
	},

	isCodeSigningCryptoModule: function(cryptoModuleSysId) {
		if (gs.nil(cryptoModuleSysId))
			return false;
		
		if (cryptoModuleSysId == "a3123fddc32310101109046f5e40dd3e") // cm_code_signing
			return true;
		else if (cryptoModuleSysId == "75bdd8c2c70111109d59fa49f4c26031") // cm_code_attest
			return true;

		return false;
	},

    type: 'CodeSigningKeyCertUtil'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;maint&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2022-10-04 21:12:45&lt;/sys_created_on&gt;
        &lt;sys_id&gt;960e391af8561110f877e0439485d0bc&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;CodeSigningKeyCertUtil&lt;/sys_name&gt;
        &lt;sys_package display_value="ServiceNow Key Management Framework" source="sn_kmf"&gt;c515f25b53332300cd1eddeeff7b126e&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="ServiceNow Key Management Framework"&gt;c515f25b53332300cd1eddeeff7b126e&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_960e391af8561110f877e0439485d0bc&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2022-10-06 00:17:30&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:45:48</sys_created_on>
        <sys_id>0da83c5183341210c6695855eeaad309</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>CodeSigningKeyCertUtil</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_0da83c5183341210c6695855eeaad309</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:45:48</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
