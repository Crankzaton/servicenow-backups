<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>1f3a1ba6533201101c1addeeff7b12f8</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;public&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;sn_oe_sfs.VACommonActionAdapter&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;VACommonActionAdapter&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var VACommonActionAdapter = Class.create();
VACommonActionAdapter.prototype = {
    initialize: function(adapter, inputBuilder) {
        this.adapter = adapter;
        this.inputBuilder = inputBuilder;
        this.logger = new sn_oe_sfs.VACommonLogger(this.inputBuilder.getChannelLogger(), 'VACommonActionAdapter');
        this.logger.debug("VACommonActionAdapter channel: " + JSON.stringify(this.adapter) + " \n inputs: " + JSON.stringify(inputBuilder));
    },

    transform: function() {
        try {
            var richControl = this.inputBuilder.getRichControl();
            var payload = this.inputBuilder.getPayload();
            var actionType = richControl.type;
            var result = null;

            switch (actionType) {
                case 'Separator':
                    break;
                case 'StartSpinner':
                    var message = richControl.message;
                    var spinnerWaitTime = richControl.spinnerWaitTime;
                    var spinnerType = richControl.spinnerType;
                    if (!gs.nil(message)) {
                        if (spinnerType == 'processing') {
                            result = null;
                        } else if (spinnerType == 'wait_time') {
                            result = this.adapter.buildLiveAgentWaitTimeCard(payload, spinnerWaitTime, actionType);
                        } else {
                            result = this.adapter.getOutputTextCard(sn_cs.VASystemObject.getLeaveConversationMessage(), payload);
                        }
                    }
                    break;
                case 'EndSpinner':
                    if (richControl.spinnerType == 'wait_time') {
                        result = this.adapter.buildLiveAgentWaitTimeCard(payload, null, actionType);
                    }
                    break;
                case 'System':
                    var message = richControl.message;
                    if (!gs.nil(message)) {
                        result = this.adapter.getOutputTextCard(message, payload);
                    }
                    break;
                case 'StartTypingIndicatorActionMsg':
                    result = this.adapter.getStartTypingIndicatorMessage(payload);
                    break;
                case 'TopicFinished':
                    this.adapter.handleTopicFinished(payload);
                    break;
                default:
                    break;
            }
            return result;
        } catch (e) {
            this.logger.error("Error in default action outbound transformer : " + e.message);
            throw e;
        }
    },

    type: 'VACommonActionAdapter'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2022-04-14 22:55:22&lt;/sys_created_on&gt;
        &lt;sys_id&gt;1f3a1ba6533201101c1addeeff7b12f8&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;40&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;VACommonActionAdapter&lt;/sys_name&gt;
        &lt;sys_package display_value="Omni-Experience Standard Feature Set" source="sn_oe_sfs"&gt;53b1b0e79761011018b2fa98c253afcc&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Omni-Experience Standard Feature Set"&gt;53b1b0e79761011018b2fa98c253afcc&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_1f3a1ba6533201101c1addeeff7b12f8&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2022-05-26 03:24:50&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:11:45</sys_created_on>
        <sys_id>56d0b81983b01210c6695855eeaad39f</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>VACommonActionAdapter</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_56d0b81983b01210c6695855eeaad39f</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:11:45</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
