<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Validate Pattern</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
 
 if (current.isActionAborted())
  return;
 var props = new global.EdgeEncryptionProperties();
 var minLength = props.get("glide.edge.pattern.min.size", 5);
 try {
  var pattern = JSON.parse(current.pattern.toString());
  
  // check pattern length for basic type
  if (current.advanced == false) {
   if (pattern.length < minLength) {
    gs.addErrorMessage(gs.getMessage("Basic edge pattern length is too short, must be at least {0} terms long", minLength));
    current.setAbortAction(true);
    return;
   }
  }
  
  var patternUtil = new sn_edge_encryption_ns.EdgeEncryptionPatternUtil();
  
  // check if compiles
  if (patternUtil.doesPatternCompile(pattern) == false) {
   gs.addErrorMessage(gs.getMessage("Syntax error in edge pattern '{0}'", current.pattern_name));
   current.setAbortAction(true);
   return;
  }
  
  if (patternUtil.isPatternAllowed(pattern) == false) {
   gs.addErrorMessage(gs.getMessage("Disallowed characters were used or pattern contains all alphabetic characters."));
   current.setAbortAction(true);
   return;
  }
  
  if (current.sample.nil()) {
   gs.addErrorMessage(gs.getMessage("'Sample match' string is empty"));
   current.setAbortAction(true);
   return;
  }
  
  if (current.advanced == true) {
   
   if (current.sample.toString().length < minLength) {
    gs.addErrorMessage(gs.getMessage("'Pattern' is too short"));
    current.setAbortAction(true);
    return;
   }
   
   if (patternUtil.doesPatternMatchSample(pattern[0], current.sample) == false) {
    gs.addErrorMessage(gs.getMessage("'Pattern' and 'Sample match' strings do not match"));
    current.setAbortAction(true);
    return;
   }
  
   if (patternUtil.isSampleAllAlpha(current.sample) == true) {
    gs.addErrorMessage(gs.getMessage("'Pattern' cannot be all alphabetic characters"));
    current.setAbortAction(true);
    return;
   }
  }
 } catch (err) {
  gs.addErrorMessage(gs.getMessage("Specified pattern is not allowed."));
  gs.error(gs.getMessage("Failed to parse pattern '{0}': {1}", [current.pattern_name, err.message]));
  current.setAbortAction(true);
 }
})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:53:11</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>5a9c249983701210c6695855eeaad393</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Validate Pattern</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_5a9c249983701210c6695855eeaad393</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:53:11</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=5a9c249983701210c6695855eeaad393"/>
</record_update>
