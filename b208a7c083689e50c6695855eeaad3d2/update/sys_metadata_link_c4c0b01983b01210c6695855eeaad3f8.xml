<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>1ba2e2a60ff233007c923fabfa767ef2</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;public&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.RidacHelper&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;This is RIDAC helper class. Can be used to add additional/override methods.&lt;/description&gt;
        &lt;name&gt;RidacHelper&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var RidacHelper = Class.create();
RidacHelper.prototype = Object.extendsObject(RidacHelperBase, {
    initialize: function() {},

    ridacTableList: function() {
        var tableList = ['risk', 'issue', 'dmn_decision', 'project_action', 'project_change_request'];
        return tableList;

    },

    getTargetMappings: function(source) {
        var targetList = [];
        var targetTables = [];
        var sysIds = [];
        var grAction = new GlideRecord('sys_hub_action_input');
        grAction.addQuery('model_table', 'sys_hub_action_type_definition');
        grAction.addQuery('element', 'ridac_flow');
        grAction.addQuery('default_value', source);
        grAction.addNotNullQuery('model');
        grAction.query();


        while (grAction.next()) {
            sysIds.push(grAction.model.sys_id);
        }

        var grTargetTable = new GlideRecord('sys_hub_action_input');
        grTargetTable.addQuery('model', 'IN', sysIds);
        grTargetTable.addQuery('element', 'table_name');
        grTargetTable.query();

        while (grTargetTable.next()) {
            var targetGr = new GlideRecord(grTargetTable.getValue('default_value'));
            if (targetGr.canCreate()) {
                targetTables.push({
                    name: GlideTableDescriptor.get(grTargetTable.getValue('default_value')).getLabel(),
                    table: grTargetTable.getValue('default_value'),
                    action_name: grTargetTable.model.internal_name.getDisplayValue()
                });
            }

        }
        return this.orderTargets(targetTables);
    },

    //Sorts the target records into specific order
    orderTargets: function(targetData) {
        var handlers = new GlideScriptedExtensionPoint().getExtensions("RidacChoiceOrder");
        for (var i = 0; i &lt; handlers.length; i++) {
            targetData = handlers[i].getOrderedList(targetData);
        }
        return targetData;
    },
	
	
	checkParentTask: function(parentTask) {
		
		if(parentTask.getRefRecord().instanceOf('pm_project'))
			return true;
		else if(parentTask.getRefRecord().instanceOf('dmn_demand'))
			return true;
		return false;
		
	},


    isTargetRecordExist: function(parentId, sourceTable) {
        if (!this.checkParentTask(parentId))
            return false;
        var targetTableList = this.ridacTableList();
        for (var i = 0; i &lt; targetTableList.length; i++) {

            if (sourceTable == targetTableList[i])
                continue;
            var gr = new GlideRecordSecure(targetTableList[i]);
            if (targetTableList[i] == 'risk')
                gr.addQuery('task', parentId);
            else
                gr.addQuery('parent', parentId);
            gr.query();
            if (gr.next())
                return true;

        }
        return false;
    },

    associateRecord: function(source_record, source_table, source_task, target_record, target_table) {
        var gr = new GlideRecordSecure('ridac_m2m');
        gr.initialize();
        gr.setValue('from_task', source_task);
        gr.setValue('source_record', source_record);
        gr.setValue('source_table', source_table);
        gr.setValue('to_task', source_task);
        gr.setValue('target_record', target_record);
        gr.setValue('target_table', target_table);
        gr.setValue('mapping_type', 'associated');
        gr.setValue(source_table, source_record);
        gr.setValue(target_table, target_record);
        return gr.insert();

    },


    getTargetAssociationMappings: function(parentId, sourceTable) {
        var targetTable = [];
        var targetList = this.ridacTableList();
        for (var i in targetList) {
            if (sourceTable == targetList[i])
                continue;
            var gr = new GlideRecordSecure(targetList[i]);
            if (targetList[i] == 'risk')
                gr.addQuery('task', parentId);
            else
                gr.addQuery('parent', parentId);
            gr.query();
            if (gr.next())
                targetTable.push({
                    name: gr.getClassDisplayValue(),
                    table: targetList[i]
                });
        }
        return targetTable;
    },

    type: 'RidacHelper'
});]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2019-07-25 13:57:48&lt;/sys_created_on&gt;
        &lt;sys_id&gt;1ba2e2a60ff233007c923fabfa767ef2&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;108&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;RidacHelper&lt;/sys_name&gt;
        &lt;sys_package display_value="Project Management" source="com.snc.project_management_v3"&gt;9eef82e747e64210cd4e1ce4316d43e3&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_1ba2e2a60ff233007c923fabfa767ef2&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2024-03-27 05:25:38&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:11:19</sys_created_on>
        <sys_id>c4c0b01983b01210c6695855eeaad3f8</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>RidacHelper</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_c4c0b01983b01210c6695855eeaad3f8</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:11:19</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
