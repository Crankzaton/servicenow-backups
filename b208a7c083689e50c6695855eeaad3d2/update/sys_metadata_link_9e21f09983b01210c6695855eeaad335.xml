<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>2c2b749d534033003006ddeeff7b1212</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.KBRelatedArticlesOrItemsSNC&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;Customers should not change this class directly, rather override methods in the subclass.&amp;#13;
This class is never called directly.&lt;/description&gt;
        &lt;name&gt;KBRelatedArticlesOrItemsSNC&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var KBRelatedArticlesOrItemsSNC = Class.create();
KBRelatedArticlesOrItemsSNC.prototype = {
    initialize: function() {},

    /**
     * User who can edit the knowledge article can only create relationships.
     *
     * @param GlideRecord: kb_2_kb/kb_2_sc
     * @return Boolean: can logged in user create a m2m relationship with articles/catalog items.
     */
    canCreate: function(knowledgeRef) {
        return this.canWriteArticle(knowledgeRef.kb_knowledge.getRefRecord());
    },

    /**
     * User who can edit the knowledge article can only delete relationships.
     *
     * @param GlideRecord: kb_2_kb/kb_2_sc
     * @return Boolean: can logged in user delete a m2m relationship with articles/catalog items.
     */
    canDelete: function(knowledgeRef) {
        return this.canWriteArticle(knowledgeRef.kb_knowledge.getRefRecord());
    },

    /**
     * User who can read the knowledge article can only read relationships.
     *
     * @param GlideRecord: kb_2_kb/kb_2_sc
     * @return Boolean: can logged in user read a m2m relationship with articles/catalog items.
     */
    canRead: function(knowledgeRef) {
        var knowledge = new KBKnowledge();
        if (knowledgeRef.kb_knowledge &amp;&amp; !gs.nil(knowledgeRef.kb_knowledge))
            return knowledge.canRead(knowledgeRef.kb_knowledge.getRefRecord());
        else
            return knowledge.canCreate();
    },

    /**
     * User who can edit the knowledge article can only write relationships.
     *
     * @param GlideRecord: kb_2_kb/kb_2_sc
     * @return Boolean: can logged in user write a m2m relationship with articles/catalog items.
     */
    canWrite: function(knowledgeRef) {
        return this.canWriteArticle(knowledgeRef.kb_knowledge.getRefRecord());
    },

    /**
     * Whether a User can edit the article.
     *
     * @param GlideRecord: kb_2_kb/kb_2_sc
     * @return Boolean: can logged in user edit the article.
     */
    canWriteArticle: function(article) {
       var knowledge = new KBKnowledge();

        if (article &amp;&amp; !gs.nil(article)) {
            if (article.workflow_state == "retired" || article.workflow_state == "outdated")
                return false;

            if (knowledge.isVersioningInstalled() &amp;&amp; knowledge.isVersioningEnabled())
                if (article.workflow_state == 'published')
                    return new KBVersioning().canCreateRListMappingOnVersionedArticle(article);
                else
                    return article.canWrite();
            else
                return article.canWrite();
        }
        else
            return knowledge.canCreate();
    },

    type: 'KBRelatedArticlesOrItemsSNC'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2019-03-06 16:27:54&lt;/sys_created_on&gt;
        &lt;sys_id&gt;2c2b749d534033003006ddeeff7b1212&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;26&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;KBRelatedArticlesOrItemsSNC&lt;/sys_name&gt;
        &lt;sys_package display_value="Knowledge Management Core" source="com.glideapp.knowledge"&gt;a8c6f4a43cb1311068bcf327dfe37f3e&lt;/sys_package&gt;
        &lt;sys_policy&gt;read&lt;/sys_policy&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_2c2b749d534033003006ddeeff7b1212&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2021-04-14 10:02:30&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:13:07</sys_created_on>
        <sys_id>9e21f09983b01210c6695855eeaad335</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>KBRelatedArticlesOrItemsSNC</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_9e21f09983b01210c6695855eeaad335</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:13:07</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
