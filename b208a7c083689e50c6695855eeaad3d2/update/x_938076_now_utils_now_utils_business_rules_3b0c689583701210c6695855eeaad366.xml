<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Create metric definition for ref table</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

 // Add your code here
 var def = new GlideRecord('asmt_metric_definition');
 
 def.addQuery('metric', current.getUniqueValue());
 def.query();
 
 def.deleteMultiple();
 
 if (!gs.nil(current.reference_table)) {
  var order = 10;
  var rowCount = 0;
  var tab = new GlideRecord(current.reference_table);
  tab.addEncodedQuery(current.condition, true);
  tab.query();
  
  rowCount = tab.getRowCount();
  
  if (rowCount === 0)
   gs.addInfoMessage(gs.getMessage("There is no record in the selected table"));
  else
   gs.addInfoMessage(gs.getMessage("{0} metric definitions are being generated for the selected table", rowCount));
  
  while(tab.next()){
   def.initialize();
   def.setValue('display', tab.getDisplayValue());
   def.setValue('metric', current.getUniqueValue());
   def.setValue('value', order);
   def.setValue('normalization_input', order);
   def.setValue('order', order);
   def.insert();
   
   order += 10;
  }
 }
 
})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:50:49</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>3b0c689583701210c6695855eeaad366</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Create metric definition for ref table</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_3b0c689583701210c6695855eeaad366</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:50:49</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=3b0c689583701210c6695855eeaad366"/>
</record_update>
