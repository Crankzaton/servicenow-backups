<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition>gs.getProperty('glide.ux.banner_announcement.realtime') == 'true'</condition>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>AMB New or Updated Record</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[var fields = new UXBannerAnnouncementGetFields();
(function executeRule(current, previous /*null when async*/) {
 //check if announcement falls within the time window
 var currentTime = new GlideDateTime();
 var startDate = new GlideDateTime(current.announcement.start);
 var endDate = new GlideDateTime(current.announcement.end);
 var sessionTimeout = gs.getProperty('glide.ui.session_timeout');
 var nonDuplicate = nonDuplicateRecordValidation(current, previous);
 
 var announcementWindow = new GlideDateTime();
    announcementWindow.addSeconds(sessionTimeout * 60);
 announcementWindow = announcementWindow.getValue();

 if ((startDate < announcementWindow) && (endDate > currentTime ||
  !endDate) && nonDuplicate == true) {

  if (current.announcement_config.active == true) {
   var records = {
    'old_record': fields.getReferences(previous.announcement),
    'new_record': fields.getReferences(current.announcement),
    'current_announcement_sys_id': current.announcement,
    'previous_announcement_sys_id': previous.announcement,
    'current_announcement_config_id': current.announcement_config,
    'previous_announcement_config_id': previous.announcement_config,
    'operation': 'm2m_change'
   }; 
   gs.publish('/uxbannerannouncements', records);
  }
 }
 return;
})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:50:08</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>7deb685583701210c6695855eeaad3e8</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>AMB New or Updated Record</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_7deb685583701210c6695855eeaad3e8</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:50:08</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=7deb685583701210c6695855eeaad3e8"/>
</record_update>
