<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>b08ad363537411106883ddeeff7b12db</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;sn_appclient.AppManagerApiUtil&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;AppManagerApiUtil&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var AppManagerApiUtil = Class.create();
AppManagerApiUtil.prototype = {
    initialize: function(request, response) {
        this.httpRequest = request;
        this.httpResponse = response;
        this.SUCESS_RESPONSE_CODE = 200;
        this.JSON_CONTENT_TYPE = "application/json";
    },

    getRequestParams: function() {
        if (this.params)
            return this.params;
        this.params = {};
        this.params.queryParams = {};
        Object.keys(this.httpRequest.queryParams).forEach(function(key) {
            this.params.queryParams[key] = this.httpRequest.queryParams[key].toString();
        }, this);
        this.params.pathParams = this.httpRequest.pathParams || {};
        return this.params;
    },
    
    getRequestBody: function() {
        var body =  this.httpRequest.body || {};
        return body.data || {};
    },

    logErrorMessage: function(message) {
        gs.error("AppManagerApiUtil: Error with resource: {0} with request-params: {1} is {2}", this.httpRequest.uri, JSON.stringify(this.params), message);
    },

    setResponseBody: function(responseData) {
        this.httpResponse.setContentType(this.JSON_CONTENT_TYPE);
        this.httpResponse.setStatus(this.SUCESS_RESPONSE_CODE);
        this.httpResponse.setBody(responseData);
    },

    setHeader: function(header, value) {
        response.setHeader(header, value);
    },

    addTotalCountHeader: function(value) {
        this.setHeader(Constants.HEADER_TOTAL_COUNT, value);
    },

    setError: function(err) {
        this.logErrorMessage(JSON.stringify(err));
        var myError = new sn_ws_err.ServiceError();
        if (err.hasOwnProperty('errorCode')) {
            myError.setStatus(err.errorCode);
        } else {
            myError.setStatus(400);
        }
        if (err.hasOwnProperty('errorDescription')) {
            myError.setMessage(err.errorDescription);
            myError.setDetail(err.errorAction || err.errorDescription);
        } else {
            myError.setMessage(err);
            myError.setDetail(err);
        }
        if (err.hasOwnProperty("stack"))
            myError = err;
        this.httpResponse.setError(myError);
    },

    getPaginationParams: function() {
        if (!this.params)
            this.getRequestParams();
        var paginationParams = {};
        paginationParams[Constants.SYSPARM_OFFSET] = CommonUtils.getOffset(this.params.queryParams);
        paginationParams[Constants.SYSPARM_LIMIT] = CommonUtils.getLimit(this.params.queryParams);
        return paginationParams;
    },

    getSearchTerm: function() {
        var searchTerm = this.params.queryParams[Constants.SEARCH_EXPRESSION];
        if (searchTerm)
            searchTerm = CommonUtils.getEscapedRegExp(searchTerm);
        return searchTerm;
    },
    getFilterParams: function() {
        var filterParamsJSON = this.params.queryParams[Constants.FILTERS_PARAMS];
        var filterParams = [];
        if (filterParamsJSON)
            filterParams = JSON.parse(filterParamsJSON);
        return filterParams;
    },
    getRequestBody: function() {
        var requestBody = '';
        if (this.httpRequest.body)
            requestBody = this.httpRequest.body.data;
        return requestBody;
    },
    type: 'AppManagerApiUtil'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2022-07-26 11:35:07&lt;/sys_created_on&gt;
        &lt;sys_id&gt;b08ad363537411106883ddeeff7b12db&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;22&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;AppManagerApiUtil&lt;/sys_name&gt;
        &lt;sys_package display_value="Scoped App Client" source="sn_appclient"&gt;781f36a96fef21005be8883e6b3ee43d&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Scoped App Client"&gt;781f36a96fef21005be8883e6b3ee43d&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_b08ad363537411106883ddeeff7b12db&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2023-02-10 10:32:41&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 09:18:03</sys_created_on>
        <sys_id>ed00099d83341210c6695855eeaad3f9</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>AppManagerApiUtil</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_ed00099d83341210c6695855eeaad3f9</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 09:18:03</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
