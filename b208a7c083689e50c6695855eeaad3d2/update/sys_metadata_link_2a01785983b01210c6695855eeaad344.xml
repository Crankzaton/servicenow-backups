<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>2717f9f4e7a7001074246188d2f6a9e0</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;public&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.FSMGeoHistoryUtil&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;The util functions for FSM in Geolocation Hisotry records&lt;/description&gt;
        &lt;name&gt;FSMGeoHistoryUtil&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var FSMGeoHistoryUtil = Class.create();
FSMGeoHistoryUtil.checkWMDispatcherRole = checkWMDispatcherRole;
FSMGeoHistoryUtil.checkWMManagerRole = checkWMManagerRole;
FSMGeoHistoryUtil.canESMUserRead = canESMUserRead;
function verifyIfUserMatchesAgent(groupArry, userSysId) {
	if (groupArry.length &lt; 1) return false;
	var gr = new GlideRecord("sys_user_grmember");
	gr.addQuery('group', 'IN', groupArry.join(','));
	gr.query();
	while(gr.next()) {
		if (userSysId == gr.user.sys_id) {
			return true;
		}
	}
	return false;
}
function checkWMDispatcherRole(geoHistoryUser) {
	var groupArry = global.FSMUtil.getAssignmentGroupArrayForDispatcher();
	return verifyIfUserMatchesAgent(groupArry, geoHistoryUser);
}
function checkWMManagerRole(geoHistoryUser) {
	var groupArry = global.FSMUtil.getAssignmentGroupArrayForManager();
	return verifyIfUserMatchesAgent(groupArry, geoHistoryUser);
}
function canESMUserRead(currentgeoHistory) {
	var answer = false;
	var currentUser = gs.getUserID();
	var geoHistoryUser = currentgeoHistory.user;
	// Verify that there are proper Work Order Task(s) where this agent started travel 
	var wot = new GlideRecord("wm_task");
	wot.addQuery("state", 17);
	wot.addNotNullQuery("actual_travel_start");
	wot.addQuery("assigned_to", geoHistoryUser);
	var esm = wot.addQuery("parent.ref_wm_order.contact", currentUser);
	esm.addOrCondition("parent.ref_wm_order.consumer.user", currentUser);
	wot.query();
	answer = wot.hasNext();
	if(answer) {
		// Fetch and check if this is the latest geo history record
		var geoGr = new GlideRecord("geo_history");
		geoGr.addQuery("user", geoHistoryUser);
		geoGr.addEncodedQuery("location_timestampRELATIVEGT@hour@ago@24");
		geoGr.orderByDesc("location_timestamp");
		geoGr.setLimit(1);
		geoGr.query();
		if(geoGr.next())
			answer = (currentgeoHistory.sys_id == geoGr.sys_id);
	}
	return answer;
}]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2020-03-12 03:15:15&lt;/sys_created_on&gt;
        &lt;sys_id&gt;2717f9f4e7a7001074246188d2f6a9e0&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;6&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;FSMGeoHistoryUtil&lt;/sys_name&gt;
        &lt;sys_package display_value="Field Service Management" source="com.snc.work_management"&gt;b66bd6bb4722c210cd4e1ce4316d4387&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_2717f9f4e7a7001074246188d2f6a9e0&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2020-08-14 14:28:52&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:12:35</sys_created_on>
        <sys_id>2a01785983b01210c6695855eeaad344</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>FSMGeoHistoryUtil</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_2a01785983b01210c6695855eeaad344</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:12:35</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
