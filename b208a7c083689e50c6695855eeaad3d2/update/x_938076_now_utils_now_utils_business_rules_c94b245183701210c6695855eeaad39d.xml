<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Change workflow when KB changes</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {
    if (previous.workflow_state == 'draft')
        return;
    new KBWorkflow().cancelApproval(current);

 var prevValue = current.workflow_state + '';
 if (current.kb_knowledge_base.kb_version == "3" && new KBWorkflow().startWorkflow(current, "workflow")) {
  //If publish sub workflow is completed, workflow engine would have already done current.update()
  if(current.workflow_state!='published') {
   current.setWorkflow(false);
   current.update();
   current.setWorkflow(true);
  }
  var knowledge = new GlideRecord("kb_knowledge");
  if(knowledge.get(current.sys_id) && prevValue != knowledge.getValue("workflow_state")){
   gs.addInfoMessage(new KBKnowledge().getStateMessage(knowledge.getValue("workflow_state")));
  }
 } else if (current.kb_knowledge_base.kb_version == "2") {
  current.workflow_state = 'published';
  current.update();
  gs.addInfoMessage(new KBKnowledge().getStateMessage(current.getValue("workflow_state")));
 }

})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:47:21</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>c94b245183701210c6695855eeaad39d</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Change workflow when KB changes</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_c94b245183701210c6695855eeaad39d</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:47:21</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=c94b245183701210c6695855eeaad39d"/>
</record_update>
