<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>0dc0f83a732b2300055e09496bf6a704</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.DemandCostUtil&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;DemandCostUtil&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var DemandCostUtil = Class.create();
DemandCostUtil.prototype = {
    initialize: function() {},

    updateActualCost: function(expenseLineGr) {
        if (!expenseLineGr.instanceOf("fm_expense_line"))
            return;

        var expensceLineCost = 1;

        if (expenseLineGr.operation() == 'delete') {
            expensceLineCost = -1;
        }

        expensceLineCost *= parseFloat(expenseLineGr.amount.getReferenceValue());
        var task = expenseLineGr.source_id.getRefRecord();
        if (task.instanceOf('dmn_demand')) {
            this.updateActualCostForDemand(expensceLineCost, task);
        } else if (task.instanceOf('dmn_demand_task')) {
            this.updateActualCostForTask(expensceLineCost, task);
        }

    },

    updateActualCostForTask: function(expensceLineCost, task) {
        var currencyCode = task.work_cost.getReferenceCurrencyCode();
        var currentCost = parseFloat(task.work_cost.getReferenceValue());
        var totalCost = currentCost + expensceLineCost;
        task.work_cost = currencyCode + ";" + totalCost;
        if (task.isValidRecord()) {
            if (JSUtil.notNil(task.demand_currency))
                new DemandCurrencyUtil().updateActualCostInDemandCurrencyOnDemandTask(task, task.demand_currency.code);
            task.update();
        }
    },

    updateActualCostForDemand: function(expensceLineCost, demand) {
        var currencyCode = demand.demand_actual_cost.getReferenceCurrencyCode();
        var currentCost = parseFloat(demand.demand_actual_cost.getReferenceValue());
        var totalCost = parseFloat(currentCost + expensceLineCost).toFixed(2);
        demand.demand_actual_cost = currencyCode + ";" + totalCost;
        if (demand.isValidRecord()) {
            if (JSUtil.notNil(demand.demand_currency))
                new DemandCurrencyUtil().updateActualCostInDemandCurrencyOnDemand(demand, demand.demand_currency.code);
            demand.update();
        }
    },

    type: 'DemandCostUtil'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2019-02-14 11:16:06&lt;/sys_created_on&gt;
        &lt;sys_id&gt;0dc0f83a732b2300055e09496bf6a704&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;48&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;DemandCostUtil&lt;/sys_name&gt;
        &lt;sys_package display_value="Demand Management" source="com.snc.demand_management"&gt;82005a2b47e64210cd4e1ce4316d4346&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_0dc0f83a732b2300055e09496bf6a704&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2020-11-04 17:28:24&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:10:00</sys_created_on>
        <sys_id>b470b89583b01210c6695855eeaad37d</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>DemandCostUtil</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_b470b89583b01210c6695855eeaad37d</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:10:00</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
