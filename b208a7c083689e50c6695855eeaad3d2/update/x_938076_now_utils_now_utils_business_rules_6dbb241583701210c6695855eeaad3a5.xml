<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>true</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Remove test set data on intent delete</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {
    var modelId = current.getValue("model");
    if (modelId) {
        var batchTestSetGr = new GlideRecord("nlu_batch_test_set");
        batchTestSetGr.addEncodedQuery("model=" + modelId);
        batchTestSetGr.query();

        if (batchTestSetGr.next()) {
            var testSetId = batchTestSetGr.getValue("sys_id");
            var batchTestUttrGr = new GlideRecord("nlu_batch_test_utterance");
            batchTestUttrGr.addEncodedQuery("test_set=" + testSetId + "^intentLIKE" + current.name.trim());
            batchTestUttrGr.query();

            while (batchTestUttrGr.next()) {
                var intents = batchTestUttrGr.getValue("intent");
                var intentsArr = [];
                var arrUtil = new global.ArrayUtil();
                if (intents) {
                    intentsArr = intents.split(",").map(function(element) {
                        return element.trim();
                    });
                }               
                if (intentsArr.length === 1) {
                    batchTestUttrGr.deleteRecord();
                } else {
                    intentsArr.splice(arrUtil.indexOf(intentsArr, current.name.trim()), 1);
                    batchTestUttrGr.setValue("intent", intentsArr.join(","));
                    batchTestUttrGr.update();              
                }
            }
        }
    }

})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:49:19</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>6dbb241583701210c6695855eeaad3a5</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Remove test set data on intent delete</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_6dbb241583701210c6695855eeaad3a5</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:49:19</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=6dbb241583701210c6695855eeaad3a5"/>
</record_update>
