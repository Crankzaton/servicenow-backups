<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>850b785bb7121110b87e80408e11a96e</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;sn_cmdb_ws.CMDBWSImportantActionsUtil&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;CMDBWSImportantActionsUtil&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var CMDBWSImportantActionsUtil = Class.create();
	CMDBWSImportantActionsUtil.prototype = Object.extendsObject(CMDBWorkspaceUtil, {
		initialize: function() {
	},

	IMPORTANT_ACTION_CATEGORIES: {
		DATA_ATTESTATION: {
			ID: "data_attestation",
			NAME: gs.getMessage("Data Attestation"),
			TITLE_ICON: "clipboard-check-outline",
			BORDER_COLOR: "moderate"
		},
		DATA_MANAGEMENT : {
			ID: "data_management",
			NAME: gs.getMessage("Data Management"),
			TITLE_ICON: "form-outline",
			BORDER_COLOR: "info"
		},
		HEALTH : {
			ID: "health",
			NAME: gs.getMessage("Health"),
			TITLE_ICON: "health-status-outline",
			BORDER_COLOR: "orange"
		}
	},

	IMPORTANT_ACTION_METRIC_LABELS: {
		CI_COUNT: gs.getMessage("CI count"),
		TASK_COUNT: gs.getMessage("Task count")
	},

	IMPORTANT_ACTION_BUTTON_LABELS: {
		VIEW_CIS: gs.getMessage("View CIs"),
		VIEW_TASKS: gs.getMessage("View Tasks")
	},
	
	RECOMMENDATION_TYPES: {
		UPDATE_IRE_DEBUG_LOG_LEVEL: "update_ire_debug_log_level",
		REVIEW_BEFORE_QUERY_BR: "review_before_query_br",
		REMOVE_RELATED_RECORDS_MISSING_REF: "remove_related_records_missing_ref",
		REMOVE_REL_MISSING_PARENT_OR_CHILD: "remove_rel_missing_parent_or_child",
		MANAGE_STALE_CIS: "manage_stale_cis",
		REVIEW_SGC_DEFINITIONS: "review_sgc_definitions",
		ACTIVATE_CORRECTNESS_JOB: "activate_correctness_job"
	},

	getImportantActionTypes: function() {
		return {
			REASSIGNMENT_REQUESTS: {
				ID: "reassignment_requests",
				NAME: gs.getMessage("Reassignment requests"),
				TITLE: this.IMPORTANT_ACTION_CATEGORIES.DATA_ATTESTATION.NAME,
				TITLE_ICON: this.IMPORTANT_ACTION_CATEGORIES.DATA_ATTESTATION.TITLE_ICON,
				METADATA_LABEL: this.IMPORTANT_ACTION_METRIC_LABELS.TASK_COUNT,
				BUTTON_LABEL: this.IMPORTANT_ACTION_BUTTON_LABELS.VIEW_TASKS,
				BUTTON_TOOLTIP: gs.getMessage("View attestation tasks that need reassignment"),
				BORDER_COLOR: this.IMPORTANT_ACTION_CATEGORIES.DATA_ATTESTATION.BORDER_COLOR
			},
			UNASSIGNED_OVERDUE_TASKS: {
				ID: "unassigned_overdue_tasks",
				NAME: gs.getMessage("Unassigned overdue tasks"),
				TITLE: this.IMPORTANT_ACTION_CATEGORIES.DATA_ATTESTATION.NAME,
				TITLE_ICON: this.IMPORTANT_ACTION_CATEGORIES.DATA_ATTESTATION.TITLE_ICON,
				METADATA_LABEL: this.IMPORTANT_ACTION_METRIC_LABELS.TASK_COUNT,
				BUTTON_LABEL: this.IMPORTANT_ACTION_BUTTON_LABELS.VIEW_TASKS,
				BUTTON_TOOLTIP: gs.getMessage("View attestation tasks that are unassigned and overdue"),
				BORDER_COLOR: this.IMPORTANT_ACTION_CATEGORIES.DATA_ATTESTATION.BORDER_COLOR
			},
			LIFECYCLE_APPROVALS: {
				ID: "lifecycle_approvals",
				NAME: gs.getMessage("Lifecycle approvals"),
				TITLE: this.IMPORTANT_ACTION_CATEGORIES.DATA_MANAGEMENT.NAME,
				TITLE_ICON: this.IMPORTANT_ACTION_CATEGORIES.DATA_MANAGEMENT.TITLE_ICON,
				METADATA_LABEL: this.IMPORTANT_ACTION_METRIC_LABELS.TASK_COUNT,
				BUTTON_LABEL: this.IMPORTANT_ACTION_BUTTON_LABELS.VIEW_TASKS,
				BUTTON_TOOLTIP: gs.getMessage("View lifecycle approval tasks"),
				BORDER_COLOR: this.IMPORTANT_ACTION_CATEGORIES.DATA_MANAGEMENT.BORDER_COLOR
			},
			DE_DUPLICATION_TASKS: {
				ID: "de_duplication_tasks",
				NAME: gs.getMessage("De-duplication tasks"),
				TITLE: this.IMPORTANT_ACTION_CATEGORIES.HEALTH.NAME,
				TITLE_ICON: this.IMPORTANT_ACTION_CATEGORIES.HEALTH.TITLE_ICON,
				METADATA_LABEL: this.IMPORTANT_ACTION_METRIC_LABELS.TASK_COUNT,
				BUTTON_LABEL: this.IMPORTANT_ACTION_BUTTON_LABELS.VIEW_TASKS,
				BUTTON_TOOLTIP: gs.getMessage("View de-duplication tasks"),
				BORDER_COLOR: this.IMPORTANT_ACTION_CATEGORIES.HEALTH.BORDER_COLOR
			},
			DUPLICATE_CIS: {
				ID: "duplicate_cis",
				NAME: gs.getMessage("Duplicate CIs"),
				TITLE: this.IMPORTANT_ACTION_CATEGORIES.HEALTH.NAME,
				TITLE_ICON: this.IMPORTANT_ACTION_CATEGORIES.HEALTH.TITLE_ICON,
				METADATA_LABEL: this.IMPORTANT_ACTION_METRIC_LABELS.CI_COUNT,
				BUTTON_LABEL: this.IMPORTANT_ACTION_BUTTON_LABELS.VIEW_CIS,
				BUTTON_TOOLTIP: gs.getMessage("View duplicate CIs"),
				BORDER_COLOR: this.IMPORTANT_ACTION_CATEGORIES.HEALTH.BORDER_COLOR
			},
			ORPHAN_CIS: {
				ID: "orphan_cis",
				NAME: gs.getMessage("Orphan CIs"),
				TITLE: this.IMPORTANT_ACTION_CATEGORIES.HEALTH.NAME,
				TITLE_ICON: this.IMPORTANT_ACTION_CATEGORIES.HEALTH.TITLE_ICON,
				METADATA_LABEL: this.IMPORTANT_ACTION_METRIC_LABELS.CI_COUNT,
				BUTTON_LABEL: this.IMPORTANT_ACTION_BUTTON_LABELS.VIEW_CIS,
				BUTTON_TOOLTIP: gs.getMessage("View orphan CIs"),
				BORDER_COLOR: this.IMPORTANT_ACTION_CATEGORIES.HEALTH.BORDER_COLOR
			},         
			STALE_CIS: {
				ID: "stale_cis",
				NAME: gs.getMessage("Stale CIs"),
				TITLE: this.IMPORTANT_ACTION_CATEGORIES.HEALTH.NAME,
				TITLE_ICON: this.IMPORTANT_ACTION_CATEGORIES.HEALTH.TITLE_ICON,
				METADATA_LABEL: this.IMPORTANT_ACTION_METRIC_LABELS.CI_COUNT,
				BUTTON_LABEL: this.IMPORTANT_ACTION_BUTTON_LABELS.VIEW_CIS,
				BUTTON_TOOLTIP: gs.getMessage("View stale CIs"),
				BORDER_COLOR: this.IMPORTANT_ACTION_CATEGORIES.HEALTH.BORDER_COLOR
			},
			EXCLUDED_CIS: {
				ID: "excluded_cis",
				NAME: gs.getMessage("Excluded CIs"),
				TITLE: this.IMPORTANT_ACTION_CATEGORIES.DATA_MANAGEMENT.NAME,
				TITLE_ICON: this.IMPORTANT_ACTION_CATEGORIES.DATA_MANAGEMENT.TITLE_ICON,
				METADATA_LABEL: this.IMPORTANT_ACTION_METRIC_LABELS.CI_COUNT,
				BUTTON_LABEL: this.IMPORTANT_ACTION_BUTTON_LABELS.VIEW_CIS,
				BUTTON_TOOLTIP: gs.getMessage("View excluded CIs"),
				BORDER_COLOR: this.IMPORTANT_ACTION_CATEGORIES.DATA_MANAGEMENT.BORDER_COLOR
			},
			CMDB_EDITOR_OVERDUE_TASKS: {
				ID: "cmdb_editor_overdue_tasks",
				NAME: gs.getMessage("Overdue tasks"),
				TITLE: this.IMPORTANT_ACTION_CATEGORIES.DATA_ATTESTATION.NAME,
				TITLE_ICON: this.IMPORTANT_ACTION_CATEGORIES.DATA_ATTESTATION.TITLE_ICON,
				METADATA_LABEL: this.IMPORTANT_ACTION_METRIC_LABELS.TASK_COUNT,
				BUTTON_LABEL: this.IMPORTANT_ACTION_BUTTON_LABELS.VIEW_TASKS,
				BUTTON_TOOLTIP: gs.getMessage("View overdue tasks"),
				BORDER_COLOR: this.IMPORTANT_ACTION_CATEGORIES.DATA_ATTESTATION.BORDER_COLOR
			},
			CMDB_EDITOR_OPEN_TASKS: {
				ID: "cmdb_editor_open_tasks",
				NAME: gs.getMessage("Open tasks"),
				TITLE: this.IMPORTANT_ACTION_CATEGORIES.DATA_ATTESTATION.NAME,
				TITLE_ICON: this.IMPORTANT_ACTION_CATEGORIES.DATA_ATTESTATION.TITLE_ICON,
				METADATA_LABEL: this.IMPORTANT_ACTION_METRIC_LABELS.TASK_COUNT,
				BUTTON_LABEL: this.IMPORTANT_ACTION_BUTTON_LABELS.VIEW_TASKS,
				BUTTON_TOOLTIP: gs.getMessage("View open tasks"),
				BORDER_COLOR: this.IMPORTANT_ACTION_CATEGORIES.DATA_ATTESTATION.BORDER_COLOR
			},
			CMDB_EDITOR_LIFECYCLE_APPROVALS: {
				ID: "cmdb_editor_lifecycle_approvals",
				NAME: gs.getMessage("Lifecycle approvals"),
				TITLE: this.IMPORTANT_ACTION_CATEGORIES.DATA_MANAGEMENT.NAME,
				TITLE_ICON: this.IMPORTANT_ACTION_CATEGORIES.DATA_MANAGEMENT.TITLE_ICON,
				METADATA_LABEL: this.IMPORTANT_ACTION_METRIC_LABELS.TASK_COUNT,
				BUTTON_LABEL: this.IMPORTANT_ACTION_BUTTON_LABELS.VIEW_TASKS,
				BUTTON_TOOLTIP: gs.getMessage("View lifecycle approval tasks"),
				BORDER_COLOR: this.IMPORTANT_ACTION_CATEGORIES.DATA_MANAGEMENT.BORDER_COLOR
			},
			CMDB_EDITOR_DUPLICATE_CIS: {
				ID: "cmdb_editor_duplicate_cis",
				NAME: gs.getMessage("Duplicate CIs"),
				TITLE: this.IMPORTANT_ACTION_CATEGORIES.HEALTH.NAME,
				TITLE_ICON: this.IMPORTANT_ACTION_CATEGORIES.HEALTH.TITLE_ICON,
				METADATA_LABEL: this.IMPORTANT_ACTION_METRIC_LABELS.CI_COUNT,
				BUTTON_LABEL: this.IMPORTANT_ACTION_BUTTON_LABELS.VIEW_CIS,
				BUTTON_TOOLTIP: gs.getMessage("View duplicate CIs"),
				BORDER_COLOR: this.IMPORTANT_ACTION_CATEGORIES.HEALTH.BORDER_COLOR
			},
			CMDB_EDITOR_ORPHAN_CIS: {
				ID: "cmdb_editor_orphan_cis",
				NAME: gs.getMessage("Orphan CIs"),
				TITLE: this.IMPORTANT_ACTION_CATEGORIES.HEALTH.NAME,
				TITLE_ICON: this.IMPORTANT_ACTION_CATEGORIES.HEALTH.TITLE_ICON,
				METADATA_LABEL: this.IMPORTANT_ACTION_METRIC_LABELS.CI_COUNT,
				BUTTON_LABEL: this.IMPORTANT_ACTION_BUTTON_LABELS.VIEW_CIS,
				BUTTON_TOOLTIP: gs.getMessage("View orphan CIs"),
				BORDER_COLOR: this.IMPORTANT_ACTION_CATEGORIES.HEALTH.BORDER_COLOR
			},         
			CMDB_EDITOR_STALE_CIS: {
				ID: "cmdb_editor_stale_cis",
				NAME: gs.getMessage("Stale CIs"),
				TITLE: this.IMPORTANT_ACTION_CATEGORIES.HEALTH.NAME,
				TITLE_ICON: this.IMPORTANT_ACTION_CATEGORIES.HEALTH.TITLE_ICON,
				METADATA_LABEL: this.IMPORTANT_ACTION_METRIC_LABELS.CI_COUNT,
				BUTTON_LABEL: this.IMPORTANT_ACTION_BUTTON_LABELS.VIEW_CIS,
				BUTTON_TOOLTIP: gs.getMessage("View stale CIs"),
				BORDER_COLOR: this.IMPORTANT_ACTION_CATEGORIES.HEALTH.BORDER_COLOR
			}
		};
	},

	getRecommendationTypes: function() {
		return {
			UPDATE_IRE_DEBUG_LOG_LEVEL: {
				ID: this.RECOMMENDATION_TYPES.UPDATE_IRE_DEBUG_LOG_LEVEL,
				NAME: gs.getMessage("Turn off IRE debug log"),
				ACTION_LINK: {
					TEXT: gs.getMessage("Adjust debug log value"),
					TYPE: this.LINK_TYPES.ROUTE,
					HREF: this.HREF_FOR_ROUTE_TYPE,
					OPEN_NEW_WINDOW: false,
					ROUTE: {
						route: this.LIST_ROUTE,
						fields: {
							table: this.TABLES.SYS_PROPERTIES
						},
						params: {
							listTitle: gs.getMessage('System properties'),
							query: 'name=glide.cmdb.logger.source.identification_engine^EQ'
						}
					}
				}
			},
			REVIEW_BEFORE_QUERY_BR: {
				ID: this.RECOMMENDATION_TYPES.REVIEW_BEFORE_QUERY_BR,
				NAME: gs.getMessage("Review “before query” business rules"),
				ACTION_LINK: {
					TEXT: gs.getMessage("Review business rules"),
					HREF: "nav_to.do?uri=%2Fsys_script_list.do%3Fsysparm_query%3DcollectionINSTANCEOFcmdb_ci^active=true^when=before^action_query=true^EQ",
					TYPE: this.LINK_TYPES.EXTERNAL,
					OPEN_NEW_WINDOW: true
				}
			},
			REMOVE_RELATED_RECORDS_MISSING_REF: {
				ID: this.RECOMMENDATION_TYPES.REMOVE_RELATED_RECORDS_MISSING_REF,
				NAME: gs.getMessage("Remove CMDB related entry records missing references"),
				ACTION_LINK: {
					TEXT: gs.getMessage("Create Data Manager policy"),
					HREF: "nav_to.do?uri=%24ci_lifecycle_policy_workflow.do",
					TYPE: this.LINK_TYPES.EXTERNAL,
					OPEN_NEW_WINDOW: true
				}
			},
			REMOVE_REL_MISSING_PARENT_OR_CHILD: {
				ID: this.RECOMMENDATION_TYPES.REMOVE_REL_MISSING_PARENT_OR_CHILD,
				NAME: gs.getMessage("Remove relationship records missing parent or child"),
				ACTION_LINK: {
					TEXT: gs.getMessage("Learn more"),
					HREF: "https://support.servicenow.com/kb?id=kb_article_view&amp;sysparm_article=KB0829101",
					TYPE: this.LINK_TYPES.EXTERNAL,
					OPEN_NEW_WINDOW: true
				}
			},
			MANAGE_STALE_CIS: {
				ID: this.RECOMMENDATION_TYPES.MANAGE_STALE_CIS,
				NAME: gs.getMessage("Manage stale CIs"),
				ACTION_LINK: {
					TEXT: gs.getMessage("Create Data Manager policy"),
					HREF: "nav_to.do?uri=%24ci_lifecycle_policy_workflow.do",
					TYPE: this.LINK_TYPES.EXTERNAL,
					OPEN_NEW_WINDOW: true
				}
			},
			REVIEW_SGC_DEFINITIONS: {
				ID: this.RECOMMENDATION_TYPES.REVIEW_SGC_DEFINITIONS,
				NAME: gs.getMessage("Review SGC definitions"),
				ACTION_LINK: {
					TEXT: gs.getMessage("Go to IntegrationHub ETL"),
					HREF: "nav_to.do?uri=%2F$cmdb_integration_studio.do",
					TYPE: this.LINK_TYPES.EXTERNAL,
					OPEN_NEW_WINDOW: true
				}
			},
			ACTIVATE_CORRECTNESS_JOB: {
				ID: this.RECOMMENDATION_TYPES.ACTIVATE_CORRECTNESS_JOB,
				NAME: gs.getMessage("Activate CMDB Health Dashboard Correctness job"),
				ACTION_LINK: {
					TEXT: gs.getMessage("Review CMDB Health Dashboard jobs"),
					HREF: "nav_to.do?uri=$pa_dashboard.do%3Fsysparm_dashboard%3D0b35c80ceb10220078e44d3df106fe61%26sysparm_tab%3D58b44672ebf3120078e44d3df106fe97",
					TYPE: this.LINK_TYPES.EXTERNAL,
					OPEN_NEW_WINDOW: true
				}
			},
		};
	},
		
	getImportantActionConfigs: function() {
		var result = {};
		var configs = [];
		var importantActionCards = new GlideRecord(this.TABLES.SN_CMDB_WS_IMP_ACTION_CARD_CONFIG);
		importantActionCards.addQuery(this.COLS.CATEGORY, this.ACTION_CONFIG_CATEGORY.IMPORTANT_ACTION);
		if(gs.getUser().hasRole(this.ROLES.SN_CMDB_ADMIN)) {
			importantActionCards.addQuery(this.COLS.PERSONA, this.PERSONAS.CMDB_ADMIN);
		} else {
			importantActionCards.addQuery(this.COLS.PERSONA, this.PERSONAS.CMDB_EDITOR);
		}
		importantActionCards.addActiveQuery();
		importantActionCards.orderBy(this.COLS.ORDER);
		importantActionCards.query();

		while (importantActionCards.next()) {
			var tableName = importantActionCards.getValue(this.COLS.TABLE);
			var filterConditions = importantActionCards.getValue(this.COLS.FILTER_CONDITIONS);
			var type = importantActionCards.getValue(this.COLS.TYPE);
			var list_columns = importantActionCards.getValue(this.COLS.LIST_COLUMNS);
			var list_groupby = importantActionCards.getValue(this.COLS.LIST_GROUPBY);
			configs.push({
				tableName: tableName,
				filterConditions: filterConditions,
				type: type,
				list_columns: list_columns,
				list_groupby: list_groupby
			});
		}
		result.configs = configs;
		result.lastRefreshedDateTime = gs.getMessage("Last updated: {0}", new GlideDateTime().getDisplayValue());
		result.impActionTypes = this.getImportantActionTypes();
		return result;
	},
		
	getImportantActionCardData: function(config) {
		var ga = new GlideAggregate(config.tableName);
		if (config.filterConditions) {
			ga.addEncodedQuery(config.filterConditions);
		}
		ga.addAggregate('COUNT'); 
		ga.query();

		if (ga.next()) {
			var count = ga.getAggregate('COUNT');

			if (count &gt; 0) {
				return {
					type: config.type,
					count: count,
					table_name: config.tableName,
					filter_conditions: config.filterConditions,
					list_columns: config.list_columns,
					list_groupby: config.list_groupby,
					has_list_actions: this.tableHasActionConfig(config.tableName)
				};
			}
		}
		return '';
	},
	
	verifyCardContainsCount: function(type) {
		if (type == this.RECOMMENDATION_TYPES.REVIEW_BEFORE_QUERY_BR) {
			return true;
		}
		return false;
	},
																
	getRecommendationConfigs: function() {
		var result = {};
		var configs = [];
		var recommendationCards = new GlideRecord(this.TABLES.SN_CMDB_WS_IMP_ACTION_CARD_CONFIG);
		recommendationCards.addQuery(this.COLS.CATEGORY, this.ACTION_CONFIG_CATEGORY.RECOMMENDATION);
		if(gs.getUser().hasRole(this.ROLES.SN_CMDB_ADMIN)) {
			recommendationCards.addQuery(this.COLS.PERSONA, this.PERSONAS.CMDB_ADMIN);
		}
		recommendationCards.addActiveQuery();
		recommendationCards.orderBy(this.COLS.ORDER);
		recommendationCards.query();

		while (recommendationCards.next()) {
			var tableName = recommendationCards.getValue(this.COLS.TABLE);
			var filterConditions = recommendationCards.getValue(this.COLS.FILTER_CONDITIONS);
			var type = recommendationCards.getValue(this.COLS.TYPE);
			
			configs.push({
				tableName: tableName,
				filterConditions: filterConditions,
				type: type,
				displayCount : this.verifyCardContainsCount(type)
			});
		}
		result.configs = configs;
		result.recommendationTypes = this.getRecommendationTypes();
		return result;
	},
		
	getRecommendationCardData: function(config) {
		var displayCard = false;
		var resultObj = {};
		var count = 0;
		
		if (config.type == this.RECOMMENDATION_TYPES.REVIEW_SGC_DEFINITIONS) {
			var discoverySource = "";
			var integrationDiscoverySources = [];
			var grs = new GlideRecordSecure(this.TABLES.CMDB_INST_APPLICATION);
			grs.addEncodedQuery(this.COLS.NAME + this.OPERATORS.NOTLIKE + this.IH_ETL_DEMODATA_PREFIX);
			grs.query();
			while (grs.next()) {
				discoverySource = grs.getDisplayValue(this.COLS.DISCOVERY_SOURCE);
				if (integrationDiscoverySources.indexOf(discoverySource) == -1) {
					integrationDiscoverySources.push(grs.getDisplayValue(this.COLS.DISCOVERY_SOURCE));
				}
			}
			
			if (integrationDiscoverySources.length &gt; 0) {
				grs = new GlideRecordSecure(config.tableName);
				if (config.filterConditions) {
					grs.addEncodedQuery(config.filterConditions);
				}
				grs.query();

				while (grs.next()) {
					discoverySource = grs.getValue(this.COLS.DYNAMIC_GROUP_BY);

					if (integrationDiscoverySources.indexOf(discoverySource) &gt; -1) {
						displayCard = true;
						break;
					}
				}
			}
			
			return {
				type: config.type,
				display: displayCard
			};
			
		} else {
			var grs = new GlideRecordSecure(config.tableName);
			if (config.filterConditions) {
				grs.addEncodedQuery(config.filterConditions);
			}
			if (!config.displayCount) {
				grs.setLimit(1);
			}
			grs.query();

			if (grs.next()) {
				if (config.displayCount) {
					count = grs.getRowCount();
				}

				if (config.type == this.RECOMMENDATION_TYPES.UPDATE_IRE_DEBUG_LOG_LEVEL) {
					var propertyValue = grs.getValue(this.COLS.VALUE);
					if ((grs.canWrite() || this.isUserAdminOrMaint()) &amp;&amp; (propertyValue.includes(this.IRE_DEBUG_LOG_LEVEL.INFO) || propertyValue.includes(this.IRE_DEBUG_LOG_LEVEL.DEBUG))) {
						displayCard = true;
					}
				} else {
					displayCard = true;
				}
			}
			
			return {
				type: config.type,
				display: displayCard,
				count: count
			};
		}
		
	},

    type: 'CMDBWSImportantActionsUtil'
});]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2022-10-07 18:54:00&lt;/sys_created_on&gt;
        &lt;sys_id&gt;850b785bb7121110b87e80408e11a96e&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;40&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;CMDBWSImportantActionsUtil&lt;/sys_name&gt;
        &lt;sys_package display_value="CMDB Workspace" source="sn_cmdb_ws"&gt;c8ab76825371201032b7ddeeff7b1280&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="CMDB Workspace"&gt;c8ab76825371201032b7ddeeff7b1280&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_850b785bb7121110b87e80408e11a96e&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2023-11-09 06:08:17&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:44:43</sys_created_on>
        <sys_id>5168f81183341210c6695855eeaad3a3</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>CMDBWSImportantActionsUtil</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_5168f81183341210c6695855eeaad3a3</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:44:43</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
