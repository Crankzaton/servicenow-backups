<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>false</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition>GlideStringUtil.notNil(current.table)</condition>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Validate attributes for rule entry</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[var table = current.table;
var appliesTo = current.identifier.applies_to;
var attributes = current.attributes;
var hybridAttributes = current.hybrid_entry_ci_criterion_attributes;

// validate attributes
var validatedFields = validateAttributes(table, attributes, "identifier entry on " + table);
current.attributes = validatedFields.join();

// now validate hybrid attributes
if (table != appliesTo && hybridAttributes) {

 var validHybridFields = validateAttributes(appliesTo, hybridAttributes,
        "hybrid identifier entry on " + appliesTo);
 current.hybrid_entry_ci_criterion_attributes = validHybridFields.join();
}

function validateAttributes(table, attributes, ruleType) {
 var attrs = attributes.split(',');
 var gr = new GlideRecord(table);
 var left = [];
 for (var i in attrs) {
  if (attrs[i].indexOf('.')!=-1 ||
   gr.getElement(attrs[i])===null) {
   // skip invalid fields
  } else {
   left.push(attrs[i]);
  }
 }

 if (left.length != attrs.length) {
  gs.addInfoMessage(gs.getMessage("Invalid attributes have been skipped for {0} !", ruleType));
 }
 if (left.length === 0) {
  current.setAbortAction(true);
 }
 return left;
}]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:50:13</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>beebe85583701210c6695855eeaad38b</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Validate attributes for rule entry</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_beebe85583701210c6695855eeaad38b</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:50:13</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=beebe85583701210c6695855eeaad38b"/>
</record_update>
