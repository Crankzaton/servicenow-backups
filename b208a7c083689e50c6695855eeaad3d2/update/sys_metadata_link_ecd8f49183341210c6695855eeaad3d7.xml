<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>a4c5174c37ddf110d443bfc734924bf0</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;sn_workflow_studio.WFStudioUtils&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;WFStudioUtils&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var WFStudioUtils = Class.create();

WFStudioUtils.prototype = {
    initialize: function() {},

    userIsPADDelegatedDev: function() {
        return this._hasDDRole('processautomationdesigner', this._getUserRoles());
    },

    userIsFDDelegatedDev: function() {
        return this._hasDDRole('flowdesigner', this._getUserRoles());
    },

    userIsDecisionTablesDelegatedDev: function() {
        return this._hasDDRole('decisiontables', this._getUserRoles());
    },

    _getUserRoles: function() {
        var currentUser = gs.getUser();
        var roles = (currentUser.getUserRoles() + "").split(",");
        return roles;
    },

    _hasDDRole: function(ddRoleMatcher, roles) {
        var ddRoleMatcherRegEx = new RegExp('^sn_dd_[a-z0-9_-]+_' + ddRoleMatcher + '(_rc_\\d+)?$');
        return roles.some(function(role) {
            return ddRoleMatcherRegEx.test(role);
        });
    },

    _getMyDelegDevRoles: function() {
        var roles = [];
        var roleQuery = new GlideRecord("sys_user_has_role");
        roleQuery.addQuery("role.name", "STARTSWITH", "sn_dd_");
        roleQuery.addQuery("user", gs.getUserID());
        roleQuery.query();
        while (roleQuery.next()) {
            roles.push(roleQuery.getValue("role"));
        }
        return roles;
    },

    _getMyDelegDevApps: function(roles) {
        var ddApps = [];
        var allMetaPermSetId = "043a115e679112006cc2956c33415a36"; // User has access to all metadata
        var fdPermSetId = "d3ef33c067200300c4098c7942415a50"; // User has access to FD metadata
        var permAssignments = new GlideRecord("sys_scope_permission_set_role_assignment");
        permAssignments.addQuery("role", roles);
        permAssignments.addQuery("permission_set", fdPermSetId)
            .addOrCondition("permission_set", allMetaPermSetId);
        permAssignments.query();
        while (permAssignments.next()) {
            ddApps.push(permAssignments.getValue("scope"));
        }
        return ddApps;
    },

    fdFixedQuery: function() {
        var query = '';
        if (gs.hasRole("delegated_developer") &amp;&amp; !(gs.hasRole('admin') || gs.hasRole('flow_designer'))) {
            var ddRoles = this._getMyDelegDevRoles();
            var ddApps = this._getMyDelegDevApps(ddRoles);
            if (ddApps.length &gt; 0)
                query = "sys_scopeIN" + ddApps;
        }
        return query;
    },

    type: 'WFStudioUtils'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2023-09-11 03:13:40&lt;/sys_created_on&gt;
        &lt;sys_id&gt;a4c5174c37ddf110d443bfc734924bf0&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;24&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;WFStudioUtils&lt;/sys_name&gt;
        &lt;sys_package display_value="Workflow Studio" source="sn_workflow_studio"&gt;ae5cba824353e110f8abe279fcb8f258&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Workflow Studio"&gt;ae5cba824353e110f8abe279fcb8f258&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_a4c5174c37ddf110d443bfc734924bf0&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2024-03-01 10:27:12&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:46:35</sys_created_on>
        <sys_id>ecd8f49183341210c6695855eeaad3d7</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>WFStudioUtils</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_ecd8f49183341210c6695855eeaad3d7</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:46:35</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
