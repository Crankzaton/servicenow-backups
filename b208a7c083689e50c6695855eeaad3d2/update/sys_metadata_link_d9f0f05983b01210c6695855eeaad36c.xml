<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>23bcc906c7b333003e0d0ba4c7c260b7</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.IMSimilarIdeasML&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;IMSimilarIdeasML&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var IMSimilarIdeasML = Class.create();
IMSimilarIdeasML.prototype = {
    initialize: function(moduleInfo, activeSolution) {
		this.ideaTable = moduleInfo.ideaTable;
		this.moduleId = moduleInfo.id;
		this.activeSolution = activeSolution;
    },
	
	createResultantJson: function(resultantArray) {
		var results = [];
		var index;
		
		for(index = 0; index &lt; resultantArray.length; index++) {
			var idea = {};
			var title = resultantArray[index].short_description;

			if(title.length &gt; 120) {
				title = title.substring(0, 120) + '...';
			}

			idea.primary = title.toString();
			idea.url = '?id=view_idea&amp;sysparm_idea_id=' + resultantArray[index].sys_id + '&amp;sysparm_idea_table=' + this.ideaTable + '&amp;sysparm_module_id=' + this.moduleId;
			idea.target = '_blank';   // As these are similar ideas to be opened in new tab
			
			results.push(idea);
		}
		
		return results;
	},
	
	getIdeasRecords: function(outcomeArr) {
		try {
			var results = [];
			var index;
			
			for(index = 0; index &lt; outcomeArr.length; index++) {
				var idea = {};
				var sysId = outcomeArr[index].predictedValue();
				
				var ideaRecord = new GlideRecord(this.ideaTable);
				ideaRecord.addQuery("sys_id", sysId);
				ideaRecord.query();
				ideaRecord.next();
				results.push(ideaRecord);
			}
			
			return results;
			
		} catch(exception) {
			gs.error("Exception in getIdeasRecords: "+exception);
		}
	},
	
	getIdeas: function(inputQuery, description) {
		try {
			var maxNumberOfPredictions = 10;
			var isThresholdRequired = true;
			var getPredictionsOptions = {
				top_n: maxNumberOfPredictions,
				apply_threshold: isThresholdRequired,
				mluc: 'MLUC-SPM-00003'
			};
			// Creating a temporary glide record for prediction
			var record = new GlideRecord(this.ideaTable);
			record.short_description = inputQuery;
			if(description) {
				record.description = description;
			}
			var outcomeArr = this.activeSolution.getActiveVersion().predict(record, getPredictionsOptions)
			return outcomeArr;
			
		} catch(exception) {
			gs.error("Exception in getIdeas: "+exception);
		}
	},
	
	getSimilarIdeas: function(inputQuery) {
		try {
			var results = [];
			var outcomeArr = this.getIdeas(inputQuery);
			// As the predictions will be of sys_ids following functions will extract the respective records
			if(outcomeArr.length &gt; 0) {
				results = this.getIdeasRecords(outcomeArr);
				results = this.createResultantJson(results);
				results = results.reverse();
			}
			
			return results;
			
		} catch(exception) {
			gs.error("Exception in getSimilarIdeas: "+exception);
		}
	},
	
    type: 'IMSimilarIdeasML'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2019-09-11 11:26:24&lt;/sys_created_on&gt;
        &lt;sys_id&gt;23bcc906c7b333003e0d0ba4c7c260b7&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;17&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;IMSimilarIdeasML&lt;/sys_name&gt;
        &lt;sys_package display_value="Innovation Management" source="com.snc.innovation_management"&gt;cf2056ab47e64210cd4e1ce4316d4313&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_23bcc906c7b333003e0d0ba4c7c260b7&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2022-10-04 09:41:49&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:12:14</sys_created_on>
        <sys_id>d9f0f05983b01210c6695855eeaad36c</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>IMSimilarIdeasML</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_d9f0f05983b01210c6695855eeaad36c</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:12:14</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
