<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Update Case with Work order changes</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {

    // Add your code here
    var stateChange = true;
    var autoClose = false;
    var initiatedFromRecord, parentRecord;
    var smConfigGr = new GlideRecord("sm_config");
    if (smConfigGr.get("app_name", "field_service")) {
        stateChange = smConfigGr.work_order_state_to_case;
        autoClose = smConfigGr.auto_close_case;
    }


    if (current.initiated_from.sys_class_name)
        initiatedFromRecord = current.initiated_from.sys_class_name + '';
    if (current.parent.sys_class_name)
        parentRecord = current.parent.sys_class_name + '';


    if (stateChange && (initiatedFromRecord == "sn_customerservice_case" || parentRecord == "sn_customerservice_case")) {

        if (current.initiated_from.changes() || current.parent.changes()) {
            (new CustomerServiceCaseWorkOrderUtils()).updateCaseWithNewWO(current);
        }

        if (current.state.changes()) {
            //  gs.eventQueue('workorder.state_change', current, current.state, previous.state);
            (new CustomerServiceCaseWorkOrderUtils()).updateCaseWithWorkOrderStateChange(current, current.state);
        }
    }

    if (autoClose) {
        if (current.state.changesTo('3') || current.state.changesTo('7')) {

            var caseSysID;
            if (initiatedFromRecord == "sn_customerservice_case") {
                caseSysID = current.getValue('initiated_from');
            } else if (parentRecord == "sn_customerservice_case") {
                caseSysID = current.getValue('parent');
            }

            if (caseSysID) {

                (new CustomerServiceCaseWorkOrderUtils()).rollUpCloseCompleteToCase(caseSysID, current);

            }
        }
    }

})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:51:10</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>f82ca0d583701210c6695855eeaad3d5</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Update Case with Work order changes</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_f82ca0d583701210c6695855eeaad3d5</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:51:10</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=f82ca0d583701210c6695855eeaad3d5"/>
</record_update>
