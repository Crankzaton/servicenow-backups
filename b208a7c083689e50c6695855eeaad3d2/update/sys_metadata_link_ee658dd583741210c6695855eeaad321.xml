<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>e5b49fad87a02300ede6f64936cb0b7f</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_fix"&gt;
    &lt;sys_script_fix action="INSERT_OR_UPDATE"&gt;
        &lt;before&gt;false&lt;/before&gt;
        &lt;description&gt;In Madrid we have introduced new columns licensed_installs and unlicensed_installs on samp_product_result. We will set these values on the latest product results.&lt;/description&gt;
        &lt;name&gt;Update Product Result License Count&lt;/name&gt;
        &lt;record_for_rollback&gt;false&lt;/record_for_rollback&gt;
        &lt;script&gt;&lt;![CDATA[updateProductResultLicenseCount();


function updateProductResultLicenseCount() {
	var installs = {};

	// Get all the installs directly associated to the product result
	var installsGr = new GlideAggregate('cmdb_sam_sw_install');
	installsGr.addAggregate('COUNT', 'unlicensed_install');
	installsGr.addNotNullQuery('product_result');
	installsGr.groupBy('product_result');
	installsGr.groupBy('unlicensed_install');
	installsGr.query();

	/* Convert the able query result to
	{&lt;productResultId1&gt; : {'true': &lt;no_of_unlicensed&gt;,
						   'false': &lt;no_of_licensed&gt;},
	 &lt;productResultId2&gt; : {'true': &lt;no_of_unlicensed&gt;,
						   'false': &lt;no_of_licensed&gt;}      ... } */
	while (installsGr.next()) {
		if (!installs[installsGr.getValue('product_result')]) { installs[installsGr.getValue('product_result')] = { 'true': 0, 'false': 0 }; }

		installs[installsGr.getValue('product_result')][installsGr.getValue('unlicensed_install')] = parseInt(installsGr.getAggregate('COUNT', 'unlicensed_install'));
	}

	// Update product results
	var productResult = new GlideRecord('samp_product_result');
	productResult.addQuery('latest', true);
	productResult.orderBy('is_parent'); // Update the child Product Results first
	productResult.query();
	while (productResult.next()) {
		if (!installs[productResult.getUniqueValue()]) { installs[productResult.getUniqueValue()] = { 'true': 0, 'false': 0 }; }
		var installCount = installs[productResult.getUniqueValue()];
		if (productResult.is_parent) { installCount = this.getChildProdResultCount(productResult, installCount); }
		productResult.setValue('unlicensed_installs', installCount['true']);
		productResult.setValue('licensed_installs', installCount['false']);
		productResult.update();
	}
}

function getChildProdResultCount(productResult, installCount) {
	var childProductResultGr = new GlideAggregate('samp_product_result');
	childProductResultGr.addQuery('latest', true);
	childProductResultGr.addQuery('is_parent', false);
	childProductResultGr.addQuery('reconciliation_result', productResult.getValue('reconciliation_result'));
	childProductResultGr.addQuery('product', productResult.getValue('product'));
	childProductResultGr.addAggregate('SUM', 'unlicensed_installs');
	childProductResultGr.addAggregate('SUM', 'licensed_installs');
	childProductResultGr.setGroup(false);
	childProductResultGr.query();

	while (childProductResultGr.next()) {
		installCount['true'] += parseInt(childProductResultGr.getAggregate('SUM', 'unlicensed_installs'));
		installCount['false'] += parseInt(childProductResultGr.getAggregate('SUM', 'licensed_installs'));
	}
	return installCount;
}
]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_fix&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2018-09-14 23:08:42&lt;/sys_created_on&gt;
        &lt;sys_id&gt;e5b49fad87a02300ede6f64936cb0b7f&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;7&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;Update Product Result License Count&lt;/sys_name&gt;
        &lt;sys_package display_value=""&gt;bd1f72f347213110020ba9f8536d43db&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_fix_e5b49fad87a02300ede6f64936cb0b7f&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2019-11-12 00:38:13&lt;/sys_updated_on&gt;
        &lt;unloadable&gt;false&lt;/unloadable&gt;
    &lt;/sys_script_fix&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 09:41:37</sys_created_on>
        <sys_id>ee658dd583741210c6695855eeaad321</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Update Product Result License Count</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_ee658dd583741210c6695855eeaad321</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 09:41:37</sys_updated_on>
        <tablename>sys_script_fix</tablename>
    </sys_metadata_link>
</record_update>
