<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>18bba01583701210c6695855eeaad3f7</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules"&gt;
    &lt;x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE"&gt;
        &lt;abort_action&gt;false&lt;/abort_action&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;action_delete&gt;false&lt;/action_delete&gt;
        &lt;action_insert&gt;true&lt;/action_insert&gt;
        &lt;action_query&gt;false&lt;/action_query&gt;
        &lt;action_update&gt;true&lt;/action_update&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;add_message&gt;false&lt;/add_message&gt;
        &lt;advanced&gt;true&lt;/advanced&gt;
        &lt;change_fields&gt;false&lt;/change_fields&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;collection/&gt;
        &lt;condition/&gt;
        &lt;description/&gt;
        &lt;execute_function&gt;true&lt;/execute_function&gt;
        &lt;filter_condition/&gt;
        &lt;is_rest&gt;false&lt;/is_rest&gt;
        &lt;message/&gt;
        &lt;name&gt;Validate Column Encryption&lt;/name&gt;
        &lt;order&gt;200&lt;/order&gt;
        &lt;priority&gt;100&lt;/priority&gt;
        &lt;rest_method/&gt;
        &lt;rest_method_text/&gt;
        &lt;rest_service/&gt;
        &lt;rest_service_text/&gt;
        &lt;rest_variables/&gt;
        &lt;role_conditions/&gt;
        &lt;script&gt;&lt;![CDATA[function onBefore(current, previous) {
 // This is a biz rule, validating insert or update to Edge Column Configuration 
 if (current.isActionAborted())
  return;
 
 // column can't be empty (in other words, the column needs to exist)
 if (current.column.nil()) {
  gs.addErrorMessage(gs.getMessage('Choose a field to encrypt or select type Attachments'));
  current.setAbortAction(true);
  return;
 }
 
 var tableName = current.table;
 var fieldName = current.column;
 var isActive = !!current.active;
 var gr = new GlideRecord(tableName);
    
 // If the table has been deleted after edge encryption configuration is created, allow deactivation
 if (!gr.isValid() &amp;&amp; !isActive)
  return;
 else {
  // If the column has been deleted after edge encryption configuration is created, allow deactivation
  var isValidColumn = gr.isValidField(fieldName);
  if (!isValidColumn &amp;&amp; !isActive)
   return;
 }
 
 // abort if field is invalid
 if (!gr.isValidField(fieldName)) {
  gs.addErrorMessage(gs.getMessage('Invalid column {0} for table {1}', [fieldName, tableName]));
  current.setAbortAction(true);
  return;
 }
 
 var ge = gr.getElement(fieldName);
 if (ge === undefined) {
  var fieldErmsg = gs.getMessage('GlideElement undefined for column {0} for table {1}', [fieldName, tableName]);
  gs.addErrorMessage(fieldErmsg);
  gs.error(fieldErmsg);
  current.setAbortAction(true);
  return;
 }
 
 var ed = ge.getED();
 // abort if selected field does not support encryption
 // abort if it is a sys field, choice field, virtual field or number field
 if (isFieldInvalid(gr, fieldName)) {
  var invalErmsg = gs.getMessage('Field {0} in table {1} does not support encryption', [fieldName, tableName]);
  gs.addErrorMessage(invalErmsg);
  gs.error(invalErmsg);
  current.setAbortAction(true);
  return;
 }

 if (!new sn_edge_encryption_ns.EdgeVersionCompatibilityValidator().isGlideObjectSupported(ed.getInternalType())) {
  var proxyErmsg = gs.getMessage("Encryption for fields of type {0} is not supported by one or more of your registered proxies. Please update your proxies to the most recent version.", ed.getInternalType());
  gs.addErrorMessage(proxyErmsg);
  gs.error(proxyErmsg);
  current.setAbortAction(true);
  return;
 }

 // Allow columns to be marked as false independent of encryptions in hierarchy
 if(current.active == true) {
  // abort if column is already encrypted for current table or any ancestor
  var configuration = new GlideRecord('sys_encryption_configuration');
  configuration.addQuery('table', 'IN', (new GlideTableHierarchy(tableName)).getHierarchy());
  configuration.addQuery('type', 'Column');
  configuration.addQuery('column', fieldName);
  configuration.addQuery('active', true);
  configuration.addQuery('sys_id', '!=', current.sys_id);
  configuration.query();
  if (configuration.next()) {
   var raceErmsg = gs.getMessage('The selected field already has an encryption configuration for table {0} or its extensions', tableName);
   gs.addErrorMessage(raceErmsg);
   gs.error(raceErmsg);
   current.setAbortAction(true);
   return;
  }
 }
}

function isFieldInvalid(gr, fieldName) {
 var ge = gr.getElement(fieldName);
 if (ge === undefined || (ge + '' == 'null'))
  return false;
 
 // basic checks first
 if (!ge.getBooleanAttribute('edge_encryption_enabled') || ge.getBooleanAttribute('edge_encryption_excluded'))
  return true;
 
 // getting to the good stuff
 var encryptableFields = new EdgeEncryptableChoiceFields().process(gr.getTableName());
 var arrayUtil = new global.ArrayUtil();
 return !arrayUtil.contains(encryptableFields, fieldName);
}]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;x_938076_now_utils_now_utils_business_rules&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2024-09-21 07:49:13&lt;/sys_created_on&gt;
        &lt;sys_domain&gt;global&lt;/sys_domain&gt;
        &lt;sys_domain_path&gt;/&lt;/sys_domain_path&gt;
        &lt;sys_id&gt;18bba01583701210c6695855eeaad3f7&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;Validate Column Encryption&lt;/sys_name&gt;
        &lt;sys_overrides/&gt;
        &lt;sys_package display_value="Now Utils" source="x_938076_now_utils"&gt;b208a7c083689e50c6695855eeaad3d2&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Now Utils"&gt;b208a7c083689e50c6695855eeaad3d2&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;x_938076_now_utils_now_utils_business_rules_18bba01583701210c6695855eeaad3f7&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2024-09-21 07:49:13&lt;/sys_updated_on&gt;
        &lt;template/&gt;
        &lt;when&gt;before&lt;/when&gt;
    &lt;/x_938076_now_utils_now_utils_business_rules&gt;
    &lt;sys_translated_text action="delete_multiple" query="documentkey=18bba01583701210c6695855eeaad3f7"/&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:57:09</sys_created_on>
        <sys_id>608da49d83701210c6695855eeaad36d</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Validate Column Encryption</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_608da49d83701210c6695855eeaad36d</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:57:09</sys_updated_on>
        <tablename>sys_script</tablename>
    </sys_metadata_link>
</record_update>
