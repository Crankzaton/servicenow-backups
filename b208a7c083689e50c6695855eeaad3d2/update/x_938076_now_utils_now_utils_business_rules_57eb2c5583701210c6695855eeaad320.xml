<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>true</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition>!current.isActionAborted()</condition>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Delete Referencing Rows</name>
        <order>200</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function deleteReferenceRecords(current, previous) {
    var recordTables = [{
            tableName: 'sys_app_template_manifest',
            columnName: 'template'
        }
    ];

 // If the delete action is aborted by some other script, then do not delete the records.
    if (!gs.nil(current) && !current.isActionAborted()) {
        var templateSysId = current.getValue("sys_id");
        recordTables.forEach(function(recordTable) {
            var records = new GlideRecord(recordTable.tableName);
            records.addQuery(recordTable.columnName, templateSysId);
            records.query();

            if (records.hasNext()) {
                records.deleteMultiple();
            }
        });

        var templateMappingGR = new GlideRecord('sys_app_flow_template_mapping');
        templateMappingGR.addQuery('template', templateSysId);
        templateMappingGR.query();
        if(templateMappingGR.next()) {
            var flowTemplateSysId = templateMappingGR.getValue('flow');
            var query =  'sys_id=' + flowTemplateSysId;
   var flowRecord = new GlideRecord('sys_hub_flow');
   flowRecord.addEncodedQuery(query);
   flowRecord.query();
   if (flowRecord.hasNext()) {
    flowRecord.deleteMultiple();
   }   
        }
  

    }
})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:50:15</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>57eb2c5583701210c6695855eeaad320</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Delete Referencing Rows</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_57eb2c5583701210c6695855eeaad320</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:50:15</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=57eb2c5583701210c6695855eeaad320"/>
</record_update>
