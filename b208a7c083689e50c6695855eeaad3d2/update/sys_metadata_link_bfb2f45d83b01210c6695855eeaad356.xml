<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>2fb99bba11561110fa9bde2a564dc328</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_fix"&gt;
    &lt;sys_script_fix action="INSERT_OR_UPDATE"&gt;
        &lt;before&gt;true&lt;/before&gt;
        &lt;description&gt;Refer to EPIC1045543. For pre-Utah customers who normally run reconciliation with grouping, an entitlement consumption rule for the owner of the entitlement is added to restrict rights used to within the group. This is necessary because in Utah, running reconciliation with grouping alone does not restrict license consumption like previous behavior.&lt;/description&gt;
        &lt;name&gt;SAM - Utah Grouping Enhancement Upgrade&lt;/name&gt;
        &lt;record_for_rollback&gt;true&lt;/record_for_rollback&gt;
        &lt;script&gt;&lt;![CDATA[function groupingEnhancementUpgrade() {
	var groupCode = gs.getProperty('com.snc.samp.recon.group', 'none');
	var subgroupCode = gs.getProperty('com.snc.samp.recon.subgroup', 'none');

	// If reconciliation is not normally run with grouping there is no need to add entitlement consumption rules.
	if (groupCode === 'none') {
		return;
	}

	// Group and subgroup should not be the same.
	if (groupCode === subgroupCode) {
		subgroupCode = 'none';
	}

	// Get all active entitlements
	var entitlementGr = new GlideRecord('alm_license');
	entitlementGr.addQuery('install_status', 1); // In Use
	entitlementGr.query();
	while (entitlementGr.next()) {
		var group;
		var subgroup;
		var groupDisplay;
		var subgroupDisplay;
		var entitlementDomain = entitlementGr.getValue('sys_domain') || 'global';
		var region;

		// Get group value
		if (groupCode === 'country') {
			group = entitlementGr.location.country.toString() || null;
			groupDisplay = group;
		} else if (groupCode === 'region') {
			region = (entitlementGr.location.full_name.toString() || '').split('/')[0] || null;
			groupDisplay = region;
			group = GroupingUtil.getRegionReferenceFromName(region);
		} else {
			group = entitlementGr.getValue(groupCode);
			groupDisplay = entitlementGr[groupCode].name;
		}

		// Get subgroup value
		if (subgroupCode !== 'none') {
			if (subgroupCode === 'country') {
				subgroup = entitlementGr.location.country.toString() || null;
				subgroupDisplay = subgroup;
			} else if (subgroupCode === 'region') {
				region = (entitlementGr.location.full_name.toString() || '').split('/')[0] || null;
				subgroupDisplay = region;
				subgroup = GroupingUtil.getRegionReferenceFromName(region);
			} else {
				subgroup = entitlementGr.getValue(subgroupCode);
				subgroupDisplay = entitlementGr[subgroupCode].name;
			}
		}

		// No consumption rule needed if group and subgroup values are not set on entitlement.
		if (!group &amp;&amp; !subgroup) {
			continue;
		}

		// Get the consumption rule on group + subgroup, or add the rule if needed.
		var consumptionRuleGr = new GlideRecord('samp_consumption_rule');
		consumptionRuleGr.addQuery('sys_domain', entitlementDomain);
		if (group) {
			consumptionRuleGr.addQuery(groupCode, group);
		} else {
			consumptionRuleGr.addNullQuery(groupCode);
		}
		if (subgroup) {
			consumptionRuleGr.addQuery(subgroupCode, subgroup);
		} else {
			consumptionRuleGr.addNullQuery(subgroupCode);
		}
		consumptionRuleGr.setLimit(1);
		consumptionRuleGr.query();

		var consumptionRule;
		if (consumptionRuleGr.next()) {
			consumptionRule = consumptionRuleGr.getUniqueValue();
		} else {
			var display = [groupDisplay, subgroupDisplay].filter(Boolean).join(' - ');
			var newConsumptionRuleGr = new GlideRecord('samp_consumption_rule');
			newConsumptionRuleGr.initialize();
			newConsumptionRuleGr.setValue(groupCode, group);
			newConsumptionRuleGr.setValue(subgroupCode, subgroup);
			newConsumptionRuleGr.setValue('sys_domain', entitlementDomain);
			newConsumptionRuleGr.setValue('display_name', display);
			consumptionRule = newConsumptionRuleGr.insert();
		}

		// Add consumption rule for entitlement.
		var entConsumptionRule = new GlideRecord('samp_sw_ent_consumption_rule');
		entConsumptionRule.initialize();
		entConsumptionRule.setValue('software_entitlement', entitlementGr.getUniqueValue());
		entConsumptionRule.setValue('consumption_rule', consumptionRule);
		entConsumptionRule.setValue('sys_domain', entitlementDomain);
		entConsumptionRule.insert();
	}
}
groupingEnhancementUpgrade();
]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_fix&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;maint&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2022-10-06 17:21:14&lt;/sys_created_on&gt;
        &lt;sys_id&gt;2fb99bba11561110fa9bde2a564dc328&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;12&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;SAM - Utah Grouping Enhancement Upgrade&lt;/sys_name&gt;
        &lt;sys_package display_value=""&gt;bd1f72f347213110020ba9f8536d43db&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_fix_2fb99bba11561110fa9bde2a564dc328&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;maint&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2022-12-16 19:53:07&lt;/sys_updated_on&gt;
        &lt;unloadable&gt;false&lt;/unloadable&gt;
    &lt;/sys_script_fix&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:20:03</sys_created_on>
        <sys_id>bfb2f45d83b01210c6695855eeaad356</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>SAM - Utah Grouping Enhancement Upgrade</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_bfb2f45d83b01210c6695855eeaad356</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:20:03</sys_updated_on>
        <tablename>sys_script_fix</tablename>
    </sys_metadata_link>
</record_update>
