<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>099fdab297012100a61d10aa1c297557</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_fix"&gt;
    &lt;sys_script_fix action="INSERT_OR_UPDATE"&gt;
        &lt;before&gt;false&lt;/before&gt;
        &lt;description&gt;Copies sys_update_set id to new field set_id and drops sys_update_set column&lt;/description&gt;
        &lt;name&gt;Delete UpdateSet Field from Update Log&lt;/name&gt;
        &lt;record_for_rollback&gt;false&lt;/record_for_rollback&gt;
        &lt;script&gt;&lt;![CDATA[
	var script = "deleteUpdateSetField();\
	function deleteUpdateSetField() {\
		var logTable = 'sys_update_log';\
		var logSource = 'Delete UpdateSet FixScript';\
		if (!GlideTableDescriptor.fieldExists(logTable, 'sys_update_set'))\
			return;\
		if (!(GlideTableDescriptor.fieldExists(logTable, 'set_table') &amp;&amp; GlideTableDescriptor.fieldExists(logTable, 'set_id'))) {\
			gs.log('sys_update_log table does not have required fileds (set_table and set_id) to perform this fix script', 'Delete UpdateSet FixScript');\
			return;\
		}\
		gs.log('Updating sys_update_log with document_id', logSource);\
		var updateLog = new GlideRecord(logTable);\
		updateLog.addNotNullQuery('sys_update_set');\
		updateLog.query();\
		gs.log('Found ' + updateLog.getRowCount() + ' rows to update', logSource);\
		var count = 0;\
		while (updateLog.next()) {\
			updateLog.setValue('set_table', 'sys_update_set');\
			updateLog.setValue('set_id', updateLog.getValue('sys_update_set'));\
			updateLog.update();\
			count++;\
			if (count % 1000 == 0) {\
			  gs.log('Completed ' + count + ' rows, yielding for 100ms', logSource);\
			  gs.sleep(100);\
			}\
		}\
		//now drop the column\
		GlideSystemUtilDB.dropColumn(logTable, 'sys_update_set');\
		//drop any remaining indexes\
		var dbi = GlideDBConfiguration.getDBI(logTable);\
		new GlideIndexUtils().dropIndexes(dbi, logTable);\
		//create index for new columns\
		gs.log('Adding a new index for new columns', logSource);\
		var indexfields = ['set_table', 'set_id', 'sequence'];\
		var indexName = 'index0';\
		GlideSystemUtilDB.ensureCompositeIndex(logTable, indexfields, indexName);\
		gs.log('Done adding indexes', logSource);\
	}";
	
	//Make sure the trigger does not already exist.  Only should be running once.
	var triggerGR = new GlideRecord('sys_trigger');
	triggerGR.addQuery('script', 'CONTAINS', script);
	triggerGR.query();
	if(!triggerGR.next())
		GlideRunScriptJob.scheduleScript(script);
	
]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_fix&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2014-06-05 19:01:38&lt;/sys_created_on&gt;
        &lt;sys_id&gt;099fdab297012100a61d10aa1c297557&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;2&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;Delete UpdateSet Field from Update Log&lt;/sys_name&gt;
        &lt;sys_package display_value="System Update Sets (with remote update set support)" source="com.glide.system_update_set"&gt;44f3bce43c31311068bcf327dfe37f6b&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_fix_099fdab297012100a61d10aa1c297557&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2014-06-05 19:05:49&lt;/sys_updated_on&gt;
        &lt;unloadable&gt;false&lt;/unloadable&gt;
    &lt;/sys_script_fix&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:19:00</sys_created_on>
        <sys_id>28823c1d83b01210c6695855eeaad365</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Delete UpdateSet Field from Update Log</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_28823c1d83b01210c6695855eeaad365</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:19:00</sys_updated_on>
        <tablename>sys_script_fix</tablename>
    </sys_metadata_link>
</record_update>
