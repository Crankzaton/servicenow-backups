<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Check Location in shift</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {

    var abort = false;

    if (gs.nil(current.location.sys_class_name)) {
        gs.addErrorMessage(gs.getMessage("Selected space is unavailable."));
        abort = true;
    } else if (!(current.location.sys_class_name == WPConstants.TABLES.AREA || current.location.sys_class_name == WPConstants.TABLES.SPACE)) {
        gs.addErrorMessage(gs.getMessage("You can add location of type Area (or) Space only"));
        abort = true;
    } else if (!gs.nil(current.shift.area) && current.shift.area != current.location.area) {
        gs.addErrorMessage(gs.getMessage("{0} is not from {1} area", [current.location.title, current.shift.area.title]));
        abort = true;
    } else if (!gs.nil(current.shift.floor) && current.shift.floor != current.location.floor) {
        gs.addErrorMessage(gs.getMessage("{0} is not from {1} floor", [current.location.title, current.shift.floor.title]));
        abort = true;
    } else if (!gs.nil(current.shift.building) && current.shift.building != current.location.building) {
        gs.addErrorMessage(gs.getMessage("{0} is not from {1} building", [current.location.title, current.shift.building.title]));
        abort = true;
    } else if (!gs.nil(current.shift.campus) && current.location.campus != current.shift.campus) {
        gs.addErrorMessage(gs.getMessage("{0} is not from {1} campus", [current.location.title, current.shift.campus.title]));
        abort = true;
    }

    if (abort)
        current.setAbortAction(true);

})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:49:50</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>19db605583701210c6695855eeaad3a8</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Check Location in shift</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_19db605583701210c6695855eeaad3a8</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:49:50</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=19db605583701210c6695855eeaad3a8"/>
</record_update>
