<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Get Impacted Group</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {

    var dmnGr = 'b662414f93f73510b31a30dcebba10ef';
    /*
     var metricTypeRecords = gs.getProperty('wf.assessment.ID');
            var metricObj = JSON.parse(metricTypeRecords);
            var mtrType = metricObj["demandAsmt"];
            var arrayImpType;
            var strComb = [];
            var asmtGr = new GlideRecord("asmt_metric_result");
            asmtGr.addQuery("source_id", dmnGr);
            asmtGr.addEncodedQuery('metric_definition.metric.category.metric_type=' + mtrType + '^metric.sys_name=u_potential_groups^string_valueISNOTEMPTY');
            asmtGr.query();
            while (asmtGr.next()) {
       gs.addInfoMessage(asmtGr.instance.getDisplayValue());
                var impType = asmtGr.string_value;

                //impacted
                if (!gs.nil(impType)) {
                    arrayImpType = impType.split(",");
                }
                var len = arrayImpType.length;
                for (var i = 0; i < len; i++) {
                    strComb.push(arrayImpType[i]);

                }

            }*/
    var asmt = 'AINST0010047';
    var metricTypeRecords = gs.getProperty('wf.assessment.ID');
    var metricObj = JSON.parse(metricTypeRecords);
    var mtrType = metricObj["demandAsmt"];
    var strComb = [];
    var asmtGr = new GlideRecord("asmt_metric_result");
    asmtGr.addQuery("source_id", dmnGr);
    asmtGr.addEncodedQuery('instance.number=' + asmt + '^metric_definition.metric.category.metric_type=' + mtrType + '^metric.sys_name=u_potential_groups^string_valueISNOTEMPTY');
    asmtGr.query();
    while (asmtGr.next()) {

        var impType = asmtGr.string_value;
        strComb.push(impType + "");

    }

    gs.addInfoMessage(strComb.toString());

})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:47:16</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>ab3be05183701210c6695855eeaad30e</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Get Impacted Group</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_ab3be05183701210c6695855eeaad30e</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:47:16</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=ab3be05183701210c6695855eeaad30e"/>
</record_update>
