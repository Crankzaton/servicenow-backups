<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>13611f7937111200455726877e41f1cd</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.PortfolioStats&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;PortfolioStats&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var PortfolioStats = Class.create();
PortfolioStats.getStats = function(params) {
    //gs.info("Into PortfolioStats: " + (new JSON()).encode(params));
    var gr = new GlideRecord('pm_portfolio');
    gr.get(params.entity_id);
    var portfolio = new Portfolio(gr);
    
    var count = 0;
    var selected = 0;
    var label = '';
    if ( params.stats_for == 'project' )
        count = portfolio.projectsCount(params.fiscal_year_id);
    else if ( params.stats_for == 'demand' )
        count = portfolio.demandsCount(params.fiscal_year_id);
    else if ( params.stats_for == 'program' )
        count = portfolio.programsCount(params.fiscal_year_id);
        
    var stats = {};
    
    var aggHelper = new PmAggregateHelper();
    var fiscalPeriodConstraintBuilder;
    var queryConstraints;
    var encodedQuery;
    fiscalPeriodConstraintBuilder = new FiscalPeriodConstraintBuilder();
    queryConstraints = fiscalPeriodConstraintBuilder.buildConstraint(['project_funding'], params.fiscal_year_id);
    encodedQuery = queryConstraints.getNodeQueryCondition('project_funding');
    
    if ( params.context == 'trackportfolio' || params.context == 'reviseallocation' ) {  
        if ( params.stats_for == 'project' ) {
            selected = aggHelper.getCount('project_funding', 'portfolio', params.entity_id, encodedQuery+'^task.sys_class_nameINSTANCEOFpm_project^allocated=true');
            label = gs.getMessage('Allocated Projects');
        }
        else if ( params.stats_for == 'demand' ) {
            selected = aggHelper.getCount('project_funding', 'portfolio', params.entity_id, encodedQuery+'^task.sys_class_nameINSTANCEOFdmn_demand^allocated=true');
            label = gs.getMessage('Allocated Demands');
        }
        else if ( params.stats_for == 'program' ) {
            selected = aggHelper.getCount('project_funding', 'portfolio', params.entity_id, encodedQuery+'^taskISEMPTY^programISNOTEMPTY^allocated=true');
            label = gs.getMessage('Allocated Programs');
        }
    }
    else if ( params.context == 'selectprojects' ) {
        if ( params.stats_for == 'project' ) {
            selected = aggHelper.getCount('project_funding', 'portfolio', params.entity_id, encodedQuery+'^task.sys_class_nameINSTANCEOFpm_project^planned=true');
            label = gs.getMessage('Selected Projects');
        }
        else if ( params.stats_for == 'demand' ) {
            selected = aggHelper.getCount('project_funding', 'portfolio', params.entity_id, encodedQuery+'^task.sys_class_nameINSTANCEOFdmn_demand^planned=true');
            label = gs.getMessage('Selected Demands');
        }
        else if ( params.stats_for == 'program' ) {
            selected = aggHelper.getCount('project_funding', 'portfolio', params.entity_id, encodedQuery+'^taskISEMPTY^programISNOTEMPTY^planned=true');
            label = gs.getMessage('Selected Programs');
        }
    }
    stats = { entity: params.stats_for, label: label, selected: selected, count: count };
    //gs.info("Return of PortfolioStats: " + (new JSON()).encode(stats));
    return stats;
    
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2016-02-01 19:44:48&lt;/sys_created_on&gt;
        &lt;sys_id&gt;13611f7937111200455726877e41f1cd&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;12&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;PortfolioStats&lt;/sys_name&gt;
        &lt;sys_package display_value="PPM Standard" source="com.snc.financial_planning_pmo"&gt;92ef82e747e64210cd4e1ce4316d43e3&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_13611f7937111200455726877e41f1cd&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2016-08-05 09:54:03&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:10:32</sys_created_on>
        <sys_id>ec90f0d583b01210c6695855eeaad3e1</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>PortfolioStats</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_ec90f0d583b01210c6695855eeaad3e1</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:10:32</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
