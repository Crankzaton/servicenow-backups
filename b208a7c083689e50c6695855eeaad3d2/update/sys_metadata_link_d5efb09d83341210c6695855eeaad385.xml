<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>a7f5680053952110d185ddeeff7b1295</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;sn_entitlement.dao_AllocationDataDaoUtils&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;dao_AllocationDataDaoUtils&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var dao_AllocationDataDaoUtils = Class.create();
dao_AllocationDataDaoUtils.prototype = {
    initialize: function(table, keyField, entryIdField) {
        this._table = table;
        this._keyField = keyField;
        this._entryIdField = entryIdField;
    },

    /**
     * Persists an entry of allocation data with its associated roles and qualifying data to the database
     *
     * @param {object} entry The entry object containing allocation data to persist
     * @returns {string} The sysId of the entry inserted
     */
    insertAllocatedEntry: function(entry) {
        const gr = new GlideRecord(this._table);
        gr.setWorkflow(false);

        gr.setValue(this._entryIdField, entry[this._keyField]);
        gr.setValue('qualifying_data', JSON.stringify(entry.qualifying_data));
        gr.setValue('assigned_roles', entry.assigned_roles);
        gr.setValue('subscribeable_roles', entry.subscribeable_roles);
        gr.setValue('subscribed_roles', entry.subscribed_roles);
        gr.setValue('unsubscribed_roles', entry.unsubscribed_roles);
        gr.setValue('is_fully_allocated', !entry.is_unallocated);
        return gr.insert();
    },

    type: 'dao_AllocationDataDaoUtils'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2023-02-23 18:10:25&lt;/sys_created_on&gt;
        &lt;sys_id&gt;a7f5680053952110d185ddeeff7b1295&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;10&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;dao_AllocationDataDaoUtils&lt;/sys_name&gt;
        &lt;sys_package display_value="Licensing Engine" source="sn_entitlement"&gt;bcadabf277f311109c62f5f3cb5a992a&lt;/sys_package&gt;
        &lt;sys_policy&gt;read&lt;/sys_policy&gt;
        &lt;sys_scope display_value="Licensing Engine"&gt;bcadabf277f311109c62f5f3cb5a992a&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_a7f5680053952110d185ddeeff7b1295&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2023-02-24 03:38:47&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 09:17:29</sys_created_on>
        <sys_id>d5efb09d83341210c6695855eeaad385</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>dao_AllocationDataDaoUtils</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_d5efb09d83341210c6695855eeaad385</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 09:17:29</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
