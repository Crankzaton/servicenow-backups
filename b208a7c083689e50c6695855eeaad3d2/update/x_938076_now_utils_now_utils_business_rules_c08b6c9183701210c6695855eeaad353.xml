<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Update Name</name>
        <order>90</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {
 if (shouldSkipExecution(current))
  return;

    if (current.map_to_field == false && current.name == "") {
        var name = "formatter";
        var varsGr = getVarsWithName(name, current.cat_item, current.sys_id, current.variable_set);
        var nameMap = {};
        while (varsGr.next())
            nameMap[varsGr.name + ''] = varsGr.sys_id + '';
        if (nameMap[name] && nameMap[name] != current.sys_id) {
            for (var i = 2; i < 1000; i++) {
                var proposed_name = name + i;
                if (!nameMap[proposed_name] || nameMap[proposed_name] == current.sys_id) {
                    name = proposed_name;
                    break;
                }
            }
        }
        current.field = "";
        current.name = name;

        // Keep field value cleared when map_to_field is false
    } else if (current.map_to_field == false)
        current.field = "";

    function getVarsWithName(name, item_id, sys_id, varset_id) {
        var variables = new GlideRecord('item_option_new');
        variables.addQuery('name', 'STARTSWITH', name);
        if (!gs.nil(item_id))
            variables.addQuery('cat_item', item_id);
        else if (!gs.nil(varset_id))
            variables.addQuery('variable_set', varset_id);
        else {
            variables.addNullQuery('cat_item');
            variables.addNullQuery('variable_set');
        }
        variables.query();
        return variables;
    }

 function shouldSkipExecution(current) {
        return shouldSkipByProcess(current);
    }

    function shouldSkipByProcess(current) {
        return JSUtil.has(new global.SNCCatalogUtil().isProcessBuilder) && new global.SNCCatalogUtil().isProcessBuilder(current, ['checkout']);
    }
})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:48:23</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>c08b6c9183701210c6695855eeaad353</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Update Name</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_c08b6c9183701210c6695855eeaad353</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:48:23</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=c08b6c9183701210c6695855eeaad353"/>
</record_update>
