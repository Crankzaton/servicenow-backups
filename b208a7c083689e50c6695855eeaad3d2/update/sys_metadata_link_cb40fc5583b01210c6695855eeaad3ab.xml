<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>0642d20389169110f87788a793813a3e</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;public&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;sn_csm_case_types.CaseTypeHelper&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;Helper APIs for Case types&lt;/description&gt;
        &lt;name&gt;CaseTypeHelper&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var CaseTypeHelper = Class.create();

CaseTypeHelper.CUSTOMER_ACCOUNT = "customer_account";
CaseTypeHelper.CUSTOMER_CONTACT = "customer_contact";
CaseTypeHelper.CSM_CONSUMER = "csm_consumer";
CaseTypeHelper.SINGLE_FIELD_SELECT = "sn_csm_case_types.case_type_single_field_select";
CaseTypeHelper.SERVICE_DEFINITION_SELECT = "sn_csm_case_types.service_definition_select";
CaseTypeHelper.CSM_AGENT_ROLE = "sn_customerservice_agent";
CaseTypeHelper.CSM_CONSUMER_AGENT_ROLE = "sn_customerservice.consumer_agent";
CaseTypeHelper.SERVICE_DEFINITION_TABLE  = "sn_case_type_selection";
CaseTypeHelper.CASE_TYPE_TABLE  = "sn_case_type";

CaseTypeHelper.prototype = {
    initialize: function() {},

	showCreateCaseTypeSelector: function() {
		if (this._isServiceDefinitionSelectionEnabled())
            return true;
		else
			return this._isSingleFieldSelectionEnabled() ? this.hasServiceDefinitionSelectionDefined(null) : this.hasManageCaseTypesDefined();
	},

    showCreateCaseForCaseType: function(sourceTable, sourceId) {
        if (this._isServiceDefinitionSelectionEnabled())
            return true;
        var isCaseTypesConfigured = this._isCaseTypesConfigured(sourceTable, sourceId);
        if (sourceTable == CaseTypeHelper.CUSTOMER_ACCOUNT || sourceTable == CaseTypeHelper.CUSTOMER_CONTACT) {
            return (isCaseTypesConfigured &amp;&amp; this._hasAgentRole());
        } else if (sourceTable == CaseTypeHelper.CSM_CONSUMER) {
            return (isCaseTypesConfigured &amp;&amp; this._hasConsumerAgentRole());
        }
        return isCaseTypesConfigured;
    },

	/*
	* Function for record producer
	* return list of service definition sys_id based on Catalog Service Relationships table
	*/
	getServiceFromRecordProducer: function(recordProducer) {
		var gr = new GlideRecord("sn_csm_case_types_catalog_service_rel");
		var list = [];
		gr.addQuery("catalog_item", recordProducer);
		gr.query();
		while (gr.next()) {
			list.push(gr.getValue("service"));
		}
		return list;
	},

	isCaseTypeExtension: function(tableName) {
		return this._isCaseTypeExtension(tableName);
	},

	isServiceDefinitionSelectionEnabled: function() {
        return this._isServiceDefinitionSelectionEnabled();
    },

	hasManageCaseTypesDefined: function(){
		var CTCount = 0;
		var hasManageCaseTypes = new GlideAggregate(CaseTypeHelper.CASE_TYPE_TABLE);
		hasManageCaseTypes.query();
		CTCount = hasManageCaseTypes.getRowCount();
		if (CTCount &gt; 0)
			return true;
		return false;
	},

	hasServiceDefinitionSelectionDefined: function(table) {
		var SDCount = 0;
		var hasServiceDefinition = new GlideAggregate(CaseTypeHelper.SERVICE_DEFINITION_TABLE);
		hasServiceDefinition.addQuery("active", true);
		if(table != undefined || table != null)
			hasServiceDefinition.addQuery("table", table);
		hasServiceDefinition.addAggregate("COUNT");
		hasServiceDefinition.query();
		if (hasServiceDefinition.next())
			SDCount = hasServiceDefinition.getAggregate("COUNT");
		if (SDCount &gt; 0)
			return true;
		return false;
	},
  
	isRelatedServiceTaskEnabled: function(tableName) {
		var taskExtensions = new GlideTableHierarchy("sn_customerservice_task").getAllExtensions();
		return taskExtensions.indexOf(tableName) &gt; -1 &amp;&amp;
            this.isServiceDefinitionSelectionEnabled() &amp;&amp;
            this.hasServiceDefinitionSelectionDefined(tableName);
	},
	
	_isCaseTypeExtension: function(tableName) {
		var caseExtensions = new GlideTableHierarchy("sn_customerservice_case").getAllExtensions();
		return (caseExtensions.indexOf(tableName) &gt; -1);
	},

	_isSingleFieldSelectionEnabled: function() {
        return (gs.getProperty(CaseTypeHelper.SINGLE_FIELD_SELECT, "false") == "true");
    },
	
    _isServiceDefinitionSelectionEnabled: function() {
        return (gs.getProperty(CaseTypeHelper.SERVICE_DEFINITION_SELECT, "false") == "true");
    },

    _isCaseTypesConfigured: function(sourceTable, sourceId) {
        return (Object.keys(JSON.parse(new sn_csm_case_types.CaseTypeProcessor().getCaseTypes(sourceTable, sourceId))).length &gt; 0);
    },

    _hasAgentRole: function() {
        return gs.hasRole(CaseTypeHelper.CSM_AGENT_ROLE);
    },

    _hasConsumerAgentRole: function() {
        return gs.hasRole(CaseTypeHelper.CSM_CONSUMER_AGENT_ROLE);
    },

    type: 'CaseTypeHelper'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2022-10-07 06:37:03&lt;/sys_created_on&gt;
        &lt;sys_id&gt;0642d20389169110f87788a793813a3e&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;15&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;CaseTypeHelper&lt;/sys_name&gt;
        &lt;sys_package display_value="CSM Case Types" source="sn_csm_case_types"&gt;8ba29585872633003c1c8467a7cb0be4&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="CSM Case Types"&gt;8ba29585872633003c1c8467a7cb0be4&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_0642d20389169110f87788a793813a3e&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2023-04-20 03:16:24&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:09:21</sys_created_on>
        <sys_id>cb40fc5583b01210c6695855eeaad3ab</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>CaseTypeHelper</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_cb40fc5583b01210c6695855eeaad3ab</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:09:21</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
