<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>true</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Report Helpers</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[//
// Return an array of all the users that are in any of the groups specified
//
function getGroupMembers(name1, name2, name3, name4, name5) {
   var answer = new Array();
   getGroupMembersGivenGroupName(name1, answer);
   getGroupMembersGivenGroupName(name2, answer);
   getGroupMembersGivenGroupName(name3, answer);
   getGroupMembersGivenGroupName(name4, answer);
   getGroupMembersGivenGroupName(name5, answer);
   return answer;
}

// 
// Add members of a specified group into an array
//
function getGroupMembersGivenGroupName(name, answer) {
   var i = answer.length;
   if (name == null || name == '')
      return;

   var group = new GlideRecord('sys_user_group');
   group.addQuery('name', name);
   group.query();
   if (group.next()) {
      var groupID = group.sys_id;
      getGroupMembersGivenGroupID(groupID, answer);   
   }
   return answer;
}

// 
// Add members of a specified group into an array
//
function getGroupMembersGivenGroupID(groupID, answer) {
   var i = answer.length;            
   var members = new GlideRecord('sys_user_grmember');
   members.addQuery('group', groupID);
   members.query();      
   while (members.next()) {
      answer[i++] = new String(members.user);   
   }
   return answer;
}

//
// Get an array of all users that belong to the same groups
// that the current user belongs to
//
function getAllMembersOfMyGroups() {
  var u = gs.getUserID();
  var g = new GlideRecord("sys_user_grmember"); 
  g.addQuery("user", u); 
  g.query(); 
  var answer = new Array();
  var i = 0;
  while( g.next()) {
    getGroupMembersGivenGroupID(g.group, answer);  
  }
  return answer;

}]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:49:47</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>64db205583701210c6695855eeaad37a</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Report Helpers</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_64db205583701210c6695855eeaad37a</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:49:47</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=64db205583701210c6695855eeaad37a"/>
</record_update>
