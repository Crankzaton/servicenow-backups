<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Prevent ui_type collision</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

 // case ui_type ->
 //    all:
 //        no other record for the same field
 //    desktop:
 //        no other record for the same field and ui_type = (all or desktop)
 //    mobile_sp:
 //        no other record for the same field and ui_type = (all or mobile_sp)
 
 var DESKTOP = 'Desktop';
 var MOBILE_SP = 'Mobile / Service Portal';
 var ALL = 'All';
 
 function getUiType(id) {
  if (id === '1') { return MOBILE_SP; }
  if (id === '10') { return ALL; }
  return DESKTOP;
 }
 
 function ensureFieldType(internal_type) {
  if (!internal_type || internal_type === '') {
   gs.addErrorMessage(gs.getMessage('Please select a field type'));
   return false;
  }
  
  return true;
 }
 
 var internal_type = current.getValue('internal_type');
 
 if (!ensureFieldType(internal_type)) { 
  current.setAbortAction(true);
  return false; 
 }
 
 var current_ui_type = getUiType(current.getValue('ui_type'));
 
 var gr = new GlideRecord('sys_script_validator');
 gr.addQuery('internal_type', internal_type);
 if (!current.isNewRecord()) { gr.addQuery('sys_id', '!=', current.getUniqueValue()); }
 gr.query();
 
 var error = false;
 var ui_type = '';
 
 while (gr.next()) {
  ui_type = getUiType(gr.getValue('ui_type'));
  
  if (current_ui_type === ALL || ui_type === ALL || current_ui_type === ui_type) {
   error = true;
   break;
  }
 }
 
 if (error) {
  gs.addErrorMessage(gs.getMessage("There already exists another validation script for the '" + internal_type + "' field with ui type '" + ui_type + "'"));
  current.setAbortAction(true);
 }

})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:53:04</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>a09c609983701210c6695855eeaad32f</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Prevent ui_type collision</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_a09c609983701210c6695855eeaad32f</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:53:04</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=a09c609983701210c6695855eeaad32f"/>
</record_update>
