<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>true</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition>gs.getProperty("glide.cost_mgmt.calc_actual_cost") == "true"</condition>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Rollup Demand  Actual Cost</name>
        <order>900</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
 
 if (current.isActionAborted())
  return;
 
 if (current.operation() == 'insert' && JSUtil.notNil(current.parent)) {
  var currentCost = parseFloat(current.work_cost.getReferenceValue()); 
  var demandCostUtil = new DemandCostUtil();
        demandCostUtil.updateActualCostForDemand(currentCost, current.parent.getRefRecord());
 }
 else if(current.operation() == 'update' && JSUtil.notNil(current.parent) && current.work_cost.changes()){
  var oldValue = parseFloat(previous.work_cost.getReferenceValue());
  var newValue = parseFloat(current.work_cost.getReferenceValue()); 
  var currentCost = newValue - oldValue;
  var demandCostUtil = new DemandCostUtil();
        demandCostUtil.updateActualCostForDemand(currentCost, current.parent.getRefRecord());  
 }
 else if (current.operation() == 'delete'){
  var currentCost = parseFloat(current.work_cost.getReferenceValue()) * -1;
  var demandCostUtil = new DemandCostUtil();
        demandCostUtil.updateActualCostForDemand(currentCost, current.parent.getRefRecord());  
 }
 else
  return;

})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:51:24</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>d43ce4d583701210c6695855eeaad379</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Rollup Demand  Actual Cost</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_d43ce4d583701210c6695855eeaad379</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:51:24</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=d43ce4d583701210c6695855eeaad379"/>
</record_update>
