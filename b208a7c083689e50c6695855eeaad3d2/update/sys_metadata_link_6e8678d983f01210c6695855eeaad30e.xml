<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>48b5d81cb70201104eed7ad4ae11a975</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;sn_ux_seo_sitemap.SitemapRetriever&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;retrieves the generated sitemap for sitemapConfigId&lt;/description&gt;
        &lt;name&gt;SitemapRetriever&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var SitemapRetriever = Class.create();
SitemapRetriever.prototype = {
    initialize: function() {
    },
	
    getSitemapXML: function(sitemapConfigId, pageNo) {
		var attachmentContent = gs.info(gs.getMessage("Invalid parameters. Kindly contact administrator for further assistance"));
		
		// fetch sys attachments based on the sitemapConfigId parameter passed
		try {
			var attachment = new GlideSysAttachment();
			var attachmentRecords = attachment.getAttachments('sys_ux_seo_sitemap_config', sitemapConfigId);

			// pattern match to find sitemapIndex file, if it exists else return the sitemap file
			var sitemapFilenameRegex = new RegExp('^(sitemap-[0-9]+-)');
			
			// iterate through all attachments available
      			while (attachmentRecords.next()) {
				if (pageNo) {
					if (attachmentRecords.file_name.startsWith('sitemap-'+pageNo)) {
						attachmentContent = attachment.getContent(attachmentRecords);
						break;
					}
				} else if (!sitemapFilenameRegex.test(attachmentRecords.file_name)) {
					attachmentContent = attachment.getContent(attachmentRecords);
					break;
				}
			}
		} catch (err) {
			gs.info("error while retrieving attachment for {0}", sitemapConfigId);
		}
		return attachmentContent;
    },
	
    type: 'SitemapRetriever'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2022-03-01 02:03:46&lt;/sys_created_on&gt;
        &lt;sys_id&gt;48b5d81cb70201104eed7ad4ae11a975&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;12&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;SitemapRetriever&lt;/sys_name&gt;
        &lt;sys_package display_value="Sitemap Generator" source="sn_ux_seo_sitemap"&gt;26329d35f52d4510f877c32d14052947&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Sitemap Generator"&gt;26329d35f52d4510f877c32d14052947&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_48b5d81cb70201104eed7ad4ae11a975&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2022-04-18 23:52:40&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:36:37</sys_created_on>
        <sys_id>6e8678d983f01210c6695855eeaad30e</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>SitemapRetriever</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_6e8678d983f01210c6695855eeaad30e</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:36:37</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
