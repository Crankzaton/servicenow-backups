<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>608b8d87c3db3010d4437f9ec840dd6d</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;sn_decision_table.UserUtil&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;UserUtil&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var UserUtil = (function() {

    var isAdmin = gs.hasRole('admin');
    var isDecisionTableAdmin = gs.hasRole('decision_table_admin');
    var isDecisionTableReader = gs.hasRole('decision_table_reader');
    var isChangeManager = gs.hasRole('change_manager');

    return {

        // user gets delegated access if atleast one accessible scope has decision table permission
        hasDelegatedAccess: function() {
            var accessibleScopeIds = this._getAccessibleScopeIds();
            for (var i = 0; i &lt; accessibleScopeIds.length; i++) {
                if (this._hasDecisionTablePermission(accessibleScopeIds[i])) {
                    return true;
                }
            }
            return false;
        },

        getScopeIdsAccessibleByDelegatedDev: function() {
            var accessibleScopeIds = this._getAccessibleScopeIds();
            var scopeIdsWithDecisionTablePermission = [];
            for (var i = 0; i &lt; accessibleScopeIds.length; i++) {
                if (this._hasDecisionTablePermission(accessibleScopeIds[i])) {
                    scopeIdsWithDecisionTablePermission.push(accessibleScopeIds[i]);
                }
            }
            return scopeIdsWithDecisionTablePermission;
        },

        _hasDecisionTablePermission: function(sysId) {
            return gs.hasRightsTo('api/now.decision_tables/allow', {
                scopeId: sysId
            });
        },

        _getAccessibleScopeIds: function() {
            return gs.getSession().getApplicationPickerList().map(function(app) {
                return app.sysId;
            });
        },

        // Graphql acls do not support advanced/ script level configurations
        // We need advanced acl for our use cases and hence cannot rely on linking acl to graphql api 
        // This check has to be made to accommodate graphql execution security at resolver level as a work around 

        hasGraphQLAccess: function() {
            return isAdmin || isDecisionTableAdmin || isDecisionTableReader || isChangeManager || this.hasDelegatedAccess();
        },

        hasRESTAPIAccess: function() {
            return this.hasGraphQLAccess();
        },

        hasDelegatedAccessAlone: function() {
            return this.hasDelegatedAccess() &amp;&amp; !(isAdmin || isDecisionTableAdmin);
        },

        getCurrentSessionDomain: function() {
            var dt = new sn_dt.DecisionTableBuilderAPI();
            return dt.getCurrentSessionDomain() || '';
        }
    };
})();]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2021-10-24 02:08:34&lt;/sys_created_on&gt;
        &lt;sys_id&gt;608b8d87c3db3010d4437f9ec840dd6d&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;15&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;UserUtil&lt;/sys_name&gt;
        &lt;sys_package display_value="Decision Table Builder" source="sn_decision_table"&gt;13aa96a16bcefa78b16cc99ed9e4f1f4&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Decision Table Builder"&gt;13aa96a16bcefa78b16cc99ed9e4f1f4&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_608b8d87c3db3010d4437f9ec840dd6d&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2023-06-14 07:00:21&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:37:44</sys_created_on>
        <sys_id>76c6381d83f01210c6695855eeaad37f</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>UserUtil</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_76c6381d83f01210c6695855eeaad37f</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:37:44</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
