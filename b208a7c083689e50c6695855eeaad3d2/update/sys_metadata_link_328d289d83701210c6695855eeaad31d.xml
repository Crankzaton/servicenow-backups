<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>1abb5d21b7221010ba148481de11a9f1</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="sys_script"&gt;
    &lt;sys_script action="INSERT_OR_UPDATE"&gt;
        &lt;abort_action&gt;false&lt;/abort_action&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;action_delete&gt;true&lt;/action_delete&gt;
        &lt;action_insert&gt;true&lt;/action_insert&gt;
        &lt;action_query&gt;false&lt;/action_query&gt;
        &lt;action_update&gt;true&lt;/action_update&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;add_message&gt;false&lt;/add_message&gt;
        &lt;advanced&gt;true&lt;/advanced&gt;
        &lt;change_fields&gt;false&lt;/change_fields&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;collection&gt;label_entry&lt;/collection&gt;
        &lt;condition&gt;new sn_ais.StatusApi().isAisQueueWritable()&lt;/condition&gt;
        &lt;description/&gt;
        &lt;execute_function&gt;false&lt;/execute_function&gt;
        &lt;filter_condition/&gt;
        &lt;is_rest&gt;false&lt;/is_rest&gt;
        &lt;message/&gt;
        &lt;name&gt;AIS trigger reindexing&lt;/name&gt;
        &lt;order&gt;100&lt;/order&gt;
        &lt;priority&gt;100&lt;/priority&gt;
        &lt;rest_method/&gt;
        &lt;rest_method_text/&gt;
        &lt;rest_service/&gt;
        &lt;rest_service_text/&gt;
        &lt;rest_variables/&gt;
        &lt;role_conditions/&gt;
        &lt;script&gt;&lt;![CDATA[(function executeRule(current, previous /*null when async*/) {

	// we ignore non trivial changes in sys updated
	if (previous &amp;&amp; current.operation() != 'delete') {
		var changed = false;
		for (var k in current) {
			if (k != 'read' &amp;&amp; k != 'sys_mod_count' &amp;&amp; k != 'sys_updated_on' &amp;&amp; k != 'sys_updated_by' &amp;&amp; current[k] != previous[k])
				changed = true;
		}
		if (!changed)
			return;
	}

	// we index only shared tags, and only based on the table indexing parameters
	var aisConfig = new sn_ais.AisUtil();
	if (aisConfig.isTableIndexable(current.table)) {
		var tagIndexLevel = aisConfig.getTableLevelAttribute(current.table, 'index_tags', 'none');
		var triggerIndex = false;

		if (tagIndexLevel == 'all_shared' || tagIndexLevel == 'everyone_only') {
			var viewableBy = null;

			var recentDeletion = gs.getSession().getClientData('glide.ais.recent.label.deletion');
			if (recentDeletion) {
				var parts = recentDeletion.split(',', 2);
				if (parts.length == 2 &amp;&amp; parts[0] == current.label)
					viewableBy = parts[1];
			}

			if (!viewableBy) {
				var label = new GlideRecord('label');
				if (label.get(current.label))
					viewableBy = label.viewable_by;
			}

			if (tagIndexLevel == 'all_shared' &amp;&amp; viewableBy != 'me')
				triggerIndex = true;
			else if (tagIndexLevel == 'everyone_only' &amp;&amp; viewableBy == 'everyone')
				triggerIndex = true;

		}

		if (triggerIndex)
			new sn_ais.IndexEvent().indexRecord(current.table, current.table_key, 'tags');
	}

})(current, previous);]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2020-08-10 12:27:48&lt;/sys_created_on&gt;
        &lt;sys_domain&gt;global&lt;/sys_domain&gt;
        &lt;sys_domain_path/&gt;
        &lt;sys_id&gt;1abb5d21b7221010ba148481de11a9f1&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;AIS trigger reindexing&lt;/sys_name&gt;
        &lt;sys_overrides/&gt;
        &lt;sys_package display_value="AI Search" source="com.glide.ais"&gt;eb04fc283c31311068bcf327dfe37f93&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_1abb5d21b7221010ba148481de11a9f1&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2020-08-10 12:27:48&lt;/sys_updated_on&gt;
        &lt;template/&gt;
        &lt;when&gt;after&lt;/when&gt;
    &lt;/sys_script&gt;
    &lt;sys_translated_text action="delete_multiple" query="documentkey=1abb5d21b7221010ba148481de11a9f1"/&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:57:19</sys_created_on>
        <sys_id>328d289d83701210c6695855eeaad31d</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>AIS trigger reindexing</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_328d289d83701210c6695855eeaad31d</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:57:19</sys_updated_on>
        <tablename>sys_script</tablename>
    </sys_metadata_link>
</record_update>
