<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>234c241983701210c6695855eeaad31c</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules"&gt;
    &lt;x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE"&gt;
        &lt;abort_action&gt;false&lt;/abort_action&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;action_delete&gt;false&lt;/action_delete&gt;
        &lt;action_insert&gt;true&lt;/action_insert&gt;
        &lt;action_query&gt;false&lt;/action_query&gt;
        &lt;action_update&gt;true&lt;/action_update&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;add_message&gt;false&lt;/add_message&gt;
        &lt;advanced&gt;true&lt;/advanced&gt;
        &lt;change_fields&gt;false&lt;/change_fields&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;collection/&gt;
        &lt;condition/&gt;
        &lt;description/&gt;
        &lt;execute_function&gt;false&lt;/execute_function&gt;
        &lt;filter_condition/&gt;
        &lt;is_rest&gt;false&lt;/is_rest&gt;
        &lt;message/&gt;
        &lt;name&gt;change events&lt;/name&gt;
        &lt;order&gt;100&lt;/order&gt;
        &lt;priority&gt;100&lt;/priority&gt;
        &lt;rest_method/&gt;
        &lt;rest_method_text/&gt;
        &lt;rest_service/&gt;
        &lt;rest_service_text/&gt;
        &lt;rest_variables/&gt;
        &lt;role_conditions/&gt;
        &lt;script&gt;&lt;![CDATA[if (current.operation() === 'insert')
 gs.eventQueue("change.inserted", current, gs.getUserID(), gs.getUserName());

if (current.operation() === 'update')
 gs.eventQueue("change.updated", current, gs.getUserID(), gs.getUserName());

if (!current.assigned_to.nil() &amp;&amp; current.assigned_to.changes())
 gs.eventQueue("change.assigned", current, current.assigned_to.getDisplayValue(), previous.assigned_to.getDisplayValue());

if (current.priority.changes() &amp;&amp; current.getValue('priority') === '1')
 gs.eventQueue("change.priority.1", current, current.priority, previous.priority);

if (current.risk.changes() &amp;&amp; current.getValue('risk') === '1')
 gs.eventQueue("change.risk.1", current, current.risk, previous.risk);

if (current.start_date.changes() || current.end_date.changes() || current.assigned_to.changes()) {
 if (!current.start_date.nil() &amp;&amp; !current.end_date.nil() &amp;&amp; !current.assigned_to.nil())
  gs.eventQueue("change.calendar.notify", current, current.assigned_to, previous.assigned_to);

 // Remove from previous assigned to, due to assigned_to changing
 if (!previous.assigned_to.nil()) {
  if (!current.assigned_to.nil() &amp;&amp; current.assigned_to.changes() &amp;&amp;
   (!previous.start_date.nil() &amp;&amp; !previous.end_date.nil()))
   gs.eventQueue("change.calendar.notify.remove", current, current.assigned_to, previous.assigned_to);
 }
 // Remove old calendar from current assigned to, due to date changing
 else if (!current.assigned_to.nil()) {
  if ((current.start_date.changes() &amp;&amp; !previous.start_date.nil()) ||
   (current.end_date.changes() &amp;&amp; !previous.end_date.nil()))
   gs.eventQueue("change.calendar.notify.remove", current, current.assigned_to, current.assigned_to);
 }

}

var changeRequestObj = new ChangeRequest(current);

if (current.state.changes() &amp;&amp; changeRequestObj.isCanceled()) {
 if (!current.assigned_to.nil())
  gs.eventQueue("change.calendar.notify.remove", current, current.assigned_to, current.assigned_to);
 else {
  if (!previous.assigned_to.nil())
   gs.eventQueue("change.calendar.notify.remove", current, previous.assigned_to, previous.assigned_to);
 }
}

 new ChangeManagementEventUtil().generateStateUpdatedEvent(current, previous);]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;x_938076_now_utils_now_utils_business_rules&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2024-09-21 07:51:54&lt;/sys_created_on&gt;
        &lt;sys_domain&gt;global&lt;/sys_domain&gt;
        &lt;sys_domain_path&gt;/&lt;/sys_domain_path&gt;
        &lt;sys_id&gt;234c241983701210c6695855eeaad31c&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;change events&lt;/sys_name&gt;
        &lt;sys_overrides/&gt;
        &lt;sys_package display_value="Now Utils" source="x_938076_now_utils"&gt;b208a7c083689e50c6695855eeaad3d2&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Now Utils"&gt;b208a7c083689e50c6695855eeaad3d2&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;x_938076_now_utils_now_utils_business_rules_234c241983701210c6695855eeaad31c&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2024-09-21 07:51:54&lt;/sys_updated_on&gt;
        &lt;template/&gt;
        &lt;when&gt;before&lt;/when&gt;
    &lt;/x_938076_now_utils_now_utils_business_rules&gt;
    &lt;sys_translated_text action="delete_multiple" query="documentkey=234c241983701210c6695855eeaad31c"/&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:57:59</sys_created_on>
        <sys_id>f8bda0dd83701210c6695855eeaad333</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>change events</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_f8bda0dd83701210c6695855eeaad333</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:57:59</sys_updated_on>
        <tablename>sys_script</tablename>
    </sys_metadata_link>
</record_update>
