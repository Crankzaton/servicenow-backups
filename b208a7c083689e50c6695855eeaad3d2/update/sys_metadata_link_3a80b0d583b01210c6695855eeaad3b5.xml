<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>122926cec353101050294f877840ddac</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.VAFaqUtil&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;VAFaqUtil&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var VAFaqUtil = Class.create();
VAFaqUtil.prototype = {
    initialize: function() {
		// lower bound for display_length to protect against very small values set in the sys property.
        this.min_display_length = 100;
        this.default_display_length = 400; // default display length of the snippet.
        this.anchor_tag_length = 4; // end anchor tag character [&lt;/a&gt;] count.
    },
	
	buildHeaderText: function (kbNumber, selectedType) {
		// getting glide record
		var gr = new GlideRecord('kb_template_faq');
		gr.addQuery('number', kbNumber);
		gr.addQuery('latest', true); // An FAQ can have multiple versions but we always want the latest.
		gr.query();
		if (!gr.next()) {
			return '';
		}
		var questionText = gr.kb_question;
		var answerText = gr.kb_answer;

		// output
		var output = '';
		if (selectedType == 'multi') {
			output = questionText;
		}
		output += answerText;
		
		// trim whitespace before &amp; after
		output = output.trim();
		
		// all links should open in new window
		output = output.replaceAll('&lt;a ', '&lt;a target=\"_blank\" ');
		
		var lengthStart = output.length;
		var pTagPresent = false;
		
		// Check if there is a paragraph tag wrapper and remove if there is one
		/* p tag wrapper will be automatically added if there 
		is no single parent node. However no p tag will be added if user creates a
		description as a ul or some other element natively wrapped in a single tag */
		if (output.indexOf("&lt;p") === 0) {
			output = output.substr(3, lengthStart - 7);
			pTagPresent = true;
		}
		
		// Find text and text length without anchor tags or urls
		var textOnly = output; 
		var textLength = 0; 
		textOnly = textOnly.replace(/&lt;a[^&gt;]*&gt;/g, '').replace(/&lt;\/a&gt;/g, '');
		textLength = textOnly.length;

		// We need to get the display_size sys_property to limit output characters diaplayed in bot response. Default value is 400.
        var display_size = gs.getProperty("com.glide.cs.faq.display_size", this.default_display_length);
        display_size = isNaN(display_size) ? this.default_display_length : parseInt(display_size); // Default to 400 in case of NaN value
        // ensure that display_length is at least 100 to have meaningful snippet.
        display_size = display_size &gt; this.min_display_length ? display_size : this.min_display_length;
		
		// truncate if text is too long
		if (textLength &gt; display_size) {
			var outputRemoveLeading = output; // Output without the leading tags
			var textTruncated = textOnly.substr(0, display_size);
			var tagCount = 0;
			
			// Count anchor tag characters in the output containing the truncated text
			while ((outputRemoveLeading.indexOf(textTruncated) !== 0)) { 
				if (outputRemoveLeading.match(/&lt;a[^&gt;]*&gt;/)) {
					tagCount += outputRemoveLeading.match(/&lt;a[^&gt;]*&gt;/)[0].length;
				}
				outputRemoveLeading = outputRemoveLeading.replace(/&lt;a[^&gt;]*&gt;/, '');
				
				if (outputRemoveLeading.includes(textTruncated)||
				(outputRemoveLeading.indexOf(textTruncated) == 0)) {
					break;
				}
				if (outputRemoveLeading.match(/&lt;\/a&gt;/)) {
					tagCount += outputRemoveLeading.match(/&lt;\/a&gt;/)[0].length;
				}
				outputRemoveLeading = outputRemoveLeading.replace(/&lt;\/a&gt;/, '');
			}
			
			var subString = output.substr(0, display_size + tagCount);
			
			// Check if an anchor is interrupted and add some length to allow for it
			if ((subString.includes("&lt;a") &amp;&amp; subString.lastIndexOf("&lt;/a&gt;") &lt; subString.lastIndexOf("&lt;a")) &amp;&amp; 
			(output.substr(display_size, output.length).indexOf("&lt;/a&gt;") !== -1 )) {
				
				// Increase character limit to ensure that the anchor tag is complete and link is honored.
				var subString2 = output.substr(display_size + tagCount, output.length);
				var firstEndAnchorIdx = subString2.indexOf("&lt;/a&gt;");
				if (firstEndAnchorIdx != -1) {
					var extendedLength = display_size + tagCount + this.anchor_tag_length + firstEndAnchorIdx;
					
					// Only increase up to 100 characters
					if (this.anchor_tag_length + firstEndAnchorIdx &lt; 100) {
						if (output.substr(0, extendedLength).length &lt; output.length) {
							output = output.substr(0, extendedLength).trim() + "...";
						} else { 
							output = output.substr(0, extendedLength).trim();
						}
					} else {
						output = subString.trim() + "...";
					}
				}
			} else {
				subString.length &lt; output.length ? output = subString.trim() + "..." : 
				output = subString.trim();
			}
		}
		
		//Put paragraph tags back on if they were present
		if (pTagPresent) {
			output = "&lt;p&gt;" + output + "&lt;/p&gt;";
		}
		return output;
	},
	
    type: 'VAFaqUtil'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2020-09-18 14:02:07&lt;/sys_created_on&gt;
        &lt;sys_id&gt;122926cec353101050294f877840ddac&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;36&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;VAFaqUtil&lt;/sys_name&gt;
        &lt;sys_package display_value="Virtual Agent Platform Topic Blocks" source="com.glide.cs.topic_blocks"&gt;289d7c203c75311068bcf327dfe37f6e&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_122926cec353101050294f877840ddac&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2021-10-20 22:36:58&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:10:25</sys_created_on>
        <sys_id>3a80b0d583b01210c6695855eeaad3b5</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>VAFaqUtil</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_3a80b0d583b01210c6695855eeaad3b5</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:10:25</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
