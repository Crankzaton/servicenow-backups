<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>748e746393a20210b31a30dcebba102c</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_fix"&gt;
    &lt;sys_script_fix action="INSERT_OR_UPDATE"&gt;
        &lt;before&gt;false&lt;/before&gt;
        &lt;description&gt;12 Hrs	24 Hrs	Seconds in a Day
12:00 AM	00:00:00	0
1:00 AM	01:00:00	3600
2:00 AM	02:00:00	7200
3:00 AM	03:00:00	10800
4:00 AM	04:00:00	14400
5:00 AM	05:00:00	18000
6:00 AM	06:00:00	21600
7:00 AM	07:00:00	25200
8:00 AM	08:00:00	28800
9:00 AM	09:00:00	32400
10:00 AM	10:00:00	36000
11:00 AM	11:00:00	39600
12:00 PM	12:00:00	43200
1:00 PM	13:00:00	46800
2:00 PM	14:00:00	50400
3:00 PM	15:00:00	54000
4:00 PM	16:00:00	57600
5:00 PM	17:00:00	61200
6:00 PM	18:00:00	64800
7:00 PM	19:00:00	68400
8:00 PM	20:00:00	72000
9:00 PM	21:00:00	75600
10:00 PM	22:00:00	79200
11:00 PM	23:00:00	82800
11:59 PM	23:59:00	86400
&lt;/description&gt;
        &lt;name&gt;Check time between ranges&lt;/name&gt;
        &lt;record_for_rollback&gt;true&lt;/record_for_rollback&gt;
        &lt;script&gt;&lt;![CDATA[// Get the provided time
var providedTime = new GlideDateTime("2024-06-08 17:00:00"); // Assuming you have already set the provided time

// Get the time in seconds since midnight
var providedTimeinSeconds = (providedTime.getTime().getNumericValue())/1000;
gs.info("secondsSinceMidnight " + providedTimeinSeconds);

// Get the seconds of 3 PM and 5 PM since midnight
var threePMSinceMidnight = (15 * 3600); // 3 PM in seconds
gs.info("threePMSinceMidnight "+ threePMSinceMidnight);
var fivePMSinceMidnight = (17 * 3600); // 5 PM in seconds
gs.info("fivePMSinceMidnight " + fivePMSinceMidnight);

// Check if the provided time falls between 3 PM and 5 PM
if (providedTimeinSeconds &gt;= threePMSinceMidnight &amp;&amp; providedTimeinSeconds &lt;= fivePMSinceMidnight) {
    gs.info("The provided time is between 3 PM and 5 PM.");
} else {
    gs.info("The provided time is NOT between 3 PM and 5 PM.");
}
]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_fix&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2024-06-08 12:37:06&lt;/sys_created_on&gt;
        &lt;sys_id&gt;748e746393a20210b31a30dcebba102c&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;Check time between ranges&lt;/sys_name&gt;
        &lt;sys_package display_value="Global" source="global"&gt;global&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_fix_748e746393a20210b31a30dcebba102c&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2024-06-08 12:37:06&lt;/sys_updated_on&gt;
        &lt;unloadable&gt;false&lt;/unloadable&gt;
    &lt;/sys_script_fix&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:21:57</sys_created_on>
        <sys_id>3b23b89d83b01210c6695855eeaad33a</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Check time between ranges</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_3b23b89d83b01210c6695855eeaad33a</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:21:57</sys_updated_on>
        <tablename>sys_script_fix</tablename>
    </sys_metadata_link>
</record_update>
