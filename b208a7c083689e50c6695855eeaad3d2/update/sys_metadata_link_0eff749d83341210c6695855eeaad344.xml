<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>ad45f5cbf71a1110dc25d3e543bfd6ba</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;sn_csm_mobile.MobileInputFormScreenMigrationUtils&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;MobileInputFormScreenMigrationUtils&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var MobileInputFormScreenMigrationUtils = Class.create();
MobileInputFormScreenMigrationUtils.prototype = Object.extendsObject(global.MobileUtahUpgradeCommonUtils, {
    TABLE: {
        SYS_SG_BUTTON_INSTANCE: "sys_sg_button_instance",
        SYS_SG_BUTTON: "sys_sg_button",
        SYS_SG_UI_PARAMETER: "sys_sg_ui_parameter",
        SYS_SG_ITEM_PARAMETER: "sys_sg_item_parameter",
        SYS_SG_ACTION_PARAM_MAP: "sys_sg_action_param_map"
    },
	FIELD: {
        ACTIVE: "active",
        PARAMETER_TYPE: "parameter_type",
        BUTTON: "button",
        PARENT_TABLE: "parent_table",
        PARENT: "parent"
    },

    cleanUpgrade: function(instanceMap) {
        for (var oldBtn in instanceMap) {
            if (gs.nil(instanceMap[oldBtn].new)) {
                gs.warn("MobileInputFormScreenMigrationUtils: cleanUpgrade: Skipping upgrade for {0} as no new sys_sg_button mapped", oldBtn);
            } else {
                var oldBtnGr = this.getGlideRecord(this.TABLE.SYS_SG_BUTTON, oldBtn);
                if (!oldBtnGr || !oldBtnGr.isValidRecord()) {
                    gs.warn("MobileInputFormScreenMigrationUtils: cleanUpgrade: Skipping revert as sys_sg_button Record {0} not found", oldBtn);
                } else if (this.isButtonFlowCustom(oldBtnGr)) {
                    this.revertUntouchedButton(instanceMap[oldBtn],oldBtnGr.getUniqueValue());
                }else
					gs.info("MobileInputFormScreenMigrationUtils: cleanUpgrade: Skipping revert as sys_sg_button Record {0} not customized",oldBtn);
            }
        }
    },

    revertUntouchedButton: function(instance,oldBtnSysId) {
        var btnInstanceGr = this.getMultipleGlideRecords(this.TABLE.SYS_SG_BUTTON_INSTANCE, instance.instance);
		while(btnInstanceGr.next()){
			if (btnInstanceGr.isValidRecord() &amp;&amp; !this.isRecordCustomized(btnInstanceGr))
				this.revertButton(btnInstanceGr, oldBtnSysId);
			else
				gs.warn("MobileInputFormScreenMigrationUtils: revertUntouchedButton: Skipping revert as SYS_SG_BUTTON_INSTANCE Record {0} customized ", btnInstanceGr.getUniqueValue());
		}
    },

    isButtonFlowCustom: function(buttonGr) {
        if (!buttonGr || !buttonGr.isValidRecord()) {
            gs.error("MobileInputFormScreenMigrationUtils: isButtonFlowCustom: Skipping upgrade because sys_sg_button Record for button {0} not found", buttonGr.getUniqueValue);
            return true;
        }
        if (!this.isRecordCustomized(buttonGr)) {
            var actionItemGr = buttonGr.write_back_action_item.getRefRecord();
            if (!actionItemGr || !actionItemGr.isValidRecord()) {
                gs.error("MobileInputFormScreenMigrationUtils: isButtonFlowCustom: Skipping upgrade because sys_sg_action_item Record for button {0} not found", buttonGr.getUniqueValue);
                return true;
            }
            if (!this.isRecordCustomized(actionItemGr)) {
                return this.hasCustomizedUIParam(buttonGr) || this.hasCustomizedItemParam(actionItemGr) || this.hasCustomizedActionParamMap(buttonGr);
            }
        }
        return true;
    },
    hasCustomizedUIParam: function(buttonGr) {
        var gr = new GlideRecord(this.TABLE.SYS_SG_UI_PARAMETER);
        gr.addQuery(this.FIELD.PARAMETER_TYPE, "button");
        gr.addQuery(this.FIELD.BUTTON, buttonGr.getUniqueValue());
        gr.query();
        while (gr.next()) {
            if (this.isRecordCustomized(gr))
                return true;
        }
        return false;
    },
    hasCustomizedItemParam: function(actionItemGr) {
        var gr = new GlideRecord(this.TABLE.SYS_SG_ITEM_PARAMETER);
        gr.addQuery(this.FIELD.PARENT_TABLE, actionItemGr.getTableName());
        gr.addQuery(this.FIELD.PARENT, actionItemGr.getUniqueValue());
        gr.query();
        while (gr.next()) {
            if (this.isRecordCustomized(gr))
                return true;
        }
        return false;
    },
    hasCustomizedActionParamMap: function(buttonGr) {
        var gr = new GlideRecord(this.TABLE.SYS_SG_ACTION_PARAM_MAP);
        gr.addQuery(this.FIELD.BUTTON, buttonGr.getUniqueValue());
        gr.query();
        while (gr.next()) {
            if (this.isRecordCustomized(gr))
                return true;
        }
        return false;
    },
    type: 'MobileInputFormScreenMigrationUtils'
});]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2022-10-07 04:54:48&lt;/sys_created_on&gt;
        &lt;sys_id&gt;ad45f5cbf71a1110dc25d3e543bfd6ba&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;MobileInputFormScreenMigrationUtils&lt;/sys_name&gt;
        &lt;sys_package display_value="Customer Service Mobile" source="sn_csm_mobile"&gt;c87a2143dbb1e3005074163705961996&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Customer Service Mobile"&gt;c87a2143dbb1e3005074163705961996&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_ad45f5cbf71a1110dc25d3e543bfd6ba&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2022-10-07 08:41:09&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 09:17:49</sys_created_on>
        <sys_id>0eff749d83341210c6695855eeaad344</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>MobileInputFormScreenMigrationUtils</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_0eff749d83341210c6695855eeaad344</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 09:17:49</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
