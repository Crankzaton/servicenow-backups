<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>21ecf2566b387010d70bc141ee44afca</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;sn_ex_sp.PopularTopicsUtilSNC&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;[WARNING: Customers should NOT modify this script]&amp;#13;
&amp;#13;
The purpose of this script include is to provide default behaviours for the PopularTopicsUtil script include.&amp;#13;
To change the behaviour of these methods (or add new methods), Customers should override/add new methods to the PopularTopicsUtil script include. &lt;/description&gt;
        &lt;name&gt;PopularTopicsUtilSNC&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var PopularTopicsUtilSNC = Class.create();
PopularTopicsUtilSNC.prototype = {
    initialize: function() {
        this.popularTopicsIndex = {};
        this.defaultRedirectionPage = 'emp_taxonomy_topic';
        this.URL_ENABLED = gs.getProperty("sn_ex_sp.enable.image.url.support");
        this.EMPLOYEE_CENTER_CACHE = 'employee_center_cache';
    },

    /**
     * Returns default topic icon image name
     **/
    _fetchDefaultIconImage: function() {
        return new TopicPageUtil().fetchDefaultIconImage();
    },
    /**
     * Fill topics from topics table if popular topics &lt; limit
     **/
    _fillTopics: function(popularTopics, taxonomyId, count, isMobile) {
        var taxonomyService = new sn_taxonomy.Taxonomy(taxonomyId);
        var maxLevel = 0;
        var noOfTopics = 0;
        var countOfTopicsInResp = 0;
        while (noOfTopics &lt; count) {
            var topics = taxonomyService.getTopics(true, maxLevel, isMobile);
            if (countOfTopicsInResp === topics.length) {
                break;
            }
            countOfTopicsInResp = topics.length;
            topics.every(function(topic) {
                //If topic doesnt already exist then add it
                if (!this.popularTopicsIndex[topic.sys_id]) {
                    var icon;
                    if (this.URL_ENABLED &amp;&amp; this.URL_ENABLED === "true")
                        icon = new sn_ex_sp.TopicPageUtil().getIcon(topic.sys_id);
                    else
                        icon = sn_taxonomy.Topic.getIcon(topic.sys_id);
                    var pageToRedirect = topic.template &amp;&amp; topic.template.length &gt; 0 ? topic.template : this.defaultRedirectionPage;
                    popularTopics.push({
                        topic: topic.name,
                        topicId: topic.sys_id,
                        icon: icon || icon.trim().length !== 0 ? icon : this._fetchDefaultIconImage(),
                        topicUrl: '?id=' + pageToRedirect + '&amp;topic_id=' + topic.sys_id
                    });
                    this.popularTopicsIndex[topic.sys_id] = true;
                    noOfTopics++;
                }
                if (noOfTopics === count) {
                    return false;
                }
                return true;
            }, this);
            maxLevel++;

        }


    },

    /**
     * Return image's url if available, otherwise return the image (uploaded or default)
     */
    _getImage: function(url, image, size, defaultImage) {
        if (this.URL_ENABLED &amp;&amp; this.URL_ENABLED === "true" &amp;&amp; url)
            return url;
        if (image) {
            if (size)
                return image + '?t=' + size;
            return image;
        }
        return defaultImage;
    },

    /**
     * Returns popular topics
     * @param taxonomyId
     * @param limit: the number of topics
     * @param isMobile
     **/
    getPopularTopics: function(taxonomy, limit, isMobile) {
        var popularTopics = [];
        var popularTopicsIds = [];
        var noOfItems = 0;
        var cacheKey = 'topicMetric';
        var topicMetricsFromCache = sn_scoped_cache.ScopedCacheManager.get(this.EMPLOYEE_CENTER_CACHE, cacheKey);
        if (topicMetricsFromCache) {
            popularTopicsIds = JSON.parse(topicMetricsFromCache)[cacheKey];
        } else {
            var topicMetricGr = new GlideRecord('sn_ex_sp_topic_metric');
            topicMetricGr.addQuery('topic.taxonomy', taxonomy);
            topicMetricGr.addQuery('topic.active', true);
            topicMetricGr.orderByDesc('popularity');
            topicMetricGr.orderBy('topic.order');
            topicMetricGr.orderBy('topic.name');
            topicMetricGr.query();
            while (topicMetricGr.next()) {
                popularTopicsIds.push(topicMetricGr.topic.toString());
            }
            var topicMetricsToBeCached = {};
            topicMetricsToBeCached[cacheKey] = popularTopicsIds;
            sn_scoped_cache.ScopedCacheManager.put(this.EMPLOYEE_CENTER_CACHE, cacheKey, JSON.stringify(topicMetricsToBeCached));
        }
        for (var index = 0; index &lt; popularTopicsIds.length &amp;&amp; noOfItems &lt; limit; index++) {
            var canView;
            if (!GlidePluginManager.isActive('com.glideapp.knowledge.i18n2'))
                canView = new TopicSecurityUtil().canViewTopic(popularTopicsIds[index], false);
            else
                canView = new TopicSecurityUtil().canViewTopicAdvanced(popularTopicsIds[index], false);
            if (canView) {
                var topicGr = new GlideRecord('topic');
                if (topicGr.get(popularTopicsIds[index])) {
                    var pageToRedirect = topicGr.template ? topicGr.getDisplayValue('template') : this.defaultRedirectionPage;
                    popularTopics.push({
                        topic: topicGr.getDisplayValue('name'),
                        topicId: popularTopicsIds[index],
                        icon: this._getImage(topicGr.icon_url.toString(), topicGr.getDisplayValue('icon'), 'small', this._fetchDefaultIconImage()),
                        topicUrl: '?id=' + pageToRedirect + '&amp;topic_id=' + popularTopicsIds[index]
                    });
                    this.popularTopicsIndex[popularTopicsIds[index]] = true;
                    noOfItems++;
                }
            }
        }

        return popularTopics;
    },
    type: 'PopularTopicsUtilSNC'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2021-06-19 19:53:00&lt;/sys_created_on&gt;
        &lt;sys_id&gt;21ecf2566b387010d70bc141ee44afca&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;69&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;PopularTopicsUtilSNC&lt;/sys_name&gt;
        &lt;sys_package display_value="Employee Center" source="sn_ex_sp"&gt;4249e63a28d54d61bb6fbf61fd86cccb&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Employee Center"&gt;4249e63a28d54d61bb6fbf61fd86cccb&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_21ecf2566b387010d70bc141ee44afca&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2023-07-07 08:52:56&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:12:02</sys_created_on>
        <sys_id>66e07c1983b01210c6695855eeaad3a1</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>PopularTopicsUtilSNC</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_66e07c1983b01210c6695855eeaad3a1</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:12:02</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
