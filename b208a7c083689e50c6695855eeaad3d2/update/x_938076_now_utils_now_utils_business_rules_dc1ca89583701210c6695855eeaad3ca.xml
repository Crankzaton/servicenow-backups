<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description>Value should be zero or positive if created by the user.
The system can create a record N/A with value -1, but only on insert.</description>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Verify value</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[if (current.operation() == 'insert' || current.value.changes())
 checkForValidValues();

function checkForValidValues() {
 current.value = Math.round(current.value * 100) / 100; // change to match platform storage value of 2 decimal
 var errMsg = "";
 if (valueIsNegative()) {
  errMsg = gs.getMessage("The value must be greater than or equal to 0");
  gs.addErrorMessage(errMsg);
  current.setAbortAction(true);
 }
 
 if (valueIsDuplicate()) {
  errMsg = gs.getMessage("The value must not match an existing value");
  gs.addErrorMessage(errMsg);
  current.setAbortAction(true);
 }
 
 if(!((new AssessmentUtils()).isInteger(current.value.toString()))){
  errMsg = gs.getMessage("The value must be an Integer");
  gs.addErrorMessage(errMsg);
  current.setAbortAction(true);
 }
}

function valueIsNegative() {
 // Value cannot be negative when updating an existing record
 if (current.value < 0 && current.operation() == "update")
  return true;
 
 // Value cannot be negative unless inserting when user submits a survey with N/A selected
 if (current.value < 0 && current.value != -1  && current.operation() == "insert")
  return true;

 return false;
}

function valueIsDuplicate() {
 // Duplicate values are not allowed because reporting will not show correct information
 if (current.value == previous.value)
  return false; // User changed a different part of the same record
 if (current.metric == '')
  return false;
 
 var defRecord = new GlideRecord('asmt_metric_definition');
 defRecord.addQuery('metric', current.metric);
 defRecord.addQuery('value', current.value);
 defRecord.setLimit(1);
 defRecord.query();
 
 return (defRecord.hasNext());
}]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:50:52</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>dc1ca89583701210c6695855eeaad3ca</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Verify value</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_dc1ca89583701210c6695855eeaad3ca</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:50:52</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=dc1ca89583701210c6695855eeaad3ca"/>
</record_update>
