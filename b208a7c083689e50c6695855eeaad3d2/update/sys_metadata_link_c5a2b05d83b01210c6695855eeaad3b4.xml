<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>1ee84a8c87c332001f55c679e7cb0bfe</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_fix"&gt;
    &lt;sys_script_fix action="INSERT_OR_UPDATE"&gt;
        &lt;before&gt;false&lt;/before&gt;
        &lt;description&gt;Fix Service Type Selection for existing HR services.
1. If Lifecycle event field and Service Activities related list have content - mark the type as 'Custom'
2. If Lifecycle event field and Approvals field have content - mark the type as 'Custom'
3. If only Lifecycle event has content - mark the type as 'Lifecycle Event'
4. If only Approvals field has content - mark the type as 'Workflow'
5. If only Service Activities related list has content  - mark type as 'Service Activity'
6. If only Service Activities related list and Approvals field have content  - mark type as 'Service Activity'
7. If none of the above field has content - mark the type as 'Simple'

Note:   'custom' type is used to fix existing HR services;  should not be selected when creating a new HR service.&lt;/description&gt;
        &lt;name&gt;Fix Service Type selection&lt;/name&gt;
        &lt;record_for_rollback&gt;false&lt;/record_for_rollback&gt;
        &lt;script&gt;&lt;![CDATA[var hrServiceWithLE = false;
var hrServiceWithApprovers = false;
var hrServiceWithActivities = false;
var hrServiceWithWorkflow = false;
var resultWF;
var HRCORESCOPE = "d4ac3fff5b311200a4656ede91f91af2";
copyApprovalOptions();
moveRecordsToScope();
var hrServicesWithActivities = getHrServicesWithActivities();
addFulfillmentType();

function moveRecordsToScope(){
	var grHRService = new GlideRecord('sn_hr_core_service');
	grHRService.addQuery('sys_scope',"");
	grHRService.query();
	while(grHRService.next()){
		grHRService.sys_scope = HRCORESCOPE;
		grHRService.update();
	}
}

function addFulfillmentType(){
	var grHRService = new GlideRecord('sn_hr_core_service');
	grHRService.query();
	while(grHRService.next()){
		getConditions(grHRService);
		setHRServiceType(grHRService);
		resetConditions();
	}
}

function copyApprovalOptions() {
	var gr = new GlideRecord('sn_hr_core_service_activity');
	if (!gr.isValidField('approval_options'))
		return;
	gr.addQuery('activity_type', 'approval');
	gr.addNullQuery('approval_options');
	gr.addNotNullQuery('parent_service.approval_options');
	gr.query();
	while (gr.next()) {
		gr.approval_options = gr.parent_service.approval_options;
		gr.update();
	}
}

function getHrServicesWithActivities() {
	hrServicesWithActivities = {};
	var grHRServiceActivity = new GlideAggregate("sn_hr_core_service_activity");
	grHRServiceActivity.groupBy("parent_service");
	grHRServiceActivity.query();
		
	while (grHRServiceActivity.next())
		hrServicesWithActivities[grHRServiceActivity.parent_service.sys_id] = true;
		
	return hrServicesWithActivities;
}
	
function getConditions(grHRService) {
	if (grHRService.le_type != undefined &amp;&amp; grHRService.le_type != '')
		hrServiceWithLE = true;
	if (grHRService.approval_options != undefined
			&amp;&amp; grHRService.approval_options != '')
		hrServiceWithApprovers = true;
	if (hrServicesWithActivities[grHRService.sys_id] != undefined)
			hrServiceWithActivities = true;
	getWorkflow(grHRService.template);
}
	
function setHRServiceType(grHRService) {
	if (hrServiceWithLE &amp;&amp; hrServiceWithActivities)
		grHRService.setValue('fulfillment_type', "custom");
	else if (hrServiceWithLE &amp;&amp; (hrServiceWithApprovers||hrServiceWithWorkflow))
		grHRService.setValue('fulfillment_type', "custom");
	else if (hrServiceWithActivities &amp;&amp; (hrServiceWithApprovers||hrServiceWithWorkflow))
		grHRService.setValue('fulfillment_type', "custom");
	else if (hrServiceWithActivities)
		grHRService.setValue('fulfillment_type', "service_activity");
	else if (hrServiceWithLE)
		grHRService.setValue('fulfillment_type', "lifecycle_event");
	else if (hrServiceWithApprovers &amp;&amp; hrServiceWithWorkflow){
		grHRService.setValue('fulfillment_type', "custom");
		grHRService.setValue('workflow_detail',resultWF);
	} else if(hrServiceWithWorkflow){
		grHRService.setValue('fulfillment_type', "workflow");
		grHRService.setValue('workflow_detail',resultWF);
	} else if(hrServiceWithApprovers){
		grHRService.setValue('fulfillment_type', "custom");
	} else
		grHRService.setValue('fulfillment_type', "simple");
	grHRService.setWorkflow(false);
	grHRService.update();
}
	
function resetConditions() {
	hrServiceWithLE = false;
	hrServiceWithApprovers = false;
	hrServiceWithActivities = false;
	hrServiceWithWorkflow = false;
}
	
function getWorkflow(templateSysId){
	var validateWF =new sn_hr_core.hrFulfillmentTypeUtil();
	resultWF  = validateWF.getWorkflow(templateSysId);
	if(resultWF !='')
		hrServiceWithWorkflow = true;
}
	]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_fix&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2017-05-25 19:11:14&lt;/sys_created_on&gt;
        &lt;sys_id&gt;1ee84a8c87c332001f55c679e7cb0bfe&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;41&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;Fix Service Type selection&lt;/sys_name&gt;
        &lt;sys_package display_value="Human Resources: Core" source="sn_hr_core"&gt;d4ac3fff5b311200a4656ede91f91af2&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Human Resources: Core"&gt;d4ac3fff5b311200a4656ede91f91af2&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_fix_1ee84a8c87c332001f55c679e7cb0bfe&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2018-09-12 06:54:57&lt;/sys_updated_on&gt;
        &lt;unloadable&gt;false&lt;/unloadable&gt;
    &lt;/sys_script_fix&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:19:35</sys_created_on>
        <sys_id>c5a2b05d83b01210c6695855eeaad3b4</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Fix Service Type selection</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_c5a2b05d83b01210c6695855eeaad3b4</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:19:35</sys_updated_on>
        <tablename>sys_script_fix</tablename>
    </sys_metadata_link>
</record_update>
