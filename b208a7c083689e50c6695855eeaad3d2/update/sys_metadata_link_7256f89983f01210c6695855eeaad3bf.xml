<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>372b14b185721110f877e10cffeb7be0</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;sn_uibtk_api.UXAddOnEventMapping&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;UXAddOnEventMapping&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[const UXAddOnEventMapping = Class.create();
UXAddOnEventMapping.prototype = Object.extendsObject(BuilderToolkitAPIBase, {
    TABLE: 'sys_ux_addon_event_mapping',
    FIELDS: ['name', 'description', 'source_element_id', 'parent_macroponent', 'target_event', 'target_payload_mapping'],

    /**
     * @param fields {string[]}
     * @param noDomain {boolean}
     */
    initialize: function(fields, noDomain) {
        BuilderToolkitAPIBase.prototype.initialize.call(this, this.TABLE, fields || this.FIELDS, noDomain);
    },

    /**
     * @param addOnEventMappings {addOnEventMappings[]} array of add on event mappings to work on
     * @param macroponentSysId {string} sys_id of the macroponent these scripts are tied to
     */
    upsertAndDeleteRecords: function(addOnEventMappings = [], macroponentSysId = null) {
        // If we have no macroponentSysId, we might accidentally delete the mappings so ABORT
        if (!macroponentSysId) {
            return;
        }
        const addOnEventMappingSysIds = addOnEventMappings.map((mapping) =&gt; mapping.sysId) ?? [];
        const results = [];
        const addOnEventMappingGR = this.getRecordsByQuery(`parent_macroponent=${macroponentSysId}`, '', true);
        // Make sure we actually found something, then work on those
        if (addOnEventMappingGR) {
            while (addOnEventMappingGR.next()) {
                // If we aren't in the object, we are deleted
                if (!addOnEventMappingSysIds.includes(addOnEventMappingGR.getUniqueValue())) {
                    addOnEventMappingGR.deleteRecord();
                }
                // Else we need to check for an update and remove from our list of IDs so we know what to create
                else {
                    const currentIdArr = addOnEventMappingSysIds.splice(addOnEventMappingSysIds.indexOf(addOnEventMappingGR.getUniqueValue()), 1);

                    const currentScript = addOnEventMappings.filter(({
                        sysId
                    }) =&gt; sysId === currentIdArr[0])[0];
                    const currentFieldValues = addOnEventMappingGR.getElements().reduce(this.getFieldValues.bind(this), {});
                    // Let's compare our field values to make sure we don't update needlessly
                    // If we don't match values, update the record and return the result
                    for (const field in currentScript) {
                        if (addOnEventMappingGR.isValidField(field) &amp;&amp; currentFieldValues[field] !== currentScript[field]) {
                            const {
                                sysId,
                                ...fields
                            } = currentScript;
                            this.setFieldValues(addOnEventMappingGR, fields);
                            results.push(addOnEventMappingGR.update());
                            break;
                        }
                    }
                }
            }
        }

        // Now if we have any addOnEventMappingSysIds left, we need to insert
        const remainingRecords = addOnEventMappingSysIds.length &gt; 0 ? addOnEventMappings.filter(({
            sysId
        }) =&gt; addOnEventMappingSysIds.includes(sysId)) : null;
        if (remainingRecords !== null) {
            remainingRecords.forEach(({
                sysId,
                ...fields
            }) =&gt; {
                results.push(this.createRecord({
                    sysId,
                    ...fields
                }));
            });
        }
        return results;
    },

    type: 'UXAddOnEventMapping'
});]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;maint&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2022-10-27 21:15:02&lt;/sys_created_on&gt;
        &lt;sys_id&gt;372b14b185721110f877e10cffeb7be0&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;13&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;UXAddOnEventMapping&lt;/sys_name&gt;
        &lt;sys_package display_value="@devsnc/uibtk-api" source="sn_uibtk_api"&gt;cdfd3bed43321110e70583020cb8f28e&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="@devsnc/uibtk-api"&gt;cdfd3bed43321110e70583020cb8f28e&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_372b14b185721110f877e10cffeb7be0&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2023-03-26 13:39:28&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:35:49</sys_created_on>
        <sys_id>7256f89983f01210c6695855eeaad3bf</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>UXAddOnEventMapping</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_7256f89983f01210c6695855eeaad3bf</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:35:49</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
