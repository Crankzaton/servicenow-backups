<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition>(current.getValue('type') == 'rotate' || current.getValue('type') == 'extend') &amp;&amp; current.getValue('name') != 'sys_replication_queue'</condition>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Table Rotation - Initialize Rotation</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[initializeRotation();

function initializeRotation() {
   var model = current.name.toString();
   var itables = getRotationLength();
   var tr = new SNC.TableRotationUtil();
   var start = gs.nowDateTime();
   var firstRotation = start;
   for (var i = 0; i < itables; i++) {
      var frn = tr.create(model);
      if (!frn) 
         break;

      var fse = addScheduleEntry(frn, start);
      start = fse.valid_to.getDisplayValue();
   }  

   addBaseEntry(model, firstRotation);
   var ru = new GlideRecord(current.getTableName());
   ru.get(current.sys_id);
   ru.initialized = true;
   ru.update();
} 

function getRotationLength() {
   if (current.type == 'extend')
      return 2;

   if (current.rotations.isNil())
      return 8;

   return current.getValue('rotations');
}

function addScheduleEntry(rotationName, startTime) {
   var schedEntry = new GlideRecord('sys_table_rotation_schedule');
   schedEntry.name = current.sys_id;
   schedEntry.table_name = rotationName;
   schedEntry.valid_from = startTime;
   schedEntry.valid_to.setDateNumericValue(schedEntry.valid_from.dateNumericValue() + current.duration.dateNumericValue());
   schedEntry.insert();
   return schedEntry;
}


function addBaseEntry(rotationName, endTime) {
   var schedEntry = new GlideRecord('sys_table_rotation_schedule');
   schedEntry.name = current.sys_id;
   schedEntry.table_name = rotationName;
   schedEntry.valid_from.setDateNumericValue(0);
   schedEntry.valid_to = endTime;
   schedEntry.insert();
   return schedEntry;
}]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:51:39</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>004cacd583701210c6695855eeaad3a2</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Table Rotation - Initialize Rotation</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_004cacd583701210c6695855eeaad3a2</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:51:39</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=004cacd583701210c6695855eeaad3a2"/>
</record_update>
