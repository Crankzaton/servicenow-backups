<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>8ecca22aeb86211078aca892e2522814</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;sn_entitlement.SubscriptionEntitlementAuditLogDAO&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;DAO to retrieve or insert data from subscription_entitlement_audit_log&lt;/description&gt;
        &lt;name&gt;SubscriptionEntitlementAuditLogDAO&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var SubscriptionEntitlementAuditLogDAO = Class.create();
SubscriptionEntitlementAuditLogDAO.prototype = {
    initialize: function() {
        this._subscriptionEntitlementAuditLogTable = "subscription_entitlement_audit_log";
    },

    migrateEntitlementPurchaseHistory: function(entitlementPurchaseHistory) {
        const subscriptionEntitlementAuditGR = new GlideAggregate(this._subscriptionEntitlementAuditLogTable);
        subscriptionEntitlementAuditGR.addAggregate('COUNT');
        subscriptionEntitlementAuditGR.query();

        if (subscriptionEntitlementAuditGR.next() &amp;&amp; subscriptionEntitlementAuditGR.getAggregate('COUNT') &gt; 0)
            this._insertIfEntitlementPurchaseHistoryMissing(entitlementPurchaseHistory);
        else
            this._insert(entitlementPurchaseHistory);
    },

    _insertIfEntitlementPurchaseHistoryMissing: function(entitlementPurchaseHistory) {
        const missingEntitlementPurchaseHistory = this._findMissingEntitlementPurchaseHistory(entitlementPurchaseHistory);
        if (!global.JSUtil.nil(missingEntitlementPurchaseHistory))
            this._insert(missingEntitlementPurchaseHistory);
    },

    _findMissingEntitlementPurchaseHistory: function(entitlementPurchaseHistory) {
        let missingEntitlementPurchaseHistory = [];
        const gr = new GlideRecord(this._subscriptionEntitlementAuditLogTable);
        entitlementPurchaseHistory.forEach(function(record) {
            gr.initialize();
            for (key in record)
                gr.addQuery(key, record[key]);
            gr.query();
            if (!gr.hasNext())
                missingEntitlementPurchaseHistory.push(record);
        });
        return missingEntitlementPurchaseHistory;
    },

    _insert: function(entitlementPurchaseHistory) {
        const gr = new GlideRecord(this._subscriptionEntitlementAuditLogTable);
        entitlementPurchaseHistory.forEach(function(record) {
            gr.initialize();
            for (key in record)
                gr.setValue(key, record[key]);
            gr.insert();
        });
    },

    type: 'SubscriptionEntitlementAuditLogDAO'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;maint&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2023-04-10 05:11:28&lt;/sys_created_on&gt;
        &lt;sys_id&gt;8ecca22aeb86211078aca892e2522814&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;5&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;SubscriptionEntitlementAuditLogDAO&lt;/sys_name&gt;
        &lt;sys_package display_value="Licensing Engine" source="sn_entitlement"&gt;bcadabf277f311109c62f5f3cb5a992a&lt;/sys_package&gt;
        &lt;sys_policy&gt;read&lt;/sys_policy&gt;
        &lt;sys_scope display_value="Licensing Engine"&gt;bcadabf277f311109c62f5f3cb5a992a&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_8ecca22aeb86211078aca892e2522814&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;maint&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2023-04-10 20:47:01&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:45:23</sys_created_on>
        <sys_id>ba88345183341210c6695855eeaad304</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>SubscriptionEntitlementAuditLogDAO</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_ba88345183341210c6695855eeaad304</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:45:23</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
