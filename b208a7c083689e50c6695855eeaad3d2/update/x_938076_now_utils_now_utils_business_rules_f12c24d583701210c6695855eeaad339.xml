<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Limit STOPWORD to 1 per locale</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

 if (current.dictionary_reference_qualifier == "STOPWORD") {
        // look up all mapped dictionaries to profile
        var m2mRecords = new GlideRecord("ais_search_profile_ais_dictionary_m2m");
        m2mRecords.addQuery("profile", current.profile);
        m2mRecords.query();
        var dictionaryIds = [];
        while (m2mRecords.next()) {
            dictionaryIds.push(m2mRecords.getValue("dictionary"));
        }

        // loop through the mapped dictionaries and collect locales of stop word dictionaries
        var dictionaryRecords = new GlideRecord("ais_dictionary");
        dictionaryRecords.addEncodedQuery("sys_idIN" + dictionaryIds.join(), true);
        dictionaryRecords.addQuery("type", "STOPWORD");
        dictionaryRecords.query();
        var dictionaryLocales = [];
        while (dictionaryRecords.next()) {
            dictionaryLocales.push(dictionaryRecords.getValue("locale"));
        }
  
  if (dictionaryLocales.join().contains(current.dictionary.locale)) {
   current.setAbortAction(true);
   gs.addErrorMessage(gs.getMessage("There is already a Stop Words dictionary for the selected language. You are only allowed one Stop Words dictionary per language"));
  }

 }

})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:51:14</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>f12c24d583701210c6695855eeaad339</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Limit STOPWORD to 1 per locale</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_f12c24d583701210c6695855eeaad339</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:51:14</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=f12c24d583701210c6695855eeaad339"/>
</record_update>
