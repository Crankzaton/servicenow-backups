<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>0aac01d067220300b733e12d1585ef31</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="sys_script"&gt;
    &lt;sys_script action="INSERT_OR_UPDATE"&gt;
        &lt;abort_action&gt;false&lt;/abort_action&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;action_delete&gt;false&lt;/action_delete&gt;
        &lt;action_insert&gt;true&lt;/action_insert&gt;
        &lt;action_query&gt;false&lt;/action_query&gt;
        &lt;action_update&gt;false&lt;/action_update&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;add_message&gt;false&lt;/add_message&gt;
        &lt;advanced&gt;true&lt;/advanced&gt;
        &lt;change_fields&gt;false&lt;/change_fields&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;collection&gt;spotlight_groups&lt;/collection&gt;
        &lt;condition&gt;current.isNewRecord() &amp;amp;&amp;amp; current.active&lt;/condition&gt;
        &lt;description/&gt;
        &lt;execute_function&gt;false&lt;/execute_function&gt;
        &lt;filter_condition/&gt;
        &lt;is_rest&gt;false&lt;/is_rest&gt;
        &lt;message/&gt;
        &lt;name&gt;Create sys_trigger record&lt;/name&gt;
        &lt;order&gt;100&lt;/order&gt;
        &lt;priority&gt;100&lt;/priority&gt;
        &lt;rest_method/&gt;
        &lt;rest_method_text/&gt;
        &lt;rest_service/&gt;
        &lt;rest_service_text/&gt;
        &lt;rest_variables/&gt;
        &lt;role_conditions/&gt;
        &lt;script&gt;&lt;![CDATA[(function executeRule(current, previous /*null when async*/ ) {

    current.trigger = createTriggerRecord(current);

    function createTriggerRecord(current) {
        var trigger = new GlideRecord("sys_trigger");
        trigger.initialize();
        trigger.setValue("document", current.sys_class_name);
        trigger.setValue("document_key", current.sys_id);
        trigger.setValue("trigger_type", current.run_type);
        trigger.setValue("run_dayofweek", current.run_dayofweek);
        trigger.setValue("run_dayofmonth", current.run_dayofmonth);
        trigger.setValue("run_time", current.run_time);
        trigger.setValue("repeat", current.run_period);
        trigger.setValue("job_id", "81c92ce9c0a8016400e5f0d2f784ea78");
        var jobName = current.name + " - Job";
        trigger.setValue("name", jobName);
        var script = "//This trigger calculates the scores for " + current.name + "\n";
        script = script + "SNC.SpotlightUtil.calculateSpotlightGroup('" + current.sys_id + "');";
        trigger.setValue("script", script);
        var nextAction = getNextActionForRunTypePeriodicalyAndOnce(trigger, current);
        if (nextAction != null)
            trigger.setValue("next_action", nextAction);

        var triggerSysID = trigger.insert();
        return triggerSysID;
    }

    //Need to set the next_action only for those 2 run types, all other types will 
    //be handled by the BR on sys_trigger table
    function getNextActionForRunTypePeriodicalyAndOnce(trigger, current) {
        var type = current.run_type;
        var gdt = new GlideDateTime();
        //In case of trigger once or trigger repeat
        if (type == 0 || type == 1) {
            var rdt = new GlideDateTime(current.run_start);
            if (rdt.getDate() == null)
                rdt = new GlideDateTime();

            //If run_start is in the future then we want to start on run_start
            if (rdt.getNumericValue() &gt; gdt.getNumericValue())
                return rdt;

            //If run_start is in the past then reschedule to prevent job executing now
            trigger.setValue("next_action", rdt);
            return getRescheduledNextAction(trigger);
        }
        return null;
    }


    function getRescheduledNextAction(trigger) {
        var m = GlideARecurrence.get(trigger);
        if (m == null)
            return;

        return m.next();
    }

})(current, previous);]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2017-11-16 09:11:15&lt;/sys_created_on&gt;
        &lt;sys_domain&gt;global&lt;/sys_domain&gt;
        &lt;sys_domain_path&gt;/&lt;/sys_domain_path&gt;
        &lt;sys_id&gt;0aac01d067220300b733e12d1585ef31&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;14&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;Create sys_trigger record&lt;/sys_name&gt;
        &lt;sys_overrides/&gt;
        &lt;sys_package display_value=""&gt;36f1465693eb3110b31a30dcebba10d7&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_0aac01d067220300b733e12d1585ef31&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2019-07-05 13:02:24&lt;/sys_updated_on&gt;
        &lt;template/&gt;
        &lt;when&gt;before&lt;/when&gt;
    &lt;/sys_script&gt;
    &lt;sys_translated_text action="delete_multiple" query="documentkey=0aac01d067220300b733e12d1585ef31"/&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:56:13</sys_created_on>
        <sys_id>324d245d83701210c6695855eeaad38e</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Create sys_trigger record</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_324d245d83701210c6695855eeaad38e</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:56:13</sys_updated_on>
        <tablename>sys_script</tablename>
    </sys_metadata_link>
</record_update>
