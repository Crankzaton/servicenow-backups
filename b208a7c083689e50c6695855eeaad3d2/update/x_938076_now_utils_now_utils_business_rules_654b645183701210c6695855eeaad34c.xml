<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Abort duplicate actions on layout</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
 
    //getting layout and layoutItem from current record
    var layoutSysId = current.getValue("ux_form_action_layout");
    var layoutItemSysId = current.getValue("ux_form_action_layout_item");
    var checkForDuplicate = true;

    //on Update no need to check for duplicates if the LayoutItem or the Layout has not changed
    if (current.operation() == 'update') {
        checkForDuplicate = layoutItemSysId != previous.getValue("ux_form_action_layout_item") || layoutSysId != previous.getValue("ux_form_action_layout");
    }

    if (checkForDuplicate) {

        //fetching the underlying action for the given layoutItem
        var layoutItemGR = new GlideRecord("sys_ux_form_action_layout_item");
        layoutItemGR.get(layoutItemSysId);
        var actionSysId = layoutItemGR.getValue("action");

        //ignore if action is group
        if (actionSysId) {

            // querying the m2m records for the given action and layout
            var layoutItemM2MSysId = (new UXFormActionUtil()).getUXFormActionLayoutItemM2MByAction(layoutSysId, actionSysId);

            // sending info message and aborting if there is already an existing layout item for the desired action
            if (layoutItemM2MSysId) {
                var hereMsg = gs.getMessage('Click here to view existing layout item.');
                var link = '<a href="/sys_ux_m2m_action_layout_item.do?sys_id=' + layoutItemM2MSysId + '">' + hereMsg + '</a>';
                gs.addInfoMessage(gs.getMessage('The layout item for the current action and layout already exists. ') + link);
                current.setAbortAction(true);
            }
        }
    }
})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:47:24</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>654b645183701210c6695855eeaad34c</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Abort duplicate actions on layout</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_654b645183701210c6695855eeaad34c</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:47:24</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=654b645183701210c6695855eeaad34c"/>
</record_update>
