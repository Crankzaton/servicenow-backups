<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>33c6802f5b313110e4334bbca881c73b</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.GenAIABtesting&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;Implements extension point global.GenAIABtesting&lt;/description&gt;
        &lt;name&gt;GenAIABtesting&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var GenAIABtesting = Class.create();
var fwinner = '';
var fwinscore = 0.0;
var usePrompts = false;
GenAIABtesting.prototype = {

    initialize: function() {},

    process: function(values, executionId) {
        var models = [];
        for (i = 0; i &lt; values.length; i++) {
            var model = this.findWinner(values[i], executionId);
            models.push(model);
        }
        var result = {
            "Models": models,
            "Winner": fwinner,
            "Winner Score": fwinscore
        };
        return result;
    },
    findWinner: function(value, executionId) {
        var totalCount = 0,
            acceptedCount = 0,
            rejectedCount = 0,
            ignoredCount = 0,
            cancelledCount = 0,
            likelypositiveCount = 0,
            slightlypositiveCount = 0,
            slightlynegativeCount = 0,
            likelynegativeCount = 0;
        var accepted = 0,
            rejected = 0,
            ignored = 0,
            likelyPositive = 0,
            slightlyPositive = 0,
            cancelled = 0,
            slightlyNegative = 0,
            likelyNegative = 0;
        var definitionValue = "";
	var parammeter = "default";

        //Get score form the table Generative AI Feedback Scores
        var scoreGr = new GlideRecord("sys_generative_ai_feedback_score");
        scoreGr.query();
        while (scoreGr.next()) {

            switch (scoreGr.getValue("feedback")) {
                case "Accepted":
                    accepted = scoreGr.getValue("score");
                    break;
                case "Rejected":
                    rejected = scoreGr.getValue("score");
                    break;
                case "Ignored":
                    ignored = scoreGr.getValue("score");
                    break;
                case "LikelyPositive":
                    likelyPositive = scoreGr.getValue("score");
                    break;
                case "SlightlyPositive":
                    slightlyPositive = scoreGr.getValue("score");
                    break;
                case "Cancelled":
                    cancelled = scoreGr.getValue("score");
                    break;
                case "SlightlyNegative":
                    slightlyNegative = scoreGr.getValue("score");
                    break;
                case "LikelyNegative":
                    likelyNegative = scoreGr.getValue("score");
                    break;
            }

        }
        //Get feedback
        var feedbackGr = new GlideRecord("sys_generative_ai_log");
        feedbackGr.initialize();
        feedbackGr.addQuery("query_evaluation_execution_id", executionId);
        feedbackGr.addQuery("query_evaluation_applied_parameter_values", value);
        feedbackGr.query();
        while (feedbackGr.next()) {
            definitionValue = feedbackGr.getDisplayValue("definition");
            var feedback = feedbackGr.getValue("feedback");
            totalCount++;

            switch (feedback) {
                case "Accepted":
                    acceptedCount++;
                    break;
                case "Rejected":
                    rejectedCount++;
                    break;
                case "Ignored":
                    ignoredCount++;
                    break;
                case "LikelyPositive":
                    likelypositiveCount++;
                    break;
                case "SlightlyPositive":
                    slightlypositiveCount++;
                    break;
                case "Cancelled":
                    cancelledCount++;
                    break;
                case "SlightlyNegative":
                    slightlynegativeCount++;
                    break;
                case "LikelyNegative":
                    likelynegativeCount++;
                    break;
            }
        }
        var tscore = accepted * acceptedCount + rejected * rejectedCount + ignored * ignoredCount + likelyPositive * likelypositiveCount + slightlyPositive * slightlypositiveCount + cancelled * cancelledCount + slightlyNegative * slightlynegativeCount + likelyNegative * likelynegativeCount;
        var fscore = (100 * tscore) / totalCount;
		if (JSON.stringify(value).includes("Prompts") &amp;&amp; !usePrompts)
			usePrompts = true;
        if (fwinscore &lt; fscore) {
            fwinscore = fscore;
			fwinner = definitionValue;
		}
		if(usePrompts) {
			fwinner = definitionValue + " With " + value;
			parammeter= value;
		}

        var model = {
            "Provider name": definitionValue,
	    "Applied Parameter":parammeter,
            "Total Feedback": totalCount,
            "Total Accepted": acceptedCount,
            "Total Rejected": rejectedCount,
            "Total Ignored": ignoredCount,
            "Total Cancelled": cancelledCount,
            "Total Likely Positive": likelypositiveCount,
            "Total Slightly Positive": slightlypositiveCount,
            "Total Slightly Negative": slightlynegativeCount,
            "Total Likely Negative": likelynegativeCount,
            "Average Score": fscore
        };
	return model;
    },

    type: 'GenAIABtesting'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2023-10-16 05:34:54&lt;/sys_created_on&gt;
        &lt;sys_id&gt;33c6802f5b313110e4334bbca881c73b&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;50&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;GenAIABtesting&lt;/sys_name&gt;
        &lt;sys_package display_value="Glide OneExtend" source="com.glide.one_extend"&gt;dc98175b47220210cd4e1ce4316d4324&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_33c6802f5b313110e4334bbca881c73b&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2023-10-20 08:41:33&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:35:39</sys_created_on>
        <sys_id>1456b89983f01210c6695855eeaad359</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>GenAIABtesting</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_1456b89983f01210c6695855eeaad359</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:35:39</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
