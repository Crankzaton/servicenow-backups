<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>31b135c0eb2201002db7648d9106fe37</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="sys_script"&gt;
    &lt;sys_script action="INSERT_OR_UPDATE"&gt;
        &lt;abort_action&gt;false&lt;/abort_action&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;action_delete&gt;false&lt;/action_delete&gt;
        &lt;action_insert&gt;true&lt;/action_insert&gt;
        &lt;action_query&gt;false&lt;/action_query&gt;
        &lt;action_update&gt;false&lt;/action_update&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;add_message&gt;false&lt;/add_message&gt;
        &lt;advanced&gt;true&lt;/advanced&gt;
        &lt;change_fields&gt;false&lt;/change_fields&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;collection&gt;pwd_user_lockout&lt;/collection&gt;
        &lt;condition/&gt;
        &lt;description/&gt;
        &lt;execute_function&gt;false&lt;/execute_function&gt;
        &lt;filter_condition/&gt;
        &lt;is_rest&gt;false&lt;/is_rest&gt;
        &lt;message/&gt;
        &lt;name&gt;Password Reset Activity Monitor&lt;/name&gt;
        &lt;order&gt;100&lt;/order&gt;
        &lt;priority&gt;100&lt;/priority&gt;
        &lt;rest_method/&gt;
        &lt;rest_method_text/&gt;
        &lt;rest_service/&gt;
        &lt;rest_service_text/&gt;
        &lt;rest_variables/&gt;
        &lt;role_conditions/&gt;
        &lt;script&gt;&lt;![CDATA[run();

function run() {
	// continue only for 'Max Failed Attempt Reached' lockout type
	if (current.type != 0) 
		return;
	
	// get all records from pwd_activity_monitor for given process and time interval
	var now = GlideDateTime();
	var processId = current.process;
	var monitor = GlideRecord('pwd_activity_monitor');
	monitor.addQuery('sys_created_on', '&lt;=', now.getValue());
	monitor.addQuery('expiration', '&gt;', now.getValue());
	monitor.addQuery('process', processId);
	monitor.orderByDesc('sys_created_on');
	monitor.query();
	
	// pick up latest created
	if (monitor.next()) {
		var cnt = monitor.getValue('counter');
		++cnt;
		monitor.setValue('counter', cnt);
		var threshold = GlideProperties.get('password_reset.activity_monitor.incident_threshold');
		threshold = parseInt(threshold);
		// create event
		if (cnt &gt; threshold &amp;&amp; monitor.getValue('event_created') == false) {
			createEvent(monitor);
			monitor.setValue('event_created', 'true');
		}
		monitor.update();
	} else { // there are no records whith in the time window, create new 
		addMonitorRecord(processId);
	}
}

function addMonitorRecord(processId) {
	var expiration = GlideDateTime();
	var window = GlideProperties.get('password_reset.activity_monitor.incident_window');
	window = parseInt(window);
	expiration.addSeconds(60 * window);
	var gr = new GlideRecord('pwd_activity_monitor');
	gr.initialize();
	gr.setValue('process', processId);
	gr.setValue('expiration', expiration.getValue());
	gr.insert();
}

function createEvent(currentRecord) {
	var eventName = 'pwd.activity_monitor.lockout_threshold';
	var gr = new GlideRecord('pwd_process');
	gr.get(currentRecord.getValue('process'));
	var param1 = gr.getValue('name');
	var param2 = gs.getUserName();
	gs.eventQueue(eventName, currentRecord, param1, param2);
}]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2013-07-09 00:40:06&lt;/sys_created_on&gt;
        &lt;sys_domain&gt;global&lt;/sys_domain&gt;
        &lt;sys_domain_path/&gt;
        &lt;sys_id&gt;31b135c0eb2201002db7648d9106fe37&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;41&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;Password Reset Activity Monitor&lt;/sys_name&gt;
        &lt;sys_overrides/&gt;
        &lt;sys_package display_value="Password Reset" source="com.glideapp.password_reset"&gt;1399f4e43cf1311068bcf327dfe37fe4&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_31b135c0eb2201002db7648d9106fe37&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2013-07-17 17:25:37&lt;/sys_updated_on&gt;
        &lt;template/&gt;
        &lt;when&gt;after&lt;/when&gt;
    &lt;/sys_script&gt;
    &lt;sys_translated_text action="delete_multiple" query="documentkey=31b135c0eb2201002db7648d9106fe37"/&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:59:30</sys_created_on>
        <sys_id>ba0e281183b01210c6695855eeaad30f</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Password Reset Activity Monitor</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_ba0e281183b01210c6695855eeaad30f</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:59:30</sys_updated_on>
        <tablename>sys_script</tablename>
    </sys_metadata_link>
</record_update>
