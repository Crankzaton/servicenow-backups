<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>39fe3ffb044cb110f8771800dc40b076</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;sn_ex_sp.StaticContentUtilSNC&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;[WARNING: Customers should NOT modify this script]
The purpose of this script include is to provide default behaviours for the StaticContentUtil script include.
To change the behaviour of these methods (or add new methods), Customers should override/add new methods to the StaticContentUtil script include.&lt;/description&gt;
        &lt;name&gt;StaticContentUtilSNC&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var StaticContentUtilSNC = Class.create();
StaticContentUtilSNC.prototype = {
    initialize: function() {
        this.STATICCONTENT_TABLE = "sn_ex_sp_static_content";
        this.STATICCONTENT_AVAILABLE_FOR_TABLE = "sn_ex_sp_static_content_user_criteria_mtom";
        this.STATICCONTENT_NOT_AVAILABLE_FOR_TABLE = "sn_ex_sp_static_content_user_criteria_no_mtom";
    },

    /**
     * This function fetches user criteria for a record
     * @param {GlideRecord} support_type
     * @param {String} userCriteriaTable
     * @returns criteriaList
     */
    _fetchUserCriteria: function(contentRecord, userCriteriaTable) {
        var gRecord = new GlideRecord(userCriteriaTable);
        gRecord.addQuery(contentRecord.getTableName(), contentRecord.sys_id);
        gRecord.query();
        var criteriaList = [];
        while (gRecord.next()) {
            criteriaList.push(gRecord.user_criteria);
        }
        return criteriaList;
    },

    /**
     * This function checks if a staticContentRecord record can be viewed by the current user
     * @param {GlideRecord} staticContentRecord
     * @returns true/false
     */
    _staticContentCanView: function(staticContentRecord) {
        var cannotViewCriteriaList = this._fetchUserCriteria(staticContentRecord, this.STATICCONTENT_NOT_AVAILABLE_FOR_TABLE);
        if (sn_uc.UserCriteriaLoader.userMatches(gs.getUserID(), cannotViewCriteriaList)) {
            return false;
        }
        var canViewCriteriaList = this._fetchUserCriteria(staticContentRecord, this.STATICCONTENT_AVAILABLE_FOR_TABLE);
        if (!canViewCriteriaList.length) {
            return true;
        }
        if (sn_uc.UserCriteriaLoader.userMatches(gs.getUserID(), canViewCriteriaList)) {
            return true;
        }
        return false;
    },

    /**
     * This function returns static content records in JSON format
     * @param {GlideRecord} staticContentRecord
     * @returns Object
     */
    _fetchStaticContentJSON: function(staticContentRecord) {
        if (staticContentRecord.isValidRecord()) {
            if (this._staticContentCanView(staticContentRecord)) {
                return {
                    'title': staticContentRecord.getDisplayValue('title'),
                    'richText': staticContentRecord.getValue('rich_text'),
                    'id': staticContentRecord.getUniqueValue()
                };
            }
        }
    },

    _pushNotNull: function(array, value) {
        if (value) {
            array.push(value);
        }
    },

    /**
     * This function fetches static content records
     * @param {String} staticContentList
     * @returns staticContent
     */
    fetchStaticContent: function(staticContentList) {
        var gRecord = new GlideRecord(this.STATICCONTENT_TABLE);
        gRecord.addQuery('sys_id', 'IN', staticContentList);
        gRecord.addActiveQuery();
        gRecord.query();
        var staticContent = [];
        var staticContentMap = {};
        while (gRecord.next()) {
            staticContentMap[gRecord.sys_id] = this._fetchStaticContentJSON(gRecord);
        }
        var staticContentArray = staticContentList.split(',');
        for (var i = 0; i &lt; staticContentArray.length; i++) {
            this._pushNotNull(staticContent, staticContentMap[staticContentArray[i]]);
        }
        return staticContent;
    },

    type: 'StaticContentUtilSNC'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;maint&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2023-07-22 18:28:16&lt;/sys_created_on&gt;
        &lt;sys_id&gt;39fe3ffb044cb110f8771800dc40b076&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;10&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;StaticContentUtilSNC&lt;/sys_name&gt;
        &lt;sys_package display_value="Employee Center" source="sn_ex_sp"&gt;4249e63a28d54d61bb6fbf61fd86cccb&lt;/sys_package&gt;
        &lt;sys_policy&gt;read&lt;/sys_policy&gt;
        &lt;sys_scope display_value="Employee Center"&gt;4249e63a28d54d61bb6fbf61fd86cccb&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_39fe3ffb044cb110f8771800dc40b076&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2023-07-27 08:04:05&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:35:57</sys_created_on>
        <sys_id>fc667c9983f01210c6695855eeaad35b</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>StaticContentUtilSNC</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_fc667c9983f01210c6695855eeaad35b</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:35:57</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
