<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>2d407422c30221000096dfdc64d3aeca</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.KBKnowledgeBaseSNC&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;Customers should not change this class directly, rather override methods in the subclass.&amp;#13;
This class is never called directly.&lt;/description&gt;
        &lt;name&gt;KBKnowledgeBaseSNC&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[KBKnowledgeBaseSNC = Class.create();

KBKnowledgeBaseSNC.prototype =  Object.extendsObject(KBCommon, {
	knowledgeHelper: new SNC.KnowledgeHelper(),
	PATH_TO_OWNER: "owner",
	PATH_TO_MANAGERS: "kb_managers",

	/**
	 * Only a knowledge_admin can create a kb_knowledge_base record.
	 *
	 * @param GlideRecord: kb_knowledge_base
	 * @return Boolean: can logged in user create a kb_knowledge_base
	 */
	canCreate: function(knowledgeBaseGr) {
		return this.isAdminUser(knowledgeBaseGr);
	},

	/**
	 * Can the current user read kb_knowledge_base contents
	 * based on the user criteria configuration.
	 *
	 * @param GlideRecord: kb_knowledge_base
	 * @return Boolean: can logged in user read the kb_knowledge_base
	 */
	canRead: function(knowledgeBaseGr) {
		if(knowledgeBaseGr.isNewRecord())
			return true;
		
		return this.safeExecute(this.knowledgeHelper.canRead, knowledgeBaseGr);
	},

	/**
	 * Providing user is a knowledge_admin, or is an owner/ manager
	 * of the kb_knowledge_base let them update the record.
	 *
	 * @param GlideRecord: kb_knowledge_base
	 * @return Boolean: can logged in user update the kb_knowledge_base
	 */
	canWrite: function(knowledgeBaseGr) {

		if (this.isAdminUser(knowledgeBaseGr))
			return true;

		if (this.isKnowledgeBaseOwner(knowledgeBaseGr, this.PATH_TO_OWNER))
			return true;

		if (this.isKnowledgeBaseManager(knowledgeBaseGr, this.PATH_TO_MANAGERS))
			return true;

		return false;
	},

	/**
	 * Stop any user from deleting the kb_knowledge_base without following procedure.
	 *
	 * @param GlideRecord: kb_knowledge_base
	 * @return Boolean: can logged in user delete the kb_knowledge_base
	 */
	canDelete: function(knowledgeBaseGr) {
		return false;
	},

	/**
	 * Checks to see if the specified user is a owner or manager of any knowledge base
	 * @param String: user's sys_id
	 * @return Boolean: true if user is owner or manager of any knowledge base, false otherwise
	 */
	isManagerOfAny: function(userId) {
		var kbGr = new GlideRecord("kb_knowledge_base");
		var qc = kbGr.addQuery("owner", "CONTAINS", userId);
		qc.addOrCondition("kb_managers", "CONTAINS", userId);
		kbGr.query();
		return kbGr.hasNext();
	},

	/**
	 * Get all the knowledge base sys ids that the current user is a manager or owner of
	 * Note: knowledge_admin gets all knowledge bases
	 *
	 * @return Array of sys ids
	 */
	getAllSysIds: function() {
		var kbGr = new GlideRecord("kb_knowledge_base");
		var userId = gs.getUserID();
		
		var qc = kbGr.addQuery("owner", "CONTAINS", userId);
		qc.addOrCondition("kb_managers", "CONTAINS", userId);
		if (this.isAdminUser(knowledgeBaseGr)) {
			qc.addOrCondition('application', '=', 'NULL');
			qc.addOrCondition('application', '=', 'global');
		}
		kbGr.query();

		var result = [];
		while (kbGr.next()) {
			result.push(kbGr.sys_id+"");
		}
		return result;
	},

	/**
	* Compares the Languages associated to Articles in the given Knowledge Base.
	* @returns an array of language codes missing on Knowledge Base.
	*/
	findMissingLanguages: function(knowledgeBaseGr){
		var articlelanguages = new GlideAggregate('kb_knowledge');
		articlelanguages.addQuery('kb_knowledge_base',knowledgeBaseGr.sys_id);
		articlelanguages.addNotNullQuery('language');
		articlelanguages.addQuery('language','NOT IN',knowledgeBaseGr.languages);
		articlelanguages.addAggregate('COUNT','language');
		articlelanguages.query();
		var missedLanguages=[];
		while(articlelanguages.next()){
			missedLanguages.push(''+articlelanguages.language);
		}
		return missedLanguages;
	},

	type: "KBKnowledgeBaseSNC"
});]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2014-07-24 09:08:14&lt;/sys_created_on&gt;
        &lt;sys_id&gt;2d407422c30221000096dfdc64d3aeca&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;6&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;KBKnowledgeBaseSNC&lt;/sys_name&gt;
        &lt;sys_package display_value="Knowledge Management Core" source="com.glideapp.knowledge"&gt;a8c6f4a43cb1311068bcf327dfe37f3e&lt;/sys_package&gt;
        &lt;sys_policy&gt;read&lt;/sys_policy&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_2d407422c30221000096dfdc64d3aeca&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2020-05-07 17:29:25&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:13:16</sys_created_on>
        <sys_id>2c31749983b01210c6695855eeaad35c</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>KBKnowledgeBaseSNC</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_2c31749983b01210c6695855eeaad35c</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:13:16</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
