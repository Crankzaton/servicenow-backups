<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>a6ccc60a47804e9023341b84f16d43b6</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;public&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.WF_PropertyLifeCycle&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;Functions related to property Life cycle management processs.&lt;/description&gt;
        &lt;name&gt;WF_PropertyLifeCycle&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var WF_PropertyLifeCycle = Class.create();
WF_PropertyLifeCycle.prototype = {
    initialize: function() {
        this.jsUtil = global.JSUtil;
    },

    getGrpMembers: function(grpId) {

        try {
            var userIds = [];
            if (this.jsUtil.notNil(grpId)) {
                var grpMemberGr = new GlideRecord("sys_user_grmember");
                grpMemberGr.addEncodedQuery("group=" + grpId);
                grpMemberGr.query();
                while (grpMemberGr.next()) {
                    userIds.push(grpMemberGr.getValue("user"));
                }

                return userIds.join(",");
            }
        } catch (error) {
            gs.info("Error caught " + error.message);
        }

    },
    /*
    	returns the sys_id of the groups which are haivng group type falling under wsd categorization
    	system property : sn_wsd_core.biz_partner_grp_types (list of comma sepearated string value of group types)
    */
    getGroups: function() {

        try {

            var _grpTypes = gs.getProperty('sn_wsd_core.biz_partner_grp_types');
            var retIds = [];
            var grGrpType = new GlideRecord('sys_user_group_type');
            grGrpType.addEncodedQuery('nameIN' + _grpTypes);
            grGrpType.query();
            while (grGrpType.next()) {

                retIds.push(grGrpType.getUniqueValue());

            }

            // here I get the sysIds of the groupsTypes
            // which is used to retrieve the sys_ids of the assignment groups.
            var _returnQuery = '';
            var _arrayLen = retIds.length;
            var count = 1;
            retIds.forEach(function(grpType) {
                //typeLIKEb9f9548147f7b510e88615b4f16d43c8^ORtypeLIKEb1e906a787ea71508d1065f70cbb35ee^
                if (count !== _arrayLen)
                    _returnQuery += 'typeLIKE' + grpType + '^OR';
                else
                    _returnQuery += 'typeLIKE' + grpType;
                count++;
            });

        } catch (e) {

			gs.info('Caught Error while trying to identify the groups using groupTypes with error :'+e.message);

        }

        return _returnQuery;

    },

    type: 'WF_PropertyLifeCycle'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;K105800&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2024-01-31 19:53:38&lt;/sys_created_on&gt;
        &lt;sys_id&gt;a6ccc60a47804e9023341b84f16d43b6&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;20&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;WF_PropertyLifeCycle&lt;/sys_name&gt;
        &lt;sys_package display_value=""&gt;a208b07253201010b10bddeeff7b1281&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value=""&gt;a208b07253201010b10bddeeff7b1281&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_a6ccc60a47804e9023341b84f16d43b6&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2024-02-04 17:26:25&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:46:44</sys_created_on>
        <sys_id>f2d8b89183341210c6695855eeaad33f</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>WF_PropertyLifeCycle</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_f2d8b89183341210c6695855eeaad33f</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:46:44</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
