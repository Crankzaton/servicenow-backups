<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>public</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>incident functions</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[// populate the default value for the caller
function incidentGetViewName() {
  if (gs.hasRole("itil") || gs.hasRole("sn_incident_read")) 
     return; 
  if (view.startsWith("ess"))
     return;
  if (view == "sys_ref_list")
     return;

  answer = "ess";
}

function incident_listGetViewName() {
  incidentGetViewName();
}

// for ESS type users, use the logged in user
// for itil users, if the parent had a user, use that person
function incidentGetCaller() {
 if (gs.hasRole("itil")) {
  var action = gs.action;
  var table = action.get("sysparm_collection");
  if (table != "sys_user")
   return null;

  var userID = action.get("sysparm_collectionID");
  return userID;
 }

 return gs.getUserID();
}

// get an email address from the sys_user file
function sys_userGetEmailAddress(sys_id) {
 // danger, at this point, the current record switches to sys_user
 var prev = current;
 var emailAddress = null;
 var user = new GlideRecord("sys_user");
 user.addQuery("sys_id", sys_id);
 user.query();
 if (user.next()) {
                                if (user.notification == 2) 
     emailAddress = user.email;
 }

 current = prev;
 return emailAddress;
}]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:52:34</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>5d7c245983701210c6695855eeaad383</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>incident functions</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_5d7c245983701210c6695855eeaad383</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:52:34</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=5d7c245983701210c6695855eeaad383"/>
</record_update>
