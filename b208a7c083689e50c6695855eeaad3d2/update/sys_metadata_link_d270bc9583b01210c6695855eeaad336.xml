<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>0efb5d910f09230096f9d6892f767e6f</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;public&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.UserProfileService&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;UserProfileService&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var UserProfileService = Class.create();
UserProfileService.prototype = {
    initialize: function() {
    },
	
	appLiveProfile: new GlideappLiveProfile(),
	
	getProfile: function(userId, userName) {
		var name = String(userName);
		var profile = {};
		profile.id = userId;
		profile.text = name;
		profile.imgUrl = '';

		name = name.replace(/[^\w\s\.]\w+[^\w\s\.]|[^\w\s\.]/, "");
		name = name.replace(/\s+/, ' ');
		var parts = name.split(' ');
		if(parts[0] &amp;&amp; parts[1]) {
			profile.initials = (parts[0].substring(0, 1) + parts[parts.length - 1].substring(0,1)).toUpperCase();
		} else {
			profile.initials = parts[0].substring(0, 1).toUpperCase();
		}

		return profile;
	},
	
	getAvatarFromDB: function(profileId, profileTable) {
		var gr = new GlideRecord('sys_attachment');
		gr.addQuery('table_sys_id', profileId);
		gr.addQuery('table_name', 'ZZ_YY' + profileTable);
		gr.query();
		if ( gr.next() )
			return (gr.sys_id + '.iix');

		return "";
	},
	
	generateProfile: function(userId) {
		var profile;
		var profileId;
		var profileName;

		profileId = this.appLiveProfile.getID(userId);
		profileName = this.appLiveProfile.getName(profileId);
		profile = this.getProfile(userId, profileName);

		profile.imgUrl = this.appLiveProfile.getAvatar(profileId);

		if(JSUtil.nil(profile.imgUrl) || profile.imgUrl.indexOf('default') &gt; -1) {
			profile.imgUrl = this.getAvatarFromDB(userId, 'sys_user');
		}

		return profile;
	},
	
    type: 'UserProfileService'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2018-10-08 15:36:23&lt;/sys_created_on&gt;
        &lt;sys_id&gt;0efb5d910f09230096f9d6892f767e6f&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;2&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;UserProfileService&lt;/sys_name&gt;
        &lt;sys_package display_value="Agile Development 2.0 - Common" source="com.snc.sdlc.agile.2.0.common"&gt;61152b88477e0610cd4e1ce4316d4377&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_0efb5d910f09230096f9d6892f767e6f&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2018-10-11 15:36:59&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:10:07</sys_created_on>
        <sys_id>d270bc9583b01210c6695855eeaad336</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>UserProfileService</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_d270bc9583b01210c6695855eeaad336</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:10:07</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
