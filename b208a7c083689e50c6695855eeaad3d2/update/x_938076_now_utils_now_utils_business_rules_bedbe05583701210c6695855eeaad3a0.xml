<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Validate Subnet Uniqeness</name>
        <order>50</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {

    // Validate Network IP
    if (GlideStringUtil.nil(current.network_ip)) {
        gs.addErrorMessage(gs.getMessage("Empty Network IP."));
        current.setAbortAction(true);
        return false;
    }

    // Validate Netmask
    if (GlideStringUtil.nil(current.netmask)) {
        gs.addErrorMessage(gs.getMessage("Empty Netmask."));
        current.setAbortAction(true);
        return false;
    }

    // Validate the network with Network IP and  Netmask.
 var nw = SncIPNetwork.fromStringAndPrefix(current.network_ip, current.netmask);
    if (GlideStringUtil.nil(nw)) {
        gs.addErrorMessage(gs.getMessage("Invalid Subnet record with Network IP '{0}' and Netmask '{1}'", [current.network_ip, current.netmask]));
        current.setAbortAction(true);
        return false;
    }


 var ipSubnetGr = new GlideRecord("sys_ip_address_subnet");
    ipSubnetGr.addQuery("network_ip", current.network_ip);
    ipSubnetGr.addQuery("netmask", current.netmask);
    ipSubnetGr.addQuery("sys_ip_filter_criteria", current.sys_ip_filter_criteria);
    ipSubnetGr.query();
    // If a Subnet already exist with this network_ip, netmask and sys_ip_filter_criteria then abort the insert/update
    if (ipSubnetGr.next()) {
        gs.addErrorMessage(gs.getMessage("Duplicate Subnet record entry with Network IP and Netmask '{0} - {1}' for this IP Filter. Aborting the operation.", [current.network_ip, current.netmask]));
        current.setAbortAction(true);
    }

})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:49:56</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>bedbe05583701210c6695855eeaad3a0</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Validate Subnet Uniqeness</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_bedbe05583701210c6695855eeaad3a0</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:49:56</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=bedbe05583701210c6695855eeaad3a0"/>
</record_update>
