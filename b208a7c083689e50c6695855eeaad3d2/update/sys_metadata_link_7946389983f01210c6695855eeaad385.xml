<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>2f1f6c599bd881100290af417ef04b6e</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;sn_collab_request.CollaborationRequestApprovalUtils&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;Utils to be used in the approval flow of a collaboration request&lt;/description&gt;
        &lt;name&gt;CollaborationRequestApprovalUtils&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var CollaborationRequestApprovalUtils = Class.create();
CollaborationRequestApprovalUtils.prototype = {
    initialize: function() {},

    isOriginEnvironmentFound: function(request) {
        return this.getOriginEnvironment(request).getRowCount() !== 0;
    },

    getOriginEnvironment: function(request) {
        var originatingInstanceId = this.getOriginatingInstanceId(request);
        var originEnvGr = new GlideRecord('sn_pipeline_environment');
        originEnvGr.get('instance_id', originatingInstanceId);
        return originEnvGr;
    },

    getOriginatingInstanceId: function(request) {
        try {
            var originatingInstanceId = request.getValue('originating_instance_id');
        } catch (e) {

        }
        return originatingInstanceId;
    },

    isOriginEnvironmentCurrentInstance: function(request) {
        return this.getOriginatingInstanceId(request) === gs.getProperty('instance_id');
    },

    isOriginEnvironmentSet: function(request) {
        try {
            var originEnv = request.originating_environment.getRefRecord();
        } catch (e) {

        }
        return originEnv &amp;&amp; !!originEnv.sys_id &amp;&amp; originEnv.instance_id === this.getOriginatingInstanceId(request);
    },

    userOrGroupHasPermission: function(request) {
        var isAesInstalled = global.JSUtil.getBooleanValue(request, 'originating_instance_has_aes_installed');
        var isGroup = global.JSUtil.getBooleanValue(request, 'is_invitee_group');
        var userOrGroupHasPerm = false;
        if (isAesInstalled) {
            if (isGroup) {
                userOrGroupHasPerm = global.JSUtil.getBooleanValue(request, 'group_invitee_has_aes_role');
            } else {
                userOrGroupHasPerm = global.JSUtil.getBooleanValue(request, 'invitee_has_aes_role');
            }
        } else {
            if (isGroup) {
                userOrGroupHasPerm = global.JSUtil.getBooleanValue(request, 'group_invitee_has_delegated_dev_role');
            } else {
                userOrGroupHasPerm = global.JSUtil.getBooleanValue(request, 'invitee_has_delegated_dev_role');
            }
        }
        return userOrGroupHasPerm;
    },

    mustRequestApproval: function(request) {
        //user or group either doesn't have permission or the origin environment isn't found on the controller
        return !global.JSUtil.getBooleanValue(request, 'auto_approve') || (!this.isOriginEnvironmentCurrentInstance(request) &amp;&amp; !this.isOriginEnvironmentFound(request));
    },

    getAddingUserOrGroupToDescriptorFailedMessage: function(request, errorMessage) {
        var isGroup = request.is_invitee_group;
        var invitee = isGroup ? 'group' : 'user';
        var message = gs.getMessage('Something went wrong adding {0} to collaboration descriptor.\n{1}', [invitee, errorMessage]);
        return message;
    },

    getAssigningUserOrGroupAESRoleFailedMessage: function(request, errorMessage) {
        var isGroup = request.is_invitee_group;
        var invitee = isGroup ? 'group' : 'user';
        var message = gs.getMessage('Something went wrong assigning role sn_app_eng_studio.user to {0}.\n{1}', [invitee, errorMessage]);
        return message;
    },

    type: 'CollaborationRequestApprovalUtils'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2021-12-07 06:43:42&lt;/sys_created_on&gt;
        &lt;sys_id&gt;2f1f6c599bd881100290af417ef04b6e&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;31&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;CollaborationRequestApprovalUtils&lt;/sys_name&gt;
        &lt;sys_package display_value="Collaboration Request" source="sn_collab_request"&gt;f6ad5d41c3222010a9f5e548fa40dd69&lt;/sys_package&gt;
        &lt;sys_policy&gt;read&lt;/sys_policy&gt;
        &lt;sys_scope display_value="Collaboration Request"&gt;f6ad5d41c3222010a9f5e548fa40dd69&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_2f1f6c599bd881100290af417ef04b6e&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2024-03-06 11:46:27&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:35:28</sys_created_on>
        <sys_id>7946389983f01210c6695855eeaad385</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>CollaborationRequestApprovalUtils</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_7946389983f01210c6695855eeaad385</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:35:28</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
