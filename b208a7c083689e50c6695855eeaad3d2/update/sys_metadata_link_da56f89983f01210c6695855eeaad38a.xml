<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>36a55516c7623010d7e818b1c7c26025</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;sn_sow_inc.SOWIncidentKnowledgeUtilsSNC&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;Utility methods for driving knowledge flows on Incident from Service Operations Workspace.&lt;/description&gt;
        &lt;name&gt;SOWIncidentKnowledgeUtilsSNC&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var SOWIncidentKnowledgeUtilsSNC = Class.create();
SOWIncidentKnowledgeUtilsSNC.prototype = {
    initialize: function() {},

    canCreateKnowledgeArticle: function(incidentGr) {
        if (incidentGr.state == global.IncidentState.RESOLVED) {
            var knowledgeGr = new GlideRecord('kb_knowledge');
            knowledgeGr.addQuery('source', incidentGr.getUniqueValue());
            knowledgeGr.setLimit(1);
            knowledgeGr.query();
            if (!knowledgeGr.hasNext()) {
                var kbKnowledge = new global.KBKnowledge();
                if (GlidePluginManager.isActive('com.snc.incident.knowledge')) {
                    return kbKnowledge.canCreate();
                } else if (gs.getProperty('glide.knowman.submission.workflow') != 'true') {
                    var kBaseGr = new GlideRecord('kb_knowledge_base');
                    if (kBaseGr.get(gs.getProperty("glide.knowman.task_kb", "dfc19531bf2021003f07e2c1ac0739ab"))) {
                        var knowledgeAccess = new global.KnowledgeAccess();
                        return knowledgeAccess.contributorRight(kBaseGr);
                    }
                } else {
                    return true;
                }
            }
        }
        return false;
    },

    getNewKnowledgeArticleLink: function(incidentGr) {
        var map = new global.CSMTableMapUtil(incidentGr);
        map.findMapByName("incident_kcs_article_html");
        var targetURL = map.getTargetURL();
        if (targetURL)
            return targetURL[0];
        else
            return null;
    },

    type: 'SOWIncidentKnowledgeUtilsSNC'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2021-09-14 12:09:30&lt;/sys_created_on&gt;
        &lt;sys_id&gt;36a55516c7623010d7e818b1c7c26025&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;23&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;SOWIncidentKnowledgeUtilsSNC&lt;/sys_name&gt;
        &lt;sys_package display_value="Incident Management for Service Operations Workspace" source="sn_sow_inc"&gt;49aff4bb733320103e366238edf6a70f&lt;/sys_package&gt;
        &lt;sys_policy&gt;read&lt;/sys_policy&gt;
        &lt;sys_scope display_value="Incident Management for Service Operations Workspace"&gt;49aff4bb733320103e366238edf6a70f&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_36a55516c7623010d7e818b1c7c26025&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2021-11-07 09:18:50&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:35:47</sys_created_on>
        <sys_id>da56f89983f01210c6695855eeaad38a</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>SOWIncidentKnowledgeUtilsSNC</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_da56f89983f01210c6695855eeaad38a</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:35:47</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
