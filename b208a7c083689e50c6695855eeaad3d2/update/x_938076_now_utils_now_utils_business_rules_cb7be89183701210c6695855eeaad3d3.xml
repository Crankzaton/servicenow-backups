<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>true</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition>current.version.changes() || current.edition.changes() || current.operation() === 'delete'</condition>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Sync Installed Software</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /* null when async */) {
 // Get the software install record of this CI
 var swGr = new GlideRecord('cmdb_sam_sw_install');
 if (swGr.get(current.software_install + '') && !!swGr.created_by_application_pattern === true) {
  // If current operation is delete, than delete the software install record
  if (current.operation() === 'delete') {
   swGr.deleteRecord();
   return;
  }

  var className = current.sys_class_name;
  var edition = current.edition;
  var version = current.version;

  // Get product and publisher from the mapping table
  var gr = new GlideRecord('cmdb_sam_sw_name_mapping');
  gr.addQuery('class_name', className);
  gr.query();

  if (!gr.next() || gr.getRowCount() !== 1) {
   gs.warn('None or more than one publisher and product found in the mapping '
                + 'table with value: className = ' + className + '.');
   return;
  }

  var displayName = gr.product + ' ' + edition;
  var publisher = gr.publisher;

  var relGr = global.SAMPremiumUtils.getInstalledOnRelationship(current.sys_id);
  if (relGr.next()) {
   var installedOn = relGr.child.sys_id;
   // Update cmdb_sam_sw_install record
   swGr.display_name = displayName;
   swGr.publisher = publisher;
   swGr.version = version;
   swGr.installed_on = installedOn;

   if (swGr.isValidRecord()) {
    swGr.update();
   }
  } else {
   // delete record for empty installed on
   swGr.deleteRecord();
  }
 }
}(current, previous));]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:48:19</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>cb7be89183701210c6695855eeaad3d3</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Sync Installed Software</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_cb7be89183701210c6695855eeaad3d3</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:48:19</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=cb7be89183701210c6695855eeaad3d3"/>
</record_update>
