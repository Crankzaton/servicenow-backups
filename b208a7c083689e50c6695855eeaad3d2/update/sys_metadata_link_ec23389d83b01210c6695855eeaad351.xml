<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>6ba247a01b278e50ff37eb14b24bcb64</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_fix"&gt;
    &lt;sys_script_fix action="INSERT_OR_UPDATE"&gt;
        &lt;before&gt;false&lt;/before&gt;
        &lt;description/&gt;
        &lt;name&gt;TestBulkChecker&lt;/name&gt;
        &lt;record_for_rollback&gt;true&lt;/record_for_rollback&gt;
        &lt;script&gt;&lt;![CDATA[var bulkID = 'f9581a1b1b53c2506ed00e1ad34bcbd9'; //bulk sysID
var userID = '7ff2a0d51b4f8a10ff37eb14b24bcb2d'; //user ID

var trades = []; ////fetching all the checker task with confirm or settle trade
var decMatrix = []; //holds true or false

var uneligTrades =[];

//fetching all the checker task with confirm or settle trade
var bul = new GlideRecord('x_hsb11_mss_c_proc_mss_custody_task');
bul.addEncodedQuery('bulk_id.sys_id=' + bulkID + '^trade_task_type=Checker^outcomeINConfirm Trade,Settle Trade');
bul.query();
while (bul.next()) {
    trades.push(bul.trade_id + '');
}
//fetching all the checker task with confirm or settle trade

gs.info("Trade Sys ID " + trades.toString());

//fetching the trade nominal and settlement amount in USD
for (var i = 0; i &lt; trades.length; i++) {
    var grTrade = new GlideRecord('x_hsb11_mss_c_proc_mss_custody_trade');
    grTrade.get(trades[i]);
    gs.info(grTrade.trade_id.getDisplayValue());
    var nomAmt = grTrade.nominal_settlement_amount_in_usd; // nominal_settlement_amount_in_usd
    var setAmt = grTrade.settlement_amount_in_usd; //settlement_amount_in_usd
    var transType = grTrade.getValue('transaction_type'); //DVP or RVP*/

    gs.info(grTrade.getValue('transaction_type'));

    if (nomAmt != 0 || nomAmt != '' || setAmt != 0 || setAmt != '') { //if nominal or settlement amount is valid
        //Added as part of MSSCUSTODY-2530 to fetch the right group based on the owning business of the trade
        var owningBusiness = grTrade.owning_business; //trade owning business
        gs.info('Owning business ' + grTrade.owning_business);
        var trdType = new GlideRecord('sys_user_group_type');
        trdType.get(owningBusiness);
        //Added as part of MSSCUSTODY-2530 to fetch the right group based on the owning business of the trade
        var typeID = trdType.sys_id;
        var grUser = new GlideRecord('sys_user');
        grUser.get(userID);
        var userMarket = grUser.u_associated_business_markets; //associated markets of user
        var usrBand = grUser.u_user_band; //user band
        if (userMarket.indexOf(owningBusiness) &gt; -1) {
            var grGroup = new GlideRecord("sys_user_group");
            grGroup.addEncodedQuery('u_associated_group_band=' + usrBand + '^typeLIKE' + typeID); //Considering only access groups
            grGroup.orderByDesc('u_usd_limit');
            grGroup.query();
            if (grGroup.next()) {
                gs.info('settlement amount in USD of trade =' + grTrade.settlement_amount_in_usd);
                gs.info('Nominal settlement amount  of Trade in USD =' + grTrade.nominal_settlement_amount_in_usd);
                gs.info('Group selected' + grGroup.getDisplayValue());
                gs.info('Group Limit in USD = ' + grGroup.u_usd_limit);
                if (transType == 'DVP' || transType == 'RVP') {
                    gs.info(" entered Loop 1 RVP or DVP");
                    if ((grTrade.settlement_amount_in_usd &gt; grGroup.u_usd_limit)) {
						uneligTrades.push(grTrade.trade_id + '');
                        decMatrix.push(false + ''); //Higher limit than USD limit for DVP and RVP
                    }
                } else if (transType == 'RFP' || transType == 'DFP') {
                    gs.info(" entered Loop 2 RFP or DFP");
                    if ((grTrade.nominal_settlement_amount_in_usd &gt; grGroup.u_usd_limit)) {
						uneligTrades.push(grTrade.trade_id + '');
                        decMatrix.push(false + ''); //Higher limit than USD limit for FOP
                    }
                }

            } else {
                gs.info(" entered Loop 3 No groups");
                decMatrix.push(false + ''); //User Does not belong to any groups allowed for trade approval
            }
        } else {
            gs.info(" entered Loop 4 No markets");
            decMatrix.push(false + ''); //User Does not belong to Trade market
        }
    }
} //fetching the trade nominal and settlement amount in USD



if (decMatrix.indexOf('false') &gt; -1) {
    gs.info("The trades  " + uneligTrades.toString() + " holds Settlement Amount/Nominal Settlement amount more than your allowed band limit");
}
]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_fix&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;45381533@hsbc.com&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2024-07-19 07:35:12&lt;/sys_created_on&gt;
        &lt;sys_id&gt;6ba247a01b278e50ff37eb14b24bcb64&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;25&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;TestBulkChecker&lt;/sys_name&gt;
        &lt;sys_package display_value="Global" source="global"&gt;global&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_fix_6ba247a01b278e50ff37eb14b24bcb64&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;45381533@hsbc.com&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2024-07-22 07:05:39&lt;/sys_updated_on&gt;
        &lt;unloadable&gt;false&lt;/unloadable&gt;
    &lt;/sys_script_fix&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:21:44</sys_created_on>
        <sys_id>ec23389d83b01210c6695855eeaad351</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>TestBulkChecker</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_ec23389d83b01210c6695855eeaad351</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:21:44</sys_updated_on>
        <tablename>sys_script_fix</tablename>
    </sys_metadata_link>
</record_update>
