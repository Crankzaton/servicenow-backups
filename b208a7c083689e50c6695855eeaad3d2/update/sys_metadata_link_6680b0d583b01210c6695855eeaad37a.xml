<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>11f01e3dc3f23300daa79624a1d3ae32</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;public&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.SMDynamicManualServicePopulator&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;Populator for dynamic manual services, provided by Service Mapping&lt;/description&gt;
        &lt;name&gt;SMDynamicManualServicePopulator&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var SMDynamicManualServicePopulator = Class.create();
SMDynamicManualServicePopulator.prototype = Object.extendsObject(AbstractApplicationServicePopulator, {
    process: function(serviceRecord, mode) {
        if (mode == 'SCHEDULED')
            return;
        var metadata = serviceRecord.metadata;
        var levels;
        if (metadata) {
            var metadataJson = new JSON().decode(metadata);
            levels = metadataJson.levels;
        }
        if (!levels)
            levels = GlideProperties.getInt('svc.manual.convert.levels.default_value', 3);
        var serviceId = serviceRecord.getUniqueValue();
        var bsm = new SNC.BusinessServiceManager();
        var blackListRelations = gs.getProperty("sa.mapping.system.manual.rel_type.blacklist", "");
        if (!bsm.populateDiscoveredService(serviceId, parseInt(levels), blackListRelations)) {
            throw 'Failed to populate service. ' + bsm.error;
        }
    },
    /**
     * Returns true if the run mode does not equals 'SCHEDULED'.
     */
    shouldProcess: function(serviceRecord, mode) {
        if (mode == 'SCHEDULED')
            return false;
        return true;
    },
    type: 'SMDynamicManualServicePopulator'
});]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2019-07-23 04:42:41&lt;/sys_created_on&gt;
        &lt;sys_id&gt;11f01e3dc3f23300daa79624a1d3ae32&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;7&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;SMDynamicManualServicePopulator&lt;/sys_name&gt;
        &lt;sys_package display_value="Application Service" source="com.snc.cmdb.it_service"&gt;d9bafcac3cf1311068bcf327dfe37f17&lt;/sys_package&gt;
        &lt;sys_policy&gt;read&lt;/sys_policy&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_11f01e3dc3f23300daa79624a1d3ae32&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2023-12-07 15:13:21&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:10:24</sys_created_on>
        <sys_id>6680b0d583b01210c6695855eeaad37a</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>SMDynamicManualServicePopulator</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_6680b0d583b01210c6695855eeaad37a</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:10:24</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
