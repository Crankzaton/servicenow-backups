<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>87bd466253b101100b6fddeeff7b12f9</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_fix"&gt;
    &lt;sys_script_fix action="INSERT_OR_UPDATE"&gt;
        &lt;before&gt;false&lt;/before&gt;
        &lt;description&gt;Removes the mandatory attribute for the template fields on the Auto-Resolution configuration schema
makes notification user field mandatory and rename it to Requester
adds method call for reference qualifiers on the template fields
Updates table field level access for Config table 

This applies for Tokyo upgrades&lt;/description&gt;
        &lt;name&gt;Update field attributes for IAR Config&lt;/name&gt;
        &lt;record_for_rollback&gt;true&lt;/record_for_rollback&gt;
        &lt;script&gt;&lt;![CDATA[makeTemplatesNonMandatory();
makeTemplatesRefQualsScripted();
makeNotificationUserFieldMandatory();
renameColumnLabel(AutoResolutionConstants.CONFIG_TABLE_NAME, "notification_user", "Notification user", "Requester");
updateTableAccess(AutoResolutionConstants.CONFIG_TABLE_NAME);

function makeTemplatesNonMandatory() {
	var templateNames = ["task_resolution_template", "topic_completion_template", "unresolved_task_template"];
	templateNames.forEach(function (templateName) {
		var dictionaryGr = new GlideRecord("sys_dictionary");
		dictionaryGr.addQuery("name", AutoResolutionConstants.CONFIG_TABLE_NAME);
		dictionaryGr.addQuery("element", templateName);
		dictionaryGr.query();
		
		if (dictionaryGr.next() &amp;&amp; dictionaryGr.mandatory) {
			dictionaryGr.mandatory = false;
			dictionaryGr.update();
			gs.info('Executing IAR Fix Script: Successfully updated mandatory dictionary field for {0} element to false.', templateName);
		}
	});
}

function makeTemplatesRefQualsScripted() {
	var templateNames = ["task_assignment_template", "task_resolution_template", "topic_completion_template", "unresolved_task_template"];
	templateNames.forEach(function (templateName) {
		var dictionaryGr = new GlideRecord("sys_dictionary");
		dictionaryGr.addQuery("name", AutoResolutionConstants.CONFIG_TABLE_NAME);
		dictionaryGr.addQuery("element", templateName);
		dictionaryGr.query();

		if (dictionaryGr.next()) {
			dictionaryGr.reference_qual = 'javascript:new AutoResolutionRefQualifier().getTemplates(current.target_table_name)';
			dictionaryGr.update();
			gs.info('Executing IAR Fix Script: Successfully updated reference qualifier dictionary field for {0} element to scripted method.', templateName);
		}
	});
}

function makeNotificationUserFieldMandatory() {
	var elementName = "notification_user";
	var dictionaryGr = new GlideRecord("sys_dictionary");
	dictionaryGr.addQuery("name", AutoResolutionConstants.CONFIG_TABLE_NAME);
	dictionaryGr.addQuery("element", elementName);
	dictionaryGr.query();
		
	if (dictionaryGr.next() &amp;&amp; !dictionaryGr.mandatory) {
		dictionaryGr.mandatory = true;
		dictionaryGr.update();
		gs.info('Executing IAR Fix Script: Successfully updated mandatory dictionary field for {0} element to true.', elementName);
	}

}

function renameColumnLabel(tableName, columnName, existingLabel, replaceWith) {
	var sysDictionaryGr = new GlideRecord('sys_dictionary');
	sysDictionaryGr.addQuery('name', tableName);
	sysDictionaryGr.addQuery('element', columnName);
	sysDictionaryGr.addQuery('column_label', existingLabel);
	sysDictionaryGr.query();
	
	if (sysDictionaryGr.next()) {
		sysDictionaryGr.setValue('column_label', replaceWith);
		sysDictionaryGr.update();
		
		gs.info('Executing IAR Fix script: Replaced the label of column {0} from {1} with {2} on the table {3}', columnName, existingLabel, replaceWith, tableName);
	} 
}

function updateTableAccess(tableName) {
	var tableRec = new GlideRecord('sys_db_object');
	tableRec.addQuery('name', tableName); 
	tableRec.query();
	
	if (tableRec.next()) {
		tableRec.setValue("create_access", true);
		tableRec.setValue("update_access", true);
		tableRec.update();
	}
}
]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_fix&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2022-02-24 00:19:51&lt;/sys_created_on&gt;
        &lt;sys_id&gt;87bd466253b101100b6fddeeff7b12f9&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;25&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;Update field attributes for IAR Config&lt;/sys_name&gt;
        &lt;sys_package display_value="Issue Auto-Resolution" source="com.glide.cs.auto_resolution"&gt;81ddf4a03c75311068bcf327dfe37fa6&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_fix_87bd466253b101100b6fddeeff7b12f9&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2022-05-26 18:06:09&lt;/sys_updated_on&gt;
        &lt;unloadable&gt;false&lt;/unloadable&gt;
    &lt;/sys_script_fix&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:22:29</sys_created_on>
        <sys_id>e74330dd83b01210c6695855eeaad386</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Update field attributes for IAR Config</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_e74330dd83b01210c6695855eeaad386</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:22:29</sys_updated_on>
        <tablename>sys_script_fix</tablename>
    </sys_metadata_link>
</record_update>
