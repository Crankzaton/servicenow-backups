<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition>current.agent.startsWith("mid.server.") &amp;&amp; current.queue == "input" &amp;&amp; current.state != "processed" &amp;&amp; !current.topic.startsWith("queue.") &amp;&amp; current.topic !="config.file"</condition>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>ECC Queue - mark outputs processed</name>
        <order>90</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[/*
 *  When an input record comes in, it checks for the corresponding output record and sets the processed to "processed". 
 *  In Discovery, this basically means we set the probe to processed when MID Server sent back the result payload for sensor processing.
 */

setProbeProcessed(current.getValue('response_to'));

function setProbeProcessed(sys_id) {
    if (!sys_id)
        return;
    var gr = new GlideRecord('ecc_queue');
    // get() is used here to ensure that the fetch of the record is as efficient as possible
    // using query() results in a union across multiple shards
    if (!gr.get(sys_id))
        return;

    // Check that the agent of the record matches the agent of the input message being processed 
    // to ensure this script does not modify records that belong to another MID. In certain rare 
    // scenarios, failover may have occurred and changed ownership of an ECC output message to another
    // MID server before the current MID server had a chance to return the response input message
    if((gr.agent || "").toUpperCase().trim() != (current.agent || "").toUpperCase().trim())
        return;

    gr.state = 'processed';
    gr.update();
}]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:48:00</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>1e6be09183701210c6695855eeaad3b8</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>ECC Queue - mark outputs processed</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_1e6be09183701210c6695855eeaad3b8</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:48:00</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=1e6be09183701210c6695855eeaad3b8"/>
</record_update>
