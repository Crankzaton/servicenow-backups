<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>1ef8e6fe43f0311062f7f57c0ab8f214</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;public&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.DiscoveryStatusExternalDependencies&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;DiscoveryStatusExternalDependencies&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var DiscoveryStatusExternalDependencies;

(function() {
    DiscoveryStatusExternalDependencies = {
        doesServiceMappingHaveWorkLeft: doesServiceMappingHaveWorkLeft,
        doesCmpHaveWorkLeft: doesCmpHaveWorkLeft
    }

	var LOGGER_NAME = 'DiscoveryStatusExternalDependencies',
		LOG_PREFIX = '[' + LOGGER_NAME + '][sys_script_include_1ef8e6fe43f0311062f7f57c0ab8f214]',
		nodeLogger = new sn_automation.AutomationAPI().getNodeLogger(LOGGER_NAME);

    function doesServiceMappingHaveWorkLeft(potentialStuckStatus) {
		if (!potentialStuckStatus)
			return;
        var gr = new GlideRecord('sa_endpoint_status');

		if (gr.isValid()){
			gr.addQuery('discovery_status', potentialStuckStatus.sys_id + '');
			gr.addQuery('state', '!=', 4);
			gr.query();
			
			if (gr.hasNext()) {
				nodeLogger.debug(gs.getMessage('{0} {1}: Service Mapping still has work to do', [LOG_PREFIX, potentialStuckStatus.number]));
				return true;
			}
		}
    }

    function doesCmpHaveWorkLeft(potentialStuckStatus) {
		if (!potentialStuckStatus)
			return;
        var discover = potentialStuckStatus.discover + '';

		if (discover == 'Cloud Resources' || discover == 'Cloud' || discover == 'CIs') {
			//only when the CAPI related discovery is triggered, check for this condition 
			var cloudOrderGr = new GlideRecord('sn_cmp_order');
			//exclude this check for vsphere
			cloudOrderGr.addQuery('resource', '!=', '5cc941360b632200e937c97193673a1a' /* V_SPHERE_RESOURCE_BLOCK */);
			cloudOrderGr.addQuery('discovery_status', potentialStuckStatus.sys_id + '');
			// look for all orders related to the scan in 'processing' state
			cloudOrderGr.addQuery('status', 6);
			cloudOrderGr.setLimit(1);
			cloudOrderGr.query();

			// if any orders are in processing, bail
			if (cloudOrderGr.next()) {
				var orderStepGr = new GlideRecord('sn_cmp_order_step_status');
				orderStepGr.addQuery('order', cloudOrderGr.sys_id + '');
				orderStepGr.setLimit(2);
				orderStepGr.query();

				if (orderStepGr.getRowCount() &gt; 1) {
					nodeLogger.debug(gs.getMessage('{0} {1}: CMP still has work to do', [LOG_PREFIX, potentialStuckStatus.number]));
					return true;
				}
			}
		}
    }
})();]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;now.discovery_infra&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2023-08-25 16:25:31&lt;/sys_created_on&gt;
        &lt;sys_id&gt;1ef8e6fe43f0311062f7f57c0ab8f214&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;1&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;DiscoveryStatusExternalDependencies&lt;/sys_name&gt;
        &lt;sys_package display_value="Core Automation" source="com.snc.core.automation"&gt;6ca7f42c3cb1311068bcf327dfe37f6a&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_1ef8e6fe43f0311062f7f57c0ab8f214&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;now.discovery_infra&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2023-09-01 23:09:29&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:11:42</sys_created_on>
        <sys_id>61d0b81983b01210c6695855eeaad33e</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>DiscoveryStatusExternalDependencies</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_61d0b81983b01210c6695855eeaad33e</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:11:42</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
