<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>45e76fd29f120200ee6219eb552e70a6</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_fix"&gt;
    &lt;sys_script_fix action="INSERT_OR_UPDATE"&gt;
        &lt;before&gt;false&lt;/before&gt;
        &lt;description&gt;Align indicators within bsm_indicator table between the BSM Legacy &amp;amp; Dependencies View by updating the  tooltip columns fields&lt;/description&gt;
        &lt;name&gt;Align Dependencies View with Legacy BSM&lt;/name&gt;
        &lt;record_for_rollback&gt;false&lt;/record_for_rollback&gt;
        &lt;script&gt;&lt;![CDATA[gs.log("**********************************************************************************");
gs.log("Start Indicators Migration started: updating bsm_indicator table tooltip,icon,label columns fields ");
gs.log("**********************************************************************************");
processTable('bsm_indicator');
gs.log("**********************************************************************************");
gs.log("End Indicators");
gs.log("**********************************************************************************");

function processTable(tableName) {
	if (isTableExist(tableName)) {
		populateNewTableData(tableName);
	}else{
		gs.log('Verification if table exists failed -' + tableName);
	}
}

//This boolean function checks if given table exists in DB
function isTableExist(tableName) {
	var gr = new GlideRecord(tableName);
	return gr.isValid();
}


//This boolean function checks if given table exists in DB
function populateNewTableData(tableName) {
	var name		        = "";
	var label		        = "";
	var tooltip_label		= "";
	var tooltip_info		= "";
	var description_field	= "";
	
	var gr = new GlideRecord(tableName);
	gr.query();

	gs.log('bsm_indicator records count: ' + gr.getRowCount());
	gs.log('Set tooltip_info to description_field:');
	while (gr.next()){
		name		        = gr.getValue('name');
		label		        = gr.getValue('label');
		tooltip_label		= gr.getValue('tooltip_label');
		tooltip_info		= gr.getValue('tooltip_info');
		description_field	= gr.getValue('description_field');
		
		gs.log('Current-&gt; '+label+'['+label+'], name['+name+']');

		//In case the customer choosed already another field to be used as tooltip
		//Then use the same field also in the new way of presenting tooltips
		if (description_field!==tooltip_info){
			gs.log('Set '+label+' ['+tooltip_info+'] -&gt; ['+description_field+']');
			gr.setValue('tooltip_info', description_field);
			gr.update();
		}

		switch (name) {
		  case "outages_current":
		  	setIcon(gr,'images/app.ngbsm/indicators/outages-current.svg');
		  	setLabel(gr, 'Outages - current');
		    break;
		  case "outages_planned":
		  	setIcon(gr,'images/app.ngbsm/indicators/outages-planned.svg');
		  	setLabel(gr, 'Outages - planned');
		    break;
		  case "incident":
		  	setIcon(gr,'images/app.ngbsm/indicators/incident.svg');
		  	setLabel(gr, 'Incident');
		    break;
		  case "problem":
		  	setIcon(gr,'images/app.ngbsm/indicators/problem.svg');
		  	setLabel(gr, 'Problem');
		    break;
		  case "outages_past":
		  	setIcon(gr,'images/app.ngbsm/indicators/outages-past.svg');
		  	setLabel(gr, 'Outages - past');
		    break;
		  case "changes_current":
		  	setIcon(gr,'images/app.ngbsm/indicators/change.svg');
		  	setLabel(gr, 'Changes - current');
		    break;
		  case "changes_planned":
		  	setIcon(gr,'images/app.ngbsm/indicators/change-planned.svg');
		  	setLabel(gr, 'Changes - planned');
		    break;
		  case "changes_past":
		  	setIcon(gr,'images/app.ngbsm/indicators/change-past.svg');
		  	setLabel(gr, 'Changes - past');
		    break;
		  case "affected_ci_task":
		  	setIcon(gr,'images/app.ngbsm/indicators/affected.svg');
		  	setLabel(gr, "Affected CI's");
		    break;
		  default: 		   
		    gs.log("Found indicator  [" + name + "] which is not part of the OOTB indicators");
		}

	}//end-While
}//end-function

//This boolean function replace the generic icon with the one got from the input
//Return true if changed
function setIcon(gr , iconPath) {
	var icon = gr.getValue('icon');
	if (icon!==null &amp;&amp; icon === 'images/app.ngbsm/indicators/generic-indicator.svg'){
			gs.log('Set the icon ['+iconPath+'] -&gt; insted of ['+icon+']');
			gr.setValue('icon', iconPath);
			gr.update();	
			return true;
	} else {
		gs.log('Skip the icon ['+icon+']');
	}
	return false;
}

//This boolean function replace the empty label with the one got from the input
//Return true if changed
function setLabel(gr , newLabel) {		       
	var label = gr.getValue('label');
	if (label===null || label === '' ){
			gs.log('Set the label ['+newLabel+'] -&gt; insted of ['+ label+']');
			gr.setValue('label', newLabel);
			gr.update();	
			return true;
	} else {
		gs.log('Skip the label ['+label+']');
	}
	return false;
}




]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_fix&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2015-09-07 06:35:39&lt;/sys_created_on&gt;
        &lt;sys_id&gt;45e76fd29f120200ee6219eb552e70a6&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;18&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;Align Dependencies View with Legacy BSM&lt;/sys_name&gt;
        &lt;sys_package display_value="Next-Gen BSM" source="com.snc.ng_bsm"&gt;f3a6bc643cb1311068bcf327dfe37fac&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_fix_45e76fd29f120200ee6219eb552e70a6&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2016-03-02 15:49:43&lt;/sys_updated_on&gt;
        &lt;unloadable&gt;false&lt;/unloadable&gt;
    &lt;/sys_script_fix&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:20:45</sys_created_on>
        <sys_id>42e2bc5d83b01210c6695855eeaad354</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Align Dependencies View with Legacy BSM</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_42e2bc5d83b01210c6695855eeaad354</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:20:45</sys_updated_on>
        <tablename>sys_script_fix</tablename>
    </sys_metadata_link>
</record_update>
