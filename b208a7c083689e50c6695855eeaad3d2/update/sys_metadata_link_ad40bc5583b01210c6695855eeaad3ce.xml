<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>052c5b0f7707330022f7f4d268106131</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;public&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.related_list_edit_helper&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;related_list_edit_helper&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var related_list_edit_helper = Class.create();
related_list_edit_helper.prototype = {
    initialize: function() {},

    create: function( /*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {
        var json = this.getJsonBody(request);
        if (response.getStatusCode === 400)
            return;
        var itemFilterQuery = json.itemFilterQuery;
        var m2mQuery = json.newItemsQuery;
        var userGivenTable = json.userGivenTable;
        var parentRecordSysId = json.parentRecordSysId;
        var parentFieldName = json.parentFieldName;
        var referencedFieldName = json.referencedFieldName;
        var m2mTableName = json.m2mTableName;
        var type = json.type;

        var result = [];
        try {
            var gr = new GlideRecord(userGivenTable);
            gr.addQuery(itemFilterQuery);
            gr.addQuery(m2mQuery);
            gr.query();
            // for each new item, create a new record in the m2m table
            if (type === 'm2m') {
                while (gr.next()) {
                    var m2m = new GlideRecord(m2mTableName);
                    if (m2m.canCreate() || m2m.canWrite()) {
                        m2m.initialize();
                        m2m.setValue(parentFieldName, parentRecordSysId);
                        m2m.setValue(referencedFieldName, gr.getUniqueValue());
                        m2m.insert();
                        result.push(m2m.getUniqueValue());
                    }
                }
            } else if (type === 'o2m') {
			while (gr.next()) {
				var parentTable = gr[parentFieldName].getReferenceTable();
				if (gr.canWrite() || new global.BulkAddRecords().canRelateRecord(parentTable, gr, parentFieldName)) {
					gr.setValue(parentFieldName, parentRecordSysId);
					gr.update();
				}
			}
            }
            this.setResponse(response, result);
        } catch (e) {
            response.setStatus(400);
        }
    },

    setResponse: function( /*RESTAPIResponse*/ response, responseObj) {
        response.setStatus(200);
        response.setContentType('application/json');
        response.setBody(responseObj);
    },
    getJsonBody: function( /*RESTAPIRequest*/ request) {
        var body = "";
        var json = "";
        try {
            var requestBody = request.body;
            var requestString = requestBody.dataString;
            return JSON.parse(requestString);
        } catch (e) {
            response.setStatus(400);
            var msg = gs.getMessage("CRUD operation failed: {0}", e);
            throw new sn_ws_err.BadRequestError(msg);
        }
    },

    type: 'related_list_edit_helper'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2020-09-02 17:54:45&lt;/sys_created_on&gt;
        &lt;sys_id&gt;052c5b0f7707330022f7f4d268106131&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;63&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;related_list_edit_helper&lt;/sys_name&gt;
        &lt;sys_package display_value="Agent Workspace - Form" source="com.snc.agent_workspace.form"&gt;b7ea78203c35311068bcf327dfe37f54&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_052c5b0f7707330022f7f4d268106131&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2023-05-03 21:58:51&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:09:15</sys_created_on>
        <sys_id>ad40bc5583b01210c6695855eeaad3ce</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>related_list_edit_helper</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_ad40bc5583b01210c6695855eeaad3ce</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:09:15</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
