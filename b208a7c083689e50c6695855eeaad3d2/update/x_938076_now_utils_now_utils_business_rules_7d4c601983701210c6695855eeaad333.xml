<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition>!current.devices.nil()</condition>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Validate device type</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

 var onCallCommon = new OnCallCommon();

 var validDeviceType = 'Email';

 if (onCallCommon.isNotifyPluginInstalled())
  validDeviceType = validDeviceType + ',Voice,SMS';

 if (onCallCommon.isSlackPluginInstalled())
  validDeviceType = validDeviceType + ',Slack';

 if (onCallCommon.isMobilePushInstalled())
  validDeviceType = validDeviceType + ',Push';

 var devices = current.getValue('devices');
 var deviceGr = new GlideRecord('cmn_notif_device');
 deviceGr.addQuery('sys_id', 'IN', devices);
 deviceGr.addQuery('type', 'NOT IN', validDeviceType);
 deviceGr.setLimit(1);
 deviceGr.query();
 if (deviceGr.next()) {
  var deviceType = deviceGr.type + '';
  if (deviceType == 'Voice' || deviceType == 'SMS')
   gs.addErrorMessage(gs.getMessage('Voice and SMS devices are supported when Notify is installed'));
  else
   gs.addErrorMessage(gs.getMessage('Devices of type {0} are not supported', deviceType));

  current.setAbortAction(true);
 }

})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:51:47</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>7d4c601983701210c6695855eeaad333</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Validate device type</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_7d4c601983701210c6695855eeaad333</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:51:47</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=7d4c601983701210c6695855eeaad333"/>
</record_update>
