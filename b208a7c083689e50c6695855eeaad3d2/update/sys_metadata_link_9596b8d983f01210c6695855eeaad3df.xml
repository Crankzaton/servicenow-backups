<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>4bbefec577e21110c918256a5b5a99e2</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;sn_appclient.ProductInfoHelper&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;ProductInfoHelper&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var ProductInfoHelper = Class.create();
ProductInfoHelper.prototype = {
    initialize: function() {
        this.pluginInfoHelper = new PluginInfoHelper();
        this.productsData = new ProductsData();
        this.productsDao = new ProductsDao();
    },

    _getProductsFromPlugins: function(searchExpression, filterParams) {
        var map = {};
        var products = [];
        var plugins = this.pluginInfoHelper.getAllMatchedPluginsByProductName(searchExpression, filterParams);
        plugins.forEach(function(plugin) {
            if (!map[plugin.lineage_id]) {
                map[plugin.lineage_id] = {
                    productId: plugin.lineage_id,
                    productName: plugin.lineage_name,
                    source: 'platform'
                };
                products.push(map[plugin.lineage_id]);
            }
        });
        return products;
    },

    _getProductsFromAvailableApps: function(searchExpression, filterParams, apiUtil) {
        return this.productsDao.getProducts(searchExpression, filterParams, apiUtil);
    },

    getProducts: function(apiUtil) {
        var params = apiUtil.getRequestParams();
        var searchExpression = params.queryParams[Constants.SEARCH_EXPRESSION];
        var filterParams = apiUtil.getRequestBody();

        var pluginProducts = this._getProductsFromPlugins(searchExpression, filterParams);
        var appProducts = this._getProductsFromAvailableApps(searchExpression, filterParams, apiUtil);
        var products = CommonUtils.getUnionOfProducts(pluginProducts, appProducts);
        products.sort(this._sortProductsByName);

        var response = CommonUtils.getResultByParams(products, params.queryParams);
        apiUtil.addTotalCountHeader(products.length);
        return response;
    },

    getProduct: function(params) {
        var productId = params.pathParams[Constants.PRODUCT_ID];
        var source = CommonUtils.getProductSource(params.queryParams);
        return this._getProductById(productId, source);
    },

    _getProductById: function(productId, source) {
        var productScheduleDetails = this._getProductScheduleDetailsById(productId);
        var tracker = new ProgressTracker().getInProgressInstallationByAppId(productId);
        if (source == Constants.PLATFORM) {
            var plugins = this.pluginInfoHelper.getAllPluginsByProductId(productId);
            return {
                productId: productId,
                install_tracker_id: tracker.id,
                productName: this._getProductNameByPlugins(plugins),
                plugins: plugins,
                productScheduleDetails: productScheduleDetails
            };
        } else {
            var apps = this.getAllAppsByProductId(productId);
            return {
                productId: productId,
                install_tracker_id: tracker.id,
                productName: this._getProductNameByApps(apps, productId),
                apps: apps,
                productScheduleDetails: productScheduleDetails
            };
        }
    },

    getAllAppsByProductId: function(productId) {
        return this.productsDao.getAllAppsByProductId(productId);
    },

    _getProductNameByApps: function(apps, productId) {
        var app = apps[0] || {};
        var productFamilies = app.products || [];
        for (var idx in productFamilies) {
            if (productFamilies[idx].productId == productId)
                return productFamilies[idx].productName;
        }
    },

    _getProductNameByPlugins: function(plugins) {
        return plugins[0] &amp;&amp; plugins[0].lineage_name;
    },

    _sortProductsByName: function(x, y) {
        var a = x.productName.toLowerCase();
        var b = y.productName.toLowerCase();
        if (a &lt; b)
            return -1;
        else if (a &gt; b)
            return 1;
        return 0;
    },

    _getProductScheduleDetailsById: function(productId) {
        var allSchedules = new ScheduledInstallService().fetchAllActiveScheduledItems();
        var productScheduleDetails = {};
        if (allSchedules.hasOwnProperty(productId)) {
            var productScheduleId = allSchedules[productId].schedule_id;
            for (var key in allSchedules) {
                if (allSchedules[key].schedule_id == productScheduleId) {
                    productScheduleDetails[key] = allSchedules[key];
                }
            }
        }
        return productScheduleDetails;
    },

    type: 'ProductInfoHelper'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2022-10-13 14:59:32&lt;/sys_created_on&gt;
        &lt;sys_id&gt;4bbefec577e21110c918256a5b5a99e2&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;15&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;ProductInfoHelper&lt;/sys_name&gt;
        &lt;sys_package display_value="Scoped App Client" source="sn_appclient"&gt;781f36a96fef21005be8883e6b3ee43d&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Scoped App Client"&gt;781f36a96fef21005be8883e6b3ee43d&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_4bbefec577e21110c918256a5b5a99e2&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2023-04-01 12:52:34&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:36:48</sys_created_on>
        <sys_id>9596b8d983f01210c6695855eeaad3df</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>ProductInfoHelper</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_9596b8d983f01210c6695855eeaad3df</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:36:48</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
