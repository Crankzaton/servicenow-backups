<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition>true</condition>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Validate new default key</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

 var key128 = new GlideRecord('sys_encryption_key');
 key128.get(current.getValue('default128'));
 var version128 = key128.getValue('key_version');
 var alias128 = key128.getValue('key_alias');
 var version_state128 = key128.getValue('version_state');
 var version256;
 var alias256;
 var version_state256;
 if (!gs.nil(current.getValue('default256'))) {
  var key256 = new GlideRecord('sys_encryption_key');
  key256.get(current.getValue('default256'));
  version256 = key256.getValue('key_version');
  alias256 = key256.getValue('key_alias');
  version_state256 = key256.getValue('version_state');
 }
 
 var encodedQuery = '';
 var common_filter = 'state=available^version_state=active';
 
 if (!gs.nil(version128)) {
  if (version_state128 != 'active') {
   current.setAbortAction(true);
   gs.addErrorMessage(gs.getMessage("The chosen version for the default 128-bit key is not active and cannot be used."));
   return;
  }
  encodedQuery += 'key_alias=' + alias128 + '^key_version>' + version128 + '^' + common_filter;
 }

 if (!gs.nil(version256)) {
  if (version_state256 != 'active') {
   current.setAbortAction(true);
   gs.addErrorMessage(gs.getMessage("The chosen version for the default 256-bit key is not active and cannot be used."));
   return;
  } else if (!gs.nil(encodedQuery))
   encodedQuery += '^NQ';
  encodedQuery += 'key_alias=' + alias256 + '^key_version>' + version256 + '^' + common_filter;
 } 
 
 if (gs.nil(encodedQuery))
   return;
  
 var newerVersionKeys = new GlideRecord('sys_encryption_key');
 newerVersionKeys.addEncodedQuery(encodedQuery);
 newerVersionKeys.query();

 if (newerVersionKeys.hasNext()) {
  current.setAbortAction(true);
  gs.addErrorMessage(gs.getMessage("One of the default keys chosen is not the latest version available for the key. Please use the latest version."));
 }

})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:53:11</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>569c249983701210c6695855eeaad397</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Validate new default key</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_569c249983701210c6695855eeaad397</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:53:11</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=569c249983701210c6695855eeaad397"/>
</record_update>
