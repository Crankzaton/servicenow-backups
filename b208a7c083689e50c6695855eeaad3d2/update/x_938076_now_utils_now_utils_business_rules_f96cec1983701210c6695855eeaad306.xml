<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>true</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Generate random conference call code</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[/**
 * Execute before inserting the record
 *
 * @param current
 * @param previous
 */
function onBefore(current, previous) {
    var codeLength = 6;
    // generate a random code
 var code = current.code;
 if(current.operation() === "insert" || (current.operation() === "update" && current.active && !previous.active)) {
  code = generateRandomCode(codeLength);
  // check if the code is already in use
  while (codeInUse(code)) {
   // if so, generate another code
   code = generateRandomCode(codeLength);
  }
 }

    // and store it
    current.code = code;
}

/**
 * Generate a random conference call code
 *
 * @returns {string}
 */
function generateRandomCode(length) {
    // generate a random code
    var code = '';

    // of 6 characters
    for (var i=0; i < length; i++) {
        code += (Math.floor(Math.random() * 9) + '');
    }

    // and store it
    return code;
}

/**
 * Check is a code is already in use by another conference call
 *
 * @param code
 * @returns {boolean}
 */
function codeInUse(code) {
    var record = new GlideRecord('notify_conference_call');
    record.query('code', code);

    return (record.next());
}]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:52:20</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>f96cec1983701210c6695855eeaad306</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Generate random conference call code</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_f96cec1983701210c6695855eeaad306</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:52:20</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=f96cec1983701210c6695855eeaad306"/>
</record_update>
