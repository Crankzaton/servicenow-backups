<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>0aecf2c70ab30150004a978eb1ea8cf7</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.DiscoveryPortProbe&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;Encapsulates the notion of a Discovery Port Probe.&lt;/description&gt;
        &lt;name&gt;DiscoveryPortProbe&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[// Discovery class

/**
 * Encapsulates the notion of a Discovery Port Probe.  Instances where isValid() returns true have the 
 * following properties initialized:
 * 
 * sysID:                  sys_id of this port probe record
 * name:                   name of this port probe
 * description:            description of this port probe
 * active:                 true if this port probe is active
 * discoverCIs             true if this port probe is active for discover CIs
 * discoverIPs             true if this port probe is active for discover IPs
 * triggersProbeID:        sys_ID of probe triggered by this port probe
 * classy:                 table name to use for classification when this port probe is active
 * services:               a JavaScript Array of the IPService instances associated with this port probe
 * script:                 the optional script associated with this port probe
 * scanner:                the name of the Java class (on the MID server) to use as a scanner
 * conditional:            a boolean, true if this is a conditional scanner
 * classificationPriority: an integer, smaller is higher priority
 * 
 * Tom Dilatush tom.dilatush@service-now.com
 */
var DiscoveryPortProbe = Class.create();

DiscoveryPortProbe.TABLE = 'discovery_port_probe';
DiscoveryPortProbe.ENTRY_CACHE = new SNC.DiscoveryPortProbeCache();
DiscoveryPortProbe.USE_CACHE = true;

/*
 * Get an array of DiscoveryPortProbe instances specified by a Java ArrayList of sysIDs.
 */
DiscoveryPortProbe.getFromArrayList = function(list) {
	if(DiscoveryPortProbe.USE_CACHE)
		return AbstractDBObject._getCachedFromArrayList(list, DiscoveryPortProbe.TABLE, DiscoveryPortProbe, DiscoveryPortProbe.ENTRY_CACHE);
	else
    	return AbstractDBObject._getFromArrayList(list, DiscoveryPortProbe.TABLE, DiscoveryPortProbe);
}

DiscoveryPortProbe.prototype = Object.extend(new AbstractDBObject(), {    
    /*
     * Initializes this instance from the given source, which must be either a GlideRecord instance or a sysID string.
     */
    initialize: function(source) {
        var record = null;
        this.valid = false;
        
		if(source instanceof SNC.DiscoveryPortProbeCacheEntry){
		    record = source;
		} else if (source instanceof GlideRecord){
		    record = new SNC.DiscoveryPortProbeCacheEntry(source);
		} else if (typeof source == "string" &amp;&amp; DiscoveryPortProbe.USE_CACHE) {
		    record = DiscoveryPortProbe.ENTRY_CACHE.getEntry(source);
		} else if (typeof source == "string") {
			var gr = this._getRecord(source, DiscoveryPortProbe.TABLE);
			if (gr)
				record = new SNC.DiscoveryPortProbeCacheEntry(gr);
		}
		
		if(record == null)
		    return;
            
        // we've got our record, so record our information...
        this.valid = true;
        this.active                 = record.active;
        this.discoverCIs            = record.active_discover_cis;
        this.discoverIPs            = record.active_discover_ips;
		this.supplementary          = record.supplementary;
        this.sysID                  = record.sys_id;
        this.name                   = record.name;
        this.description            = record.description;
        this.triggersProbeID        = record.triggers_probe;
        this.classy                 = record.classy;
        this.script                 = record.script;
        this.scanner                = record.scanner;
        this.conditional            = record.conditional;
        this.classificationPriority = record.classification_priority;
        
        // get our list of IP services...
        this.services = IPService.getFromArrayList(record.services);
        
        this.serviceRegistryQueries = ServiceRegistryQuery.findForPortProbe(this); // retrieve service registry query mappings
    },
    
    type: "DiscoveryPortProbe"
});]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;glide.maint&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2009-01-24 23:15:19&lt;/sys_created_on&gt;
        &lt;sys_id&gt;0aecf2c70ab30150004a978eb1ea8cf7&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;30&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;DiscoveryPortProbe&lt;/sys_name&gt;
        &lt;sys_package display_value="Core Automation" source="com.snc.core.automation"&gt;6ca7f42c3cb1311068bcf327dfe37f6a&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_0aecf2c70ab30150004a978eb1ea8cf7&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2013-07-02 05:21:18&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:09:46</sys_created_on>
        <sys_id>d960f49583b01210c6695855eeaad3e5</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>DiscoveryPortProbe</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_d960f49583b01210c6695855eeaad3e5</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:09:46</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
