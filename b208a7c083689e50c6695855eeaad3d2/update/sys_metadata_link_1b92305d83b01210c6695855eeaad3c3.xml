<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>1a386e0f3b33230030f22c2b54efc4ff</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_fix"&gt;
    &lt;sys_script_fix action="INSERT_OR_UPDATE"&gt;
        &lt;before&gt;false&lt;/before&gt;
        &lt;description&gt;This is an optional script to clean-up deprecated tables, scripts  and data related to the portfolio and taxonomy tables used in the SPM Limited Access program.  Ensure that all data you will to retain has been migrated to the updated tables. 

The tables that will be deleted are the service_portfolio, taxonomy_node and taxonomy_layer_definition tables. All data will be deleted from these tables. The new tables are spm_service_portfolio, spm_taxonomy_node and spm_taxonomy_layer_definition.&lt;/description&gt;
        &lt;name&gt;SPM Clean-up on portfolio and taxonomy&lt;/name&gt;
        &lt;record_for_rollback&gt;false&lt;/record_for_rollback&gt;
        &lt;script&gt;&lt;![CDATA[(function(){
	/** 
	 * Fix script timing - 19.454 seconds for deletion of tables
	 * - service_portfolio (4 records)
	 * - taxonomy_node (39 records)
	 * - taxonomy_layer_definition (6 records)
	 * - Associated ACLs
	 * - Associated 
	 */
	
	if (!tableExists('spm_service_portfolio') || !tableExists('spm_taxonomy_node') || !tableExists('spm_taxonomy_layer_definition')) {
		gs.info([
			"",
			"// ------------------------------------------------------------",
            "  Aborting. Could not find new tables",
			"",
			"  This script is designed to clean up deprecated",
            "  tables and associated scripts for SPM limited access ",
            "  instances only. ",
            "",
            "  Tables:",
            "  - spm_service_portfolio",
            "  - spm_taxonomy_node",
            "  - spm_taxonomy_layer_definition",
			"// ------------------------------------------------------------"
		].join("\n"));
		return;
	}
	
    if (!tableExists('service_portfolio') &amp;&amp; !tableExists('taxonomy_node') &amp;&amp; !tableExists('taxonomy_layer_definition')) {
        gs.info([
            "",
            "// ------------------------------------------------------------",
            "  Aborting. Deprecated tables not found",
			"",
			"  This script is designed to clean up deprecated",
            "  tables and associated scripts for SPM limited access ",
            "  instances only. ",
            "",
            "  Tables:",
            "  - service_portfolio",
            "  - taxonomy_node",
            "  - taxonomy_layer_definition",
            "// ------------------------------------------------------------"
        ].join("\n"));
        return;
    }

	// delete deprecated tables
	_deleteTable('taxonomy_node');
	_deleteTable('taxonomy_layer_definition');
	_deleteTable('service_portfolio');

	// service_portfolio BR: Delete Portfolio and Taxonomy / Delete
	deleteUIAction('3d5abfb7370123006289cc9fbe41f190');
	deleteUIAction('760ed440375123006289cc9fbe41f196');

	// taxonomy_node BR: Edit Weights
	deleteUIAction('760ed440375123006289cc9fbe41f196');

	// taxonomy_node Related List: (Taxonomy Nodes)
	deleteRelationship('fe50359d3b202300bc1e832b44efc490');

	// Deprecated Script Include (Layer order locking when adding nodes)
	deleteScriptInclude('97ec25a1b3201300787162ac16a8dce4');

	// Deprecated Script Include (SPMClientUtilAjax)
	deleteScriptInclude('cd1db6a9b3a82300a7d22ab716a8dc58');

	// Delete legacy SPMRefUtils
	deleteScriptInclude('97ec25a1b3201300787162ac16a8dce4');
	
	
	/**
	 * Check for the existence of the table
	 */
	function tableExists(tableName) {
		var gr = new GlideRecord(tableName);
		return gr.isValid();
	}

	/**
	 *
	 */
	function deleteUIAction(sysId) {
		return _deleteScript('sys_ui_action', sysId);
	}

	function deleteRelationship(sysId) {
		return _deleteScript('sys_relationship', sysId);
	}
	
	function deleteScriptInclude(sysId) {
		return _deleteScript('sys_script_include', sysId);
	}
	
	/**
	 * delete a single script object by sysId
	 * @param tableName
	 * @param sysId
	 */
	function _deleteScript(tableName, sysId) {
		var whitelist = [
			'sys_ui_action',
			'sys_relationship',
			'sys_script_include'
		];

		if (whitelist.indexOf(tableName) === -1){
			gs.warn('The table '+tableName+' is not whitelisted. Cannot delete the record: '+sysId);
			return false;
		}


		var gr = new GlideRecord(tableName);
		gr.setWorkflow(false);
		if (gr.get(sysId)){
			if (gr.deleteRecord())
				gs.info(tableName+'_'+sysId +' has been deleted');
			else
				gs.warn('Could not delete '+tableName+'_'+sysId);
		}
	}

	/**
	 * Delete a table, with all its data, and related scripts
	 * Deletes:
	 * - Table data / Drops table.
	 * - Business Rules
	 * - ACLs
	 * - Related Lists
	 * - UI Policies
	 * - Form Views
	 * - List views
	 * - Guages
	 *
	 * NOTE: Does not delete associated UI Actions.
	 */
	function _deleteTable(tableName) {
		var whitelist = [
			'service_portfolio', 
			'taxonomy_node', 
			'taxonomy_layer_definition'
		];

		if (whitelist.indexOf(tableName) === -1){
			gs.warn('The table '+tableName+' is not whitelisted. Cannot drop table: '+tableName);
			return false;
		}
		
		var gr = new GlideRecord(tableName);
		if (!gr.isValid()) {
			gr.warn("Table does not exist: " + tableName);
			return;
		}

		var tu = new TableUtils();
		tu.dropAndClean(tableName);
	}
})();]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_fix&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2019-02-28 01:05:25&lt;/sys_created_on&gt;
        &lt;sys_id&gt;1a386e0f3b33230030f22c2b54efc4ff&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;47&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;SPM Clean-up on portfolio and taxonomy&lt;/sys_name&gt;
        &lt;sys_package display_value="Service Portfolio Management Foundation" source="com.snc.service_portfolio"&gt;9fe738ac3cb1311068bcf327dfe37ff1&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_fix_1a386e0f3b33230030f22c2b54efc4ff&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2019-03-18 07:43:53&lt;/sys_updated_on&gt;
        &lt;unloadable&gt;false&lt;/unloadable&gt;
    &lt;/sys_script_fix&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:19:28</sys_created_on>
        <sys_id>1b92305d83b01210c6695855eeaad3c3</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>SPM Clean-up on portfolio and taxonomy</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_1b92305d83b01210c6695855eeaad3c3</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:19:28</sys_updated_on>
        <tablename>sys_script_fix</tablename>
    </sys_metadata_link>
</record_update>
