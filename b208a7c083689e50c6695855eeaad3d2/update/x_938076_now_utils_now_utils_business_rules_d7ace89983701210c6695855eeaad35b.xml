<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition>current.getRecordClassName() != 'sys_cb_decision' &amp;&amp; current.getRecordClassName() != 'sys_cb_outcome'</condition>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Node inserted - reparent children</name>
        <order>90</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

 var parent;
 
 // Add your code here
 if (current.getRecordClassName() == "sys_cb_collector")
  parent = current.getValue("parent_nodes").split(",")[0];
 else
  parent = current.getValue("parent");
 
 updateChildWithNewParent(parent, current.getValue("sys_id"), current.getValue("topic_goal"));
 
 function updateChildWithNewParent(oldParent, newParent, topicGoal) {
  var foundChild = false;
  var childNode = new GlideRecord("sys_cb_node");
  childNode.addQuery("topic_goal", topicGoal);
  childNode.addQuery("sys_class_name", "!=", "sys_cb_collector");
  
  if (oldParent)
   childNode.addQuery("parent", oldParent);
  else
   childNode.addNullQuery("parent");
  
  gs.debug("Looking for children with the query {0}", childNode.getEncodedQuery());
  childNode.query();
  
  while (childNode.next()) {
   gs.debug("Reparenting {0} ({1}) to {2}",
      childNode.getValue("name"),
      childNode.getValue("sys_id"),
      newParent
   );
   
   foundChild = true;
   childNode.setValue("parent", newParent);
   childNode.update();
  }
  
  if (!foundChild && oldParent) {
   //might be a merge node
   var childCollector = new GlideRecord("sys_cb_collector");
   childCollector.addQuery("parent_nodes", "CONTAINS", parent);
   childCollector.query();
   
   while (childCollector.next()) {
    gs.debug("Reparent collector {0} ({1}) from {2} to {3}",
       childCollector.getValue("name"),
       childCollector.getValue("sys_id"),
       oldParent,
       newParent
    );
    
    var parentList = childCollector.getValue("parent_nodes").split(",");
    gs.debug("Collectors existing parent list is: ", parentList.join(","));
    
    for (var i = 0; i < parentList.length; i++) {
     if (parentList[i] == parent) {
      foundChild = true;
      parentList[i] = newParent;
      gs.debug("Replaced parent {0} with {1}", oldParent, newParent);
      gs.debug("Collector parent list now: {0}", parentList.join(","));
     }
    }
    
    if (foundChild) {
     childCollector.setValue("parent_nodes", parentList.join(","));
     childCollector.update();
     
     gs.debug("Collector {0} ({1}) new parent list is {2}",
        childCollector.getValue("name"),
        childCollector.getValue("sys_id"),
        parentList.join(",")
       );
    }
    
    foundChild = false;
    gs.debug("Unable to find the parent reference {0} in collector {1} ({2})",
       oldParent,
       childCollector.getValue("name"),
       childCollector.getValue("sys_id")
    );
   }
  }
 }

})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:53:31</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>d7ace89983701210c6695855eeaad35b</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Node inserted - reparent children</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_d7ace89983701210c6695855eeaad35b</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:53:31</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=d7ace89983701210c6695855eeaad35b"/>
</record_update>
