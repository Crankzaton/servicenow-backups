<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Avoid duplicate mapping entries</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

 var fieldMapperGr = new GlideRecord('sn_hr_core_employee_form_field_mapping');
 fieldMapperGr.addQuery('employee_form',current.getValue('employee_form'));
 fieldMapperGr.addQuery('sys_id','!=',current.getUniqueValue());
 var qCondition = fieldMapperGr.addQuery('field',current.getValue('field'));
 qCondition.addOrCondition('question',current.getValue('question'));
 fieldMapperGr.setLimit(1);
 fieldMapperGr.query();
 if(fieldMapperGr.next()){
  gs.addErrorMessage(gs.getMessage('Make sure that each question or field is only mapped once.'));
  current.setAbortAction(true);
  gs.setRedirect(current);
 }
 
 //validate type equality
 var mapToTableGr = new GlideRecord(current.table_name);
 var fieldElement = mapToTableGr.getElement(current.field);
 var toType = fieldElement.getED().getInternalType();
 
 var questionType;
 var referenceTable;
 var questionGr = new GlideRecord('asmt_metric');
 if(questionGr.get(current.question)){
  questionType = questionGr.getValue('datatype'); 
  referenceTable = questionGr.getValue('reference_table');
 }
 
  var typeError = false;
 if(questionType == 'reference' || toType=='reference'){
  //make sure field is also reference
  if(toType != questionType || fieldElement.getReferenceTable() != referenceTable)
   typeError = true;  
 }else if( (questionType == 'date' || toType == 'glide_date') && (toType != 'glide_date' || questionType != 'date'))
  typeError = true;
 else if( (questionType == 'datetime' || toType == 'glide_date_time') && (toType != 'glide_date_time' || questionType !=  'datetime'))
  typeError = true;
 
 if(typeError){
  gs.addErrorMessage(gs.getMessage('Make sure that the question and the corresponding table field are the same data type.'));
  current.setAbortAction(true);
  gs.setRedirect(current);
 }

})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:52:21</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>ca6cec1983701210c6695855eeaad357</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Avoid duplicate mapping entries</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_ca6cec1983701210c6695855eeaad357</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:52:21</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=ca6cec1983701210c6695855eeaad357"/>
</record_update>
