<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>49a215d443112110247c927e8bb8f2df</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.ScheduledJobClassifier&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;ScheduledJobClassifier&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var ScheduledJobClassifier = Class.create();
ScheduledJobClassifier.prototype = {
    initialize: function() {
        this.SCRIPT_NAME = 'ScheduledJobClassifier';
        this.fDebug = false;
        this.CLASSIFICATION_SCRIPT = "var mutex = new Mutex('" + this.SCRIPT_NAME + "'); \n if (mutex.get()) {\n \t new ScheduledJobClassifier().classifyAllJobs(); \n \t mutex.release(); \n }";
    },

    debug: function(msg) {
        if (this.fDebug)
            gs.debug(this.SCRIPT_NAME + ': ' + msg);
    },

    createOrUpdateJobToClassifyJobs: function(when, showMessage) {
        // We know we want to schedule the reclassification job, just not when
        var mutex = new Mutex(this.SCRIPT_NAME);
        mutex.setMaxSpins(1);
		var shouldRelease = true;
        if (!mutex.get()) {
            when.add(5 * 60 * 1000);
			shouldRelease = false; 
		}

        var gr = GlideRecord('sys_trigger');
        gr.addQuery('name', 'GlideSchedulerClassifyJobs');
        gr.addQuery('state', 0);
        gr.query();
        if (gr.next()) {
            gr.setValue('next_action', when);
            gr.update();
        } else {
            gr.setValue('name', 'GlideSchedulerClassifyJobs');
            gr.setValue('trigger_type', 0); // run once
            gr.setValue('script', this.CLASSIFICATION_SCRIPT);
            gr.setValue('next_action', when);
            gr.insert();
        }
        if (showMessage) {
            var sys_id = gr.getUniqueValue();
            gs.addInfoMessage(gs.getMessage("Scheduled a {0}background job at {1}{2} to re-classify jobs to reflect these new settings.",
                ['&lt;a href="sys_trigger.do?sys_id=' + sys_id + '"&gt;', when.getDisplayValue(), '&lt;/a&gt;']));
        }
        if (shouldRelease) 
			mutex.release();
        return gr;
    },

    classifyAllJobs: function() {
        var gr = new GlideRecord('sys_trigger');
        gr.addQuery("trigger_type", "&gt;", 0); // do not reclassify run_once jobs
        gr.query();
        this.debug('Checking ' + gr.getRowCount() + ' sys_trigger records for re-classification');

        var classifier = new SNC.ScheduledJobClassifier();
        while (gr.next()) {
            var newClassification = classifier.classify(gr);
            if (newClassification != gr.getValue('job_classification')) {
                this.debug('Re-classifying ' + gr.getValue('name') + ' from ' + gr.getValue('job_classification') + ' to ' + newClassification);
                gr.setValue("job_classification", newClassification);
                gr.update();
            }
        }
    },



    type: 'ScheduledJobClassifier'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2023-02-24 16:17:17&lt;/sys_created_on&gt;
        &lt;sys_id&gt;49a215d443112110247c927e8bb8f2df&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;24&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;ScheduledJobClassifier&lt;/sys_name&gt;
        &lt;sys_package display_value="System Scheduler" source="com.glide.system_scheduler"&gt;4433b8603c31311068bcf327dfe37f6e&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_49a215d443112110247c927e8bb8f2df&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2024-02-04 17:24:13&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:36:42</sys_created_on>
        <sys_id>b786b8d983f01210c6695855eeaad317</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>ScheduledJobClassifier</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_b786b8d983f01210c6695855eeaad317</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:36:42</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
