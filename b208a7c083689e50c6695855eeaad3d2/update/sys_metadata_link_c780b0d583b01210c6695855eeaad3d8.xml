<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>126bb02e3b201300ff014180e2efc4da</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;sn_sla_brkdwn.TaskSLABreakdownUtilsSNC&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;TaskSLABreakdownUtilsSNC&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var TaskSLABreakdownUtilsSNC = Class.create();
TaskSLABreakdownUtilsSNC.prototype = {
	initialize: function(taskSLAGr) {
		this._gr = taskSLAGr;
	},

	//Return an array of field names representing the configured breakdown fields
	//I.e. those fields for which there is a record in sla_breakdown_definition_field
	getBreakdownFields: function(breakdownTableName) {
		if (!this._gr || !(this._gr instanceof GlideRecord))
			return [];

		if (!this._isValidBreakdownTable(breakdownTableName))
			return [];

		var breakdownsGr = new GlideRecord(breakdownTableName);
		breakdownsGr.addQuery("task_sla", this._gr.getUniqueValue());
		breakdownsGr.query();

		if (!breakdownsGr.next())
			return [];

		var brkdwnDefField = new SLABreakdownDefinitionBreakdownField();

		var slaBreakdownDefId = breakdownsGr.getValue('sla_breakdown_definition');
		if (!brkdwnDefField)
			return [];

		return brkdwnDefField.getExistingBreakdownFields(slaBreakdownDefId, false);
	},

	_isValidBreakdownTable: function(breakdownTableName) {
		if (!breakdownTableName)
			return false;

		if (!gs.tableExists(breakdownTableName))
			return false;

		if (new GlideTableHierarchy(SLABreakdown.SLA_BREAKDOWN_CORE).getTableExtensions().indexOf(breakdownTableName) &lt; 0)
			return false;

		return true;
	},

	type: 'TaskSLABreakdownUtilsSNC'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2018-03-02 17:58:47&lt;/sys_created_on&gt;
        &lt;sys_id&gt;126bb02e3b201300ff014180e2efc4da&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;29&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;TaskSLABreakdownUtilsSNC&lt;/sys_name&gt;
        &lt;sys_package display_value="Service Level Management - Breakdowns" source="sn_sla_brkdwn"&gt;6c11c4f357201300ff01ac11ac94f982&lt;/sys_package&gt;
        &lt;sys_policy&gt;read&lt;/sys_policy&gt;
        &lt;sys_scope display_value="Service Level Management - Breakdowns"&gt;6c11c4f357201300ff01ac11ac94f982&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_126bb02e3b201300ff014180e2efc4da&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2018-05-23 21:02:35&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:10:27</sys_created_on>
        <sys_id>c780b0d583b01210c6695855eeaad3d8</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>TaskSLABreakdownUtilsSNC</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_c780b0d583b01210c6695855eeaad3d8</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:10:27</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
