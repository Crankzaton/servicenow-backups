<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Check unique verifications</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[check();

function check() {
    // Check if verification is empty:
    if (current.verification.nil()) {
        errMsg = gs.getMessage("You must specify a 'Verification' for the Password Reset process");
        gs.addErrorMessage(errMsg);
        current.setAbortAction(true);
    }

    // Check if process is empty:
    if (current.process.nil()) {
        errMsg = gs.getMessage("You must specify a 'Process' that is associated with the verification");
        gs.addErrorMessage(errMsg);
        current.setAbortAction(true);
    }

    // Prevent having same verification mapping (should be unique):
    // Note: we also have a DB unique constraint, but this rule will generate a clearer message.
    var gr = new GlideRecord('pwd_map_proc_to_verification');
    gr.addQuery('process', current.process);
    gr.addQuery('verification', current.verification);
    if (current.operation() == 'update') {
        gr.addQuery('sys_id', '<>', current.sys_id);
    }
    gr.query();
    if (gr.hasNext()) {
        errMsg = gs.getMessage("You cannot specify a particular verification more than once for a Password Reset process");
        gs.addErrorMessage(errMsg);
        current.setAbortAction(true);
    }

    //Preventing personal data confirmation verification for a public process
    if (current.verification.type == 'a7f17087eb1101004d7763fba206fe52' && current.process.public_access) {
        errMsg = gs.getMessage("Personal data confirmation verification can't be configured for a public process");
        gs.addErrorMessage(errMsg);
        current.setAbortAction(true);
    }

    //Preventing soft PIN verification for a service desk process
    if (current.verification.type == 'a67585845302011017c3ddeeff7b1267' && !current.process.public_access) {
        errMsg = gs.getMessage("Soft PIN verification can't be configured for a service desk process");
        gs.addErrorMessage(errMsg);
        current.setAbortAction(true);
    }

    // Prevent having multiple verifications based on the same verification type
    // PRB601121: we need to exclude Personnel Data types
    if (current.verification.type == '2f39b371eb1101004d7763fba206fed1' ||
        current.verification.type == 'a7f17087eb1101004d7763fba206fe52') {
        // either personnel verification or confirmation
        return;
    }

    var gr = new GlideRecord('pwd_map_proc_to_verification');
    gr.addQuery('process', current.process);
    gr.addQuery('verification.type', current.verification.type);
    if (current.operation() == 'update') {
        gr.addQuery('sys_id', '<>', current.sys_id);
    }
    gr.query();
    if (gr.hasNext()) {
        errMsg = gs.getMessage("The Password Reset process can include only one verification of each verification type. Delete the extra verifications and then, if needed, add a verification of a different type.");
        gs.addErrorMessage(errMsg);
        current.setAbortAction(true);
    }
}]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:48:01</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>ee6be09183701210c6695855eeaad3f7</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Check unique verifications</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_ee6be09183701210c6695855eeaad3f7</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:48:01</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=ee6be09183701210c6695855eeaad3f7"/>
</record_update>
