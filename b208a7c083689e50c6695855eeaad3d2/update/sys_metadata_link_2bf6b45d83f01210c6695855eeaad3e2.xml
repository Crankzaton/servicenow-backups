<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>71d55bd29340bd10685cfb9d1dba1060</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;public&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;global.FSMTimeZoneUtil&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;Utility functions for timezone related conversions&lt;/description&gt;
        &lt;name&gt;FSMTimeZoneUtil&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var FSMTimeZoneUtil = Class.create();
FSMTimeZoneUtil.prototype = {
	initialize: function () {
	},

	/**
	 * Get TimeZone name of the task based on its location
	 * @param {GlideRecord} wm_task GlideRecord object	 
	 * @returns {string} TimeZone name of the wm_task record
	 */
	getTaskTimeZoneName: function (taskGR) {
		if (gs.nil(taskGR))
			return "";

		var locationRecord = taskGR.location.getRefRecord();
		var taskTZ = locationRecord.time_zone.getChoiceValue();
		if (gs.nil(taskTZ))
			return gs.getSession().getTimeZoneName();
		return taskTZ;
	},

	/**
	 * Convert given GlideDateTime to specific timezone
	 * @param {GlideDateTime} GlideDateTime object
	 * @param {targetTimeZone} TimeZones supported by ServiceNow
	 * @returns {GlideDateTime} Converted GlideDateTime object in the target timezone
	 */
	convertToTargetTZ: function (GDT, targetTimeZone) {
		if (gs.nil(GDT))
			return GDT;

		var targetTZ = gs.nil(targetTimeZone) ? gs.getSession().getTimeZoneName() : targetTimeZone;

		var time = new GlideDateTime(GDT.getValue());
		var tz = Packages.java.util.TimeZone.getTimeZone(targetTZ);
		time.setTZ(tz);

		var timeZoneOffSet = time.getTZOffset();
		time.setNumericValue(time.getNumericValue() + timeZoneOffSet);

		return time.getValue() + " " + targetTimeZone;
	},	

	/**
	 * Get current time for any given timezone
	 * @param {string} Timezone name
	 * @returns {string} Date time value in user's format for the current time
	 */
	getCurrentTimeFromTimeZone: function (timeZone) {
		var nowGDT = new GlideDateTime();
		if(gs.nil(timeZone))
			return nowGDT.getDisplayValue();

		var currentTimeinTz = this.convertToTargetTZ(new GlideDateTime(), timeZone);
		var dateTimeList = currentTimeinTz.split(" ");
		dateTimeList.pop();
		var dateTimeString = dateTimeList.join(" ");
		
		nowGDT.setDisplayValue(dateTimeString);
		return nowGDT.getDisplayValue();
	},

	type: 'FSMTimeZoneUtil'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2023-07-17 23:37:43&lt;/sys_created_on&gt;
        &lt;sys_id&gt;71d55bd29340bd10685cfb9d1dba1060&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;FSMTimeZoneUtil&lt;/sys_name&gt;
        &lt;sys_package display_value="Field Service Management" source="com.snc.work_management"&gt;b66bd6bb4722c210cd4e1ce4316d4387&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_71d55bd29340bd10685cfb9d1dba1060&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2023-07-25 16:53:42&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:38:36</sys_created_on>
        <sys_id>2bf6b45d83f01210c6695855eeaad3e2</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>FSMTimeZoneUtil</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_2bf6b45d83f01210c6695855eeaad3e2</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:38:36</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
