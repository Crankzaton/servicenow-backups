<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>70fcd4025b492110e4334bbca881c74d</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;sn_oe_sfs.CollabConfigurationUtil&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description/&gt;
        &lt;name&gt;CollabConfigurationUtil&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var CollabConfigurationUtil = Class.create();
CollabConfigurationUtil.prototype = {
    initialize: function() {
    },
	/*
	* Returns an array of table names to show in sys_cs_collab_config table column
	*/
	process: function() {
		var result = ['sys_user', 'sys_user_group'];
	
		return result;
	},
	insertOrDeleteRecord: function(channel, items) {
        var result = {};
        var groupStatus = true;
		var userStatus = true;
        if (items.groupToDelete.length != 0)
            groupStatus = this.deleteRecords(items.groupToDelete);
        if (groupStatus &amp;&amp; items.groupToCreate.length != 0)
            groupStatus = this.insertGroupRecords(items.groupToCreate, channel);
		if (items.userToDelete.length != 0)
            userStatus = this.deleteRecords(items.userToDelete);
        if (userStatus &amp;&amp; items.userToCreate.length != 0)
            userStatus = this.insertUserRecords(items.userToCreate, channel);

        if (groupStatus &amp;&amp; userStatus) {
            result.status = 200;
            result.body = {
                message: 'Success! Configuration saved',
				error: false
            };
        } else {
            result.status = 500;
            result.body = {
                message: 'Failed! Configuration not saved',
				error: true
            };
        }
        return result;
    },
    applyGroupFilter: function(channel, query) {
        var result = {};
        var table = 'sys_user_group';
        var response = this.buildQueryResult(channel, query, table);
        if (response) {
            result.status = 200;
            result.body = {
                message: 'Filters applied sucessfully',
                items: response
            };
        } else {
            result.status = 500;
            result.body = {
                message: 'Failed to apply filter',
                items: ' '
            };
        }
        return result;
    },
	applyUserFilter: function(channel, query) {
        var result = {};
        var table = 'sys_user';
        var response = this.buildQueryResult(channel, query, table);
        if (response) {
            result.status = 200;
            result.body = {
                message: 'Filters applied sucessfully',
                items: response
            };
        } else {
            result.status = 500;
            result.body = {
                message: 'Failed to apply filter',
                items: ' '
            };
        }
        return result;
    },
    buildQueryResult: function(channel, query, table) {
        var selectedResult = [];
        var configTable = "sys_cs_collab_config";
        var selectedItems = [];
        var availableResult = {};
        var groups = {};
        //For Selected Groups
        var grt = new GlideRecord(configTable);
        grt.addQuery('channel', channel);
        grt.addQuery('parent_table', table);
        grt.query();
        while (grt.next()) {
            var selected = [];
            var item = {};
            item.id = grt.getValue('parent_document');
            item.label = grt.getDisplayValue('parent_document.name');
            selected.push(item);
            selectedItems.push(item.id);
            selectedResult.push(selected);
        }
        //For Available Groups
        var gr = new GlideRecord(table);
        gr.addEncodedQuery(query);
        gr.addQuery('sys_id', 'NOT IN', selectedItems);
        gr.query();
        while (gr.next()) {
            var groupId = gr.getUniqueValue();
            var item1 = {};
            var definitionName = gr.getDisplayValue('name');
            item1.label = definitionName;
            groups[groupId] = item1;
        }
        availableResult.group = groups;
        var result = {
            availableResult: availableResult,
            selectedResult: selectedResult
        };
        return result;
    },

    deleteRecords: function(recordToDelete) {
        var status = false;
        var grTable = new GlideRecord('sys_cs_collab_config');
        grTable.addQuery('parent_document', recordToDelete);
        grTable.query();
        while (grTable.next()) {
            status = grTable.deleteRecord();
            if (!status)
                break;
        }
        return status;
    },
    insertGroupRecords: function(groupToCreate, channel) {
        var groupTable = 'sys_user_group';
        var status = true;
        for (i = 0; i &lt; groupToCreate.length; i++) {
            var grTable = new GlideRecord('sys_cs_collab_config');
            grTable.setValue('channel', channel);
            grTable.setValue('create_external_conversation', 'true');
            grTable.setValue('parent_table', groupTable);
            grTable.setValue('parent_document', groupToCreate[i]);
            status = grTable.insert();
        }
        return status;
    },
	insertUserRecords: function(userToCreate, channel) {
        var userTable = 'sys_user';
        var status = true;
        for (i = 0; i &lt; userToCreate.length; i++) {
            var grTable = new GlideRecord('sys_cs_collab_config');
            grTable.setValue('channel', channel);
            grTable.setValue('create_external_conversation', 'true');
            grTable.setValue('parent_table', userTable);
            grTable.setValue('parent_document', userToCreate[i]);
            status = grTable.insert();
        }
        return status;
    },
	deleteConfiguraton: function(channel) {
        var configTable = new GlideRecord('sys_cs_collab_config');
        configTable.addQuery('channel', channel);
        configTable.query();
        configTable.deleteMultiple();
    },
    type: 'CollabConfigurationUtil'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2023-02-17 12:23:50&lt;/sys_created_on&gt;
        &lt;sys_id&gt;70fcd4025b492110e4334bbca881c74d&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;1&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;CollabConfigurationUtil&lt;/sys_name&gt;
        &lt;sys_package display_value="Omni-Experience Standard Feature Set" source="sn_oe_sfs"&gt;53b1b0e79761011018b2fa98c253afcc&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Omni-Experience Standard Feature Set"&gt;53b1b0e79761011018b2fa98c253afcc&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_70fcd4025b492110e4334bbca881c74d&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2023-05-11 12:03:10&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:38:34</sys_created_on>
        <sys_id>d3f6745d83f01210c6695855eeaad3b8</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>CollabConfigurationUtil</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_d3f6745d83f01210c6695855eeaad3b8</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:38:34</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
