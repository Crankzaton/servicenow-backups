<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>60d71859775121109c62f5f3cb5a9971</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;sn_entitlement.SysUserDAO&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;DAO class to retrieve data related to the sys_user table&lt;/description&gt;
        &lt;name&gt;SysUserDAO&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var SysUserDAO = Class.create();
SysUserDAO.prototype = {
    initialize: function() {},

    // returns sys_id of the user record from userId (that can be either user_name or sys_id directly)
    // for instance, userId can be 'abel.tuter' or '62826bf03710200044e0bfc8bcbe5df1', in both the cases return
    // string will be '62826bf03710200044e0bfc8bcbe5df1'
    getUserSysId: function(userId) {
        var userGR = new GlideRecord(LicensingEngineDBConstants.SYS_USER);
        var qc = userGR.addQuery(LicensingEngineDBConstants.SYS_ID, userId);
        qc.addOrCondition(LicensingEngineDBConstants.USER_NAME, userId);
        userGR.addActiveQuery();
        userGR.query();
        if (userGR.next())
            return userGR.getValue(LicensingEngineDBConstants.SYS_ID);
        return null;
    },

    type: 'SysUserDAO'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2023-02-27 14:20:20&lt;/sys_created_on&gt;
        &lt;sys_id&gt;60d71859775121109c62f5f3cb5a9971&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;SysUserDAO&lt;/sys_name&gt;
        &lt;sys_package display_value="Licensing Engine" source="sn_entitlement"&gt;bcadabf277f311109c62f5f3cb5a992a&lt;/sys_package&gt;
        &lt;sys_policy&gt;read&lt;/sys_policy&gt;
        &lt;sys_scope display_value="Licensing Engine"&gt;bcadabf277f311109c62f5f3cb5a992a&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_60d71859775121109c62f5f3cb5a9971&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2023-02-27 14:20:20&lt;/sys_updated_on&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 08:37:44</sys_created_on>
        <sys_id>47c6381d83f01210c6695855eeaad395</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>SysUserDAO</sys_name>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>sys_metadata_link_47c6381d83f01210c6695855eeaad395</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 08:37:44</sys_updated_on>
        <tablename>sys_script_include</tablename>
    </sys_metadata_link>
</record_update>
