<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="x_938076_now_utils_now_utils_business_rules">
    <x_938076_now_utils_now_utils_business_rules action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection/>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Trigger  notification</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {

    var asmtType = current.metric_type; //current metric type
    var i;

    var dmnAsmt = gs.getProperty('wf.asmt.dmn.assessment'); //get met type
    var asmtObj = JSON.parse(dmnAsmt);
    var asmtName = asmtObj['dmnAsmt'];

    var grpMemebers = gs.getProperty('notify.all.groups'); //get the groups from sys_id
    var grObj = JSON.parse(grpMemebers);
    var grpName1 = grObj['group1'];
    var grpName2 = grObj['group2'];

    var groupArray = []; // array to hold multiple groups
    groupArray.push(grpName1);
    groupArray.push(grpName2);
    //var grpUsers = groupArray.join(); // push group sys_id to above array
    //gs.addInfoMessage(groupArray.toString());

    var totalUsers = [];

    for (i = 0; i < groupArray.length; i++) {
        var grpUserList = new userList().getgrpUsers(groupArray[i]);
  totalUsers.push(grpUserList);
  var concatusers = totalUsers.join();
  gs.addInfoMessage(concatusers.toString());

    }

    if (asmtType == asmtName) {

        gs.eventQueue('wf.trigger.notification.custom', current, concatusers.toString());
    }



})(current, previous);]]></script>
        <sys_class_name>x_938076_now_utils_now_utils_business_rules</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-09-21 07:47:22</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>814b245183701210c6695855eeaad3f0</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Trigger  notification</sys_name>
        <sys_overrides/>
        <sys_package display_value="Now Utils" source="x_938076_now_utils">b208a7c083689e50c6695855eeaad3d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Now Utils">b208a7c083689e50c6695855eeaad3d2</sys_scope>
        <sys_update_name>x_938076_now_utils_now_utils_business_rules_814b245183701210c6695855eeaad3f0</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-09-21 07:47:22</sys_updated_on>
        <template/>
        <when>before</when>
    </x_938076_now_utils_now_utils_business_rules>
    <sys_translated_text action="delete_multiple" query="documentkey=814b245183701210c6695855eeaad3f0"/>
</record_update>
